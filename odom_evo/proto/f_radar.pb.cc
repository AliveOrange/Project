// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: f_radar.proto

#include "f_radar.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_f_5fradar_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ArsObjectInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Cluster_0_status_600;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Cluster_1_general_701;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Cluster_2_quality_702;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Colldetcfg_400;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Colldetregioncfg_401;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Colldetregionstate_402;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Colldetrelayctrl_8;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Colldetstate_408;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Filtercfg_202;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Filterstate_cfg_204;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Filterstate_header_203;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Obj_0_status_60a;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Obj_1_general_60b;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Obj_2_quality_60c;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Obj_3_extended_60d;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Obj_4_warning_60e;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Radarconfiguration_200;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Radarstate_201;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Speedinformation_300;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Versionid_700;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Yawrateinformation_301;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_f_5fradar_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_F_radar_ArsodmapEntry_DoNotUse;
}  // namespace protobuf_f_5fradar_2eproto
namespace protobuf_header_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_header_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Header;
}  // namespace protobuf_header_2eproto
namespace Calmcar {
namespace drivers {
namespace F_RADAR {
class ArsObjectInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArsObjectInfo>
      _instance;
} _ArsObjectInfo_default_instance_;
class Radarstate_201DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Radarstate_201>
      _instance;
} _Radarstate_201_default_instance_;
class Radarconfiguration_200DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Radarconfiguration_200>
      _instance;
} _Radarconfiguration_200_default_instance_;
class Filterstate_header_203DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Filterstate_header_203>
      _instance;
} _Filterstate_header_203_default_instance_;
class Filtercfg_202DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Filtercfg_202>
      _instance;
} _Filtercfg_202_default_instance_;
class Filterstate_cfg_204DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Filterstate_cfg_204>
      _instance;
} _Filterstate_cfg_204_default_instance_;
class Speedinformation_300DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Speedinformation_300>
      _instance;
} _Speedinformation_300_default_instance_;
class Yawrateinformation_301DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Yawrateinformation_301>
      _instance;
} _Yawrateinformation_301_default_instance_;
class Versionid_700DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Versionid_700>
      _instance;
} _Versionid_700_default_instance_;
class Cluster_1_general_701DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cluster_1_general_701>
      _instance;
} _Cluster_1_general_701_default_instance_;
class Cluster_2_quality_702DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cluster_2_quality_702>
      _instance;
} _Cluster_2_quality_702_default_instance_;
class Obj_4_warning_60eDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Obj_4_warning_60e>
      _instance;
} _Obj_4_warning_60e_default_instance_;
class Obj_3_extended_60dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Obj_3_extended_60d>
      _instance;
} _Obj_3_extended_60d_default_instance_;
class Obj_0_status_60aDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Obj_0_status_60a>
      _instance;
} _Obj_0_status_60a_default_instance_;
class Obj_2_quality_60cDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Obj_2_quality_60c>
      _instance;
} _Obj_2_quality_60c_default_instance_;
class Obj_1_general_60bDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Obj_1_general_60b>
      _instance;
} _Obj_1_general_60b_default_instance_;
class Cluster_0_status_600DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cluster_0_status_600>
      _instance;
} _Cluster_0_status_600_default_instance_;
class Colldetregionstate_402DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Colldetregionstate_402>
      _instance;
} _Colldetregionstate_402_default_instance_;
class Colldetregioncfg_401DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Colldetregioncfg_401>
      _instance;
} _Colldetregioncfg_401_default_instance_;
class Colldetcfg_400DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Colldetcfg_400>
      _instance;
} _Colldetcfg_400_default_instance_;
class Colldetrelayctrl_8DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Colldetrelayctrl_8>
      _instance;
} _Colldetrelayctrl_8_default_instance_;
class Colldetstate_408DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Colldetstate_408>
      _instance;
} _Colldetstate_408_default_instance_;
class F_radar_ArsodmapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<F_radar_ArsodmapEntry_DoNotUse>
      _instance;
} _F_radar_ArsodmapEntry_DoNotUse_default_instance_;
class F_radarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<F_radar>
      _instance;
} _F_radar_default_instance_;
}  // namespace F_RADAR
}  // namespace drivers
}  // namespace Calmcar
namespace protobuf_f_5fradar_2eproto {
static void InitDefaultsArsObjectInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_ArsObjectInfo_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::ArsObjectInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::ArsObjectInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ArsObjectInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArsObjectInfo}, {}};

static void InitDefaultsRadarstate_201() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Radarstate_201_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Radarstate_201();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Radarstate_201::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Radarstate_201 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRadarstate_201}, {}};

static void InitDefaultsRadarconfiguration_200() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Radarconfiguration_200_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Radarconfiguration_200();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Radarconfiguration_200::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Radarconfiguration_200 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRadarconfiguration_200}, {}};

static void InitDefaultsFilterstate_header_203() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Filterstate_header_203_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Filterstate_header_203();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Filterstate_header_203::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Filterstate_header_203 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFilterstate_header_203}, {}};

static void InitDefaultsFiltercfg_202() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Filtercfg_202_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Filtercfg_202();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Filtercfg_202::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Filtercfg_202 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFiltercfg_202}, {}};

static void InitDefaultsFilterstate_cfg_204() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Filterstate_cfg_204_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Filterstate_cfg_204();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Filterstate_cfg_204::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Filterstate_cfg_204 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFilterstate_cfg_204}, {}};

static void InitDefaultsSpeedinformation_300() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Speedinformation_300_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Speedinformation_300();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Speedinformation_300::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Speedinformation_300 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSpeedinformation_300}, {}};

static void InitDefaultsYawrateinformation_301() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Yawrateinformation_301_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Yawrateinformation_301();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Yawrateinformation_301::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Yawrateinformation_301 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsYawrateinformation_301}, {}};

static void InitDefaultsVersionid_700() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Versionid_700_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Versionid_700();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Versionid_700::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Versionid_700 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersionid_700}, {}};

static void InitDefaultsCluster_1_general_701() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Cluster_1_general_701_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Cluster_1_general_701();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Cluster_1_general_701::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Cluster_1_general_701 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCluster_1_general_701}, {}};

static void InitDefaultsCluster_2_quality_702() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Cluster_2_quality_702_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Cluster_2_quality_702 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCluster_2_quality_702}, {}};

static void InitDefaultsObj_4_warning_60e() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Obj_4_warning_60e_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Obj_4_warning_60e();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Obj_4_warning_60e::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Obj_4_warning_60e =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObj_4_warning_60e}, {}};

static void InitDefaultsObj_3_extended_60d() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Obj_3_extended_60d_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Obj_3_extended_60d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Obj_3_extended_60d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Obj_3_extended_60d =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObj_3_extended_60d}, {}};

static void InitDefaultsObj_0_status_60a() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Obj_0_status_60a_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Obj_0_status_60a();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Obj_0_status_60a::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Obj_0_status_60a =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObj_0_status_60a}, {}};

static void InitDefaultsObj_2_quality_60c() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Obj_2_quality_60c_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Obj_2_quality_60c =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObj_2_quality_60c}, {}};

static void InitDefaultsObj_1_general_60b() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Obj_1_general_60b_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Obj_1_general_60b();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Obj_1_general_60b::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Obj_1_general_60b =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObj_1_general_60b}, {}};

static void InitDefaultsCluster_0_status_600() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Cluster_0_status_600_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Cluster_0_status_600();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Cluster_0_status_600::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Cluster_0_status_600 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCluster_0_status_600}, {}};

static void InitDefaultsColldetregionstate_402() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Colldetregionstate_402_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Colldetregionstate_402();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Colldetregionstate_402::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Colldetregionstate_402 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsColldetregionstate_402}, {}};

static void InitDefaultsColldetregioncfg_401() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Colldetregioncfg_401_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Colldetregioncfg_401();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Colldetregioncfg_401::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Colldetregioncfg_401 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsColldetregioncfg_401}, {}};

static void InitDefaultsColldetcfg_400() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Colldetcfg_400_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Colldetcfg_400();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Colldetcfg_400::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Colldetcfg_400 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsColldetcfg_400}, {}};

static void InitDefaultsColldetrelayctrl_8() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Colldetrelayctrl_8_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Colldetrelayctrl_8();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Colldetrelayctrl_8::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Colldetrelayctrl_8 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsColldetrelayctrl_8}, {}};

static void InitDefaultsColldetstate_408() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_Colldetstate_408_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::Colldetstate_408();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::Colldetstate_408::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Colldetstate_408 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsColldetstate_408}, {}};

static void InitDefaultsF_radar_ArsodmapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_F_radar_ArsodmapEntry_DoNotUse_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::F_radar_ArsodmapEntry_DoNotUse();
  }
  ::Calmcar::drivers::F_RADAR::F_radar_ArsodmapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_F_radar_ArsodmapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsF_radar_ArsodmapEntry_DoNotUse}, {
      &protobuf_f_5fradar_2eproto::scc_info_ArsObjectInfo.base,}};

static void InitDefaultsF_radar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::F_RADAR::_F_radar_default_instance_;
    new (ptr) ::Calmcar::drivers::F_RADAR::F_radar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::F_RADAR::F_radar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<23> scc_info_F_radar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 23, InitDefaultsF_radar}, {
      &protobuf_header_2eproto::scc_info_Header.base,
      &protobuf_f_5fradar_2eproto::scc_info_Radarstate_201.base,
      &protobuf_f_5fradar_2eproto::scc_info_Radarconfiguration_200.base,
      &protobuf_f_5fradar_2eproto::scc_info_Filterstate_header_203.base,
      &protobuf_f_5fradar_2eproto::scc_info_Filtercfg_202.base,
      &protobuf_f_5fradar_2eproto::scc_info_Filterstate_cfg_204.base,
      &protobuf_f_5fradar_2eproto::scc_info_Speedinformation_300.base,
      &protobuf_f_5fradar_2eproto::scc_info_Yawrateinformation_301.base,
      &protobuf_f_5fradar_2eproto::scc_info_Versionid_700.base,
      &protobuf_f_5fradar_2eproto::scc_info_Cluster_1_general_701.base,
      &protobuf_f_5fradar_2eproto::scc_info_Cluster_2_quality_702.base,
      &protobuf_f_5fradar_2eproto::scc_info_Obj_4_warning_60e.base,
      &protobuf_f_5fradar_2eproto::scc_info_Obj_3_extended_60d.base,
      &protobuf_f_5fradar_2eproto::scc_info_Obj_0_status_60a.base,
      &protobuf_f_5fradar_2eproto::scc_info_Obj_2_quality_60c.base,
      &protobuf_f_5fradar_2eproto::scc_info_Obj_1_general_60b.base,
      &protobuf_f_5fradar_2eproto::scc_info_Cluster_0_status_600.base,
      &protobuf_f_5fradar_2eproto::scc_info_Colldetregionstate_402.base,
      &protobuf_f_5fradar_2eproto::scc_info_Colldetregioncfg_401.base,
      &protobuf_f_5fradar_2eproto::scc_info_Colldetcfg_400.base,
      &protobuf_f_5fradar_2eproto::scc_info_Colldetrelayctrl_8.base,
      &protobuf_f_5fradar_2eproto::scc_info_Colldetstate_408.base,
      &protobuf_f_5fradar_2eproto::scc_info_F_radar_ArsodmapEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ArsObjectInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Radarstate_201.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Radarconfiguration_200.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Filterstate_header_203.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Filtercfg_202.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Filterstate_cfg_204.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Speedinformation_300.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Yawrateinformation_301.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Versionid_700.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Cluster_1_general_701.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Cluster_2_quality_702.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Obj_4_warning_60e.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Obj_3_extended_60d.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Obj_0_status_60a.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Obj_2_quality_60c.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Obj_1_general_60b.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Cluster_0_status_600.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Colldetregionstate_402.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Colldetregioncfg_401.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Colldetcfg_400.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Colldetrelayctrl_8.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Colldetstate_408.base);
  ::google::protobuf::internal::InitSCC(&scc_info_F_radar_ArsodmapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_F_radar.base);
}

}  // namespace protobuf_f_5fradar_2eproto
namespace Calmcar {
namespace drivers {
namespace F_RADAR {
bool Radarstate_201_Radarstate_interferenceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_interferenceType Radarstate_201::RADARSTATE_INTERFERENCE_NO_INTERFERENCE;
const Radarstate_201_Radarstate_interferenceType Radarstate_201::RADARSTATE_INTERFERENCE_INTERFERENCE_DETECTED;
const Radarstate_201_Radarstate_interferenceType Radarstate_201::Radarstate_interferenceType_MIN;
const Radarstate_201_Radarstate_interferenceType Radarstate_201::Radarstate_interferenceType_MAX;
const int Radarstate_201::Radarstate_interferenceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_voltage_errorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_voltage_errorType Radarstate_201::RADARSTATE_VOLTAGE_ERROR_NO_ERROR;
const Radarstate_201_Radarstate_voltage_errorType Radarstate_201::RADARSTATE_VOLTAGE_ERROR_VOLTAGE_ERROR_ACTIVE;
const Radarstate_201_Radarstate_voltage_errorType Radarstate_201::Radarstate_voltage_errorType_MIN;
const Radarstate_201_Radarstate_voltage_errorType Radarstate_201::Radarstate_voltage_errorType_MAX;
const int Radarstate_201::Radarstate_voltage_errorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_temporary_errorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_temporary_errorType Radarstate_201::RADARSTATE_TEMPORARY_ERROR_NO_ERROR;
const Radarstate_201_Radarstate_temporary_errorType Radarstate_201::RADARSTATE_TEMPORARY_ERROR_TEMPORARY_ERROR_ACTIVE;
const Radarstate_201_Radarstate_temporary_errorType Radarstate_201::Radarstate_temporary_errorType_MIN;
const Radarstate_201_Radarstate_temporary_errorType Radarstate_201::Radarstate_temporary_errorType_MAX;
const int Radarstate_201::Radarstate_temporary_errorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_temperature_errorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_temperature_errorType Radarstate_201::RADARSTATE_TEMPERATURE_ERROR_NO_ERROR;
const Radarstate_201_Radarstate_temperature_errorType Radarstate_201::RADARSTATE_TEMPERATURE_ERROR_TEMPERATURE_ERROR_ACTIVE;
const Radarstate_201_Radarstate_temperature_errorType Radarstate_201::Radarstate_temperature_errorType_MIN;
const Radarstate_201_Radarstate_temperature_errorType Radarstate_201::Radarstate_temperature_errorType_MAX;
const int Radarstate_201::Radarstate_temperature_errorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_persistent_errorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_persistent_errorType Radarstate_201::RADARSTATE_PERSISTENT_ERROR_NO_ERROR;
const Radarstate_201_Radarstate_persistent_errorType Radarstate_201::RADARSTATE_PERSISTENT_ERROR_PERSISTENT_ERROR_ACTIVE;
const Radarstate_201_Radarstate_persistent_errorType Radarstate_201::Radarstate_persistent_errorType_MIN;
const Radarstate_201_Radarstate_persistent_errorType Radarstate_201::Radarstate_persistent_errorType_MAX;
const int Radarstate_201::Radarstate_persistent_errorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_sortindexType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_sortindexType Radarstate_201::RADARSTATE_SORTINDEX_NO_SORTING;
const Radarstate_201_Radarstate_sortindexType Radarstate_201::RADARSTATE_SORTINDEX_SORTED_BY_RANGE;
const Radarstate_201_Radarstate_sortindexType Radarstate_201::RADARSTATE_SORTINDEX_SORTED_BY_RCS;
const Radarstate_201_Radarstate_sortindexType Radarstate_201::Radarstate_sortindexType_MIN;
const Radarstate_201_Radarstate_sortindexType Radarstate_201::Radarstate_sortindexType_MAX;
const int Radarstate_201::Radarstate_sortindexType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_rcs_thresholdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_rcs_thresholdType Radarstate_201::RADARSTATE_RCS_THRESHOLD_STANDARD;
const Radarstate_201_Radarstate_rcs_thresholdType Radarstate_201::RADARSTATE_RCS_THRESHOLD_HIGH_SENSITIVITY;
const Radarstate_201_Radarstate_rcs_thresholdType Radarstate_201::RADARSTATE_RCS_THRESHOLD_RESERVED1;
const Radarstate_201_Radarstate_rcs_thresholdType Radarstate_201::RADARSTATE_RCS_THRESHOLD_RESERVED2;
const Radarstate_201_Radarstate_rcs_thresholdType Radarstate_201::RADARSTATE_RCS_THRESHOLD_RESERVED3;
const Radarstate_201_Radarstate_rcs_thresholdType Radarstate_201::RADARSTATE_RCS_THRESHOLD_RESERVED4;
const Radarstate_201_Radarstate_rcs_thresholdType Radarstate_201::RADARSTATE_RCS_THRESHOLD_RESERVED5;
const Radarstate_201_Radarstate_rcs_thresholdType Radarstate_201::RADARSTATE_RCS_THRESHOLD_RESERVED6;
const Radarstate_201_Radarstate_rcs_thresholdType Radarstate_201::Radarstate_rcs_thresholdType_MIN;
const Radarstate_201_Radarstate_rcs_thresholdType Radarstate_201::Radarstate_rcs_thresholdType_MAX;
const int Radarstate_201::Radarstate_rcs_thresholdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_ctrlrelaycfgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_ctrlrelaycfgType Radarstate_201::RADARSTATE_CTRLRELAYCFG_INACTIVE;
const Radarstate_201_Radarstate_ctrlrelaycfgType Radarstate_201::RADARSTATE_CTRLRELAYCFG_ACTIVE;
const Radarstate_201_Radarstate_ctrlrelaycfgType Radarstate_201::Radarstate_ctrlrelaycfgType_MIN;
const Radarstate_201_Radarstate_ctrlrelaycfgType Radarstate_201::Radarstate_ctrlrelaycfgType_MAX;
const int Radarstate_201::Radarstate_ctrlrelaycfgType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_sendqualitycfgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_sendqualitycfgType Radarstate_201::RADARSTATE_SENDQUALITYCFG_INACTIVE;
const Radarstate_201_Radarstate_sendqualitycfgType Radarstate_201::RADARSTATE_SENDQUALITYCFG_ACTIVE;
const Radarstate_201_Radarstate_sendqualitycfgType Radarstate_201::Radarstate_sendqualitycfgType_MIN;
const Radarstate_201_Radarstate_sendqualitycfgType Radarstate_201::Radarstate_sendqualitycfgType_MAX;
const int Radarstate_201::Radarstate_sendqualitycfgType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_sendextinfocfgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_sendextinfocfgType Radarstate_201::RADARSTATE_SENDEXTINFOCFG_INACTIVE;
const Radarstate_201_Radarstate_sendextinfocfgType Radarstate_201::RADARSTATE_SENDEXTINFOCFG_ACTIVE;
const Radarstate_201_Radarstate_sendextinfocfgType Radarstate_201::Radarstate_sendextinfocfgType_MIN;
const Radarstate_201_Radarstate_sendextinfocfgType Radarstate_201::Radarstate_sendextinfocfgType_MAX;
const int Radarstate_201::Radarstate_sendextinfocfgType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_motionrxstateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_motionrxstateType Radarstate_201::RADARSTATE_MOTIONRXSTATE_INPUT_OK;
const Radarstate_201_Radarstate_motionrxstateType Radarstate_201::RADARSTATE_MOTIONRXSTATE_SPEED_MISSING;
const Radarstate_201_Radarstate_motionrxstateType Radarstate_201::RADARSTATE_MOTIONRXSTATE_YAW_RATE_MISSING;
const Radarstate_201_Radarstate_motionrxstateType Radarstate_201::RADARSTATE_MOTIONRXSTATE_SPEED_AND_YAW_RATE_MISSING;
const Radarstate_201_Radarstate_motionrxstateType Radarstate_201::Radarstate_motionrxstateType_MIN;
const Radarstate_201_Radarstate_motionrxstateType Radarstate_201::Radarstate_motionrxstateType_MAX;
const int Radarstate_201::Radarstate_motionrxstateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_sensoridType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_sensoridType Radarstate_201::RADARSTATE_SENSORID_ID_0;
const Radarstate_201_Radarstate_sensoridType Radarstate_201::RADARSTATE_SENSORID_ID_1;
const Radarstate_201_Radarstate_sensoridType Radarstate_201::RADARSTATE_SENSORID_ID_2;
const Radarstate_201_Radarstate_sensoridType Radarstate_201::RADARSTATE_SENSORID_ID_3;
const Radarstate_201_Radarstate_sensoridType Radarstate_201::RADARSTATE_SENSORID_ID_4;
const Radarstate_201_Radarstate_sensoridType Radarstate_201::RADARSTATE_SENSORID_ID_5;
const Radarstate_201_Radarstate_sensoridType Radarstate_201::RADARSTATE_SENSORID_ID_6;
const Radarstate_201_Radarstate_sensoridType Radarstate_201::RADARSTATE_SENSORID_ID_7;
const Radarstate_201_Radarstate_sensoridType Radarstate_201::Radarstate_sensoridType_MIN;
const Radarstate_201_Radarstate_sensoridType Radarstate_201::Radarstate_sensoridType_MAX;
const int Radarstate_201::Radarstate_sensoridType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_outputtypecfgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_outputtypecfgType Radarstate_201::RADARSTATE_OUTPUTTYPECFG_NONE;
const Radarstate_201_Radarstate_outputtypecfgType Radarstate_201::RADARSTATE_OUTPUTTYPECFG_SENDOBJECTS;
const Radarstate_201_Radarstate_outputtypecfgType Radarstate_201::RADARSTATE_OUTPUTTYPECFG_SENDCLUSTERS;
const Radarstate_201_Radarstate_outputtypecfgType Radarstate_201::RADARSTATE_OUTPUTTYPECFG_RESERVED_2;
const Radarstate_201_Radarstate_outputtypecfgType Radarstate_201::Radarstate_outputtypecfgType_MIN;
const Radarstate_201_Radarstate_outputtypecfgType Radarstate_201::Radarstate_outputtypecfgType_MAX;
const int Radarstate_201::Radarstate_outputtypecfgType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_radarpowercfgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_radarpowercfgType Radarstate_201::RADARSTATE_RADARPOWERCFG_STANDARD;
const Radarstate_201_Radarstate_radarpowercfgType Radarstate_201::RADARSTATE_RADARPOWERCFG_3_DB_TX_GAIN;
const Radarstate_201_Radarstate_radarpowercfgType Radarstate_201::RADARSTATE_RADARPOWERCFG_6_DB_TX_GAIN;
const Radarstate_201_Radarstate_radarpowercfgType Radarstate_201::RADARSTATE_RADARPOWERCFG_9_DB_TX_GAIN;
const Radarstate_201_Radarstate_radarpowercfgType Radarstate_201::RADARSTATE_RADARPOWERCFG_RESERVED1;
const Radarstate_201_Radarstate_radarpowercfgType Radarstate_201::RADARSTATE_RADARPOWERCFG_RESERVED2;
const Radarstate_201_Radarstate_radarpowercfgType Radarstate_201::RADARSTATE_RADARPOWERCFG_RESERVED3;
const Radarstate_201_Radarstate_radarpowercfgType Radarstate_201::RADARSTATE_RADARPOWERCFG_RESERVED4;
const Radarstate_201_Radarstate_radarpowercfgType Radarstate_201::Radarstate_radarpowercfgType_MIN;
const Radarstate_201_Radarstate_radarpowercfgType Radarstate_201::Radarstate_radarpowercfgType_MAX;
const int Radarstate_201::Radarstate_radarpowercfgType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarstate_201_Radarstate_nvmreadstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarstate_201_Radarstate_nvmreadstatusType Radarstate_201::RADARSTATE_NVMREADSTATUS_PENDING;
const Radarstate_201_Radarstate_nvmreadstatusType Radarstate_201::RADARSTATE_NVMREADSTATUS_SUCCESSFUL;
const Radarstate_201_Radarstate_nvmreadstatusType Radarstate_201::Radarstate_nvmreadstatusType_MIN;
const Radarstate_201_Radarstate_nvmreadstatusType Radarstate_201::Radarstate_nvmreadstatusType_MAX;
const int Radarstate_201::Radarstate_nvmreadstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_rcs_threshold_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_rcs_threshold_validType Radarconfiguration_200::RADARCFG_RCS_THRESHOLD_VALID_INVALID;
const Radarconfiguration_200_Radarcfg_rcs_threshold_validType Radarconfiguration_200::RADARCFG_RCS_THRESHOLD_VALID_VALID;
const Radarconfiguration_200_Radarcfg_rcs_threshold_validType Radarconfiguration_200::Radarcfg_rcs_threshold_validType_MIN;
const Radarconfiguration_200_Radarcfg_rcs_threshold_validType Radarconfiguration_200::Radarcfg_rcs_threshold_validType_MAX;
const int Radarconfiguration_200::Radarcfg_rcs_threshold_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_rcs_thresholdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_rcs_thresholdType Radarconfiguration_200::RADARCFG_RCS_THRESHOLD_STANDARD;
const Radarconfiguration_200_Radarcfg_rcs_thresholdType Radarconfiguration_200::RADARCFG_RCS_THRESHOLD_HIGH_SENSITIVITY;
const Radarconfiguration_200_Radarcfg_rcs_thresholdType Radarconfiguration_200::RADARCFG_RCS_THRESHOLD_RESERVED1;
const Radarconfiguration_200_Radarcfg_rcs_thresholdType Radarconfiguration_200::RADARCFG_RCS_THRESHOLD_RESERVED2;
const Radarconfiguration_200_Radarcfg_rcs_thresholdType Radarconfiguration_200::RADARCFG_RCS_THRESHOLD_RESERVED3;
const Radarconfiguration_200_Radarcfg_rcs_thresholdType Radarconfiguration_200::RADARCFG_RCS_THRESHOLD_RESERVED4;
const Radarconfiguration_200_Radarcfg_rcs_thresholdType Radarconfiguration_200::RADARCFG_RCS_THRESHOLD_RESERVED5;
const Radarconfiguration_200_Radarcfg_rcs_thresholdType Radarconfiguration_200::RADARCFG_RCS_THRESHOLD_RESERVED6;
const Radarconfiguration_200_Radarcfg_rcs_thresholdType Radarconfiguration_200::Radarcfg_rcs_thresholdType_MIN;
const Radarconfiguration_200_Radarcfg_rcs_thresholdType Radarconfiguration_200::Radarcfg_rcs_thresholdType_MAX;
const int Radarconfiguration_200::Radarcfg_rcs_thresholdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_storeinnvm_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_storeinnvm_validType Radarconfiguration_200::RADARCFG_STOREINNVM_VALID_INVALID;
const Radarconfiguration_200_Radarcfg_storeinnvm_validType Radarconfiguration_200::RADARCFG_STOREINNVM_VALID_VALID;
const Radarconfiguration_200_Radarcfg_storeinnvm_validType Radarconfiguration_200::Radarcfg_storeinnvm_validType_MIN;
const Radarconfiguration_200_Radarcfg_storeinnvm_validType Radarconfiguration_200::Radarcfg_storeinnvm_validType_MAX;
const int Radarconfiguration_200::Radarcfg_storeinnvm_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_sortindex_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_sortindex_validType Radarconfiguration_200::RADARCFG_SORTINDEX_VALID_INVALID;
const Radarconfiguration_200_Radarcfg_sortindex_validType Radarconfiguration_200::RADARCFG_SORTINDEX_VALID_VALID;
const Radarconfiguration_200_Radarcfg_sortindex_validType Radarconfiguration_200::Radarcfg_sortindex_validType_MIN;
const Radarconfiguration_200_Radarcfg_sortindex_validType Radarconfiguration_200::Radarcfg_sortindex_validType_MAX;
const int Radarconfiguration_200::Radarcfg_sortindex_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_sortindexType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_sortindexType Radarconfiguration_200::RADARCFG_SORTINDEX_NO_SORTING;
const Radarconfiguration_200_Radarcfg_sortindexType Radarconfiguration_200::RADARCFG_SORTINDEX_SORTED_BY_RANGE;
const Radarconfiguration_200_Radarcfg_sortindexType Radarconfiguration_200::RADARCFG_SORTINDEX_SORTED_BY_RCS;
const Radarconfiguration_200_Radarcfg_sortindexType Radarconfiguration_200::Radarcfg_sortindexType_MIN;
const Radarconfiguration_200_Radarcfg_sortindexType Radarconfiguration_200::Radarcfg_sortindexType_MAX;
const int Radarconfiguration_200::Radarcfg_sortindexType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_storeinnvmType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_storeinnvmType Radarconfiguration_200::RADARCFG_STOREINNVM_INACTIVE;
const Radarconfiguration_200_Radarcfg_storeinnvmType Radarconfiguration_200::RADARCFG_STOREINNVM_ACTIVE;
const Radarconfiguration_200_Radarcfg_storeinnvmType Radarconfiguration_200::Radarcfg_storeinnvmType_MIN;
const Radarconfiguration_200_Radarcfg_storeinnvmType Radarconfiguration_200::Radarcfg_storeinnvmType_MAX;
const int Radarconfiguration_200::Radarcfg_storeinnvmType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_sendextinfo_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_sendextinfo_validType Radarconfiguration_200::RADARCFG_SENDEXTINFO_VALID_INVALID;
const Radarconfiguration_200_Radarcfg_sendextinfo_validType Radarconfiguration_200::RADARCFG_SENDEXTINFO_VALID_VALID;
const Radarconfiguration_200_Radarcfg_sendextinfo_validType Radarconfiguration_200::Radarcfg_sendextinfo_validType_MIN;
const Radarconfiguration_200_Radarcfg_sendextinfo_validType Radarconfiguration_200::Radarcfg_sendextinfo_validType_MAX;
const int Radarconfiguration_200::Radarcfg_sendextinfo_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_sendextinfoType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_sendextinfoType Radarconfiguration_200::RADARCFG_SENDEXTINFO_INACTIVE;
const Radarconfiguration_200_Radarcfg_sendextinfoType Radarconfiguration_200::RADARCFG_SENDEXTINFO_ACTIVE;
const Radarconfiguration_200_Radarcfg_sendextinfoType Radarconfiguration_200::Radarcfg_sendextinfoType_MIN;
const Radarconfiguration_200_Radarcfg_sendextinfoType Radarconfiguration_200::Radarcfg_sendextinfoType_MAX;
const int Radarconfiguration_200::Radarcfg_sendextinfoType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_ctrlrelay_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_ctrlrelay_validType Radarconfiguration_200::RADARCFG_CTRLRELAY_VALID_INVALID;
const Radarconfiguration_200_Radarcfg_ctrlrelay_validType Radarconfiguration_200::RADARCFG_CTRLRELAY_VALID_VALID;
const Radarconfiguration_200_Radarcfg_ctrlrelay_validType Radarconfiguration_200::Radarcfg_ctrlrelay_validType_MIN;
const Radarconfiguration_200_Radarcfg_ctrlrelay_validType Radarconfiguration_200::Radarcfg_ctrlrelay_validType_MAX;
const int Radarconfiguration_200::Radarcfg_ctrlrelay_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_ctrlrelayType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_ctrlrelayType Radarconfiguration_200::RADARCFG_CTRLRELAY_INACTIVE;
const Radarconfiguration_200_Radarcfg_ctrlrelayType Radarconfiguration_200::RADARCFG_CTRLRELAY_ACTIVE;
const Radarconfiguration_200_Radarcfg_ctrlrelayType Radarconfiguration_200::Radarcfg_ctrlrelayType_MIN;
const Radarconfiguration_200_Radarcfg_ctrlrelayType Radarconfiguration_200::Radarcfg_ctrlrelayType_MAX;
const int Radarconfiguration_200::Radarcfg_ctrlrelayType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_sendquality_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_sendquality_validType Radarconfiguration_200::RADARCFG_SENDQUALITY_VALID_INVALID;
const Radarconfiguration_200_Radarcfg_sendquality_validType Radarconfiguration_200::RADARCFG_SENDQUALITY_VALID_VALID;
const Radarconfiguration_200_Radarcfg_sendquality_validType Radarconfiguration_200::Radarcfg_sendquality_validType_MIN;
const Radarconfiguration_200_Radarcfg_sendquality_validType Radarconfiguration_200::Radarcfg_sendquality_validType_MAX;
const int Radarconfiguration_200::Radarcfg_sendquality_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_sendqualityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_sendqualityType Radarconfiguration_200::RADARCFG_SENDQUALITY_INACTIVE;
const Radarconfiguration_200_Radarcfg_sendqualityType Radarconfiguration_200::RADARCFG_SENDQUALITY_ACTIVE;
const Radarconfiguration_200_Radarcfg_sendqualityType Radarconfiguration_200::Radarcfg_sendqualityType_MIN;
const Radarconfiguration_200_Radarcfg_sendqualityType Radarconfiguration_200::Radarcfg_sendqualityType_MAX;
const int Radarconfiguration_200::Radarcfg_sendqualityType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_maxdistance_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_maxdistance_validType Radarconfiguration_200::RADARCFG_MAXDISTANCE_VALID_INVALID;
const Radarconfiguration_200_Radarcfg_maxdistance_validType Radarconfiguration_200::RADARCFG_MAXDISTANCE_VALID_VALID;
const Radarconfiguration_200_Radarcfg_maxdistance_validType Radarconfiguration_200::Radarcfg_maxdistance_validType_MIN;
const Radarconfiguration_200_Radarcfg_maxdistance_validType Radarconfiguration_200::Radarcfg_maxdistance_validType_MAX;
const int Radarconfiguration_200::Radarcfg_maxdistance_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_radarpower_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_radarpower_validType Radarconfiguration_200::RADARCFG_RADARPOWER_VALID_INVALID;
const Radarconfiguration_200_Radarcfg_radarpower_validType Radarconfiguration_200::RADARCFG_RADARPOWER_VALID_VALID;
const Radarconfiguration_200_Radarcfg_radarpower_validType Radarconfiguration_200::Radarcfg_radarpower_validType_MIN;
const Radarconfiguration_200_Radarcfg_radarpower_validType Radarconfiguration_200::Radarcfg_radarpower_validType_MAX;
const int Radarconfiguration_200::Radarcfg_radarpower_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_outputtype_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_outputtype_validType Radarconfiguration_200::RADARCFG_OUTPUTTYPE_VALID_INVALID;
const Radarconfiguration_200_Radarcfg_outputtype_validType Radarconfiguration_200::RADARCFG_OUTPUTTYPE_VALID_VALID;
const Radarconfiguration_200_Radarcfg_outputtype_validType Radarconfiguration_200::Radarcfg_outputtype_validType_MIN;
const Radarconfiguration_200_Radarcfg_outputtype_validType Radarconfiguration_200::Radarcfg_outputtype_validType_MAX;
const int Radarconfiguration_200::Radarcfg_outputtype_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_sensorid_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_sensorid_validType Radarconfiguration_200::RADARCFG_SENSORID_VALID_INVALID;
const Radarconfiguration_200_Radarcfg_sensorid_validType Radarconfiguration_200::RADARCFG_SENSORID_VALID_VALID;
const Radarconfiguration_200_Radarcfg_sensorid_validType Radarconfiguration_200::Radarcfg_sensorid_validType_MIN;
const Radarconfiguration_200_Radarcfg_sensorid_validType Radarconfiguration_200::Radarcfg_sensorid_validType_MAX;
const int Radarconfiguration_200::Radarcfg_sensorid_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_radarpowerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_radarpowerType Radarconfiguration_200::RADARCFG_RADARPOWER_STANDARD;
const Radarconfiguration_200_Radarcfg_radarpowerType Radarconfiguration_200::RADARCFG_RADARPOWER_3_DB_TX_GAIN;
const Radarconfiguration_200_Radarcfg_radarpowerType Radarconfiguration_200::RADARCFG_RADARPOWER_6_DB_TX_GAIN;
const Radarconfiguration_200_Radarcfg_radarpowerType Radarconfiguration_200::RADARCFG_RADARPOWER_9_DB_TX_GAIN;
const Radarconfiguration_200_Radarcfg_radarpowerType Radarconfiguration_200::RADARCFG_RADARPOWER_RESERVED1;
const Radarconfiguration_200_Radarcfg_radarpowerType Radarconfiguration_200::RADARCFG_RADARPOWER_RESERVED2;
const Radarconfiguration_200_Radarcfg_radarpowerType Radarconfiguration_200::RADARCFG_RADARPOWER_RESERVED3;
const Radarconfiguration_200_Radarcfg_radarpowerType Radarconfiguration_200::RADARCFG_RADARPOWER_RESERVED4;
const Radarconfiguration_200_Radarcfg_radarpowerType Radarconfiguration_200::Radarcfg_radarpowerType_MIN;
const Radarconfiguration_200_Radarcfg_radarpowerType Radarconfiguration_200::Radarcfg_radarpowerType_MAX;
const int Radarconfiguration_200::Radarcfg_radarpowerType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Radarconfiguration_200_Radarcfg_outputtypeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Radarconfiguration_200_Radarcfg_outputtypeType Radarconfiguration_200::RADARCFG_OUTPUTTYPE_NONE;
const Radarconfiguration_200_Radarcfg_outputtypeType Radarconfiguration_200::RADARCFG_OUTPUTTYPE_SENDOBJECTS;
const Radarconfiguration_200_Radarcfg_outputtypeType Radarconfiguration_200::RADARCFG_OUTPUTTYPE_SENDCLUSTERS;
const Radarconfiguration_200_Radarcfg_outputtypeType Radarconfiguration_200::RADARCFG_OUTPUTTYPE_RESERVED_2;
const Radarconfiguration_200_Radarcfg_outputtypeType Radarconfiguration_200::Radarcfg_outputtypeType_MIN;
const Radarconfiguration_200_Radarcfg_outputtypeType Radarconfiguration_200::Radarcfg_outputtypeType_MAX;
const int Radarconfiguration_200::Radarcfg_outputtypeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Filtercfg_202_Filtercfg_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Filtercfg_202_Filtercfg_validType Filtercfg_202::FILTERCFG_VALID_INVALID;
const Filtercfg_202_Filtercfg_validType Filtercfg_202::FILTERCFG_VALID_VALID;
const Filtercfg_202_Filtercfg_validType Filtercfg_202::Filtercfg_validType_MIN;
const Filtercfg_202_Filtercfg_validType Filtercfg_202::Filtercfg_validType_MAX;
const int Filtercfg_202::Filtercfg_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Filtercfg_202_Filtercfg_activeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Filtercfg_202_Filtercfg_activeType Filtercfg_202::FILTERCFG_ACTIVE_INACTIVE;
const Filtercfg_202_Filtercfg_activeType Filtercfg_202::FILTERCFG_ACTIVE_ACTIVE;
const Filtercfg_202_Filtercfg_activeType Filtercfg_202::Filtercfg_activeType_MIN;
const Filtercfg_202_Filtercfg_activeType Filtercfg_202::Filtercfg_activeType_MAX;
const int Filtercfg_202::Filtercfg_activeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Filtercfg_202_Filtercfg_typeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Filtercfg_202_Filtercfg_typeType Filtercfg_202::FILTERCFG_TYPE_CLUSTER_FILTER;
const Filtercfg_202_Filtercfg_typeType Filtercfg_202::FILTERCFG_TYPE_OBJECT_FILTER;
const Filtercfg_202_Filtercfg_typeType Filtercfg_202::Filtercfg_typeType_MIN;
const Filtercfg_202_Filtercfg_typeType Filtercfg_202::Filtercfg_typeType_MAX;
const int Filtercfg_202::Filtercfg_typeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Filterstate_cfg_204_Filterstate_typeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Filterstate_cfg_204_Filterstate_typeType Filterstate_cfg_204::FILTERSTATE_TYPE_CLUSTER_FILTER;
const Filterstate_cfg_204_Filterstate_typeType Filterstate_cfg_204::FILTERSTATE_TYPE_OBJECT_FILTER;
const Filterstate_cfg_204_Filterstate_typeType Filterstate_cfg_204::Filterstate_typeType_MIN;
const Filterstate_cfg_204_Filterstate_typeType Filterstate_cfg_204::Filterstate_typeType_MAX;
const int Filterstate_cfg_204::Filterstate_typeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Filterstate_cfg_204_Filterstate_activeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Filterstate_cfg_204_Filterstate_activeType Filterstate_cfg_204::FILTERSTATE_ACTIVE_INACTIVE;
const Filterstate_cfg_204_Filterstate_activeType Filterstate_cfg_204::FILTERSTATE_ACTIVE_ACTIVE;
const Filterstate_cfg_204_Filterstate_activeType Filterstate_cfg_204::Filterstate_activeType_MIN;
const Filterstate_cfg_204_Filterstate_activeType Filterstate_cfg_204::Filterstate_activeType_MAX;
const int Filterstate_cfg_204::Filterstate_activeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Speedinformation_300_Radardevice_speeddirectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Speedinformation_300_Radardevice_speeddirectionType Speedinformation_300::RADARDEVICE_SPEEDDIRECTION_STANDSTILL;
const Speedinformation_300_Radardevice_speeddirectionType Speedinformation_300::RADARDEVICE_SPEEDDIRECTION_FORWARD;
const Speedinformation_300_Radardevice_speeddirectionType Speedinformation_300::RADARDEVICE_SPEEDDIRECTION_REVERSE;
const Speedinformation_300_Radardevice_speeddirectionType Speedinformation_300::RADARDEVICE_SPEEDDIRECTION_RESERVED;
const Speedinformation_300_Radardevice_speeddirectionType Speedinformation_300::Radardevice_speeddirectionType_MIN;
const Speedinformation_300_Radardevice_speeddirectionType Speedinformation_300::Radardevice_speeddirectionType_MAX;
const int Speedinformation_300::Radardevice_speeddirectionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Versionid_700_Version_countrycodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Versionid_700_Version_countrycodeType Versionid_700::VERSION_COUNTRYCODE_INTERNATIONAL_VERSION;
const Versionid_700_Version_countrycodeType Versionid_700::VERSION_COUNTRYCODE_POWER_REDUCTION_IS_DEMANDED;
const Versionid_700_Version_countrycodeType Versionid_700::Version_countrycodeType_MIN;
const Versionid_700_Version_countrycodeType Versionid_700::Version_countrycodeType_MAX;
const int Versionid_700::Version_countrycodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Versionid_700_Version_extendedrangeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Versionid_700_Version_extendedrangeType Versionid_700::VERSION_EXTENDEDRANGE_STANDARD_RANGE_196M_260M;
const Versionid_700_Version_extendedrangeType Versionid_700::VERSION_EXTENDEDRANGE_DESCRIPTION_FOR_THE_VALUE_0X1;
const Versionid_700_Version_extendedrangeType Versionid_700::Version_extendedrangeType_MIN;
const Versionid_700_Version_extendedrangeType Versionid_700::Version_extendedrangeType_MAX;
const int Versionid_700::Version_extendedrangeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Cluster_1_general_701_Cluster_dynpropType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_1_general_701_Cluster_dynpropType Cluster_1_general_701::CLUSTER_DYNPROP_MOVING;
const Cluster_1_general_701_Cluster_dynpropType Cluster_1_general_701::CLUSTER_DYNPROP_STATIONARY;
const Cluster_1_general_701_Cluster_dynpropType Cluster_1_general_701::CLUSTER_DYNPROP_ONCOMING;
const Cluster_1_general_701_Cluster_dynpropType Cluster_1_general_701::CLUSTER_DYNPROP_STATIONARY_CANDIDATE;
const Cluster_1_general_701_Cluster_dynpropType Cluster_1_general_701::CLUSTER_DYNPROP_UNKNOWN;
const Cluster_1_general_701_Cluster_dynpropType Cluster_1_general_701::CLUSTER_DYNPROP_CROSSING_STATIONARY;
const Cluster_1_general_701_Cluster_dynpropType Cluster_1_general_701::CLUSTER_DYNPROP_CROSSING_MOVING;
const Cluster_1_general_701_Cluster_dynpropType Cluster_1_general_701::CLUSTER_DYNPROP_STOPPED;
const Cluster_1_general_701_Cluster_dynpropType Cluster_1_general_701::Cluster_dynpropType_MIN;
const Cluster_1_general_701_Cluster_dynpropType Cluster_1_general_701::Cluster_dynpropType_MAX;
const int Cluster_1_general_701::Cluster_dynpropType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Cluster_2_quality_702_Cluster_vrellat_rmsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_005_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_006_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_008_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_011_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_014_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_018_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_023_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_029_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_038_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_049_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_063_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_081_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_105_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_135_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_174_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_224_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_288_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_371_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_478_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_616_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_0_794_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_1_023_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_1_317_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_1_697_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_2_187_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_2_817_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_3_630_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_4_676_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_6_025_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_7_762_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_10_000_M_S;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::CLUSTER_VRELLAT_RMS_INVALID;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::Cluster_vrellat_rmsType_MIN;
const Cluster_2_quality_702_Cluster_vrellat_rmsType Cluster_2_quality_702::Cluster_vrellat_rmsType_MAX;
const int Cluster_2_quality_702::Cluster_vrellat_rmsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Cluster_2_quality_702_Cluster_invalidstateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_VALID;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_INVALID_WITH_TOO_LOW_RCS;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_INVALID_NEARFIELD;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_INVALID_FAR_NOT_CONFIRMED;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_VALID_WITH_LOW_RCS;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_RESERVED1;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_INVALID_MIRROR;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_INVALID_OUTSIDE_FIELD_OF_VIEW;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_VALID_WITH_ELEVATION;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_VALID_CHILD;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_VALID_50_DEG_ARTEFACT;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_VALID_BUT_NO_LOCAL_MAXIMUM;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_VALID_ARTEFACT;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_RESERVED2;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_INVALID_HARMONICS;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_VALID_NEAR_ABOVE_95_M;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_VALID_MULTI_TARGET;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::CLUSTER_INVALIDSTATE_VALID_SUSPICIOUS_ANGLE;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::Cluster_invalidstateType_MIN;
const Cluster_2_quality_702_Cluster_invalidstateType Cluster_2_quality_702::Cluster_invalidstateType_MAX;
const int Cluster_2_quality_702::Cluster_invalidstateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Cluster_2_quality_702_Cluster_distlat_rmsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_005_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_006_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_008_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_011_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_014_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_018_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_023_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_029_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_038_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_049_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_063_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_081_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_105_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_135_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_174_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_224_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_288_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_371_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_478_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_616_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_0_794_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_1_023_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_1_317_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_1_697_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_2_187_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_2_817_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_3_630_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_4_676_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_6_025_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_7_762_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_10_000_M;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::CLUSTER_DISTLAT_RMS_INVALID;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::Cluster_distlat_rmsType_MIN;
const Cluster_2_quality_702_Cluster_distlat_rmsType Cluster_2_quality_702::Cluster_distlat_rmsType_MAX;
const int Cluster_2_quality_702::Cluster_distlat_rmsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Cluster_2_quality_702_Cluster_distlong_rmsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_005_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_006_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_008_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_011_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_014_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_018_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_023_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_029_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_038_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_049_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_063_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_081_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_105_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_135_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_174_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_224_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_288_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_371_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_478_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_616_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_0_794_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_1_023_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_1_317_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_1_697_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_2_187_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_2_817_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_3_630_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_4_676_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_6_025_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_7_762_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_10_000_M;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::CLUSTER_DISTLONG_RMS_INVALID;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::Cluster_distlong_rmsType_MIN;
const Cluster_2_quality_702_Cluster_distlong_rmsType Cluster_2_quality_702::Cluster_distlong_rmsType_MAX;
const int Cluster_2_quality_702::Cluster_distlong_rmsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Cluster_2_quality_702_Cluster_vrellong_rmsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_005_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_006_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_008_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_011_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_014_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_018_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_023_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_029_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_038_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_049_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_063_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_081_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_105_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_135_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_174_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_224_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_288_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_371_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_478_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_616_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_0_794_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_1_023_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_1_317_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_1_697_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_2_187_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_2_817_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_3_630_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_4_676_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_6_025_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_7_762_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_10_000_M_S;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::CLUSTER_VRELLONG_RMS_INVALID;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::Cluster_vrellong_rmsType_MIN;
const Cluster_2_quality_702_Cluster_vrellong_rmsType Cluster_2_quality_702::Cluster_vrellong_rmsType_MAX;
const int Cluster_2_quality_702::Cluster_vrellong_rmsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Cluster_2_quality_702_Cluster_pdh0Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_2_quality_702_Cluster_pdh0Type Cluster_2_quality_702::CLUSTER_PDH0_INVALID;
const Cluster_2_quality_702_Cluster_pdh0Type Cluster_2_quality_702::CLUSTER_PDH0_25;
const Cluster_2_quality_702_Cluster_pdh0Type Cluster_2_quality_702::CLUSTER_PDH0_50;
const Cluster_2_quality_702_Cluster_pdh0Type Cluster_2_quality_702::CLUSTER_PDH0_75;
const Cluster_2_quality_702_Cluster_pdh0Type Cluster_2_quality_702::CLUSTER_PDH0_90;
const Cluster_2_quality_702_Cluster_pdh0Type Cluster_2_quality_702::CLUSTER_PDH0_99;
const Cluster_2_quality_702_Cluster_pdh0Type Cluster_2_quality_702::CLUSTER_PDH0_99_9;
const Cluster_2_quality_702_Cluster_pdh0Type Cluster_2_quality_702::CLUSTER_PDH0_100;
const Cluster_2_quality_702_Cluster_pdh0Type Cluster_2_quality_702::Cluster_pdh0Type_MIN;
const Cluster_2_quality_702_Cluster_pdh0Type Cluster_2_quality_702::Cluster_pdh0Type_MAX;
const int Cluster_2_quality_702::Cluster_pdh0Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Cluster_2_quality_702_Cluster_ambigstateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Cluster_2_quality_702_Cluster_ambigstateType Cluster_2_quality_702::CLUSTER_AMBIGSTATE_INVALID;
const Cluster_2_quality_702_Cluster_ambigstateType Cluster_2_quality_702::CLUSTER_AMBIGSTATE_AMBIGUOUS;
const Cluster_2_quality_702_Cluster_ambigstateType Cluster_2_quality_702::CLUSTER_AMBIGSTATE_STAGGERED_RAMP;
const Cluster_2_quality_702_Cluster_ambigstateType Cluster_2_quality_702::CLUSTER_AMBIGSTATE_UNAMBIGUOUS;
const Cluster_2_quality_702_Cluster_ambigstateType Cluster_2_quality_702::CLUSTER_AMBIGSTATE_STATIONARY_CANDIDATE;
const Cluster_2_quality_702_Cluster_ambigstateType Cluster_2_quality_702::Cluster_ambigstateType_MIN;
const Cluster_2_quality_702_Cluster_ambigstateType Cluster_2_quality_702::Cluster_ambigstateType_MAX;
const int Cluster_2_quality_702::Cluster_ambigstateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Obj_3_extended_60d_Obj_classType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Obj_3_extended_60d_Obj_classType Obj_3_extended_60d::OBJ_CLASS_POINT;
const Obj_3_extended_60d_Obj_classType Obj_3_extended_60d::OBJ_CLASS_CAR;
const Obj_3_extended_60d_Obj_classType Obj_3_extended_60d::OBJ_CLASS_TRUCK;
const Obj_3_extended_60d_Obj_classType Obj_3_extended_60d::OBJ_CLASS_PEDESTRIAN;
const Obj_3_extended_60d_Obj_classType Obj_3_extended_60d::OBJ_CLASS_MOTORCYCLE;
const Obj_3_extended_60d_Obj_classType Obj_3_extended_60d::OBJ_CLASS_BICYCLE;
const Obj_3_extended_60d_Obj_classType Obj_3_extended_60d::OBJ_CLASS_WIDE;
const Obj_3_extended_60d_Obj_classType Obj_3_extended_60d::OBJ_CLASS_DESCRIPTION_FOR_THE_VALUE_0X7;
const Obj_3_extended_60d_Obj_classType Obj_3_extended_60d::Obj_classType_MIN;
const Obj_3_extended_60d_Obj_classType Obj_3_extended_60d::Obj_classType_MAX;
const int Obj_3_extended_60d::Obj_classType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Obj_2_quality_60c_Obj_probofexistType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Obj_2_quality_60c_Obj_probofexistType Obj_2_quality_60c::OBJ_PROBOFEXIST_INVALID;
const Obj_2_quality_60c_Obj_probofexistType Obj_2_quality_60c::OBJ_PROBOFEXIST_25;
const Obj_2_quality_60c_Obj_probofexistType Obj_2_quality_60c::OBJ_PROBOFEXIST_50;
const Obj_2_quality_60c_Obj_probofexistType Obj_2_quality_60c::OBJ_PROBOFEXIST_75;
const Obj_2_quality_60c_Obj_probofexistType Obj_2_quality_60c::OBJ_PROBOFEXIST_90;
const Obj_2_quality_60c_Obj_probofexistType Obj_2_quality_60c::OBJ_PROBOFEXIST_99;
const Obj_2_quality_60c_Obj_probofexistType Obj_2_quality_60c::OBJ_PROBOFEXIST_99_9;
const Obj_2_quality_60c_Obj_probofexistType Obj_2_quality_60c::OBJ_PROBOFEXIST_100;
const Obj_2_quality_60c_Obj_probofexistType Obj_2_quality_60c::Obj_probofexistType_MIN;
const Obj_2_quality_60c_Obj_probofexistType Obj_2_quality_60c::Obj_probofexistType_MAX;
const int Obj_2_quality_60c::Obj_probofexistType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Obj_2_quality_60c_Obj_measstateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Obj_2_quality_60c_Obj_measstateType Obj_2_quality_60c::OBJ_MEASSTATE_DELETED;
const Obj_2_quality_60c_Obj_measstateType Obj_2_quality_60c::OBJ_MEASSTATE_NEW;
const Obj_2_quality_60c_Obj_measstateType Obj_2_quality_60c::OBJ_MEASSTATE_MEASURED;
const Obj_2_quality_60c_Obj_measstateType Obj_2_quality_60c::OBJ_MEASSTATE_PREDICTED;
const Obj_2_quality_60c_Obj_measstateType Obj_2_quality_60c::OBJ_MEASSTATE_DELETED_FOR_MERGE;
const Obj_2_quality_60c_Obj_measstateType Obj_2_quality_60c::OBJ_MEASSTATE_NEW_FROM_MERGE;
const Obj_2_quality_60c_Obj_measstateType Obj_2_quality_60c::Obj_measstateType_MIN;
const Obj_2_quality_60c_Obj_measstateType Obj_2_quality_60c::Obj_measstateType_MAX;
const int Obj_2_quality_60c::Obj_measstateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Obj_2_quality_60c_Obj_arellong_rmsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_005_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_006_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_008_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_011_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_014_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_018_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_023_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_029_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_038_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_049_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_063_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_081_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_105_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_135_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_174_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_224_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_288_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_371_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_478_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_616_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_0_794_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_1_023_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_1_317_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_1_697_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_2_187_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_2_817_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_3_630_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_4_676_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_6_025_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_7_762_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_10_000_M_S;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::OBJ_ARELLONG_RMS_INVALID;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::Obj_arellong_rmsType_MIN;
const Obj_2_quality_60c_Obj_arellong_rmsType Obj_2_quality_60c::Obj_arellong_rmsType_MAX;
const int Obj_2_quality_60c::Obj_arellong_rmsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Obj_2_quality_60c_Obj_arellat_rmsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_005_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_006_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_008_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_011_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_014_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_018_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_023_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_029_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_038_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_049_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_063_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_081_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_105_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_135_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_174_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_224_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_288_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_371_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_478_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_616_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_0_794_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_1_023_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_1_317_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_1_697_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_2_187_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_2_817_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_3_630_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_4_676_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_6_025_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_7_762_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_10_000_M_S;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::OBJ_ARELLAT_RMS_INVALID;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::Obj_arellat_rmsType_MIN;
const Obj_2_quality_60c_Obj_arellat_rmsType Obj_2_quality_60c::Obj_arellat_rmsType_MAX;
const int Obj_2_quality_60c::Obj_arellat_rmsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Obj_2_quality_60c_Obj_vrellong_rmsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_005_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_006_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_008_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_011_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_014_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_018_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_023_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_029_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_038_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_049_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_063_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_081_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_105_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_135_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_174_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_224_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_288_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_371_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_478_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_616_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_0_794_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_1_023_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_1_317_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_1_697_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_2_187_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_2_817_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_3_630_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_4_676_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_6_025_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_7_762_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_10_000_M_S;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::OBJ_VRELLONG_RMS_INVALID;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::Obj_vrellong_rmsType_MIN;
const Obj_2_quality_60c_Obj_vrellong_rmsType Obj_2_quality_60c::Obj_vrellong_rmsType_MAX;
const int Obj_2_quality_60c::Obj_vrellong_rmsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Obj_2_quality_60c_Obj_vrellat_rmsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_005_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_006_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_008_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_011_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_014_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_018_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_023_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_029_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_038_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_049_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_063_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_081_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_105_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_135_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_174_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_224_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_288_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_371_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_478_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_616_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_0_794_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_1_023_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_1_317_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_1_697_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_2_187_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_2_817_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_3_630_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_4_676_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_6_025_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_7_762_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_10_000_M_S;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::OBJ_VRELLAT_RMS_INVALID;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::Obj_vrellat_rmsType_MIN;
const Obj_2_quality_60c_Obj_vrellat_rmsType Obj_2_quality_60c::Obj_vrellat_rmsType_MAX;
const int Obj_2_quality_60c::Obj_vrellat_rmsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Obj_2_quality_60c_Obj_orientation_rmsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_005_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_007_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_010_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_014_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_020_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_029_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_041_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_058_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_082_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_116_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_165_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_234_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_332_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_471_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_669_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_0_949_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_1_346_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_1_909_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_2_709_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_3_843_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_5_451_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_7_734_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_10_971_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_15_565_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_22_081_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_31_325_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_44_439_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_63_044_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_89_437_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_126_881_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_180_000_DEG;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::OBJ_ORIENTATION_RMS_INVALID;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::Obj_orientation_rmsType_MIN;
const Obj_2_quality_60c_Obj_orientation_rmsType Obj_2_quality_60c::Obj_orientation_rmsType_MAX;
const int Obj_2_quality_60c::Obj_orientation_rmsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Obj_2_quality_60c_Obj_distlong_rmsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_005_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_006_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_008_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_011_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_014_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_018_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_023_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_029_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_038_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_049_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_063_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_081_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_105_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_135_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_174_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_224_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_288_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_371_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_478_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_616_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_0_794_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_1_023_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_1_317_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_1_697_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_2_187_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_2_817_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_3_630_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_4_676_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_6_025_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_7_762_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_10_000_M;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::OBJ_DISTLONG_RMS_INVALID;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::Obj_distlong_rmsType_MIN;
const Obj_2_quality_60c_Obj_distlong_rmsType Obj_2_quality_60c::Obj_distlong_rmsType_MAX;
const int Obj_2_quality_60c::Obj_distlong_rmsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Obj_2_quality_60c_Obj_distlat_rmsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_005_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_006_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_008_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_011_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_014_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_018_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_023_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_029_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_038_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_049_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_063_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_081_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_105_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_135_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_174_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_224_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_288_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_371_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_478_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_616_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_0_794_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_1_023_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_1_317_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_1_697_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_2_187_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_2_817_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_3_630_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_4_676_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_6_025_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_7_762_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_10_000_M;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::OBJ_DISTLAT_RMS_INVALID;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::Obj_distlat_rmsType_MIN;
const Obj_2_quality_60c_Obj_distlat_rmsType Obj_2_quality_60c::Obj_distlat_rmsType_MAX;
const int Obj_2_quality_60c::Obj_distlat_rmsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Obj_1_general_60b_Obj_dynpropType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Obj_1_general_60b_Obj_dynpropType Obj_1_general_60b::OBJ_DYNPROP_MOVING;
const Obj_1_general_60b_Obj_dynpropType Obj_1_general_60b::OBJ_DYNPROP_STATIONARY;
const Obj_1_general_60b_Obj_dynpropType Obj_1_general_60b::OBJ_DYNPROP_ONCOMING;
const Obj_1_general_60b_Obj_dynpropType Obj_1_general_60b::OBJ_DYNPROP_STATIONARY_CANDIDATE;
const Obj_1_general_60b_Obj_dynpropType Obj_1_general_60b::OBJ_DYNPROP_UNKNOWN;
const Obj_1_general_60b_Obj_dynpropType Obj_1_general_60b::OBJ_DYNPROP_CROSSING_STATIONARY;
const Obj_1_general_60b_Obj_dynpropType Obj_1_general_60b::OBJ_DYNPROP_CROSSING_MOVING;
const Obj_1_general_60b_Obj_dynpropType Obj_1_general_60b::OBJ_DYNPROP_STOPPED;
const Obj_1_general_60b_Obj_dynpropType Obj_1_general_60b::Obj_dynpropType_MIN;
const Obj_1_general_60b_Obj_dynpropType Obj_1_general_60b::Obj_dynpropType_MAX;
const int Obj_1_general_60b::Obj_dynpropType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Colldetregionstate_402_Colldetregstate_warninglevelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Colldetregionstate_402_Colldetregstate_warninglevelType Colldetregionstate_402::COLLDETREGSTATE_WARNINGLEVEL_NO_WARNING;
const Colldetregionstate_402_Colldetregstate_warninglevelType Colldetregionstate_402::COLLDETREGSTATE_WARNINGLEVEL_OBJECT_WARNING;
const Colldetregionstate_402_Colldetregstate_warninglevelType Colldetregionstate_402::COLLDETREGSTATE_WARNINGLEVEL_PRELIMINARY_WARNING;
const Colldetregionstate_402_Colldetregstate_warninglevelType Colldetregionstate_402::COLLDETREGSTATE_WARNINGLEVEL_WARNING_DEACTIVATED;
const Colldetregionstate_402_Colldetregstate_warninglevelType Colldetregionstate_402::Colldetregstate_warninglevelType_MIN;
const Colldetregionstate_402_Colldetregstate_warninglevelType Colldetregionstate_402::Colldetregstate_warninglevelType_MAX;
const int Colldetregionstate_402::Colldetregstate_warninglevelType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Colldetregioncfg_401_Colldetregcfg_activateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Colldetregioncfg_401_Colldetregcfg_activateType Colldetregioncfg_401::COLLDETREGCFG_ACTIVATE_INACTIVE;
const Colldetregioncfg_401_Colldetregcfg_activateType Colldetregioncfg_401::COLLDETREGCFG_ACTIVATE_ACTIVE;
const Colldetregioncfg_401_Colldetregcfg_activateType Colldetregioncfg_401::Colldetregcfg_activateType_MIN;
const Colldetregioncfg_401_Colldetregcfg_activateType Colldetregioncfg_401::Colldetregcfg_activateType_MAX;
const int Colldetregioncfg_401::Colldetregcfg_activateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Colldetregioncfg_401_Colldetregcfg_coordinates_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Colldetregioncfg_401_Colldetregcfg_coordinates_validType Colldetregioncfg_401::COLLDETREGCFG_COORDINATES_VALID_INVALID;
const Colldetregioncfg_401_Colldetregcfg_coordinates_validType Colldetregioncfg_401::COLLDETREGCFG_COORDINATES_VALID_VALID;
const Colldetregioncfg_401_Colldetregcfg_coordinates_validType Colldetregioncfg_401::Colldetregcfg_coordinates_validType_MIN;
const Colldetregioncfg_401_Colldetregcfg_coordinates_validType Colldetregioncfg_401::Colldetregcfg_coordinates_validType_MAX;
const int Colldetregioncfg_401::Colldetregcfg_coordinates_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Colldetcfg_400_Colldetcfg_clearregionsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Colldetcfg_400_Colldetcfg_clearregionsType Colldetcfg_400::COLLDETCFG_CLEARREGIONS_IDLE;
const Colldetcfg_400_Colldetcfg_clearregionsType Colldetcfg_400::COLLDETCFG_CLEARREGIONS_CLEAR_ALL_DEFINED_REGIONS;
const Colldetcfg_400_Colldetcfg_clearregionsType Colldetcfg_400::Colldetcfg_clearregionsType_MIN;
const Colldetcfg_400_Colldetcfg_clearregionsType Colldetcfg_400::Colldetcfg_clearregionsType_MAX;
const int Colldetcfg_400::Colldetcfg_clearregionsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Colldetcfg_400_Colldetcfg_warningresetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Colldetcfg_400_Colldetcfg_warningresetType Colldetcfg_400::COLLDETCFG_WARNINGRESET_IDLE;
const Colldetcfg_400_Colldetcfg_warningresetType Colldetcfg_400::COLLDETCFG_WARNINGRESET_WARN_RESET;
const Colldetcfg_400_Colldetcfg_warningresetType Colldetcfg_400::Colldetcfg_warningresetType_MIN;
const Colldetcfg_400_Colldetcfg_warningresetType Colldetcfg_400::Colldetcfg_warningresetType_MAX;
const int Colldetcfg_400::Colldetcfg_warningresetType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Colldetcfg_400_Colldetcfg_activateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Colldetcfg_400_Colldetcfg_activateType Colldetcfg_400::COLLDETCFG_ACTIVATE_INACTIVE;
const Colldetcfg_400_Colldetcfg_activateType Colldetcfg_400::COLLDETCFG_ACTIVATE_ACTIVE;
const Colldetcfg_400_Colldetcfg_activateType Colldetcfg_400::Colldetcfg_activateType_MIN;
const Colldetcfg_400_Colldetcfg_activateType Colldetcfg_400::Colldetcfg_activateType_MAX;
const int Colldetcfg_400::Colldetcfg_activateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Colldetcfg_400_Colldetcfg_mintime_validType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Colldetcfg_400_Colldetcfg_mintime_validType Colldetcfg_400::COLLDETCFG_MINTIME_VALID_INVALID;
const Colldetcfg_400_Colldetcfg_mintime_validType Colldetcfg_400::COLLDETCFG_MINTIME_VALID_VALID;
const Colldetcfg_400_Colldetcfg_mintime_validType Colldetcfg_400::Colldetcfg_mintime_validType_MIN;
const Colldetcfg_400_Colldetcfg_mintime_validType Colldetcfg_400::Colldetcfg_mintime_validType_MAX;
const int Colldetcfg_400::Colldetcfg_mintime_validType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Colldetstate_408_Colldetstate_activeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Colldetstate_408_Colldetstate_activeType Colldetstate_408::COLLDETSTATE_ACTIVE_INACTIVE;
const Colldetstate_408_Colldetstate_activeType Colldetstate_408::COLLDETSTATE_ACTIVE_ACTIVE;
const Colldetstate_408_Colldetstate_activeType Colldetstate_408::Colldetstate_activeType_MIN;
const Colldetstate_408_Colldetstate_activeType Colldetstate_408::Colldetstate_activeType_MAX;
const int Colldetstate_408::Colldetstate_activeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ArsObjectInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArsObjectInfo::kObjIdFieldNumber;
const int ArsObjectInfo::kClassTypeFieldNumber;
const int ArsObjectInfo::kConfidenceFieldNumber;
const int ArsObjectInfo::kLifeTimeFieldNumber;
const int ArsObjectInfo::kMotionStatusFieldNumber;
const int ArsObjectInfo::kHeightFieldNumber;
const int ArsObjectInfo::kWidthFieldNumber;
const int ArsObjectInfo::kLengthFieldNumber;
const int ArsObjectInfo::kDistLongFieldNumber;
const int ArsObjectInfo::kDistLatFieldNumber;
const int ArsObjectInfo::kVrelLongFieldNumber;
const int ArsObjectInfo::kVrelLatFieldNumber;
const int ArsObjectInfo::kArelLongFieldNumber;
const int ArsObjectInfo::kArelLatFieldNumber;
const int ArsObjectInfo::kYawAngleFieldNumber;
const int ArsObjectInfo::kOrientationAngleFieldNumber;
const int ArsObjectInfo::kMeasStateFieldNumber;
const int ArsObjectInfo::kRcsFieldNumber;
const int ArsObjectInfo::kDistLongRmsFieldNumber;
const int ArsObjectInfo::kDistLatRmsFieldNumber;
const int ArsObjectInfo::kVrelLongRmsFieldNumber;
const int ArsObjectInfo::kVrelLatRmsFieldNumber;
const int ArsObjectInfo::kArelLongRmsFieldNumber;
const int ArsObjectInfo::kArelLatRmsFieldNumber;
const int ArsObjectInfo::kOrientationRmsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArsObjectInfo::ArsObjectInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_ArsObjectInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.ArsObjectInfo)
}
ArsObjectInfo::ArsObjectInfo(const ArsObjectInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obj_id_, &from.obj_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&meas_state_) -
    reinterpret_cast<char*>(&obj_id_)) + sizeof(meas_state_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.ArsObjectInfo)
}

void ArsObjectInfo::SharedCtor() {
  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&meas_state_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(meas_state_));
}

ArsObjectInfo::~ArsObjectInfo() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.ArsObjectInfo)
  SharedDtor();
}

void ArsObjectInfo::SharedDtor() {
}

void ArsObjectInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArsObjectInfo& ArsObjectInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_ArsObjectInfo.base);
  return *internal_default_instance();
}


void ArsObjectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.ArsObjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&meas_state_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(meas_state_));
  _internal_metadata_.Clear();
}

bool ArsObjectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.ArsObjectInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 obj_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &obj_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 class_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &class_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double confidence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 life_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &life_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 motion_status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motion_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double width = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double length = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dist_long = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dist_long_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dist_lat = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dist_lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vrel_long = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vrel_long_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vrel_lat = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vrel_lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double arel_long = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &arel_long_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double arel_lat = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &arel_lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yaw_angle = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double orientation_angle = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &orientation_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 meas_state = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &meas_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double rcs = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rcs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dist_long_rms = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dist_long_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dist_lat_rms = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dist_lat_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vrel_long_rms = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vrel_long_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vrel_lat_rms = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 177 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vrel_lat_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double arel_long_rms = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &arel_long_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double arel_lat_rms = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &arel_lat_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double orientation_rms = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &orientation_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.ArsObjectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.ArsObjectInfo)
  return false;
#undef DO_
}

void ArsObjectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.ArsObjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 obj_id = 1;
  if (this->obj_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->obj_id(), output);
  }

  // uint32 class_type = 2;
  if (this->class_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->class_type(), output);
  }

  // double confidence = 3;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->confidence(), output);
  }

  // uint32 life_time = 4;
  if (this->life_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->life_time(), output);
  }

  // uint32 motion_status = 5;
  if (this->motion_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->motion_status(), output);
  }

  // double height = 6;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->height(), output);
  }

  // double width = 7;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->width(), output);
  }

  // double length = 8;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->length(), output);
  }

  // double dist_long = 9;
  if (this->dist_long() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->dist_long(), output);
  }

  // double dist_lat = 10;
  if (this->dist_lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->dist_lat(), output);
  }

  // double vrel_long = 11;
  if (this->vrel_long() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->vrel_long(), output);
  }

  // double vrel_lat = 12;
  if (this->vrel_lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->vrel_lat(), output);
  }

  // double arel_long = 13;
  if (this->arel_long() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->arel_long(), output);
  }

  // double arel_lat = 14;
  if (this->arel_lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->arel_lat(), output);
  }

  // double yaw_angle = 15;
  if (this->yaw_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->yaw_angle(), output);
  }

  // double orientation_angle = 16;
  if (this->orientation_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->orientation_angle(), output);
  }

  // uint32 meas_state = 17;
  if (this->meas_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->meas_state(), output);
  }

  // double rcs = 18;
  if (this->rcs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->rcs(), output);
  }

  // double dist_long_rms = 19;
  if (this->dist_long_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->dist_long_rms(), output);
  }

  // double dist_lat_rms = 20;
  if (this->dist_lat_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->dist_lat_rms(), output);
  }

  // double vrel_long_rms = 21;
  if (this->vrel_long_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->vrel_long_rms(), output);
  }

  // double vrel_lat_rms = 22;
  if (this->vrel_lat_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->vrel_lat_rms(), output);
  }

  // double arel_long_rms = 23;
  if (this->arel_long_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->arel_long_rms(), output);
  }

  // double arel_lat_rms = 24;
  if (this->arel_lat_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->arel_lat_rms(), output);
  }

  // double orientation_rms = 25;
  if (this->orientation_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->orientation_rms(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.ArsObjectInfo)
}

size_t ArsObjectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.ArsObjectInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->obj_id());
  }

  // uint32 class_type = 2;
  if (this->class_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->class_type());
  }

  // double confidence = 3;
  if (this->confidence() != 0) {
    total_size += 1 + 8;
  }

  // uint32 life_time = 4;
  if (this->life_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->life_time());
  }

  // uint32 motion_status = 5;
  if (this->motion_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motion_status());
  }

  // double height = 6;
  if (this->height() != 0) {
    total_size += 1 + 8;
  }

  // double width = 7;
  if (this->width() != 0) {
    total_size += 1 + 8;
  }

  // double length = 8;
  if (this->length() != 0) {
    total_size += 1 + 8;
  }

  // double dist_long = 9;
  if (this->dist_long() != 0) {
    total_size += 1 + 8;
  }

  // double dist_lat = 10;
  if (this->dist_lat() != 0) {
    total_size += 1 + 8;
  }

  // double vrel_long = 11;
  if (this->vrel_long() != 0) {
    total_size += 1 + 8;
  }

  // double vrel_lat = 12;
  if (this->vrel_lat() != 0) {
    total_size += 1 + 8;
  }

  // double arel_long = 13;
  if (this->arel_long() != 0) {
    total_size += 1 + 8;
  }

  // double arel_lat = 14;
  if (this->arel_lat() != 0) {
    total_size += 1 + 8;
  }

  // double yaw_angle = 15;
  if (this->yaw_angle() != 0) {
    total_size += 1 + 8;
  }

  // double orientation_angle = 16;
  if (this->orientation_angle() != 0) {
    total_size += 2 + 8;
  }

  // double rcs = 18;
  if (this->rcs() != 0) {
    total_size += 2 + 8;
  }

  // double dist_long_rms = 19;
  if (this->dist_long_rms() != 0) {
    total_size += 2 + 8;
  }

  // double dist_lat_rms = 20;
  if (this->dist_lat_rms() != 0) {
    total_size += 2 + 8;
  }

  // double vrel_long_rms = 21;
  if (this->vrel_long_rms() != 0) {
    total_size += 2 + 8;
  }

  // double vrel_lat_rms = 22;
  if (this->vrel_lat_rms() != 0) {
    total_size += 2 + 8;
  }

  // double arel_long_rms = 23;
  if (this->arel_long_rms() != 0) {
    total_size += 2 + 8;
  }

  // double arel_lat_rms = 24;
  if (this->arel_lat_rms() != 0) {
    total_size += 2 + 8;
  }

  // double orientation_rms = 25;
  if (this->orientation_rms() != 0) {
    total_size += 2 + 8;
  }

  // uint32 meas_state = 17;
  if (this->meas_state() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->meas_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArsObjectInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ArsObjectInfo*>(&from));
}

void ArsObjectInfo::MergeFrom(const ArsObjectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.ArsObjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    set_obj_id(from.obj_id());
  }
  if (from.class_type() != 0) {
    set_class_type(from.class_type());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.life_time() != 0) {
    set_life_time(from.life_time());
  }
  if (from.motion_status() != 0) {
    set_motion_status(from.motion_status());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.dist_long() != 0) {
    set_dist_long(from.dist_long());
  }
  if (from.dist_lat() != 0) {
    set_dist_lat(from.dist_lat());
  }
  if (from.vrel_long() != 0) {
    set_vrel_long(from.vrel_long());
  }
  if (from.vrel_lat() != 0) {
    set_vrel_lat(from.vrel_lat());
  }
  if (from.arel_long() != 0) {
    set_arel_long(from.arel_long());
  }
  if (from.arel_lat() != 0) {
    set_arel_lat(from.arel_lat());
  }
  if (from.yaw_angle() != 0) {
    set_yaw_angle(from.yaw_angle());
  }
  if (from.orientation_angle() != 0) {
    set_orientation_angle(from.orientation_angle());
  }
  if (from.rcs() != 0) {
    set_rcs(from.rcs());
  }
  if (from.dist_long_rms() != 0) {
    set_dist_long_rms(from.dist_long_rms());
  }
  if (from.dist_lat_rms() != 0) {
    set_dist_lat_rms(from.dist_lat_rms());
  }
  if (from.vrel_long_rms() != 0) {
    set_vrel_long_rms(from.vrel_long_rms());
  }
  if (from.vrel_lat_rms() != 0) {
    set_vrel_lat_rms(from.vrel_lat_rms());
  }
  if (from.arel_long_rms() != 0) {
    set_arel_long_rms(from.arel_long_rms());
  }
  if (from.arel_lat_rms() != 0) {
    set_arel_lat_rms(from.arel_lat_rms());
  }
  if (from.orientation_rms() != 0) {
    set_orientation_rms(from.orientation_rms());
  }
  if (from.meas_state() != 0) {
    set_meas_state(from.meas_state());
  }
}

void ArsObjectInfo::CopyFrom(const ArsObjectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.ArsObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArsObjectInfo::IsInitialized() const {
  return true;
}

void ArsObjectInfo::Swap(ArsObjectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArsObjectInfo::InternalSwap(ArsObjectInfo* other) {
  using std::swap;
  swap(obj_id_, other->obj_id_);
  swap(class_type_, other->class_type_);
  swap(confidence_, other->confidence_);
  swap(life_time_, other->life_time_);
  swap(motion_status_, other->motion_status_);
  swap(height_, other->height_);
  swap(width_, other->width_);
  swap(length_, other->length_);
  swap(dist_long_, other->dist_long_);
  swap(dist_lat_, other->dist_lat_);
  swap(vrel_long_, other->vrel_long_);
  swap(vrel_lat_, other->vrel_lat_);
  swap(arel_long_, other->arel_long_);
  swap(arel_lat_, other->arel_lat_);
  swap(yaw_angle_, other->yaw_angle_);
  swap(orientation_angle_, other->orientation_angle_);
  swap(rcs_, other->rcs_);
  swap(dist_long_rms_, other->dist_long_rms_);
  swap(dist_lat_rms_, other->dist_lat_rms_);
  swap(vrel_long_rms_, other->vrel_long_rms_);
  swap(vrel_lat_rms_, other->vrel_lat_rms_);
  swap(arel_long_rms_, other->arel_long_rms_);
  swap(arel_lat_rms_, other->arel_lat_rms_);
  swap(orientation_rms_, other->orientation_rms_);
  swap(meas_state_, other->meas_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ArsObjectInfo::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.ArsObjectInfo";
}


// ===================================================================

void Radarstate_201::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Radarstate_201::kRadarstateInterferenceFieldNumber;
const int Radarstate_201::kRadarstateVoltageErrorFieldNumber;
const int Radarstate_201::kRadarstateTemporaryErrorFieldNumber;
const int Radarstate_201::kRadarstateTemperatureErrorFieldNumber;
const int Radarstate_201::kRadarstatePersistentErrorFieldNumber;
const int Radarstate_201::kRadarstateSortindexFieldNumber;
const int Radarstate_201::kRadarstateRcsThresholdFieldNumber;
const int Radarstate_201::kRadarstateCtrlrelaycfgFieldNumber;
const int Radarstate_201::kRadarstateSendqualitycfgFieldNumber;
const int Radarstate_201::kRadarstateSendextinfocfgFieldNumber;
const int Radarstate_201::kRadarstateMotionrxstateFieldNumber;
const int Radarstate_201::kRadarstateSensoridFieldNumber;
const int Radarstate_201::kRadarstateOutputtypecfgFieldNumber;
const int Radarstate_201::kRadarstateRadarpowercfgFieldNumber;
const int Radarstate_201::kRadarstateNvmreadstatusFieldNumber;
const int Radarstate_201::kRadarstateNvmwritestatusFieldNumber;
const int Radarstate_201::kRadarstateMaxdistancecfgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Radarstate_201::Radarstate_201()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Radarstate_201.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Radarstate_201)
}
Radarstate_201::Radarstate_201(const Radarstate_201& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&radarstate_interference_, &from.radarstate_interference_,
    static_cast<size_t>(reinterpret_cast<char*>(&radarstate_maxdistancecfg_) -
    reinterpret_cast<char*>(&radarstate_interference_)) + sizeof(radarstate_maxdistancecfg_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Radarstate_201)
}

void Radarstate_201::SharedCtor() {
  ::memset(&radarstate_interference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radarstate_maxdistancecfg_) -
      reinterpret_cast<char*>(&radarstate_interference_)) + sizeof(radarstate_maxdistancecfg_));
}

Radarstate_201::~Radarstate_201() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Radarstate_201)
  SharedDtor();
}

void Radarstate_201::SharedDtor() {
}

void Radarstate_201::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Radarstate_201& Radarstate_201::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Radarstate_201.base);
  return *internal_default_instance();
}


void Radarstate_201::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Radarstate_201)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&radarstate_interference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radarstate_maxdistancecfg_) -
      reinterpret_cast<char*>(&radarstate_interference_)) + sizeof(radarstate_maxdistancecfg_));
  _internal_metadata_.Clear();
}

bool Radarstate_201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Radarstate_201)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_interferenceType radarstate_interference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_interference(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_interferenceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_voltage_errorType radarstate_voltage_error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_voltage_error(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_voltage_errorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_temporary_errorType radarstate_temporary_error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_temporary_error(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_temporary_errorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_temperature_errorType radarstate_temperature_error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_temperature_error(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_temperature_errorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_persistent_errorType radarstate_persistent_error = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_persistent_error(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_persistent_errorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sortindexType radarstate_sortindex = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_sortindex(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_sortindexType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_rcs_thresholdType radarstate_rcs_threshold = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_rcs_threshold(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_rcs_thresholdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_ctrlrelaycfgType radarstate_ctrlrelaycfg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_ctrlrelaycfg(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_ctrlrelaycfgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sendqualitycfgType radarstate_sendqualitycfg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_sendqualitycfg(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_sendqualitycfgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sendextinfocfgType radarstate_sendextinfocfg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_sendextinfocfg(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_sendextinfocfgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_motionrxstateType radarstate_motionrxstate = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_motionrxstate(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_motionrxstateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sensoridType radarstate_sensorid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_sensorid(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_sensoridType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_outputtypecfgType radarstate_outputtypecfg = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_outputtypecfg(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_outputtypecfgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_radarpowercfgType radarstate_radarpowercfg = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_radarpowercfg(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_radarpowercfgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_nvmreadstatusType radarstate_nvmreadstatus = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarstate_nvmreadstatus(static_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201_Radarstate_nvmreadstatusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool radarstate_nvmwritestatus = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &radarstate_nvmwritestatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double radarstate_maxdistancecfg = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &radarstate_maxdistancecfg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Radarstate_201)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Radarstate_201)
  return false;
#undef DO_
}

void Radarstate_201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Radarstate_201)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_interferenceType radarstate_interference = 1;
  if (this->radarstate_interference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->radarstate_interference(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_voltage_errorType radarstate_voltage_error = 2;
  if (this->radarstate_voltage_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->radarstate_voltage_error(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_temporary_errorType radarstate_temporary_error = 3;
  if (this->radarstate_temporary_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->radarstate_temporary_error(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_temperature_errorType radarstate_temperature_error = 4;
  if (this->radarstate_temperature_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->radarstate_temperature_error(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_persistent_errorType radarstate_persistent_error = 5;
  if (this->radarstate_persistent_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->radarstate_persistent_error(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sortindexType radarstate_sortindex = 6;
  if (this->radarstate_sortindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->radarstate_sortindex(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_rcs_thresholdType radarstate_rcs_threshold = 7;
  if (this->radarstate_rcs_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->radarstate_rcs_threshold(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_ctrlrelaycfgType radarstate_ctrlrelaycfg = 8;
  if (this->radarstate_ctrlrelaycfg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->radarstate_ctrlrelaycfg(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sendqualitycfgType radarstate_sendqualitycfg = 9;
  if (this->radarstate_sendqualitycfg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->radarstate_sendqualitycfg(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sendextinfocfgType radarstate_sendextinfocfg = 10;
  if (this->radarstate_sendextinfocfg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->radarstate_sendextinfocfg(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_motionrxstateType radarstate_motionrxstate = 11;
  if (this->radarstate_motionrxstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->radarstate_motionrxstate(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sensoridType radarstate_sensorid = 12;
  if (this->radarstate_sensorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->radarstate_sensorid(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_outputtypecfgType radarstate_outputtypecfg = 13;
  if (this->radarstate_outputtypecfg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->radarstate_outputtypecfg(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_radarpowercfgType radarstate_radarpowercfg = 14;
  if (this->radarstate_radarpowercfg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->radarstate_radarpowercfg(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_nvmreadstatusType radarstate_nvmreadstatus = 15;
  if (this->radarstate_nvmreadstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->radarstate_nvmreadstatus(), output);
  }

  // bool radarstate_nvmwritestatus = 16;
  if (this->radarstate_nvmwritestatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->radarstate_nvmwritestatus(), output);
  }

  // double radarstate_maxdistancecfg = 17;
  if (this->radarstate_maxdistancecfg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->radarstate_maxdistancecfg(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Radarstate_201)
}

size_t Radarstate_201::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Radarstate_201)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_interferenceType radarstate_interference = 1;
  if (this->radarstate_interference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_interference());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_voltage_errorType radarstate_voltage_error = 2;
  if (this->radarstate_voltage_error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_voltage_error());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_temporary_errorType radarstate_temporary_error = 3;
  if (this->radarstate_temporary_error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_temporary_error());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_temperature_errorType radarstate_temperature_error = 4;
  if (this->radarstate_temperature_error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_temperature_error());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_persistent_errorType radarstate_persistent_error = 5;
  if (this->radarstate_persistent_error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_persistent_error());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sortindexType radarstate_sortindex = 6;
  if (this->radarstate_sortindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_sortindex());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_rcs_thresholdType radarstate_rcs_threshold = 7;
  if (this->radarstate_rcs_threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_rcs_threshold());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_ctrlrelaycfgType radarstate_ctrlrelaycfg = 8;
  if (this->radarstate_ctrlrelaycfg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_ctrlrelaycfg());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sendqualitycfgType radarstate_sendqualitycfg = 9;
  if (this->radarstate_sendqualitycfg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_sendqualitycfg());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sendextinfocfgType radarstate_sendextinfocfg = 10;
  if (this->radarstate_sendextinfocfg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_sendextinfocfg());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_motionrxstateType radarstate_motionrxstate = 11;
  if (this->radarstate_motionrxstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_motionrxstate());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_sensoridType radarstate_sensorid = 12;
  if (this->radarstate_sensorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_sensorid());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_outputtypecfgType radarstate_outputtypecfg = 13;
  if (this->radarstate_outputtypecfg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_outputtypecfg());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_radarpowercfgType radarstate_radarpowercfg = 14;
  if (this->radarstate_radarpowercfg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_radarpowercfg());
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201.Radarstate_nvmreadstatusType radarstate_nvmreadstatus = 15;
  if (this->radarstate_nvmreadstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarstate_nvmreadstatus());
  }

  // bool radarstate_nvmwritestatus = 16;
  if (this->radarstate_nvmwritestatus() != 0) {
    total_size += 2 + 1;
  }

  // double radarstate_maxdistancecfg = 17;
  if (this->radarstate_maxdistancecfg() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Radarstate_201::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Radarstate_201*>(&from));
}

void Radarstate_201::MergeFrom(const Radarstate_201& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Radarstate_201)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.radarstate_interference() != 0) {
    set_radarstate_interference(from.radarstate_interference());
  }
  if (from.radarstate_voltage_error() != 0) {
    set_radarstate_voltage_error(from.radarstate_voltage_error());
  }
  if (from.radarstate_temporary_error() != 0) {
    set_radarstate_temporary_error(from.radarstate_temporary_error());
  }
  if (from.radarstate_temperature_error() != 0) {
    set_radarstate_temperature_error(from.radarstate_temperature_error());
  }
  if (from.radarstate_persistent_error() != 0) {
    set_radarstate_persistent_error(from.radarstate_persistent_error());
  }
  if (from.radarstate_sortindex() != 0) {
    set_radarstate_sortindex(from.radarstate_sortindex());
  }
  if (from.radarstate_rcs_threshold() != 0) {
    set_radarstate_rcs_threshold(from.radarstate_rcs_threshold());
  }
  if (from.radarstate_ctrlrelaycfg() != 0) {
    set_radarstate_ctrlrelaycfg(from.radarstate_ctrlrelaycfg());
  }
  if (from.radarstate_sendqualitycfg() != 0) {
    set_radarstate_sendqualitycfg(from.radarstate_sendqualitycfg());
  }
  if (from.radarstate_sendextinfocfg() != 0) {
    set_radarstate_sendextinfocfg(from.radarstate_sendextinfocfg());
  }
  if (from.radarstate_motionrxstate() != 0) {
    set_radarstate_motionrxstate(from.radarstate_motionrxstate());
  }
  if (from.radarstate_sensorid() != 0) {
    set_radarstate_sensorid(from.radarstate_sensorid());
  }
  if (from.radarstate_outputtypecfg() != 0) {
    set_radarstate_outputtypecfg(from.radarstate_outputtypecfg());
  }
  if (from.radarstate_radarpowercfg() != 0) {
    set_radarstate_radarpowercfg(from.radarstate_radarpowercfg());
  }
  if (from.radarstate_nvmreadstatus() != 0) {
    set_radarstate_nvmreadstatus(from.radarstate_nvmreadstatus());
  }
  if (from.radarstate_nvmwritestatus() != 0) {
    set_radarstate_nvmwritestatus(from.radarstate_nvmwritestatus());
  }
  if (from.radarstate_maxdistancecfg() != 0) {
    set_radarstate_maxdistancecfg(from.radarstate_maxdistancecfg());
  }
}

void Radarstate_201::CopyFrom(const Radarstate_201& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Radarstate_201)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Radarstate_201::IsInitialized() const {
  return true;
}

void Radarstate_201::Swap(Radarstate_201* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Radarstate_201::InternalSwap(Radarstate_201* other) {
  using std::swap;
  swap(radarstate_interference_, other->radarstate_interference_);
  swap(radarstate_voltage_error_, other->radarstate_voltage_error_);
  swap(radarstate_temporary_error_, other->radarstate_temporary_error_);
  swap(radarstate_temperature_error_, other->radarstate_temperature_error_);
  swap(radarstate_persistent_error_, other->radarstate_persistent_error_);
  swap(radarstate_sortindex_, other->radarstate_sortindex_);
  swap(radarstate_rcs_threshold_, other->radarstate_rcs_threshold_);
  swap(radarstate_ctrlrelaycfg_, other->radarstate_ctrlrelaycfg_);
  swap(radarstate_sendqualitycfg_, other->radarstate_sendqualitycfg_);
  swap(radarstate_sendextinfocfg_, other->radarstate_sendextinfocfg_);
  swap(radarstate_motionrxstate_, other->radarstate_motionrxstate_);
  swap(radarstate_sensorid_, other->radarstate_sensorid_);
  swap(radarstate_outputtypecfg_, other->radarstate_outputtypecfg_);
  swap(radarstate_radarpowercfg_, other->radarstate_radarpowercfg_);
  swap(radarstate_nvmreadstatus_, other->radarstate_nvmreadstatus_);
  swap(radarstate_nvmwritestatus_, other->radarstate_nvmwritestatus_);
  swap(radarstate_maxdistancecfg_, other->radarstate_maxdistancecfg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Radarstate_201::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Radarstate_201";
}


// ===================================================================

void Radarconfiguration_200::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Radarconfiguration_200::kRadarcfgRcsThresholdValidFieldNumber;
const int Radarconfiguration_200::kRadarcfgRcsThresholdFieldNumber;
const int Radarconfiguration_200::kRadarcfgStoreinnvmValidFieldNumber;
const int Radarconfiguration_200::kRadarcfgSortindexValidFieldNumber;
const int Radarconfiguration_200::kRadarcfgSortindexFieldNumber;
const int Radarconfiguration_200::kRadarcfgStoreinnvmFieldNumber;
const int Radarconfiguration_200::kRadarcfgSendextinfoValidFieldNumber;
const int Radarconfiguration_200::kRadarcfgSendextinfoFieldNumber;
const int Radarconfiguration_200::kRadarcfgCtrlrelayValidFieldNumber;
const int Radarconfiguration_200::kRadarcfgCtrlrelayFieldNumber;
const int Radarconfiguration_200::kRadarcfgSendqualityValidFieldNumber;
const int Radarconfiguration_200::kRadarcfgSendqualityFieldNumber;
const int Radarconfiguration_200::kRadarcfgMaxdistanceValidFieldNumber;
const int Radarconfiguration_200::kRadarcfgRadarpowerValidFieldNumber;
const int Radarconfiguration_200::kRadarcfgOutputtypeValidFieldNumber;
const int Radarconfiguration_200::kRadarcfgSensoridValidFieldNumber;
const int Radarconfiguration_200::kRadarcfgMaxdistanceFieldNumber;
const int Radarconfiguration_200::kRadarcfgRadarpowerFieldNumber;
const int Radarconfiguration_200::kRadarcfgOutputtypeFieldNumber;
const int Radarconfiguration_200::kRadarcfgSensoridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Radarconfiguration_200::Radarconfiguration_200()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Radarconfiguration_200.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
}
Radarconfiguration_200::Radarconfiguration_200(const Radarconfiguration_200& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&radarcfg_rcs_threshold_valid_, &from.radarcfg_rcs_threshold_valid_,
    static_cast<size_t>(reinterpret_cast<char*>(&radarcfg_sensorid_) -
    reinterpret_cast<char*>(&radarcfg_rcs_threshold_valid_)) + sizeof(radarcfg_sensorid_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
}

void Radarconfiguration_200::SharedCtor() {
  ::memset(&radarcfg_rcs_threshold_valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radarcfg_sensorid_) -
      reinterpret_cast<char*>(&radarcfg_rcs_threshold_valid_)) + sizeof(radarcfg_sensorid_));
}

Radarconfiguration_200::~Radarconfiguration_200() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
  SharedDtor();
}

void Radarconfiguration_200::SharedDtor() {
}

void Radarconfiguration_200::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Radarconfiguration_200& Radarconfiguration_200::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Radarconfiguration_200.base);
  return *internal_default_instance();
}


void Radarconfiguration_200::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&radarcfg_rcs_threshold_valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radarcfg_sensorid_) -
      reinterpret_cast<char*>(&radarcfg_rcs_threshold_valid_)) + sizeof(radarcfg_sensorid_));
  _internal_metadata_.Clear();
}

bool Radarconfiguration_200::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_rcs_threshold_validType radarcfg_rcs_threshold_valid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_rcs_threshold_valid(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_rcs_threshold_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_rcs_thresholdType radarcfg_rcs_threshold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_rcs_threshold(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_rcs_thresholdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_storeinnvm_validType radarcfg_storeinnvm_valid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_storeinnvm_valid(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_storeinnvm_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sortindex_validType radarcfg_sortindex_valid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_sortindex_valid(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_sortindex_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sortindexType radarcfg_sortindex = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_sortindex(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_sortindexType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_storeinnvmType radarcfg_storeinnvm = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_storeinnvm(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_storeinnvmType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendextinfo_validType radarcfg_sendextinfo_valid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_sendextinfo_valid(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_sendextinfo_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendextinfoType radarcfg_sendextinfo = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_sendextinfo(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_sendextinfoType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_ctrlrelay_validType radarcfg_ctrlrelay_valid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_ctrlrelay_valid(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_ctrlrelay_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_ctrlrelayType radarcfg_ctrlrelay = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_ctrlrelay(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_ctrlrelayType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendquality_validType radarcfg_sendquality_valid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_sendquality_valid(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_sendquality_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendqualityType radarcfg_sendquality = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_sendquality(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_sendqualityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_maxdistance_validType radarcfg_maxdistance_valid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_maxdistance_valid(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_maxdistance_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_radarpower_validType radarcfg_radarpower_valid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_radarpower_valid(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_radarpower_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_outputtype_validType radarcfg_outputtype_valid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_outputtype_valid(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_outputtype_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sensorid_validType radarcfg_sensorid_valid = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_sensorid_valid(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_sensorid_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double radarcfg_maxdistance = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &radarcfg_maxdistance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_radarpowerType radarcfg_radarpower = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_radarpower(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_radarpowerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_outputtypeType radarcfg_outputtype = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radarcfg_outputtype(static_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200_Radarcfg_outputtypeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 radarcfg_sensorid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &radarcfg_sensorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
  return false;
#undef DO_
}

void Radarconfiguration_200::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_rcs_threshold_validType radarcfg_rcs_threshold_valid = 1;
  if (this->radarcfg_rcs_threshold_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->radarcfg_rcs_threshold_valid(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_rcs_thresholdType radarcfg_rcs_threshold = 2;
  if (this->radarcfg_rcs_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->radarcfg_rcs_threshold(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_storeinnvm_validType radarcfg_storeinnvm_valid = 3;
  if (this->radarcfg_storeinnvm_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->radarcfg_storeinnvm_valid(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sortindex_validType radarcfg_sortindex_valid = 4;
  if (this->radarcfg_sortindex_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->radarcfg_sortindex_valid(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sortindexType radarcfg_sortindex = 5;
  if (this->radarcfg_sortindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->radarcfg_sortindex(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_storeinnvmType radarcfg_storeinnvm = 6;
  if (this->radarcfg_storeinnvm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->radarcfg_storeinnvm(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendextinfo_validType radarcfg_sendextinfo_valid = 7;
  if (this->radarcfg_sendextinfo_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->radarcfg_sendextinfo_valid(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendextinfoType radarcfg_sendextinfo = 8;
  if (this->radarcfg_sendextinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->radarcfg_sendextinfo(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_ctrlrelay_validType radarcfg_ctrlrelay_valid = 9;
  if (this->radarcfg_ctrlrelay_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->radarcfg_ctrlrelay_valid(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_ctrlrelayType radarcfg_ctrlrelay = 10;
  if (this->radarcfg_ctrlrelay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->radarcfg_ctrlrelay(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendquality_validType radarcfg_sendquality_valid = 11;
  if (this->radarcfg_sendquality_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->radarcfg_sendquality_valid(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendqualityType radarcfg_sendquality = 12;
  if (this->radarcfg_sendquality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->radarcfg_sendquality(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_maxdistance_validType radarcfg_maxdistance_valid = 13;
  if (this->radarcfg_maxdistance_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->radarcfg_maxdistance_valid(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_radarpower_validType radarcfg_radarpower_valid = 14;
  if (this->radarcfg_radarpower_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->radarcfg_radarpower_valid(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_outputtype_validType radarcfg_outputtype_valid = 15;
  if (this->radarcfg_outputtype_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->radarcfg_outputtype_valid(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sensorid_validType radarcfg_sensorid_valid = 16;
  if (this->radarcfg_sensorid_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->radarcfg_sensorid_valid(), output);
  }

  // double radarcfg_maxdistance = 17;
  if (this->radarcfg_maxdistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->radarcfg_maxdistance(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_radarpowerType radarcfg_radarpower = 18;
  if (this->radarcfg_radarpower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      18, this->radarcfg_radarpower(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_outputtypeType radarcfg_outputtype = 19;
  if (this->radarcfg_outputtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      19, this->radarcfg_outputtype(), output);
  }

  // int32 radarcfg_sensorid = 20;
  if (this->radarcfg_sensorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->radarcfg_sensorid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
}

size_t Radarconfiguration_200::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_rcs_threshold_validType radarcfg_rcs_threshold_valid = 1;
  if (this->radarcfg_rcs_threshold_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_rcs_threshold_valid());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_rcs_thresholdType radarcfg_rcs_threshold = 2;
  if (this->radarcfg_rcs_threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_rcs_threshold());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_storeinnvm_validType radarcfg_storeinnvm_valid = 3;
  if (this->radarcfg_storeinnvm_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_storeinnvm_valid());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sortindex_validType radarcfg_sortindex_valid = 4;
  if (this->radarcfg_sortindex_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_sortindex_valid());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sortindexType radarcfg_sortindex = 5;
  if (this->radarcfg_sortindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_sortindex());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_storeinnvmType radarcfg_storeinnvm = 6;
  if (this->radarcfg_storeinnvm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_storeinnvm());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendextinfo_validType radarcfg_sendextinfo_valid = 7;
  if (this->radarcfg_sendextinfo_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_sendextinfo_valid());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendextinfoType radarcfg_sendextinfo = 8;
  if (this->radarcfg_sendextinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_sendextinfo());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_ctrlrelay_validType radarcfg_ctrlrelay_valid = 9;
  if (this->radarcfg_ctrlrelay_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_ctrlrelay_valid());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_ctrlrelayType radarcfg_ctrlrelay = 10;
  if (this->radarcfg_ctrlrelay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_ctrlrelay());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendquality_validType radarcfg_sendquality_valid = 11;
  if (this->radarcfg_sendquality_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_sendquality_valid());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sendqualityType radarcfg_sendquality = 12;
  if (this->radarcfg_sendquality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_sendquality());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_maxdistance_validType radarcfg_maxdistance_valid = 13;
  if (this->radarcfg_maxdistance_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_maxdistance_valid());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_radarpower_validType radarcfg_radarpower_valid = 14;
  if (this->radarcfg_radarpower_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_radarpower_valid());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_outputtype_validType radarcfg_outputtype_valid = 15;
  if (this->radarcfg_outputtype_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_outputtype_valid());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_sensorid_validType radarcfg_sensorid_valid = 16;
  if (this->radarcfg_sensorid_valid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_sensorid_valid());
  }

  // double radarcfg_maxdistance = 17;
  if (this->radarcfg_maxdistance() != 0) {
    total_size += 2 + 8;
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_radarpowerType radarcfg_radarpower = 18;
  if (this->radarcfg_radarpower() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_radarpower());
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200.Radarcfg_outputtypeType radarcfg_outputtype = 19;
  if (this->radarcfg_outputtype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radarcfg_outputtype());
  }

  // int32 radarcfg_sensorid = 20;
  if (this->radarcfg_sensorid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->radarcfg_sensorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Radarconfiguration_200::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Radarconfiguration_200*>(&from));
}

void Radarconfiguration_200::MergeFrom(const Radarconfiguration_200& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.radarcfg_rcs_threshold_valid() != 0) {
    set_radarcfg_rcs_threshold_valid(from.radarcfg_rcs_threshold_valid());
  }
  if (from.radarcfg_rcs_threshold() != 0) {
    set_radarcfg_rcs_threshold(from.radarcfg_rcs_threshold());
  }
  if (from.radarcfg_storeinnvm_valid() != 0) {
    set_radarcfg_storeinnvm_valid(from.radarcfg_storeinnvm_valid());
  }
  if (from.radarcfg_sortindex_valid() != 0) {
    set_radarcfg_sortindex_valid(from.radarcfg_sortindex_valid());
  }
  if (from.radarcfg_sortindex() != 0) {
    set_radarcfg_sortindex(from.radarcfg_sortindex());
  }
  if (from.radarcfg_storeinnvm() != 0) {
    set_radarcfg_storeinnvm(from.radarcfg_storeinnvm());
  }
  if (from.radarcfg_sendextinfo_valid() != 0) {
    set_radarcfg_sendextinfo_valid(from.radarcfg_sendextinfo_valid());
  }
  if (from.radarcfg_sendextinfo() != 0) {
    set_radarcfg_sendextinfo(from.radarcfg_sendextinfo());
  }
  if (from.radarcfg_ctrlrelay_valid() != 0) {
    set_radarcfg_ctrlrelay_valid(from.radarcfg_ctrlrelay_valid());
  }
  if (from.radarcfg_ctrlrelay() != 0) {
    set_radarcfg_ctrlrelay(from.radarcfg_ctrlrelay());
  }
  if (from.radarcfg_sendquality_valid() != 0) {
    set_radarcfg_sendquality_valid(from.radarcfg_sendquality_valid());
  }
  if (from.radarcfg_sendquality() != 0) {
    set_radarcfg_sendquality(from.radarcfg_sendquality());
  }
  if (from.radarcfg_maxdistance_valid() != 0) {
    set_radarcfg_maxdistance_valid(from.radarcfg_maxdistance_valid());
  }
  if (from.radarcfg_radarpower_valid() != 0) {
    set_radarcfg_radarpower_valid(from.radarcfg_radarpower_valid());
  }
  if (from.radarcfg_outputtype_valid() != 0) {
    set_radarcfg_outputtype_valid(from.radarcfg_outputtype_valid());
  }
  if (from.radarcfg_sensorid_valid() != 0) {
    set_radarcfg_sensorid_valid(from.radarcfg_sensorid_valid());
  }
  if (from.radarcfg_maxdistance() != 0) {
    set_radarcfg_maxdistance(from.radarcfg_maxdistance());
  }
  if (from.radarcfg_radarpower() != 0) {
    set_radarcfg_radarpower(from.radarcfg_radarpower());
  }
  if (from.radarcfg_outputtype() != 0) {
    set_radarcfg_outputtype(from.radarcfg_outputtype());
  }
  if (from.radarcfg_sensorid() != 0) {
    set_radarcfg_sensorid(from.radarcfg_sensorid());
  }
}

void Radarconfiguration_200::CopyFrom(const Radarconfiguration_200& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Radarconfiguration_200)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Radarconfiguration_200::IsInitialized() const {
  return true;
}

void Radarconfiguration_200::Swap(Radarconfiguration_200* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Radarconfiguration_200::InternalSwap(Radarconfiguration_200* other) {
  using std::swap;
  swap(radarcfg_rcs_threshold_valid_, other->radarcfg_rcs_threshold_valid_);
  swap(radarcfg_rcs_threshold_, other->radarcfg_rcs_threshold_);
  swap(radarcfg_storeinnvm_valid_, other->radarcfg_storeinnvm_valid_);
  swap(radarcfg_sortindex_valid_, other->radarcfg_sortindex_valid_);
  swap(radarcfg_sortindex_, other->radarcfg_sortindex_);
  swap(radarcfg_storeinnvm_, other->radarcfg_storeinnvm_);
  swap(radarcfg_sendextinfo_valid_, other->radarcfg_sendextinfo_valid_);
  swap(radarcfg_sendextinfo_, other->radarcfg_sendextinfo_);
  swap(radarcfg_ctrlrelay_valid_, other->radarcfg_ctrlrelay_valid_);
  swap(radarcfg_ctrlrelay_, other->radarcfg_ctrlrelay_);
  swap(radarcfg_sendquality_valid_, other->radarcfg_sendquality_valid_);
  swap(radarcfg_sendquality_, other->radarcfg_sendquality_);
  swap(radarcfg_maxdistance_valid_, other->radarcfg_maxdistance_valid_);
  swap(radarcfg_radarpower_valid_, other->radarcfg_radarpower_valid_);
  swap(radarcfg_outputtype_valid_, other->radarcfg_outputtype_valid_);
  swap(radarcfg_sensorid_valid_, other->radarcfg_sensorid_valid_);
  swap(radarcfg_maxdistance_, other->radarcfg_maxdistance_);
  swap(radarcfg_radarpower_, other->radarcfg_radarpower_);
  swap(radarcfg_outputtype_, other->radarcfg_outputtype_);
  swap(radarcfg_sensorid_, other->radarcfg_sensorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Radarconfiguration_200::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Radarconfiguration_200";
}


// ===================================================================

void Filterstate_header_203::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Filterstate_header_203::kFilterstateNofobjectfiltercfgFieldNumber;
const int Filterstate_header_203::kFilterstateNofclusterfiltercfgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Filterstate_header_203::Filterstate_header_203()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Filterstate_header_203.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Filterstate_header_203)
}
Filterstate_header_203::Filterstate_header_203(const Filterstate_header_203& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&filterstate_nofobjectfiltercfg_, &from.filterstate_nofobjectfiltercfg_,
    static_cast<size_t>(reinterpret_cast<char*>(&filterstate_nofclusterfiltercfg_) -
    reinterpret_cast<char*>(&filterstate_nofobjectfiltercfg_)) + sizeof(filterstate_nofclusterfiltercfg_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Filterstate_header_203)
}

void Filterstate_header_203::SharedCtor() {
  ::memset(&filterstate_nofobjectfiltercfg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filterstate_nofclusterfiltercfg_) -
      reinterpret_cast<char*>(&filterstate_nofobjectfiltercfg_)) + sizeof(filterstate_nofclusterfiltercfg_));
}

Filterstate_header_203::~Filterstate_header_203() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Filterstate_header_203)
  SharedDtor();
}

void Filterstate_header_203::SharedDtor() {
}

void Filterstate_header_203::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Filterstate_header_203& Filterstate_header_203::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Filterstate_header_203.base);
  return *internal_default_instance();
}


void Filterstate_header_203::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Filterstate_header_203)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&filterstate_nofobjectfiltercfg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filterstate_nofclusterfiltercfg_) -
      reinterpret_cast<char*>(&filterstate_nofobjectfiltercfg_)) + sizeof(filterstate_nofclusterfiltercfg_));
  _internal_metadata_.Clear();
}

bool Filterstate_header_203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Filterstate_header_203)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 filterstate_nofobjectfiltercfg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filterstate_nofobjectfiltercfg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 filterstate_nofclusterfiltercfg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filterstate_nofclusterfiltercfg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Filterstate_header_203)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Filterstate_header_203)
  return false;
#undef DO_
}

void Filterstate_header_203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Filterstate_header_203)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 filterstate_nofobjectfiltercfg = 1;
  if (this->filterstate_nofobjectfiltercfg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->filterstate_nofobjectfiltercfg(), output);
  }

  // int32 filterstate_nofclusterfiltercfg = 2;
  if (this->filterstate_nofclusterfiltercfg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->filterstate_nofclusterfiltercfg(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Filterstate_header_203)
}

size_t Filterstate_header_203::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Filterstate_header_203)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 filterstate_nofobjectfiltercfg = 1;
  if (this->filterstate_nofobjectfiltercfg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filterstate_nofobjectfiltercfg());
  }

  // int32 filterstate_nofclusterfiltercfg = 2;
  if (this->filterstate_nofclusterfiltercfg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filterstate_nofclusterfiltercfg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Filterstate_header_203::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Filterstate_header_203*>(&from));
}

void Filterstate_header_203::MergeFrom(const Filterstate_header_203& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Filterstate_header_203)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filterstate_nofobjectfiltercfg() != 0) {
    set_filterstate_nofobjectfiltercfg(from.filterstate_nofobjectfiltercfg());
  }
  if (from.filterstate_nofclusterfiltercfg() != 0) {
    set_filterstate_nofclusterfiltercfg(from.filterstate_nofclusterfiltercfg());
  }
}

void Filterstate_header_203::CopyFrom(const Filterstate_header_203& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Filterstate_header_203)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Filterstate_header_203::IsInitialized() const {
  return true;
}

void Filterstate_header_203::Swap(Filterstate_header_203* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Filterstate_header_203::InternalSwap(Filterstate_header_203* other) {
  using std::swap;
  swap(filterstate_nofobjectfiltercfg_, other->filterstate_nofobjectfiltercfg_);
  swap(filterstate_nofclusterfiltercfg_, other->filterstate_nofclusterfiltercfg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Filterstate_header_203::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Filterstate_header_203";
}


// ===================================================================

void Filtercfg_202::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Filtercfg_202::kFiltercfgValidFieldNumber;
const int Filtercfg_202::kFiltercfgActiveFieldNumber;
const int Filtercfg_202::kFiltercfgTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Filtercfg_202::Filtercfg_202()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Filtercfg_202.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Filtercfg_202)
}
Filtercfg_202::Filtercfg_202(const Filtercfg_202& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&filtercfg_valid_, &from.filtercfg_valid_,
    static_cast<size_t>(reinterpret_cast<char*>(&filtercfg_type_) -
    reinterpret_cast<char*>(&filtercfg_valid_)) + sizeof(filtercfg_type_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Filtercfg_202)
}

void Filtercfg_202::SharedCtor() {
  ::memset(&filtercfg_valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filtercfg_type_) -
      reinterpret_cast<char*>(&filtercfg_valid_)) + sizeof(filtercfg_type_));
}

Filtercfg_202::~Filtercfg_202() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Filtercfg_202)
  SharedDtor();
}

void Filtercfg_202::SharedDtor() {
}

void Filtercfg_202::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Filtercfg_202& Filtercfg_202::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Filtercfg_202.base);
  return *internal_default_instance();
}


void Filtercfg_202::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Filtercfg_202)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&filtercfg_valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filtercfg_type_) -
      reinterpret_cast<char*>(&filtercfg_valid_)) + sizeof(filtercfg_type_));
  _internal_metadata_.Clear();
}

bool Filtercfg_202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Filtercfg_202)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Filtercfg_202.Filtercfg_validType filtercfg_valid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_filtercfg_valid(static_cast< ::Calmcar::drivers::F_RADAR::Filtercfg_202_Filtercfg_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Filtercfg_202.Filtercfg_activeType filtercfg_active = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_filtercfg_active(static_cast< ::Calmcar::drivers::F_RADAR::Filtercfg_202_Filtercfg_activeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Filtercfg_202.Filtercfg_typeType filtercfg_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_filtercfg_type(static_cast< ::Calmcar::drivers::F_RADAR::Filtercfg_202_Filtercfg_typeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Filtercfg_202)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Filtercfg_202)
  return false;
#undef DO_
}

void Filtercfg_202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Filtercfg_202)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Filtercfg_202.Filtercfg_validType filtercfg_valid = 1;
  if (this->filtercfg_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->filtercfg_valid(), output);
  }

  // .Calmcar.drivers.F_RADAR.Filtercfg_202.Filtercfg_activeType filtercfg_active = 2;
  if (this->filtercfg_active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->filtercfg_active(), output);
  }

  // .Calmcar.drivers.F_RADAR.Filtercfg_202.Filtercfg_typeType filtercfg_type = 3;
  if (this->filtercfg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->filtercfg_type(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Filtercfg_202)
}

size_t Filtercfg_202::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Filtercfg_202)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.F_RADAR.Filtercfg_202.Filtercfg_validType filtercfg_valid = 1;
  if (this->filtercfg_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->filtercfg_valid());
  }

  // .Calmcar.drivers.F_RADAR.Filtercfg_202.Filtercfg_activeType filtercfg_active = 2;
  if (this->filtercfg_active() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->filtercfg_active());
  }

  // .Calmcar.drivers.F_RADAR.Filtercfg_202.Filtercfg_typeType filtercfg_type = 3;
  if (this->filtercfg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->filtercfg_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Filtercfg_202::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Filtercfg_202*>(&from));
}

void Filtercfg_202::MergeFrom(const Filtercfg_202& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Filtercfg_202)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filtercfg_valid() != 0) {
    set_filtercfg_valid(from.filtercfg_valid());
  }
  if (from.filtercfg_active() != 0) {
    set_filtercfg_active(from.filtercfg_active());
  }
  if (from.filtercfg_type() != 0) {
    set_filtercfg_type(from.filtercfg_type());
  }
}

void Filtercfg_202::CopyFrom(const Filtercfg_202& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Filtercfg_202)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Filtercfg_202::IsInitialized() const {
  return true;
}

void Filtercfg_202::Swap(Filtercfg_202* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Filtercfg_202::InternalSwap(Filtercfg_202* other) {
  using std::swap;
  swap(filtercfg_valid_, other->filtercfg_valid_);
  swap(filtercfg_active_, other->filtercfg_active_);
  swap(filtercfg_type_, other->filtercfg_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Filtercfg_202::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Filtercfg_202";
}


// ===================================================================

void Filterstate_cfg_204::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Filterstate_cfg_204::kFilterstateTypeFieldNumber;
const int Filterstate_cfg_204::kFilterstateActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Filterstate_cfg_204::Filterstate_cfg_204()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Filterstate_cfg_204.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
}
Filterstate_cfg_204::Filterstate_cfg_204(const Filterstate_cfg_204& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&filterstate_type_, &from.filterstate_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&filterstate_active_) -
    reinterpret_cast<char*>(&filterstate_type_)) + sizeof(filterstate_active_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
}

void Filterstate_cfg_204::SharedCtor() {
  ::memset(&filterstate_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filterstate_active_) -
      reinterpret_cast<char*>(&filterstate_type_)) + sizeof(filterstate_active_));
}

Filterstate_cfg_204::~Filterstate_cfg_204() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
  SharedDtor();
}

void Filterstate_cfg_204::SharedDtor() {
}

void Filterstate_cfg_204::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Filterstate_cfg_204& Filterstate_cfg_204::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Filterstate_cfg_204.base);
  return *internal_default_instance();
}


void Filterstate_cfg_204::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&filterstate_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filterstate_active_) -
      reinterpret_cast<char*>(&filterstate_type_)) + sizeof(filterstate_active_));
  _internal_metadata_.Clear();
}

bool Filterstate_cfg_204::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Filterstate_cfg_204.Filterstate_typeType filterstate_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_filterstate_type(static_cast< ::Calmcar::drivers::F_RADAR::Filterstate_cfg_204_Filterstate_typeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Filterstate_cfg_204.Filterstate_activeType filterstate_active = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_filterstate_active(static_cast< ::Calmcar::drivers::F_RADAR::Filterstate_cfg_204_Filterstate_activeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
  return false;
#undef DO_
}

void Filterstate_cfg_204::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Filterstate_cfg_204.Filterstate_typeType filterstate_type = 1;
  if (this->filterstate_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->filterstate_type(), output);
  }

  // .Calmcar.drivers.F_RADAR.Filterstate_cfg_204.Filterstate_activeType filterstate_active = 2;
  if (this->filterstate_active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->filterstate_active(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
}

size_t Filterstate_cfg_204::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.F_RADAR.Filterstate_cfg_204.Filterstate_typeType filterstate_type = 1;
  if (this->filterstate_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->filterstate_type());
  }

  // .Calmcar.drivers.F_RADAR.Filterstate_cfg_204.Filterstate_activeType filterstate_active = 2;
  if (this->filterstate_active() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->filterstate_active());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Filterstate_cfg_204::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Filterstate_cfg_204*>(&from));
}

void Filterstate_cfg_204::MergeFrom(const Filterstate_cfg_204& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filterstate_type() != 0) {
    set_filterstate_type(from.filterstate_type());
  }
  if (from.filterstate_active() != 0) {
    set_filterstate_active(from.filterstate_active());
  }
}

void Filterstate_cfg_204::CopyFrom(const Filterstate_cfg_204& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Filterstate_cfg_204)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Filterstate_cfg_204::IsInitialized() const {
  return true;
}

void Filterstate_cfg_204::Swap(Filterstate_cfg_204* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Filterstate_cfg_204::InternalSwap(Filterstate_cfg_204* other) {
  using std::swap;
  swap(filterstate_type_, other->filterstate_type_);
  swap(filterstate_active_, other->filterstate_active_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Filterstate_cfg_204::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Filterstate_cfg_204";
}


// ===================================================================

void Speedinformation_300::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Speedinformation_300::kRadardeviceSpeedFieldNumber;
const int Speedinformation_300::kRadardeviceSpeeddirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Speedinformation_300::Speedinformation_300()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Speedinformation_300.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Speedinformation_300)
}
Speedinformation_300::Speedinformation_300(const Speedinformation_300& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&radardevice_speed_, &from.radardevice_speed_,
    static_cast<size_t>(reinterpret_cast<char*>(&radardevice_speeddirection_) -
    reinterpret_cast<char*>(&radardevice_speed_)) + sizeof(radardevice_speeddirection_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Speedinformation_300)
}

void Speedinformation_300::SharedCtor() {
  ::memset(&radardevice_speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radardevice_speeddirection_) -
      reinterpret_cast<char*>(&radardevice_speed_)) + sizeof(radardevice_speeddirection_));
}

Speedinformation_300::~Speedinformation_300() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Speedinformation_300)
  SharedDtor();
}

void Speedinformation_300::SharedDtor() {
}

void Speedinformation_300::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Speedinformation_300& Speedinformation_300::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Speedinformation_300.base);
  return *internal_default_instance();
}


void Speedinformation_300::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Speedinformation_300)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&radardevice_speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radardevice_speeddirection_) -
      reinterpret_cast<char*>(&radardevice_speed_)) + sizeof(radardevice_speeddirection_));
  _internal_metadata_.Clear();
}

bool Speedinformation_300::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Speedinformation_300)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double radardevice_speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &radardevice_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Speedinformation_300.Radardevice_speeddirectionType radardevice_speeddirection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_radardevice_speeddirection(static_cast< ::Calmcar::drivers::F_RADAR::Speedinformation_300_Radardevice_speeddirectionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Speedinformation_300)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Speedinformation_300)
  return false;
#undef DO_
}

void Speedinformation_300::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Speedinformation_300)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double radardevice_speed = 1;
  if (this->radardevice_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->radardevice_speed(), output);
  }

  // .Calmcar.drivers.F_RADAR.Speedinformation_300.Radardevice_speeddirectionType radardevice_speeddirection = 2;
  if (this->radardevice_speeddirection() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->radardevice_speeddirection(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Speedinformation_300)
}

size_t Speedinformation_300::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Speedinformation_300)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double radardevice_speed = 1;
  if (this->radardevice_speed() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.F_RADAR.Speedinformation_300.Radardevice_speeddirectionType radardevice_speeddirection = 2;
  if (this->radardevice_speeddirection() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->radardevice_speeddirection());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Speedinformation_300::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Speedinformation_300*>(&from));
}

void Speedinformation_300::MergeFrom(const Speedinformation_300& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Speedinformation_300)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.radardevice_speed() != 0) {
    set_radardevice_speed(from.radardevice_speed());
  }
  if (from.radardevice_speeddirection() != 0) {
    set_radardevice_speeddirection(from.radardevice_speeddirection());
  }
}

void Speedinformation_300::CopyFrom(const Speedinformation_300& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Speedinformation_300)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Speedinformation_300::IsInitialized() const {
  return true;
}

void Speedinformation_300::Swap(Speedinformation_300* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Speedinformation_300::InternalSwap(Speedinformation_300* other) {
  using std::swap;
  swap(radardevice_speed_, other->radardevice_speed_);
  swap(radardevice_speeddirection_, other->radardevice_speeddirection_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Speedinformation_300::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Speedinformation_300";
}


// ===================================================================

void Yawrateinformation_301::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Yawrateinformation_301::kRadardeviceYawrateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Yawrateinformation_301::Yawrateinformation_301()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Yawrateinformation_301.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
}
Yawrateinformation_301::Yawrateinformation_301(const Yawrateinformation_301& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  radardevice_yawrate_ = from.radardevice_yawrate_;
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
}

void Yawrateinformation_301::SharedCtor() {
  radardevice_yawrate_ = 0;
}

Yawrateinformation_301::~Yawrateinformation_301() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
  SharedDtor();
}

void Yawrateinformation_301::SharedDtor() {
}

void Yawrateinformation_301::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Yawrateinformation_301& Yawrateinformation_301::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Yawrateinformation_301.base);
  return *internal_default_instance();
}


void Yawrateinformation_301::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  radardevice_yawrate_ = 0;
  _internal_metadata_.Clear();
}

bool Yawrateinformation_301::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double radardevice_yawrate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &radardevice_yawrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
  return false;
#undef DO_
}

void Yawrateinformation_301::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double radardevice_yawrate = 1;
  if (this->radardevice_yawrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->radardevice_yawrate(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
}

size_t Yawrateinformation_301::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double radardevice_yawrate = 1;
  if (this->radardevice_yawrate() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Yawrateinformation_301::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Yawrateinformation_301*>(&from));
}

void Yawrateinformation_301::MergeFrom(const Yawrateinformation_301& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.radardevice_yawrate() != 0) {
    set_radardevice_yawrate(from.radardevice_yawrate());
  }
}

void Yawrateinformation_301::CopyFrom(const Yawrateinformation_301& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Yawrateinformation_301)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Yawrateinformation_301::IsInitialized() const {
  return true;
}

void Yawrateinformation_301::Swap(Yawrateinformation_301* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Yawrateinformation_301::InternalSwap(Yawrateinformation_301* other) {
  using std::swap;
  swap(radardevice_yawrate_, other->radardevice_yawrate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Yawrateinformation_301::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Yawrateinformation_301";
}


// ===================================================================

void Versionid_700::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Versionid_700::kVersionCountrycodeFieldNumber;
const int Versionid_700::kVersionExtendedrangeFieldNumber;
const int Versionid_700::kVersionMajorreleaseFieldNumber;
const int Versionid_700::kVersionMinorreleaseFieldNumber;
const int Versionid_700::kVersionPatchlevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Versionid_700::Versionid_700()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Versionid_700.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Versionid_700)
}
Versionid_700::Versionid_700(const Versionid_700& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_countrycode_, &from.version_countrycode_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_patchlevel_) -
    reinterpret_cast<char*>(&version_countrycode_)) + sizeof(version_patchlevel_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Versionid_700)
}

void Versionid_700::SharedCtor() {
  ::memset(&version_countrycode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_patchlevel_) -
      reinterpret_cast<char*>(&version_countrycode_)) + sizeof(version_patchlevel_));
}

Versionid_700::~Versionid_700() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Versionid_700)
  SharedDtor();
}

void Versionid_700::SharedDtor() {
}

void Versionid_700::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Versionid_700& Versionid_700::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Versionid_700.base);
  return *internal_default_instance();
}


void Versionid_700::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Versionid_700)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&version_countrycode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_patchlevel_) -
      reinterpret_cast<char*>(&version_countrycode_)) + sizeof(version_patchlevel_));
  _internal_metadata_.Clear();
}

bool Versionid_700::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Versionid_700)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Versionid_700.Version_countrycodeType version_countrycode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_version_countrycode(static_cast< ::Calmcar::drivers::F_RADAR::Versionid_700_Version_countrycodeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Versionid_700.Version_extendedrangeType version_extendedrange = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_version_extendedrange(static_cast< ::Calmcar::drivers::F_RADAR::Versionid_700_Version_extendedrangeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version_majorrelease = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_majorrelease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version_minorrelease = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_minorrelease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version_patchlevel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_patchlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Versionid_700)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Versionid_700)
  return false;
#undef DO_
}

void Versionid_700::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Versionid_700)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Versionid_700.Version_countrycodeType version_countrycode = 1;
  if (this->version_countrycode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->version_countrycode(), output);
  }

  // .Calmcar.drivers.F_RADAR.Versionid_700.Version_extendedrangeType version_extendedrange = 2;
  if (this->version_extendedrange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->version_extendedrange(), output);
  }

  // int32 version_majorrelease = 3;
  if (this->version_majorrelease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->version_majorrelease(), output);
  }

  // int32 version_minorrelease = 4;
  if (this->version_minorrelease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->version_minorrelease(), output);
  }

  // int32 version_patchlevel = 5;
  if (this->version_patchlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->version_patchlevel(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Versionid_700)
}

size_t Versionid_700::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Versionid_700)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.F_RADAR.Versionid_700.Version_countrycodeType version_countrycode = 1;
  if (this->version_countrycode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->version_countrycode());
  }

  // .Calmcar.drivers.F_RADAR.Versionid_700.Version_extendedrangeType version_extendedrange = 2;
  if (this->version_extendedrange() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->version_extendedrange());
  }

  // int32 version_majorrelease = 3;
  if (this->version_majorrelease() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version_majorrelease());
  }

  // int32 version_minorrelease = 4;
  if (this->version_minorrelease() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version_minorrelease());
  }

  // int32 version_patchlevel = 5;
  if (this->version_patchlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version_patchlevel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Versionid_700::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Versionid_700*>(&from));
}

void Versionid_700::MergeFrom(const Versionid_700& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Versionid_700)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version_countrycode() != 0) {
    set_version_countrycode(from.version_countrycode());
  }
  if (from.version_extendedrange() != 0) {
    set_version_extendedrange(from.version_extendedrange());
  }
  if (from.version_majorrelease() != 0) {
    set_version_majorrelease(from.version_majorrelease());
  }
  if (from.version_minorrelease() != 0) {
    set_version_minorrelease(from.version_minorrelease());
  }
  if (from.version_patchlevel() != 0) {
    set_version_patchlevel(from.version_patchlevel());
  }
}

void Versionid_700::CopyFrom(const Versionid_700& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Versionid_700)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Versionid_700::IsInitialized() const {
  return true;
}

void Versionid_700::Swap(Versionid_700* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Versionid_700::InternalSwap(Versionid_700* other) {
  using std::swap;
  swap(version_countrycode_, other->version_countrycode_);
  swap(version_extendedrange_, other->version_extendedrange_);
  swap(version_majorrelease_, other->version_majorrelease_);
  swap(version_minorrelease_, other->version_minorrelease_);
  swap(version_patchlevel_, other->version_patchlevel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Versionid_700::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Versionid_700";
}


// ===================================================================

void Cluster_1_general_701::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cluster_1_general_701::kClusterDynpropFieldNumber;
const int Cluster_1_general_701::kClusterVrellatFieldNumber;
const int Cluster_1_general_701::kClusterRcsFieldNumber;
const int Cluster_1_general_701::kClusterDistlongFieldNumber;
const int Cluster_1_general_701::kClusterIdFieldNumber;
const int Cluster_1_general_701::kClusterVrellongFieldNumber;
const int Cluster_1_general_701::kClusterDistlatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cluster_1_general_701::Cluster_1_general_701()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Cluster_1_general_701.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
}
Cluster_1_general_701::Cluster_1_general_701(const Cluster_1_general_701& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cluster_vrellat_, &from.cluster_vrellat_,
    static_cast<size_t>(reinterpret_cast<char*>(&cluster_distlat_) -
    reinterpret_cast<char*>(&cluster_vrellat_)) + sizeof(cluster_distlat_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
}

void Cluster_1_general_701::SharedCtor() {
  ::memset(&cluster_vrellat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cluster_distlat_) -
      reinterpret_cast<char*>(&cluster_vrellat_)) + sizeof(cluster_distlat_));
}

Cluster_1_general_701::~Cluster_1_general_701() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
  SharedDtor();
}

void Cluster_1_general_701::SharedDtor() {
}

void Cluster_1_general_701::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cluster_1_general_701& Cluster_1_general_701::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Cluster_1_general_701.base);
  return *internal_default_instance();
}


void Cluster_1_general_701::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cluster_vrellat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cluster_distlat_) -
      reinterpret_cast<char*>(&cluster_vrellat_)) + sizeof(cluster_distlat_));
  _internal_metadata_.Clear();
}

bool Cluster_1_general_701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Cluster_1_general_701.Cluster_dynpropType cluster_dynprop = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cluster_dynprop(static_cast< ::Calmcar::drivers::F_RADAR::Cluster_1_general_701_Cluster_dynpropType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cluster_vrellat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cluster_vrellat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cluster_rcs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cluster_rcs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cluster_distlong = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cluster_distlong_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cluster_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cluster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cluster_vrellong = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cluster_vrellong_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cluster_distlat = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cluster_distlat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
  return false;
#undef DO_
}

void Cluster_1_general_701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Cluster_1_general_701.Cluster_dynpropType cluster_dynprop = 1;
  if (this->cluster_dynprop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cluster_dynprop(), output);
  }

  // double cluster_vrellat = 2;
  if (this->cluster_vrellat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->cluster_vrellat(), output);
  }

  // double cluster_rcs = 3;
  if (this->cluster_rcs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->cluster_rcs(), output);
  }

  // double cluster_distlong = 4;
  if (this->cluster_distlong() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->cluster_distlong(), output);
  }

  // int32 cluster_id = 5;
  if (this->cluster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cluster_id(), output);
  }

  // double cluster_vrellong = 6;
  if (this->cluster_vrellong() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->cluster_vrellong(), output);
  }

  // double cluster_distlat = 7;
  if (this->cluster_distlat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->cluster_distlat(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
}

size_t Cluster_1_general_701::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double cluster_vrellat = 2;
  if (this->cluster_vrellat() != 0) {
    total_size += 1 + 8;
  }

  // double cluster_rcs = 3;
  if (this->cluster_rcs() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.F_RADAR.Cluster_1_general_701.Cluster_dynpropType cluster_dynprop = 1;
  if (this->cluster_dynprop() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cluster_dynprop());
  }

  // int32 cluster_id = 5;
  if (this->cluster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cluster_id());
  }

  // double cluster_distlong = 4;
  if (this->cluster_distlong() != 0) {
    total_size += 1 + 8;
  }

  // double cluster_vrellong = 6;
  if (this->cluster_vrellong() != 0) {
    total_size += 1 + 8;
  }

  // double cluster_distlat = 7;
  if (this->cluster_distlat() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cluster_1_general_701::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Cluster_1_general_701*>(&from));
}

void Cluster_1_general_701::MergeFrom(const Cluster_1_general_701& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster_vrellat() != 0) {
    set_cluster_vrellat(from.cluster_vrellat());
  }
  if (from.cluster_rcs() != 0) {
    set_cluster_rcs(from.cluster_rcs());
  }
  if (from.cluster_dynprop() != 0) {
    set_cluster_dynprop(from.cluster_dynprop());
  }
  if (from.cluster_id() != 0) {
    set_cluster_id(from.cluster_id());
  }
  if (from.cluster_distlong() != 0) {
    set_cluster_distlong(from.cluster_distlong());
  }
  if (from.cluster_vrellong() != 0) {
    set_cluster_vrellong(from.cluster_vrellong());
  }
  if (from.cluster_distlat() != 0) {
    set_cluster_distlat(from.cluster_distlat());
  }
}

void Cluster_1_general_701::CopyFrom(const Cluster_1_general_701& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Cluster_1_general_701)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cluster_1_general_701::IsInitialized() const {
  return true;
}

void Cluster_1_general_701::Swap(Cluster_1_general_701* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cluster_1_general_701::InternalSwap(Cluster_1_general_701* other) {
  using std::swap;
  swap(cluster_vrellat_, other->cluster_vrellat_);
  swap(cluster_rcs_, other->cluster_rcs_);
  swap(cluster_dynprop_, other->cluster_dynprop_);
  swap(cluster_id_, other->cluster_id_);
  swap(cluster_distlong_, other->cluster_distlong_);
  swap(cluster_vrellong_, other->cluster_vrellong_);
  swap(cluster_distlat_, other->cluster_distlat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Cluster_1_general_701::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Cluster_1_general_701";
}


// ===================================================================

void Cluster_2_quality_702::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cluster_2_quality_702::kClusterIdFieldNumber;
const int Cluster_2_quality_702::kClusterVrellatRmsFieldNumber;
const int Cluster_2_quality_702::kClusterInvalidstateFieldNumber;
const int Cluster_2_quality_702::kClusterDistlatRmsFieldNumber;
const int Cluster_2_quality_702::kClusterDistlongRmsFieldNumber;
const int Cluster_2_quality_702::kClusterVrellongRmsFieldNumber;
const int Cluster_2_quality_702::kClusterPdh0FieldNumber;
const int Cluster_2_quality_702::kClusterAmbigstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cluster_2_quality_702::Cluster_2_quality_702()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Cluster_2_quality_702.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
}
Cluster_2_quality_702::Cluster_2_quality_702(const Cluster_2_quality_702& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cluster_id_, &from.cluster_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cluster_ambigstate_) -
    reinterpret_cast<char*>(&cluster_id_)) + sizeof(cluster_ambigstate_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
}

void Cluster_2_quality_702::SharedCtor() {
  ::memset(&cluster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cluster_ambigstate_) -
      reinterpret_cast<char*>(&cluster_id_)) + sizeof(cluster_ambigstate_));
}

Cluster_2_quality_702::~Cluster_2_quality_702() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
  SharedDtor();
}

void Cluster_2_quality_702::SharedDtor() {
}

void Cluster_2_quality_702::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cluster_2_quality_702& Cluster_2_quality_702::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Cluster_2_quality_702.base);
  return *internal_default_instance();
}


void Cluster_2_quality_702::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cluster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cluster_ambigstate_) -
      reinterpret_cast<char*>(&cluster_id_)) + sizeof(cluster_ambigstate_));
  _internal_metadata_.Clear();
}

bool Cluster_2_quality_702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 cluster_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cluster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_vrellat_rmsType cluster_vrellat_rms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cluster_vrellat_rms(static_cast< ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702_Cluster_vrellat_rmsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_invalidstateType cluster_invalidstate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cluster_invalidstate(static_cast< ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702_Cluster_invalidstateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_distlat_rmsType cluster_distlat_rms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cluster_distlat_rms(static_cast< ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702_Cluster_distlat_rmsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_distlong_rmsType cluster_distlong_rms = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cluster_distlong_rms(static_cast< ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702_Cluster_distlong_rmsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_vrellong_rmsType cluster_vrellong_rms = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cluster_vrellong_rms(static_cast< ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702_Cluster_vrellong_rmsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_pdh0Type cluster_pdh0 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cluster_pdh0(static_cast< ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702_Cluster_pdh0Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_ambigstateType cluster_ambigstate = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cluster_ambigstate(static_cast< ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702_Cluster_ambigstateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
  return false;
#undef DO_
}

void Cluster_2_quality_702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cluster_id = 1;
  if (this->cluster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cluster_id(), output);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_vrellat_rmsType cluster_vrellat_rms = 2;
  if (this->cluster_vrellat_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cluster_vrellat_rms(), output);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_invalidstateType cluster_invalidstate = 3;
  if (this->cluster_invalidstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->cluster_invalidstate(), output);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_distlat_rmsType cluster_distlat_rms = 4;
  if (this->cluster_distlat_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->cluster_distlat_rms(), output);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_distlong_rmsType cluster_distlong_rms = 5;
  if (this->cluster_distlong_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->cluster_distlong_rms(), output);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_vrellong_rmsType cluster_vrellong_rms = 6;
  if (this->cluster_vrellong_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->cluster_vrellong_rms(), output);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_pdh0Type cluster_pdh0 = 7;
  if (this->cluster_pdh0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->cluster_pdh0(), output);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_ambigstateType cluster_ambigstate = 8;
  if (this->cluster_ambigstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->cluster_ambigstate(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
}

size_t Cluster_2_quality_702::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 cluster_id = 1;
  if (this->cluster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cluster_id());
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_vrellat_rmsType cluster_vrellat_rms = 2;
  if (this->cluster_vrellat_rms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cluster_vrellat_rms());
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_invalidstateType cluster_invalidstate = 3;
  if (this->cluster_invalidstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cluster_invalidstate());
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_distlat_rmsType cluster_distlat_rms = 4;
  if (this->cluster_distlat_rms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cluster_distlat_rms());
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_distlong_rmsType cluster_distlong_rms = 5;
  if (this->cluster_distlong_rms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cluster_distlong_rms());
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_vrellong_rmsType cluster_vrellong_rms = 6;
  if (this->cluster_vrellong_rms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cluster_vrellong_rms());
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_pdh0Type cluster_pdh0 = 7;
  if (this->cluster_pdh0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cluster_pdh0());
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702.Cluster_ambigstateType cluster_ambigstate = 8;
  if (this->cluster_ambigstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cluster_ambigstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cluster_2_quality_702::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Cluster_2_quality_702*>(&from));
}

void Cluster_2_quality_702::MergeFrom(const Cluster_2_quality_702& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster_id() != 0) {
    set_cluster_id(from.cluster_id());
  }
  if (from.cluster_vrellat_rms() != 0) {
    set_cluster_vrellat_rms(from.cluster_vrellat_rms());
  }
  if (from.cluster_invalidstate() != 0) {
    set_cluster_invalidstate(from.cluster_invalidstate());
  }
  if (from.cluster_distlat_rms() != 0) {
    set_cluster_distlat_rms(from.cluster_distlat_rms());
  }
  if (from.cluster_distlong_rms() != 0) {
    set_cluster_distlong_rms(from.cluster_distlong_rms());
  }
  if (from.cluster_vrellong_rms() != 0) {
    set_cluster_vrellong_rms(from.cluster_vrellong_rms());
  }
  if (from.cluster_pdh0() != 0) {
    set_cluster_pdh0(from.cluster_pdh0());
  }
  if (from.cluster_ambigstate() != 0) {
    set_cluster_ambigstate(from.cluster_ambigstate());
  }
}

void Cluster_2_quality_702::CopyFrom(const Cluster_2_quality_702& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Cluster_2_quality_702)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cluster_2_quality_702::IsInitialized() const {
  return true;
}

void Cluster_2_quality_702::Swap(Cluster_2_quality_702* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cluster_2_quality_702::InternalSwap(Cluster_2_quality_702* other) {
  using std::swap;
  swap(cluster_id_, other->cluster_id_);
  swap(cluster_vrellat_rms_, other->cluster_vrellat_rms_);
  swap(cluster_invalidstate_, other->cluster_invalidstate_);
  swap(cluster_distlat_rms_, other->cluster_distlat_rms_);
  swap(cluster_distlong_rms_, other->cluster_distlong_rms_);
  swap(cluster_vrellong_rms_, other->cluster_vrellong_rms_);
  swap(cluster_pdh0_, other->cluster_pdh0_);
  swap(cluster_ambigstate_, other->cluster_ambigstate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Cluster_2_quality_702::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Cluster_2_quality_702";
}


// ===================================================================

void Obj_4_warning_60e::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Obj_4_warning_60e::kObjColldetregionbitfieldFieldNumber;
const int Obj_4_warning_60e::kObjIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Obj_4_warning_60e::Obj_4_warning_60e()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Obj_4_warning_60e.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
}
Obj_4_warning_60e::Obj_4_warning_60e(const Obj_4_warning_60e& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obj_colldetregionbitfield_, &from.obj_colldetregionbitfield_,
    static_cast<size_t>(reinterpret_cast<char*>(&obj_id_) -
    reinterpret_cast<char*>(&obj_colldetregionbitfield_)) + sizeof(obj_id_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
}

void Obj_4_warning_60e::SharedCtor() {
  ::memset(&obj_colldetregionbitfield_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_id_) -
      reinterpret_cast<char*>(&obj_colldetregionbitfield_)) + sizeof(obj_id_));
}

Obj_4_warning_60e::~Obj_4_warning_60e() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
  SharedDtor();
}

void Obj_4_warning_60e::SharedDtor() {
}

void Obj_4_warning_60e::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Obj_4_warning_60e& Obj_4_warning_60e::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Obj_4_warning_60e.base);
  return *internal_default_instance();
}


void Obj_4_warning_60e::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&obj_colldetregionbitfield_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_id_) -
      reinterpret_cast<char*>(&obj_colldetregionbitfield_)) + sizeof(obj_id_));
  _internal_metadata_.Clear();
}

bool Obj_4_warning_60e::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 obj_colldetregionbitfield = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obj_colldetregionbitfield_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 obj_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obj_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
  return false;
#undef DO_
}

void Obj_4_warning_60e::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 obj_colldetregionbitfield = 1;
  if (this->obj_colldetregionbitfield() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->obj_colldetregionbitfield(), output);
  }

  // int32 obj_id = 2;
  if (this->obj_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->obj_id(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
}

size_t Obj_4_warning_60e::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 obj_colldetregionbitfield = 1;
  if (this->obj_colldetregionbitfield() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obj_colldetregionbitfield());
  }

  // int32 obj_id = 2;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obj_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Obj_4_warning_60e::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Obj_4_warning_60e*>(&from));
}

void Obj_4_warning_60e::MergeFrom(const Obj_4_warning_60e& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_colldetregionbitfield() != 0) {
    set_obj_colldetregionbitfield(from.obj_colldetregionbitfield());
  }
  if (from.obj_id() != 0) {
    set_obj_id(from.obj_id());
  }
}

void Obj_4_warning_60e::CopyFrom(const Obj_4_warning_60e& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Obj_4_warning_60e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Obj_4_warning_60e::IsInitialized() const {
  return true;
}

void Obj_4_warning_60e::Swap(Obj_4_warning_60e* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Obj_4_warning_60e::InternalSwap(Obj_4_warning_60e* other) {
  using std::swap;
  swap(obj_colldetregionbitfield_, other->obj_colldetregionbitfield_);
  swap(obj_id_, other->obj_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Obj_4_warning_60e::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Obj_4_warning_60e";
}


// ===================================================================

void Obj_3_extended_60d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Obj_3_extended_60d::kObjClassFieldNumber;
const int Obj_3_extended_60d::kObjArellatFieldNumber;
const int Obj_3_extended_60d::kObjIdFieldNumber;
const int Obj_3_extended_60d::kObjOrientationangleFieldNumber;
const int Obj_3_extended_60d::kObjWidthFieldNumber;
const int Obj_3_extended_60d::kObjLengthFieldNumber;
const int Obj_3_extended_60d::kObjArellongFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Obj_3_extended_60d::Obj_3_extended_60d()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Obj_3_extended_60d.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
}
Obj_3_extended_60d::Obj_3_extended_60d(const Obj_3_extended_60d& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obj_arellat_, &from.obj_arellat_,
    static_cast<size_t>(reinterpret_cast<char*>(&obj_arellong_) -
    reinterpret_cast<char*>(&obj_arellat_)) + sizeof(obj_arellong_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
}

void Obj_3_extended_60d::SharedCtor() {
  ::memset(&obj_arellat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_arellong_) -
      reinterpret_cast<char*>(&obj_arellat_)) + sizeof(obj_arellong_));
}

Obj_3_extended_60d::~Obj_3_extended_60d() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
  SharedDtor();
}

void Obj_3_extended_60d::SharedDtor() {
}

void Obj_3_extended_60d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Obj_3_extended_60d& Obj_3_extended_60d::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Obj_3_extended_60d.base);
  return *internal_default_instance();
}


void Obj_3_extended_60d::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&obj_arellat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_arellong_) -
      reinterpret_cast<char*>(&obj_arellat_)) + sizeof(obj_arellong_));
  _internal_metadata_.Clear();
}

bool Obj_3_extended_60d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Obj_3_extended_60d.Obj_classType obj_class = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_class(static_cast< ::Calmcar::drivers::F_RADAR::Obj_3_extended_60d_Obj_classType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj_arellat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_arellat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 obj_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obj_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj_orientationangle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_orientationangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj_width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj_length = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj_arellong = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_arellong_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
  return false;
#undef DO_
}

void Obj_3_extended_60d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Obj_3_extended_60d.Obj_classType obj_class = 1;
  if (this->obj_class() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->obj_class(), output);
  }

  // double obj_arellat = 2;
  if (this->obj_arellat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->obj_arellat(), output);
  }

  // int32 obj_id = 3;
  if (this->obj_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->obj_id(), output);
  }

  // double obj_orientationangle = 4;
  if (this->obj_orientationangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->obj_orientationangle(), output);
  }

  // double obj_width = 5;
  if (this->obj_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->obj_width(), output);
  }

  // double obj_length = 6;
  if (this->obj_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->obj_length(), output);
  }

  // double obj_arellong = 7;
  if (this->obj_arellong() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->obj_arellong(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
}

size_t Obj_3_extended_60d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double obj_arellat = 2;
  if (this->obj_arellat() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.F_RADAR.Obj_3_extended_60d.Obj_classType obj_class = 1;
  if (this->obj_class() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_class());
  }

  // int32 obj_id = 3;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obj_id());
  }

  // double obj_orientationangle = 4;
  if (this->obj_orientationangle() != 0) {
    total_size += 1 + 8;
  }

  // double obj_width = 5;
  if (this->obj_width() != 0) {
    total_size += 1 + 8;
  }

  // double obj_length = 6;
  if (this->obj_length() != 0) {
    total_size += 1 + 8;
  }

  // double obj_arellong = 7;
  if (this->obj_arellong() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Obj_3_extended_60d::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Obj_3_extended_60d*>(&from));
}

void Obj_3_extended_60d::MergeFrom(const Obj_3_extended_60d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_arellat() != 0) {
    set_obj_arellat(from.obj_arellat());
  }
  if (from.obj_class() != 0) {
    set_obj_class(from.obj_class());
  }
  if (from.obj_id() != 0) {
    set_obj_id(from.obj_id());
  }
  if (from.obj_orientationangle() != 0) {
    set_obj_orientationangle(from.obj_orientationangle());
  }
  if (from.obj_width() != 0) {
    set_obj_width(from.obj_width());
  }
  if (from.obj_length() != 0) {
    set_obj_length(from.obj_length());
  }
  if (from.obj_arellong() != 0) {
    set_obj_arellong(from.obj_arellong());
  }
}

void Obj_3_extended_60d::CopyFrom(const Obj_3_extended_60d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Obj_3_extended_60d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Obj_3_extended_60d::IsInitialized() const {
  return true;
}

void Obj_3_extended_60d::Swap(Obj_3_extended_60d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Obj_3_extended_60d::InternalSwap(Obj_3_extended_60d* other) {
  using std::swap;
  swap(obj_arellat_, other->obj_arellat_);
  swap(obj_class_, other->obj_class_);
  swap(obj_id_, other->obj_id_);
  swap(obj_orientationangle_, other->obj_orientationangle_);
  swap(obj_width_, other->obj_width_);
  swap(obj_length_, other->obj_length_);
  swap(obj_arellong_, other->obj_arellong_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Obj_3_extended_60d::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Obj_3_extended_60d";
}


// ===================================================================

void Obj_0_status_60a::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Obj_0_status_60a::kObjNofobjectsFieldNumber;
const int Obj_0_status_60a::kObjMeascounterFieldNumber;
const int Obj_0_status_60a::kObjInterfaceversionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Obj_0_status_60a::Obj_0_status_60a()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Obj_0_status_60a.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
}
Obj_0_status_60a::Obj_0_status_60a(const Obj_0_status_60a& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obj_nofobjects_, &from.obj_nofobjects_,
    static_cast<size_t>(reinterpret_cast<char*>(&obj_interfaceversion_) -
    reinterpret_cast<char*>(&obj_nofobjects_)) + sizeof(obj_interfaceversion_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
}

void Obj_0_status_60a::SharedCtor() {
  ::memset(&obj_nofobjects_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_interfaceversion_) -
      reinterpret_cast<char*>(&obj_nofobjects_)) + sizeof(obj_interfaceversion_));
}

Obj_0_status_60a::~Obj_0_status_60a() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
  SharedDtor();
}

void Obj_0_status_60a::SharedDtor() {
}

void Obj_0_status_60a::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Obj_0_status_60a& Obj_0_status_60a::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Obj_0_status_60a.base);
  return *internal_default_instance();
}


void Obj_0_status_60a::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&obj_nofobjects_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_interfaceversion_) -
      reinterpret_cast<char*>(&obj_nofobjects_)) + sizeof(obj_interfaceversion_));
  _internal_metadata_.Clear();
}

bool Obj_0_status_60a::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 obj_nofobjects = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obj_nofobjects_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 obj_meascounter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obj_meascounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 obj_interfaceversion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obj_interfaceversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
  return false;
#undef DO_
}

void Obj_0_status_60a::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 obj_nofobjects = 1;
  if (this->obj_nofobjects() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->obj_nofobjects(), output);
  }

  // int32 obj_meascounter = 2;
  if (this->obj_meascounter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->obj_meascounter(), output);
  }

  // int32 obj_interfaceversion = 3;
  if (this->obj_interfaceversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->obj_interfaceversion(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
}

size_t Obj_0_status_60a::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 obj_nofobjects = 1;
  if (this->obj_nofobjects() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obj_nofobjects());
  }

  // int32 obj_meascounter = 2;
  if (this->obj_meascounter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obj_meascounter());
  }

  // int32 obj_interfaceversion = 3;
  if (this->obj_interfaceversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obj_interfaceversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Obj_0_status_60a::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Obj_0_status_60a*>(&from));
}

void Obj_0_status_60a::MergeFrom(const Obj_0_status_60a& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_nofobjects() != 0) {
    set_obj_nofobjects(from.obj_nofobjects());
  }
  if (from.obj_meascounter() != 0) {
    set_obj_meascounter(from.obj_meascounter());
  }
  if (from.obj_interfaceversion() != 0) {
    set_obj_interfaceversion(from.obj_interfaceversion());
  }
}

void Obj_0_status_60a::CopyFrom(const Obj_0_status_60a& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Obj_0_status_60a)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Obj_0_status_60a::IsInitialized() const {
  return true;
}

void Obj_0_status_60a::Swap(Obj_0_status_60a* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Obj_0_status_60a::InternalSwap(Obj_0_status_60a* other) {
  using std::swap;
  swap(obj_nofobjects_, other->obj_nofobjects_);
  swap(obj_meascounter_, other->obj_meascounter_);
  swap(obj_interfaceversion_, other->obj_interfaceversion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Obj_0_status_60a::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Obj_0_status_60a";
}


// ===================================================================

void Obj_2_quality_60c::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Obj_2_quality_60c::kObjProbofexistFieldNumber;
const int Obj_2_quality_60c::kObjMeasstateFieldNumber;
const int Obj_2_quality_60c::kObjArellongRmsFieldNumber;
const int Obj_2_quality_60c::kObjArellatRmsFieldNumber;
const int Obj_2_quality_60c::kObjVrellongRmsFieldNumber;
const int Obj_2_quality_60c::kObjVrellatRmsFieldNumber;
const int Obj_2_quality_60c::kObjOrientationRmsFieldNumber;
const int Obj_2_quality_60c::kObjDistlongRmsFieldNumber;
const int Obj_2_quality_60c::kObjDistlatRmsFieldNumber;
const int Obj_2_quality_60c::kObjIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Obj_2_quality_60c::Obj_2_quality_60c()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Obj_2_quality_60c.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
}
Obj_2_quality_60c::Obj_2_quality_60c(const Obj_2_quality_60c& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obj_probofexist_, &from.obj_probofexist_,
    static_cast<size_t>(reinterpret_cast<char*>(&obj_id_) -
    reinterpret_cast<char*>(&obj_probofexist_)) + sizeof(obj_id_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
}

void Obj_2_quality_60c::SharedCtor() {
  ::memset(&obj_probofexist_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_id_) -
      reinterpret_cast<char*>(&obj_probofexist_)) + sizeof(obj_id_));
}

Obj_2_quality_60c::~Obj_2_quality_60c() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
  SharedDtor();
}

void Obj_2_quality_60c::SharedDtor() {
}

void Obj_2_quality_60c::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Obj_2_quality_60c& Obj_2_quality_60c::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Obj_2_quality_60c.base);
  return *internal_default_instance();
}


void Obj_2_quality_60c::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&obj_probofexist_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_id_) -
      reinterpret_cast<char*>(&obj_probofexist_)) + sizeof(obj_id_));
  _internal_metadata_.Clear();
}

bool Obj_2_quality_60c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_probofexistType obj_probofexist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_probofexist(static_cast< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c_Obj_probofexistType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_measstateType obj_measstate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_measstate(static_cast< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c_Obj_measstateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_arellong_rmsType obj_arellong_rms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_arellong_rms(static_cast< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c_Obj_arellong_rmsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_arellat_rmsType obj_arellat_rms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_arellat_rms(static_cast< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c_Obj_arellat_rmsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_vrellong_rmsType obj_vrellong_rms = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_vrellong_rms(static_cast< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c_Obj_vrellong_rmsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_vrellat_rmsType obj_vrellat_rms = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_vrellat_rms(static_cast< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c_Obj_vrellat_rmsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_orientation_rmsType obj_orientation_rms = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_orientation_rms(static_cast< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c_Obj_orientation_rmsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_distlong_rmsType obj_distlong_rms = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_distlong_rms(static_cast< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c_Obj_distlong_rmsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_distlat_rmsType obj_distlat_rms = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_distlat_rms(static_cast< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c_Obj_distlat_rmsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 obj_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obj_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
  return false;
#undef DO_
}

void Obj_2_quality_60c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_probofexistType obj_probofexist = 1;
  if (this->obj_probofexist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->obj_probofexist(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_measstateType obj_measstate = 2;
  if (this->obj_measstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->obj_measstate(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_arellong_rmsType obj_arellong_rms = 3;
  if (this->obj_arellong_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->obj_arellong_rms(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_arellat_rmsType obj_arellat_rms = 4;
  if (this->obj_arellat_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->obj_arellat_rms(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_vrellong_rmsType obj_vrellong_rms = 5;
  if (this->obj_vrellong_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->obj_vrellong_rms(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_vrellat_rmsType obj_vrellat_rms = 6;
  if (this->obj_vrellat_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->obj_vrellat_rms(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_orientation_rmsType obj_orientation_rms = 7;
  if (this->obj_orientation_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->obj_orientation_rms(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_distlong_rmsType obj_distlong_rms = 8;
  if (this->obj_distlong_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->obj_distlong_rms(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_distlat_rmsType obj_distlat_rms = 9;
  if (this->obj_distlat_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->obj_distlat_rms(), output);
  }

  // int32 obj_id = 10;
  if (this->obj_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->obj_id(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
}

size_t Obj_2_quality_60c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_probofexistType obj_probofexist = 1;
  if (this->obj_probofexist() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_probofexist());
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_measstateType obj_measstate = 2;
  if (this->obj_measstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_measstate());
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_arellong_rmsType obj_arellong_rms = 3;
  if (this->obj_arellong_rms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_arellong_rms());
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_arellat_rmsType obj_arellat_rms = 4;
  if (this->obj_arellat_rms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_arellat_rms());
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_vrellong_rmsType obj_vrellong_rms = 5;
  if (this->obj_vrellong_rms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_vrellong_rms());
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_vrellat_rmsType obj_vrellat_rms = 6;
  if (this->obj_vrellat_rms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_vrellat_rms());
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_orientation_rmsType obj_orientation_rms = 7;
  if (this->obj_orientation_rms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_orientation_rms());
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_distlong_rmsType obj_distlong_rms = 8;
  if (this->obj_distlong_rms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_distlong_rms());
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c.Obj_distlat_rmsType obj_distlat_rms = 9;
  if (this->obj_distlat_rms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_distlat_rms());
  }

  // int32 obj_id = 10;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obj_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Obj_2_quality_60c::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Obj_2_quality_60c*>(&from));
}

void Obj_2_quality_60c::MergeFrom(const Obj_2_quality_60c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_probofexist() != 0) {
    set_obj_probofexist(from.obj_probofexist());
  }
  if (from.obj_measstate() != 0) {
    set_obj_measstate(from.obj_measstate());
  }
  if (from.obj_arellong_rms() != 0) {
    set_obj_arellong_rms(from.obj_arellong_rms());
  }
  if (from.obj_arellat_rms() != 0) {
    set_obj_arellat_rms(from.obj_arellat_rms());
  }
  if (from.obj_vrellong_rms() != 0) {
    set_obj_vrellong_rms(from.obj_vrellong_rms());
  }
  if (from.obj_vrellat_rms() != 0) {
    set_obj_vrellat_rms(from.obj_vrellat_rms());
  }
  if (from.obj_orientation_rms() != 0) {
    set_obj_orientation_rms(from.obj_orientation_rms());
  }
  if (from.obj_distlong_rms() != 0) {
    set_obj_distlong_rms(from.obj_distlong_rms());
  }
  if (from.obj_distlat_rms() != 0) {
    set_obj_distlat_rms(from.obj_distlat_rms());
  }
  if (from.obj_id() != 0) {
    set_obj_id(from.obj_id());
  }
}

void Obj_2_quality_60c::CopyFrom(const Obj_2_quality_60c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Obj_2_quality_60c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Obj_2_quality_60c::IsInitialized() const {
  return true;
}

void Obj_2_quality_60c::Swap(Obj_2_quality_60c* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Obj_2_quality_60c::InternalSwap(Obj_2_quality_60c* other) {
  using std::swap;
  swap(obj_probofexist_, other->obj_probofexist_);
  swap(obj_measstate_, other->obj_measstate_);
  swap(obj_arellong_rms_, other->obj_arellong_rms_);
  swap(obj_arellat_rms_, other->obj_arellat_rms_);
  swap(obj_vrellong_rms_, other->obj_vrellong_rms_);
  swap(obj_vrellat_rms_, other->obj_vrellat_rms_);
  swap(obj_orientation_rms_, other->obj_orientation_rms_);
  swap(obj_distlong_rms_, other->obj_distlong_rms_);
  swap(obj_distlat_rms_, other->obj_distlat_rms_);
  swap(obj_id_, other->obj_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Obj_2_quality_60c::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Obj_2_quality_60c";
}


// ===================================================================

void Obj_1_general_60b::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Obj_1_general_60b::kObjDynpropFieldNumber;
const int Obj_1_general_60b::kObjRcsFieldNumber;
const int Obj_1_general_60b::kObjVrellatFieldNumber;
const int Obj_1_general_60b::kObjIdFieldNumber;
const int Obj_1_general_60b::kObjDistlongFieldNumber;
const int Obj_1_general_60b::kObjVrellongFieldNumber;
const int Obj_1_general_60b::kObjDistlatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Obj_1_general_60b::Obj_1_general_60b()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Obj_1_general_60b.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
}
Obj_1_general_60b::Obj_1_general_60b(const Obj_1_general_60b& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obj_rcs_, &from.obj_rcs_,
    static_cast<size_t>(reinterpret_cast<char*>(&obj_distlat_) -
    reinterpret_cast<char*>(&obj_rcs_)) + sizeof(obj_distlat_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
}

void Obj_1_general_60b::SharedCtor() {
  ::memset(&obj_rcs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_distlat_) -
      reinterpret_cast<char*>(&obj_rcs_)) + sizeof(obj_distlat_));
}

Obj_1_general_60b::~Obj_1_general_60b() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
  SharedDtor();
}

void Obj_1_general_60b::SharedDtor() {
}

void Obj_1_general_60b::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Obj_1_general_60b& Obj_1_general_60b::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Obj_1_general_60b.base);
  return *internal_default_instance();
}


void Obj_1_general_60b::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&obj_rcs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_distlat_) -
      reinterpret_cast<char*>(&obj_rcs_)) + sizeof(obj_distlat_));
  _internal_metadata_.Clear();
}

bool Obj_1_general_60b::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Obj_1_general_60b.Obj_dynpropType obj_dynprop = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_obj_dynprop(static_cast< ::Calmcar::drivers::F_RADAR::Obj_1_general_60b_Obj_dynpropType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj_rcs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_rcs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj_vrellat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_vrellat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 obj_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obj_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj_distlong = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_distlong_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj_vrellong = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_vrellong_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj_distlat = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_distlat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
  return false;
#undef DO_
}

void Obj_1_general_60b::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Obj_1_general_60b.Obj_dynpropType obj_dynprop = 1;
  if (this->obj_dynprop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->obj_dynprop(), output);
  }

  // double obj_rcs = 2;
  if (this->obj_rcs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->obj_rcs(), output);
  }

  // double obj_vrellat = 3;
  if (this->obj_vrellat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->obj_vrellat(), output);
  }

  // int32 obj_id = 4;
  if (this->obj_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->obj_id(), output);
  }

  // double obj_distlong = 5;
  if (this->obj_distlong() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->obj_distlong(), output);
  }

  // double obj_vrellong = 6;
  if (this->obj_vrellong() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->obj_vrellong(), output);
  }

  // double obj_distlat = 7;
  if (this->obj_distlat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->obj_distlat(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
}

size_t Obj_1_general_60b::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double obj_rcs = 2;
  if (this->obj_rcs() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.F_RADAR.Obj_1_general_60b.Obj_dynpropType obj_dynprop = 1;
  if (this->obj_dynprop() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->obj_dynprop());
  }

  // int32 obj_id = 4;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obj_id());
  }

  // double obj_vrellat = 3;
  if (this->obj_vrellat() != 0) {
    total_size += 1 + 8;
  }

  // double obj_distlong = 5;
  if (this->obj_distlong() != 0) {
    total_size += 1 + 8;
  }

  // double obj_vrellong = 6;
  if (this->obj_vrellong() != 0) {
    total_size += 1 + 8;
  }

  // double obj_distlat = 7;
  if (this->obj_distlat() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Obj_1_general_60b::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Obj_1_general_60b*>(&from));
}

void Obj_1_general_60b::MergeFrom(const Obj_1_general_60b& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_rcs() != 0) {
    set_obj_rcs(from.obj_rcs());
  }
  if (from.obj_dynprop() != 0) {
    set_obj_dynprop(from.obj_dynprop());
  }
  if (from.obj_id() != 0) {
    set_obj_id(from.obj_id());
  }
  if (from.obj_vrellat() != 0) {
    set_obj_vrellat(from.obj_vrellat());
  }
  if (from.obj_distlong() != 0) {
    set_obj_distlong(from.obj_distlong());
  }
  if (from.obj_vrellong() != 0) {
    set_obj_vrellong(from.obj_vrellong());
  }
  if (from.obj_distlat() != 0) {
    set_obj_distlat(from.obj_distlat());
  }
}

void Obj_1_general_60b::CopyFrom(const Obj_1_general_60b& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Obj_1_general_60b)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Obj_1_general_60b::IsInitialized() const {
  return true;
}

void Obj_1_general_60b::Swap(Obj_1_general_60b* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Obj_1_general_60b::InternalSwap(Obj_1_general_60b* other) {
  using std::swap;
  swap(obj_rcs_, other->obj_rcs_);
  swap(obj_dynprop_, other->obj_dynprop_);
  swap(obj_id_, other->obj_id_);
  swap(obj_vrellat_, other->obj_vrellat_);
  swap(obj_distlong_, other->obj_distlong_);
  swap(obj_vrellong_, other->obj_vrellong_);
  swap(obj_distlat_, other->obj_distlat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Obj_1_general_60b::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Obj_1_general_60b";
}


// ===================================================================

void Cluster_0_status_600::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cluster_0_status_600::kClusterMeascounterFieldNumber;
const int Cluster_0_status_600::kClusterNofclustersnearFieldNumber;
const int Cluster_0_status_600::kClusterNofclustersfarFieldNumber;
const int Cluster_0_status_600::kClusterInterfaceversionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cluster_0_status_600::Cluster_0_status_600()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Cluster_0_status_600.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
}
Cluster_0_status_600::Cluster_0_status_600(const Cluster_0_status_600& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cluster_meascounter_, &from.cluster_meascounter_,
    static_cast<size_t>(reinterpret_cast<char*>(&cluster_interfaceversion_) -
    reinterpret_cast<char*>(&cluster_meascounter_)) + sizeof(cluster_interfaceversion_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
}

void Cluster_0_status_600::SharedCtor() {
  ::memset(&cluster_meascounter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cluster_interfaceversion_) -
      reinterpret_cast<char*>(&cluster_meascounter_)) + sizeof(cluster_interfaceversion_));
}

Cluster_0_status_600::~Cluster_0_status_600() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
  SharedDtor();
}

void Cluster_0_status_600::SharedDtor() {
}

void Cluster_0_status_600::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cluster_0_status_600& Cluster_0_status_600::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Cluster_0_status_600.base);
  return *internal_default_instance();
}


void Cluster_0_status_600::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cluster_meascounter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cluster_interfaceversion_) -
      reinterpret_cast<char*>(&cluster_meascounter_)) + sizeof(cluster_interfaceversion_));
  _internal_metadata_.Clear();
}

bool Cluster_0_status_600::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 cluster_meascounter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cluster_meascounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cluster_nofclustersnear = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cluster_nofclustersnear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cluster_nofclustersfar = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cluster_nofclustersfar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cluster_interfaceversion = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cluster_interfaceversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
  return false;
#undef DO_
}

void Cluster_0_status_600::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cluster_meascounter = 1;
  if (this->cluster_meascounter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cluster_meascounter(), output);
  }

  // int32 cluster_nofclustersnear = 2;
  if (this->cluster_nofclustersnear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cluster_nofclustersnear(), output);
  }

  // int32 cluster_nofclustersfar = 3;
  if (this->cluster_nofclustersfar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cluster_nofclustersfar(), output);
  }

  // int32 cluster_interfaceversion = 4;
  if (this->cluster_interfaceversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cluster_interfaceversion(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
}

size_t Cluster_0_status_600::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 cluster_meascounter = 1;
  if (this->cluster_meascounter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cluster_meascounter());
  }

  // int32 cluster_nofclustersnear = 2;
  if (this->cluster_nofclustersnear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cluster_nofclustersnear());
  }

  // int32 cluster_nofclustersfar = 3;
  if (this->cluster_nofclustersfar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cluster_nofclustersfar());
  }

  // int32 cluster_interfaceversion = 4;
  if (this->cluster_interfaceversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cluster_interfaceversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cluster_0_status_600::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Cluster_0_status_600*>(&from));
}

void Cluster_0_status_600::MergeFrom(const Cluster_0_status_600& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster_meascounter() != 0) {
    set_cluster_meascounter(from.cluster_meascounter());
  }
  if (from.cluster_nofclustersnear() != 0) {
    set_cluster_nofclustersnear(from.cluster_nofclustersnear());
  }
  if (from.cluster_nofclustersfar() != 0) {
    set_cluster_nofclustersfar(from.cluster_nofclustersfar());
  }
  if (from.cluster_interfaceversion() != 0) {
    set_cluster_interfaceversion(from.cluster_interfaceversion());
  }
}

void Cluster_0_status_600::CopyFrom(const Cluster_0_status_600& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Cluster_0_status_600)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cluster_0_status_600::IsInitialized() const {
  return true;
}

void Cluster_0_status_600::Swap(Cluster_0_status_600* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cluster_0_status_600::InternalSwap(Cluster_0_status_600* other) {
  using std::swap;
  swap(cluster_meascounter_, other->cluster_meascounter_);
  swap(cluster_nofclustersnear_, other->cluster_nofclustersnear_);
  swap(cluster_nofclustersfar_, other->cluster_nofclustersfar_);
  swap(cluster_interfaceversion_, other->cluster_interfaceversion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Cluster_0_status_600::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Cluster_0_status_600";
}


// ===================================================================

void Colldetregionstate_402::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Colldetregionstate_402::kColldetregstateWarninglevelFieldNumber;
const int Colldetregionstate_402::kColldetregstateNofobjectsFieldNumber;
const int Colldetregionstate_402::kColldetregstateRegionidFieldNumber;
const int Colldetregionstate_402::kColldetregstatePoint2YFieldNumber;
const int Colldetregionstate_402::kColldetregstatePoint2XFieldNumber;
const int Colldetregionstate_402::kColldetregstatePoint1YFieldNumber;
const int Colldetregionstate_402::kColldetregstatePoint1XFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Colldetregionstate_402::Colldetregionstate_402()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Colldetregionstate_402.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
}
Colldetregionstate_402::Colldetregionstate_402(const Colldetregionstate_402& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&colldetregstate_warninglevel_, &from.colldetregstate_warninglevel_,
    static_cast<size_t>(reinterpret_cast<char*>(&colldetregstate_regionid_) -
    reinterpret_cast<char*>(&colldetregstate_warninglevel_)) + sizeof(colldetregstate_regionid_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
}

void Colldetregionstate_402::SharedCtor() {
  ::memset(&colldetregstate_warninglevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&colldetregstate_regionid_) -
      reinterpret_cast<char*>(&colldetregstate_warninglevel_)) + sizeof(colldetregstate_regionid_));
}

Colldetregionstate_402::~Colldetregionstate_402() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
  SharedDtor();
}

void Colldetregionstate_402::SharedDtor() {
}

void Colldetregionstate_402::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Colldetregionstate_402& Colldetregionstate_402::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Colldetregionstate_402.base);
  return *internal_default_instance();
}


void Colldetregionstate_402::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&colldetregstate_warninglevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&colldetregstate_regionid_) -
      reinterpret_cast<char*>(&colldetregstate_warninglevel_)) + sizeof(colldetregstate_regionid_));
  _internal_metadata_.Clear();
}

bool Colldetregionstate_402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Colldetregionstate_402.Colldetregstate_warninglevelType colldetregstate_warninglevel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_colldetregstate_warninglevel(static_cast< ::Calmcar::drivers::F_RADAR::Colldetregionstate_402_Colldetregstate_warninglevelType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 colldetregstate_nofobjects = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &colldetregstate_nofobjects_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 colldetregstate_regionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &colldetregstate_regionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double colldetregstate_point2y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &colldetregstate_point2y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double colldetregstate_point2x = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &colldetregstate_point2x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double colldetregstate_point1y = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &colldetregstate_point1y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double colldetregstate_point1x = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &colldetregstate_point1x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
  return false;
#undef DO_
}

void Colldetregionstate_402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Colldetregionstate_402.Colldetregstate_warninglevelType colldetregstate_warninglevel = 1;
  if (this->colldetregstate_warninglevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->colldetregstate_warninglevel(), output);
  }

  // int32 colldetregstate_nofobjects = 2;
  if (this->colldetregstate_nofobjects() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->colldetregstate_nofobjects(), output);
  }

  // int32 colldetregstate_regionid = 3;
  if (this->colldetregstate_regionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->colldetregstate_regionid(), output);
  }

  // double colldetregstate_point2y = 4;
  if (this->colldetregstate_point2y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->colldetregstate_point2y(), output);
  }

  // double colldetregstate_point2x = 5;
  if (this->colldetregstate_point2x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->colldetregstate_point2x(), output);
  }

  // double colldetregstate_point1y = 6;
  if (this->colldetregstate_point1y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->colldetregstate_point1y(), output);
  }

  // double colldetregstate_point1x = 7;
  if (this->colldetregstate_point1x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->colldetregstate_point1x(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
}

size_t Colldetregionstate_402::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.F_RADAR.Colldetregionstate_402.Colldetregstate_warninglevelType colldetregstate_warninglevel = 1;
  if (this->colldetregstate_warninglevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->colldetregstate_warninglevel());
  }

  // int32 colldetregstate_nofobjects = 2;
  if (this->colldetregstate_nofobjects() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->colldetregstate_nofobjects());
  }

  // double colldetregstate_point2y = 4;
  if (this->colldetregstate_point2y() != 0) {
    total_size += 1 + 8;
  }

  // double colldetregstate_point2x = 5;
  if (this->colldetregstate_point2x() != 0) {
    total_size += 1 + 8;
  }

  // double colldetregstate_point1y = 6;
  if (this->colldetregstate_point1y() != 0) {
    total_size += 1 + 8;
  }

  // double colldetregstate_point1x = 7;
  if (this->colldetregstate_point1x() != 0) {
    total_size += 1 + 8;
  }

  // int32 colldetregstate_regionid = 3;
  if (this->colldetregstate_regionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->colldetregstate_regionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Colldetregionstate_402::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Colldetregionstate_402*>(&from));
}

void Colldetregionstate_402::MergeFrom(const Colldetregionstate_402& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.colldetregstate_warninglevel() != 0) {
    set_colldetregstate_warninglevel(from.colldetregstate_warninglevel());
  }
  if (from.colldetregstate_nofobjects() != 0) {
    set_colldetregstate_nofobjects(from.colldetregstate_nofobjects());
  }
  if (from.colldetregstate_point2y() != 0) {
    set_colldetregstate_point2y(from.colldetregstate_point2y());
  }
  if (from.colldetregstate_point2x() != 0) {
    set_colldetregstate_point2x(from.colldetregstate_point2x());
  }
  if (from.colldetregstate_point1y() != 0) {
    set_colldetregstate_point1y(from.colldetregstate_point1y());
  }
  if (from.colldetregstate_point1x() != 0) {
    set_colldetregstate_point1x(from.colldetregstate_point1x());
  }
  if (from.colldetregstate_regionid() != 0) {
    set_colldetregstate_regionid(from.colldetregstate_regionid());
  }
}

void Colldetregionstate_402::CopyFrom(const Colldetregionstate_402& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Colldetregionstate_402)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Colldetregionstate_402::IsInitialized() const {
  return true;
}

void Colldetregionstate_402::Swap(Colldetregionstate_402* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Colldetregionstate_402::InternalSwap(Colldetregionstate_402* other) {
  using std::swap;
  swap(colldetregstate_warninglevel_, other->colldetregstate_warninglevel_);
  swap(colldetregstate_nofobjects_, other->colldetregstate_nofobjects_);
  swap(colldetregstate_point2y_, other->colldetregstate_point2y_);
  swap(colldetregstate_point2x_, other->colldetregstate_point2x_);
  swap(colldetregstate_point1y_, other->colldetregstate_point1y_);
  swap(colldetregstate_point1x_, other->colldetregstate_point1x_);
  swap(colldetregstate_regionid_, other->colldetregstate_regionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Colldetregionstate_402::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Colldetregionstate_402";
}


// ===================================================================

void Colldetregioncfg_401::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Colldetregioncfg_401::kColldetregcfgActivateFieldNumber;
const int Colldetregioncfg_401::kColldetregcfgCoordinatesValidFieldNumber;
const int Colldetregioncfg_401::kColldetregcfgRegionidFieldNumber;
const int Colldetregioncfg_401::kColldetregcfgPoint1XFieldNumber;
const int Colldetregioncfg_401::kColldetregcfgPoint1YFieldNumber;
const int Colldetregioncfg_401::kColldetregcfgPoint2XFieldNumber;
const int Colldetregioncfg_401::kColldetregcfgPoint2YFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Colldetregioncfg_401::Colldetregioncfg_401()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Colldetregioncfg_401.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
}
Colldetregioncfg_401::Colldetregioncfg_401(const Colldetregioncfg_401& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&colldetregcfg_activate_, &from.colldetregcfg_activate_,
    static_cast<size_t>(reinterpret_cast<char*>(&colldetregcfg_regionid_) -
    reinterpret_cast<char*>(&colldetregcfg_activate_)) + sizeof(colldetregcfg_regionid_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
}

void Colldetregioncfg_401::SharedCtor() {
  ::memset(&colldetregcfg_activate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&colldetregcfg_regionid_) -
      reinterpret_cast<char*>(&colldetregcfg_activate_)) + sizeof(colldetregcfg_regionid_));
}

Colldetregioncfg_401::~Colldetregioncfg_401() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
  SharedDtor();
}

void Colldetregioncfg_401::SharedDtor() {
}

void Colldetregioncfg_401::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Colldetregioncfg_401& Colldetregioncfg_401::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Colldetregioncfg_401.base);
  return *internal_default_instance();
}


void Colldetregioncfg_401::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&colldetregcfg_activate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&colldetregcfg_regionid_) -
      reinterpret_cast<char*>(&colldetregcfg_activate_)) + sizeof(colldetregcfg_regionid_));
  _internal_metadata_.Clear();
}

bool Colldetregioncfg_401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Colldetregioncfg_401.Colldetregcfg_activateType colldetregcfg_activate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_colldetregcfg_activate(static_cast< ::Calmcar::drivers::F_RADAR::Colldetregioncfg_401_Colldetregcfg_activateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Colldetregioncfg_401.Colldetregcfg_coordinates_validType colldetregcfg_coordinates_valid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_colldetregcfg_coordinates_valid(static_cast< ::Calmcar::drivers::F_RADAR::Colldetregioncfg_401_Colldetregcfg_coordinates_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 colldetregcfg_regionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &colldetregcfg_regionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double colldetregcfg_point1x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &colldetregcfg_point1x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double colldetregcfg_point1y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &colldetregcfg_point1y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double colldetregcfg_point2x = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &colldetregcfg_point2x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double colldetregcfg_point2y = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &colldetregcfg_point2y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
  return false;
#undef DO_
}

void Colldetregioncfg_401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Colldetregioncfg_401.Colldetregcfg_activateType colldetregcfg_activate = 1;
  if (this->colldetregcfg_activate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->colldetregcfg_activate(), output);
  }

  // .Calmcar.drivers.F_RADAR.Colldetregioncfg_401.Colldetregcfg_coordinates_validType colldetregcfg_coordinates_valid = 2;
  if (this->colldetregcfg_coordinates_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->colldetregcfg_coordinates_valid(), output);
  }

  // int32 colldetregcfg_regionid = 3;
  if (this->colldetregcfg_regionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->colldetregcfg_regionid(), output);
  }

  // double colldetregcfg_point1x = 4;
  if (this->colldetregcfg_point1x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->colldetregcfg_point1x(), output);
  }

  // double colldetregcfg_point1y = 5;
  if (this->colldetregcfg_point1y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->colldetregcfg_point1y(), output);
  }

  // double colldetregcfg_point2x = 6;
  if (this->colldetregcfg_point2x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->colldetregcfg_point2x(), output);
  }

  // double colldetregcfg_point2y = 7;
  if (this->colldetregcfg_point2y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->colldetregcfg_point2y(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
}

size_t Colldetregioncfg_401::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.F_RADAR.Colldetregioncfg_401.Colldetregcfg_activateType colldetregcfg_activate = 1;
  if (this->colldetregcfg_activate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->colldetregcfg_activate());
  }

  // .Calmcar.drivers.F_RADAR.Colldetregioncfg_401.Colldetregcfg_coordinates_validType colldetregcfg_coordinates_valid = 2;
  if (this->colldetregcfg_coordinates_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->colldetregcfg_coordinates_valid());
  }

  // double colldetregcfg_point1x = 4;
  if (this->colldetregcfg_point1x() != 0) {
    total_size += 1 + 8;
  }

  // double colldetregcfg_point1y = 5;
  if (this->colldetregcfg_point1y() != 0) {
    total_size += 1 + 8;
  }

  // double colldetregcfg_point2x = 6;
  if (this->colldetregcfg_point2x() != 0) {
    total_size += 1 + 8;
  }

  // double colldetregcfg_point2y = 7;
  if (this->colldetregcfg_point2y() != 0) {
    total_size += 1 + 8;
  }

  // int32 colldetregcfg_regionid = 3;
  if (this->colldetregcfg_regionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->colldetregcfg_regionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Colldetregioncfg_401::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Colldetregioncfg_401*>(&from));
}

void Colldetregioncfg_401::MergeFrom(const Colldetregioncfg_401& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.colldetregcfg_activate() != 0) {
    set_colldetregcfg_activate(from.colldetregcfg_activate());
  }
  if (from.colldetregcfg_coordinates_valid() != 0) {
    set_colldetregcfg_coordinates_valid(from.colldetregcfg_coordinates_valid());
  }
  if (from.colldetregcfg_point1x() != 0) {
    set_colldetregcfg_point1x(from.colldetregcfg_point1x());
  }
  if (from.colldetregcfg_point1y() != 0) {
    set_colldetregcfg_point1y(from.colldetregcfg_point1y());
  }
  if (from.colldetregcfg_point2x() != 0) {
    set_colldetregcfg_point2x(from.colldetregcfg_point2x());
  }
  if (from.colldetregcfg_point2y() != 0) {
    set_colldetregcfg_point2y(from.colldetregcfg_point2y());
  }
  if (from.colldetregcfg_regionid() != 0) {
    set_colldetregcfg_regionid(from.colldetregcfg_regionid());
  }
}

void Colldetregioncfg_401::CopyFrom(const Colldetregioncfg_401& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Colldetregioncfg_401)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Colldetregioncfg_401::IsInitialized() const {
  return true;
}

void Colldetregioncfg_401::Swap(Colldetregioncfg_401* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Colldetregioncfg_401::InternalSwap(Colldetregioncfg_401* other) {
  using std::swap;
  swap(colldetregcfg_activate_, other->colldetregcfg_activate_);
  swap(colldetregcfg_coordinates_valid_, other->colldetregcfg_coordinates_valid_);
  swap(colldetregcfg_point1x_, other->colldetregcfg_point1x_);
  swap(colldetregcfg_point1y_, other->colldetregcfg_point1y_);
  swap(colldetregcfg_point2x_, other->colldetregcfg_point2x_);
  swap(colldetregcfg_point2y_, other->colldetregcfg_point2y_);
  swap(colldetregcfg_regionid_, other->colldetregcfg_regionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Colldetregioncfg_401::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Colldetregioncfg_401";
}


// ===================================================================

void Colldetcfg_400::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Colldetcfg_400::kColldetcfgClearregionsFieldNumber;
const int Colldetcfg_400::kColldetcfgWarningresetFieldNumber;
const int Colldetcfg_400::kColldetcfgActivateFieldNumber;
const int Colldetcfg_400::kColldetcfgMintimeValidFieldNumber;
const int Colldetcfg_400::kColldetcfgMindetecttimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Colldetcfg_400::Colldetcfg_400()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Colldetcfg_400.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Colldetcfg_400)
}
Colldetcfg_400::Colldetcfg_400(const Colldetcfg_400& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&colldetcfg_clearregions_, &from.colldetcfg_clearregions_,
    static_cast<size_t>(reinterpret_cast<char*>(&colldetcfg_mindetecttime_) -
    reinterpret_cast<char*>(&colldetcfg_clearregions_)) + sizeof(colldetcfg_mindetecttime_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Colldetcfg_400)
}

void Colldetcfg_400::SharedCtor() {
  ::memset(&colldetcfg_clearregions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&colldetcfg_mindetecttime_) -
      reinterpret_cast<char*>(&colldetcfg_clearregions_)) + sizeof(colldetcfg_mindetecttime_));
}

Colldetcfg_400::~Colldetcfg_400() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Colldetcfg_400)
  SharedDtor();
}

void Colldetcfg_400::SharedDtor() {
}

void Colldetcfg_400::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Colldetcfg_400& Colldetcfg_400::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Colldetcfg_400.base);
  return *internal_default_instance();
}


void Colldetcfg_400::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Colldetcfg_400)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&colldetcfg_clearregions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&colldetcfg_mindetecttime_) -
      reinterpret_cast<char*>(&colldetcfg_clearregions_)) + sizeof(colldetcfg_mindetecttime_));
  _internal_metadata_.Clear();
}

bool Colldetcfg_400::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Colldetcfg_400)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_clearregionsType colldetcfg_clearregions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_colldetcfg_clearregions(static_cast< ::Calmcar::drivers::F_RADAR::Colldetcfg_400_Colldetcfg_clearregionsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_warningresetType colldetcfg_warningreset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_colldetcfg_warningreset(static_cast< ::Calmcar::drivers::F_RADAR::Colldetcfg_400_Colldetcfg_warningresetType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_activateType colldetcfg_activate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_colldetcfg_activate(static_cast< ::Calmcar::drivers::F_RADAR::Colldetcfg_400_Colldetcfg_activateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_mintime_validType colldetcfg_mintime_valid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_colldetcfg_mintime_valid(static_cast< ::Calmcar::drivers::F_RADAR::Colldetcfg_400_Colldetcfg_mintime_validType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double colldetcfg_mindetecttime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &colldetcfg_mindetecttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Colldetcfg_400)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Colldetcfg_400)
  return false;
#undef DO_
}

void Colldetcfg_400::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Colldetcfg_400)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_clearregionsType colldetcfg_clearregions = 1;
  if (this->colldetcfg_clearregions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->colldetcfg_clearregions(), output);
  }

  // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_warningresetType colldetcfg_warningreset = 2;
  if (this->colldetcfg_warningreset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->colldetcfg_warningreset(), output);
  }

  // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_activateType colldetcfg_activate = 3;
  if (this->colldetcfg_activate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->colldetcfg_activate(), output);
  }

  // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_mintime_validType colldetcfg_mintime_valid = 4;
  if (this->colldetcfg_mintime_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->colldetcfg_mintime_valid(), output);
  }

  // double colldetcfg_mindetecttime = 5;
  if (this->colldetcfg_mindetecttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->colldetcfg_mindetecttime(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Colldetcfg_400)
}

size_t Colldetcfg_400::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Colldetcfg_400)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_clearregionsType colldetcfg_clearregions = 1;
  if (this->colldetcfg_clearregions() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->colldetcfg_clearregions());
  }

  // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_warningresetType colldetcfg_warningreset = 2;
  if (this->colldetcfg_warningreset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->colldetcfg_warningreset());
  }

  // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_activateType colldetcfg_activate = 3;
  if (this->colldetcfg_activate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->colldetcfg_activate());
  }

  // .Calmcar.drivers.F_RADAR.Colldetcfg_400.Colldetcfg_mintime_validType colldetcfg_mintime_valid = 4;
  if (this->colldetcfg_mintime_valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->colldetcfg_mintime_valid());
  }

  // double colldetcfg_mindetecttime = 5;
  if (this->colldetcfg_mindetecttime() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Colldetcfg_400::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Colldetcfg_400*>(&from));
}

void Colldetcfg_400::MergeFrom(const Colldetcfg_400& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Colldetcfg_400)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.colldetcfg_clearregions() != 0) {
    set_colldetcfg_clearregions(from.colldetcfg_clearregions());
  }
  if (from.colldetcfg_warningreset() != 0) {
    set_colldetcfg_warningreset(from.colldetcfg_warningreset());
  }
  if (from.colldetcfg_activate() != 0) {
    set_colldetcfg_activate(from.colldetcfg_activate());
  }
  if (from.colldetcfg_mintime_valid() != 0) {
    set_colldetcfg_mintime_valid(from.colldetcfg_mintime_valid());
  }
  if (from.colldetcfg_mindetecttime() != 0) {
    set_colldetcfg_mindetecttime(from.colldetcfg_mindetecttime());
  }
}

void Colldetcfg_400::CopyFrom(const Colldetcfg_400& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Colldetcfg_400)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Colldetcfg_400::IsInitialized() const {
  return true;
}

void Colldetcfg_400::Swap(Colldetcfg_400* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Colldetcfg_400::InternalSwap(Colldetcfg_400* other) {
  using std::swap;
  swap(colldetcfg_clearregions_, other->colldetcfg_clearregions_);
  swap(colldetcfg_warningreset_, other->colldetcfg_warningreset_);
  swap(colldetcfg_activate_, other->colldetcfg_activate_);
  swap(colldetcfg_mintime_valid_, other->colldetcfg_mintime_valid_);
  swap(colldetcfg_mindetecttime_, other->colldetcfg_mindetecttime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Colldetcfg_400::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Colldetcfg_400";
}


// ===================================================================

void Colldetrelayctrl_8::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Colldetrelayctrl_8::kColldetrelayctrlParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Colldetrelayctrl_8::Colldetrelayctrl_8()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Colldetrelayctrl_8.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
}
Colldetrelayctrl_8::Colldetrelayctrl_8(const Colldetrelayctrl_8& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  colldetrelayctrl_param_ = from.colldetrelayctrl_param_;
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
}

void Colldetrelayctrl_8::SharedCtor() {
  colldetrelayctrl_param_ = 0;
}

Colldetrelayctrl_8::~Colldetrelayctrl_8() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
  SharedDtor();
}

void Colldetrelayctrl_8::SharedDtor() {
}

void Colldetrelayctrl_8::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Colldetrelayctrl_8& Colldetrelayctrl_8::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Colldetrelayctrl_8.base);
  return *internal_default_instance();
}


void Colldetrelayctrl_8::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  colldetrelayctrl_param_ = 0;
  _internal_metadata_.Clear();
}

bool Colldetrelayctrl_8::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 colldetrelayctrl_param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &colldetrelayctrl_param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
  return false;
#undef DO_
}

void Colldetrelayctrl_8::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 colldetrelayctrl_param = 1;
  if (this->colldetrelayctrl_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->colldetrelayctrl_param(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
}

size_t Colldetrelayctrl_8::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 colldetrelayctrl_param = 1;
  if (this->colldetrelayctrl_param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->colldetrelayctrl_param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Colldetrelayctrl_8::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Colldetrelayctrl_8*>(&from));
}

void Colldetrelayctrl_8::MergeFrom(const Colldetrelayctrl_8& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.colldetrelayctrl_param() != 0) {
    set_colldetrelayctrl_param(from.colldetrelayctrl_param());
  }
}

void Colldetrelayctrl_8::CopyFrom(const Colldetrelayctrl_8& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Colldetrelayctrl_8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Colldetrelayctrl_8::IsInitialized() const {
  return true;
}

void Colldetrelayctrl_8::Swap(Colldetrelayctrl_8* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Colldetrelayctrl_8::InternalSwap(Colldetrelayctrl_8* other) {
  using std::swap;
  swap(colldetrelayctrl_param_, other->colldetrelayctrl_param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Colldetrelayctrl_8::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Colldetrelayctrl_8";
}


// ===================================================================

void Colldetstate_408::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Colldetstate_408::kColldetstateMeascounterFieldNumber;
const int Colldetstate_408::kColldetstateActiveFieldNumber;
const int Colldetstate_408::kColldetstateNofregionsFieldNumber;
const int Colldetstate_408::kColldetstateMindetecttimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Colldetstate_408::Colldetstate_408()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_Colldetstate_408.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.Colldetstate_408)
}
Colldetstate_408::Colldetstate_408(const Colldetstate_408& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&colldetstate_meascounter_, &from.colldetstate_meascounter_,
    static_cast<size_t>(reinterpret_cast<char*>(&colldetstate_nofregions_) -
    reinterpret_cast<char*>(&colldetstate_meascounter_)) + sizeof(colldetstate_nofregions_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.Colldetstate_408)
}

void Colldetstate_408::SharedCtor() {
  ::memset(&colldetstate_meascounter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&colldetstate_nofregions_) -
      reinterpret_cast<char*>(&colldetstate_meascounter_)) + sizeof(colldetstate_nofregions_));
}

Colldetstate_408::~Colldetstate_408() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.Colldetstate_408)
  SharedDtor();
}

void Colldetstate_408::SharedDtor() {
}

void Colldetstate_408::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Colldetstate_408& Colldetstate_408::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_Colldetstate_408.base);
  return *internal_default_instance();
}


void Colldetstate_408::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.Colldetstate_408)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&colldetstate_meascounter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&colldetstate_nofregions_) -
      reinterpret_cast<char*>(&colldetstate_meascounter_)) + sizeof(colldetstate_nofregions_));
  _internal_metadata_.Clear();
}

bool Colldetstate_408::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.Colldetstate_408)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 colldetstate_meascounter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &colldetstate_meascounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Colldetstate_408.Colldetstate_activeType colldetstate_active = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_colldetstate_active(static_cast< ::Calmcar::drivers::F_RADAR::Colldetstate_408_Colldetstate_activeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 colldetstate_nofregions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &colldetstate_nofregions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double colldetstate_mindetecttime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &colldetstate_mindetecttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.Colldetstate_408)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.Colldetstate_408)
  return false;
#undef DO_
}

void Colldetstate_408::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.Colldetstate_408)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 colldetstate_meascounter = 1;
  if (this->colldetstate_meascounter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->colldetstate_meascounter(), output);
  }

  // .Calmcar.drivers.F_RADAR.Colldetstate_408.Colldetstate_activeType colldetstate_active = 2;
  if (this->colldetstate_active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->colldetstate_active(), output);
  }

  // int32 colldetstate_nofregions = 3;
  if (this->colldetstate_nofregions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->colldetstate_nofregions(), output);
  }

  // double colldetstate_mindetecttime = 4;
  if (this->colldetstate_mindetecttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->colldetstate_mindetecttime(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.Colldetstate_408)
}

size_t Colldetstate_408::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.Colldetstate_408)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 colldetstate_meascounter = 1;
  if (this->colldetstate_meascounter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->colldetstate_meascounter());
  }

  // .Calmcar.drivers.F_RADAR.Colldetstate_408.Colldetstate_activeType colldetstate_active = 2;
  if (this->colldetstate_active() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->colldetstate_active());
  }

  // double colldetstate_mindetecttime = 4;
  if (this->colldetstate_mindetecttime() != 0) {
    total_size += 1 + 8;
  }

  // int32 colldetstate_nofregions = 3;
  if (this->colldetstate_nofregions() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->colldetstate_nofregions());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Colldetstate_408::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Colldetstate_408*>(&from));
}

void Colldetstate_408::MergeFrom(const Colldetstate_408& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.Colldetstate_408)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.colldetstate_meascounter() != 0) {
    set_colldetstate_meascounter(from.colldetstate_meascounter());
  }
  if (from.colldetstate_active() != 0) {
    set_colldetstate_active(from.colldetstate_active());
  }
  if (from.colldetstate_mindetecttime() != 0) {
    set_colldetstate_mindetecttime(from.colldetstate_mindetecttime());
  }
  if (from.colldetstate_nofregions() != 0) {
    set_colldetstate_nofregions(from.colldetstate_nofregions());
  }
}

void Colldetstate_408::CopyFrom(const Colldetstate_408& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.Colldetstate_408)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Colldetstate_408::IsInitialized() const {
  return true;
}

void Colldetstate_408::Swap(Colldetstate_408* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Colldetstate_408::InternalSwap(Colldetstate_408* other) {
  using std::swap;
  swap(colldetstate_meascounter_, other->colldetstate_meascounter_);
  swap(colldetstate_active_, other->colldetstate_active_);
  swap(colldetstate_mindetecttime_, other->colldetstate_mindetecttime_);
  swap(colldetstate_nofregions_, other->colldetstate_nofregions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Colldetstate_408::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.Colldetstate_408";
}


// ===================================================================

F_radar_ArsodmapEntry_DoNotUse::F_radar_ArsodmapEntry_DoNotUse() {}
F_radar_ArsodmapEntry_DoNotUse::F_radar_ArsodmapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void F_radar_ArsodmapEntry_DoNotUse::MergeFrom(const F_radar_ArsodmapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

void F_radar::InitAsDefaultInstance() {
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->header_ = const_cast< ::Calmcar::common::Header*>(
      ::Calmcar::common::Header::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->radarstate_201_ = const_cast< ::Calmcar::drivers::F_RADAR::Radarstate_201*>(
      ::Calmcar::drivers::F_RADAR::Radarstate_201::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->radarconfiguration_200_ = const_cast< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200*>(
      ::Calmcar::drivers::F_RADAR::Radarconfiguration_200::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->filterstate_header_203_ = const_cast< ::Calmcar::drivers::F_RADAR::Filterstate_header_203*>(
      ::Calmcar::drivers::F_RADAR::Filterstate_header_203::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->filtercfg_202_ = const_cast< ::Calmcar::drivers::F_RADAR::Filtercfg_202*>(
      ::Calmcar::drivers::F_RADAR::Filtercfg_202::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->filterstate_cfg_204_ = const_cast< ::Calmcar::drivers::F_RADAR::Filterstate_cfg_204*>(
      ::Calmcar::drivers::F_RADAR::Filterstate_cfg_204::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->speedinformation_300_ = const_cast< ::Calmcar::drivers::F_RADAR::Speedinformation_300*>(
      ::Calmcar::drivers::F_RADAR::Speedinformation_300::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->yawrateinformation_301_ = const_cast< ::Calmcar::drivers::F_RADAR::Yawrateinformation_301*>(
      ::Calmcar::drivers::F_RADAR::Yawrateinformation_301::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->versionid_700_ = const_cast< ::Calmcar::drivers::F_RADAR::Versionid_700*>(
      ::Calmcar::drivers::F_RADAR::Versionid_700::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->cluster_1_general_701_ = const_cast< ::Calmcar::drivers::F_RADAR::Cluster_1_general_701*>(
      ::Calmcar::drivers::F_RADAR::Cluster_1_general_701::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->cluster_2_quality_702_ = const_cast< ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702*>(
      ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->obj_4_warning_60e_ = const_cast< ::Calmcar::drivers::F_RADAR::Obj_4_warning_60e*>(
      ::Calmcar::drivers::F_RADAR::Obj_4_warning_60e::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->obj_3_extended_60d_ = const_cast< ::Calmcar::drivers::F_RADAR::Obj_3_extended_60d*>(
      ::Calmcar::drivers::F_RADAR::Obj_3_extended_60d::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->obj_0_status_60a_ = const_cast< ::Calmcar::drivers::F_RADAR::Obj_0_status_60a*>(
      ::Calmcar::drivers::F_RADAR::Obj_0_status_60a::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->obj_2_quality_60c_ = const_cast< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c*>(
      ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->obj_1_general_60b_ = const_cast< ::Calmcar::drivers::F_RADAR::Obj_1_general_60b*>(
      ::Calmcar::drivers::F_RADAR::Obj_1_general_60b::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->cluster_0_status_600_ = const_cast< ::Calmcar::drivers::F_RADAR::Cluster_0_status_600*>(
      ::Calmcar::drivers::F_RADAR::Cluster_0_status_600::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->colldetregionstate_402_ = const_cast< ::Calmcar::drivers::F_RADAR::Colldetregionstate_402*>(
      ::Calmcar::drivers::F_RADAR::Colldetregionstate_402::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->colldetregioncfg_401_ = const_cast< ::Calmcar::drivers::F_RADAR::Colldetregioncfg_401*>(
      ::Calmcar::drivers::F_RADAR::Colldetregioncfg_401::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->colldetcfg_400_ = const_cast< ::Calmcar::drivers::F_RADAR::Colldetcfg_400*>(
      ::Calmcar::drivers::F_RADAR::Colldetcfg_400::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->colldetrelayctrl_8_ = const_cast< ::Calmcar::drivers::F_RADAR::Colldetrelayctrl_8*>(
      ::Calmcar::drivers::F_RADAR::Colldetrelayctrl_8::internal_default_instance());
  ::Calmcar::drivers::F_RADAR::_F_radar_default_instance_._instance.get_mutable()->colldetstate_408_ = const_cast< ::Calmcar::drivers::F_RADAR::Colldetstate_408*>(
      ::Calmcar::drivers::F_RADAR::Colldetstate_408::internal_default_instance());
}
void F_radar::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int F_radar::kHeaderFieldNumber;
const int F_radar::kRadarstate201FieldNumber;
const int F_radar::kRadarconfiguration200FieldNumber;
const int F_radar::kFilterstateHeader203FieldNumber;
const int F_radar::kFiltercfg202FieldNumber;
const int F_radar::kFilterstateCfg204FieldNumber;
const int F_radar::kSpeedinformation300FieldNumber;
const int F_radar::kYawrateinformation301FieldNumber;
const int F_radar::kVersionid700FieldNumber;
const int F_radar::kCluster1General701FieldNumber;
const int F_radar::kCluster2Quality702FieldNumber;
const int F_radar::kObj4Warning60EFieldNumber;
const int F_radar::kObj3Extended60DFieldNumber;
const int F_radar::kObj0Status60AFieldNumber;
const int F_radar::kObj2Quality60CFieldNumber;
const int F_radar::kObj1General60BFieldNumber;
const int F_radar::kCluster0Status600FieldNumber;
const int F_radar::kColldetregionstate402FieldNumber;
const int F_radar::kColldetregioncfg401FieldNumber;
const int F_radar::kColldetcfg400FieldNumber;
const int F_radar::kColldetrelayctrl8FieldNumber;
const int F_radar::kColldetstate408FieldNumber;
const int F_radar::kRadarArsOdTimestampFieldNumber;
const int F_radar::kIsnewobj60BFieldNumber;
const int F_radar::kIsnewobj60CFieldNumber;
const int F_radar::kIsnewobj60DFieldNumber;
const int F_radar::kArsodmapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

F_radar::F_radar()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_f_5fradar_2eproto::scc_info_F_radar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.F_RADAR.F_radar)
}
F_radar::F_radar(const F_radar& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  arsodmap_.MergeFrom(from.arsodmap_);
  if (from.has_header()) {
    header_ = new ::Calmcar::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_radarstate_201()) {
    radarstate_201_ = new ::Calmcar::drivers::F_RADAR::Radarstate_201(*from.radarstate_201_);
  } else {
    radarstate_201_ = NULL;
  }
  if (from.has_radarconfiguration_200()) {
    radarconfiguration_200_ = new ::Calmcar::drivers::F_RADAR::Radarconfiguration_200(*from.radarconfiguration_200_);
  } else {
    radarconfiguration_200_ = NULL;
  }
  if (from.has_filterstate_header_203()) {
    filterstate_header_203_ = new ::Calmcar::drivers::F_RADAR::Filterstate_header_203(*from.filterstate_header_203_);
  } else {
    filterstate_header_203_ = NULL;
  }
  if (from.has_filtercfg_202()) {
    filtercfg_202_ = new ::Calmcar::drivers::F_RADAR::Filtercfg_202(*from.filtercfg_202_);
  } else {
    filtercfg_202_ = NULL;
  }
  if (from.has_filterstate_cfg_204()) {
    filterstate_cfg_204_ = new ::Calmcar::drivers::F_RADAR::Filterstate_cfg_204(*from.filterstate_cfg_204_);
  } else {
    filterstate_cfg_204_ = NULL;
  }
  if (from.has_speedinformation_300()) {
    speedinformation_300_ = new ::Calmcar::drivers::F_RADAR::Speedinformation_300(*from.speedinformation_300_);
  } else {
    speedinformation_300_ = NULL;
  }
  if (from.has_yawrateinformation_301()) {
    yawrateinformation_301_ = new ::Calmcar::drivers::F_RADAR::Yawrateinformation_301(*from.yawrateinformation_301_);
  } else {
    yawrateinformation_301_ = NULL;
  }
  if (from.has_versionid_700()) {
    versionid_700_ = new ::Calmcar::drivers::F_RADAR::Versionid_700(*from.versionid_700_);
  } else {
    versionid_700_ = NULL;
  }
  if (from.has_cluster_1_general_701()) {
    cluster_1_general_701_ = new ::Calmcar::drivers::F_RADAR::Cluster_1_general_701(*from.cluster_1_general_701_);
  } else {
    cluster_1_general_701_ = NULL;
  }
  if (from.has_cluster_2_quality_702()) {
    cluster_2_quality_702_ = new ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702(*from.cluster_2_quality_702_);
  } else {
    cluster_2_quality_702_ = NULL;
  }
  if (from.has_obj_4_warning_60e()) {
    obj_4_warning_60e_ = new ::Calmcar::drivers::F_RADAR::Obj_4_warning_60e(*from.obj_4_warning_60e_);
  } else {
    obj_4_warning_60e_ = NULL;
  }
  if (from.has_obj_3_extended_60d()) {
    obj_3_extended_60d_ = new ::Calmcar::drivers::F_RADAR::Obj_3_extended_60d(*from.obj_3_extended_60d_);
  } else {
    obj_3_extended_60d_ = NULL;
  }
  if (from.has_obj_0_status_60a()) {
    obj_0_status_60a_ = new ::Calmcar::drivers::F_RADAR::Obj_0_status_60a(*from.obj_0_status_60a_);
  } else {
    obj_0_status_60a_ = NULL;
  }
  if (from.has_obj_2_quality_60c()) {
    obj_2_quality_60c_ = new ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c(*from.obj_2_quality_60c_);
  } else {
    obj_2_quality_60c_ = NULL;
  }
  if (from.has_obj_1_general_60b()) {
    obj_1_general_60b_ = new ::Calmcar::drivers::F_RADAR::Obj_1_general_60b(*from.obj_1_general_60b_);
  } else {
    obj_1_general_60b_ = NULL;
  }
  if (from.has_cluster_0_status_600()) {
    cluster_0_status_600_ = new ::Calmcar::drivers::F_RADAR::Cluster_0_status_600(*from.cluster_0_status_600_);
  } else {
    cluster_0_status_600_ = NULL;
  }
  if (from.has_colldetregionstate_402()) {
    colldetregionstate_402_ = new ::Calmcar::drivers::F_RADAR::Colldetregionstate_402(*from.colldetregionstate_402_);
  } else {
    colldetregionstate_402_ = NULL;
  }
  if (from.has_colldetregioncfg_401()) {
    colldetregioncfg_401_ = new ::Calmcar::drivers::F_RADAR::Colldetregioncfg_401(*from.colldetregioncfg_401_);
  } else {
    colldetregioncfg_401_ = NULL;
  }
  if (from.has_colldetcfg_400()) {
    colldetcfg_400_ = new ::Calmcar::drivers::F_RADAR::Colldetcfg_400(*from.colldetcfg_400_);
  } else {
    colldetcfg_400_ = NULL;
  }
  if (from.has_colldetrelayctrl_8()) {
    colldetrelayctrl_8_ = new ::Calmcar::drivers::F_RADAR::Colldetrelayctrl_8(*from.colldetrelayctrl_8_);
  } else {
    colldetrelayctrl_8_ = NULL;
  }
  if (from.has_colldetstate_408()) {
    colldetstate_408_ = new ::Calmcar::drivers::F_RADAR::Colldetstate_408(*from.colldetstate_408_);
  } else {
    colldetstate_408_ = NULL;
  }
  ::memcpy(&radar_ars_od_timestamp_, &from.radar_ars_od_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&isnewobj_60d_) -
    reinterpret_cast<char*>(&radar_ars_od_timestamp_)) + sizeof(isnewobj_60d_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.F_RADAR.F_radar)
}

void F_radar::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isnewobj_60d_) -
      reinterpret_cast<char*>(&header_)) + sizeof(isnewobj_60d_));
}

F_radar::~F_radar() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.F_RADAR.F_radar)
  SharedDtor();
}

void F_radar::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete radarstate_201_;
  if (this != internal_default_instance()) delete radarconfiguration_200_;
  if (this != internal_default_instance()) delete filterstate_header_203_;
  if (this != internal_default_instance()) delete filtercfg_202_;
  if (this != internal_default_instance()) delete filterstate_cfg_204_;
  if (this != internal_default_instance()) delete speedinformation_300_;
  if (this != internal_default_instance()) delete yawrateinformation_301_;
  if (this != internal_default_instance()) delete versionid_700_;
  if (this != internal_default_instance()) delete cluster_1_general_701_;
  if (this != internal_default_instance()) delete cluster_2_quality_702_;
  if (this != internal_default_instance()) delete obj_4_warning_60e_;
  if (this != internal_default_instance()) delete obj_3_extended_60d_;
  if (this != internal_default_instance()) delete obj_0_status_60a_;
  if (this != internal_default_instance()) delete obj_2_quality_60c_;
  if (this != internal_default_instance()) delete obj_1_general_60b_;
  if (this != internal_default_instance()) delete cluster_0_status_600_;
  if (this != internal_default_instance()) delete colldetregionstate_402_;
  if (this != internal_default_instance()) delete colldetregioncfg_401_;
  if (this != internal_default_instance()) delete colldetcfg_400_;
  if (this != internal_default_instance()) delete colldetrelayctrl_8_;
  if (this != internal_default_instance()) delete colldetstate_408_;
}

void F_radar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const F_radar& F_radar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_f_5fradar_2eproto::scc_info_F_radar.base);
  return *internal_default_instance();
}


void F_radar::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.F_RADAR.F_radar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arsodmap_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && radarstate_201_ != NULL) {
    delete radarstate_201_;
  }
  radarstate_201_ = NULL;
  if (GetArenaNoVirtual() == NULL && radarconfiguration_200_ != NULL) {
    delete radarconfiguration_200_;
  }
  radarconfiguration_200_ = NULL;
  if (GetArenaNoVirtual() == NULL && filterstate_header_203_ != NULL) {
    delete filterstate_header_203_;
  }
  filterstate_header_203_ = NULL;
  if (GetArenaNoVirtual() == NULL && filtercfg_202_ != NULL) {
    delete filtercfg_202_;
  }
  filtercfg_202_ = NULL;
  if (GetArenaNoVirtual() == NULL && filterstate_cfg_204_ != NULL) {
    delete filterstate_cfg_204_;
  }
  filterstate_cfg_204_ = NULL;
  if (GetArenaNoVirtual() == NULL && speedinformation_300_ != NULL) {
    delete speedinformation_300_;
  }
  speedinformation_300_ = NULL;
  if (GetArenaNoVirtual() == NULL && yawrateinformation_301_ != NULL) {
    delete yawrateinformation_301_;
  }
  yawrateinformation_301_ = NULL;
  if (GetArenaNoVirtual() == NULL && versionid_700_ != NULL) {
    delete versionid_700_;
  }
  versionid_700_ = NULL;
  if (GetArenaNoVirtual() == NULL && cluster_1_general_701_ != NULL) {
    delete cluster_1_general_701_;
  }
  cluster_1_general_701_ = NULL;
  if (GetArenaNoVirtual() == NULL && cluster_2_quality_702_ != NULL) {
    delete cluster_2_quality_702_;
  }
  cluster_2_quality_702_ = NULL;
  if (GetArenaNoVirtual() == NULL && obj_4_warning_60e_ != NULL) {
    delete obj_4_warning_60e_;
  }
  obj_4_warning_60e_ = NULL;
  if (GetArenaNoVirtual() == NULL && obj_3_extended_60d_ != NULL) {
    delete obj_3_extended_60d_;
  }
  obj_3_extended_60d_ = NULL;
  if (GetArenaNoVirtual() == NULL && obj_0_status_60a_ != NULL) {
    delete obj_0_status_60a_;
  }
  obj_0_status_60a_ = NULL;
  if (GetArenaNoVirtual() == NULL && obj_2_quality_60c_ != NULL) {
    delete obj_2_quality_60c_;
  }
  obj_2_quality_60c_ = NULL;
  if (GetArenaNoVirtual() == NULL && obj_1_general_60b_ != NULL) {
    delete obj_1_general_60b_;
  }
  obj_1_general_60b_ = NULL;
  if (GetArenaNoVirtual() == NULL && cluster_0_status_600_ != NULL) {
    delete cluster_0_status_600_;
  }
  cluster_0_status_600_ = NULL;
  if (GetArenaNoVirtual() == NULL && colldetregionstate_402_ != NULL) {
    delete colldetregionstate_402_;
  }
  colldetregionstate_402_ = NULL;
  if (GetArenaNoVirtual() == NULL && colldetregioncfg_401_ != NULL) {
    delete colldetregioncfg_401_;
  }
  colldetregioncfg_401_ = NULL;
  if (GetArenaNoVirtual() == NULL && colldetcfg_400_ != NULL) {
    delete colldetcfg_400_;
  }
  colldetcfg_400_ = NULL;
  if (GetArenaNoVirtual() == NULL && colldetrelayctrl_8_ != NULL) {
    delete colldetrelayctrl_8_;
  }
  colldetrelayctrl_8_ = NULL;
  if (GetArenaNoVirtual() == NULL && colldetstate_408_ != NULL) {
    delete colldetstate_408_;
  }
  colldetstate_408_ = NULL;
  ::memset(&radar_ars_od_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isnewobj_60d_) -
      reinterpret_cast<char*>(&radar_ars_od_timestamp_)) + sizeof(isnewobj_60d_));
  _internal_metadata_.Clear();
}

bool F_radar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.F_RADAR.F_radar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarstate_201 radarstate_201 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_radarstate_201()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Radarconfiguration_200 radarconfiguration_200 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_radarconfiguration_200()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Filterstate_header_203 filterstate_header_203 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filterstate_header_203()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Filtercfg_202 filtercfg_202 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filtercfg_202()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Filterstate_cfg_204 filterstate_cfg_204 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filterstate_cfg_204()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Speedinformation_300 speedinformation_300 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_speedinformation_300()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Yawrateinformation_301 yawrateinformation_301 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_yawrateinformation_301()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Versionid_700 versionid_700 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_versionid_700()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Cluster_1_general_701 cluster_1_general_701 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster_1_general_701()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702 cluster_2_quality_702 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster_2_quality_702()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_4_warning_60e obj_4_warning_60e = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_obj_4_warning_60e()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_3_extended_60d obj_3_extended_60d = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_obj_3_extended_60d()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_0_status_60a obj_0_status_60a = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_obj_0_status_60a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c obj_2_quality_60c = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_obj_2_quality_60c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Obj_1_general_60b obj_1_general_60b = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_obj_1_general_60b()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Cluster_0_status_600 cluster_0_status_600 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster_0_status_600()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Colldetregionstate_402 colldetregionstate_402 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_colldetregionstate_402()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Colldetregioncfg_401 colldetregioncfg_401 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_colldetregioncfg_401()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Colldetcfg_400 colldetcfg_400 = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_colldetcfg_400()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Colldetrelayctrl_8 colldetrelayctrl_8 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_colldetrelayctrl_8()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.F_RADAR.Colldetstate_408 colldetstate_408 = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_colldetstate_408()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 radar_ars_od_timestamp = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &radar_ars_od_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isnewobj_60b = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isnewobj_60b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isnewobj_60c = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isnewobj_60c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isnewobj_60d = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isnewobj_60d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .Calmcar.drivers.F_RADAR.ArsObjectInfo> arsodmap = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          F_radar_ArsodmapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapFieldLite<
              F_radar_ArsodmapEntry_DoNotUse,
              ::google::protobuf::uint32, ::Calmcar::drivers::F_RADAR::ArsObjectInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::Calmcar::drivers::F_RADAR::ArsObjectInfo > > parser(&arsodmap_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.F_RADAR.F_radar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.F_RADAR.F_radar)
  return false;
#undef DO_
}

void F_radar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.F_RADAR.F_radar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.common.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201 radarstate_201 = 2;
  if (this->has_radarstate_201()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_radarstate_201(), output);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200 radarconfiguration_200 = 3;
  if (this->has_radarconfiguration_200()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_radarconfiguration_200(), output);
  }

  // .Calmcar.drivers.F_RADAR.Filterstate_header_203 filterstate_header_203 = 4;
  if (this->has_filterstate_header_203()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_filterstate_header_203(), output);
  }

  // .Calmcar.drivers.F_RADAR.Filtercfg_202 filtercfg_202 = 5;
  if (this->has_filtercfg_202()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_filtercfg_202(), output);
  }

  // .Calmcar.drivers.F_RADAR.Filterstate_cfg_204 filterstate_cfg_204 = 6;
  if (this->has_filterstate_cfg_204()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->_internal_filterstate_cfg_204(), output);
  }

  // .Calmcar.drivers.F_RADAR.Speedinformation_300 speedinformation_300 = 7;
  if (this->has_speedinformation_300()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->_internal_speedinformation_300(), output);
  }

  // .Calmcar.drivers.F_RADAR.Yawrateinformation_301 yawrateinformation_301 = 8;
  if (this->has_yawrateinformation_301()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8, this->_internal_yawrateinformation_301(), output);
  }

  // .Calmcar.drivers.F_RADAR.Versionid_700 versionid_700 = 9;
  if (this->has_versionid_700()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      9, this->_internal_versionid_700(), output);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_1_general_701 cluster_1_general_701 = 10;
  if (this->has_cluster_1_general_701()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, this->_internal_cluster_1_general_701(), output);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702 cluster_2_quality_702 = 11;
  if (this->has_cluster_2_quality_702()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, this->_internal_cluster_2_quality_702(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_4_warning_60e obj_4_warning_60e = 12;
  if (this->has_obj_4_warning_60e()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, this->_internal_obj_4_warning_60e(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_3_extended_60d obj_3_extended_60d = 13;
  if (this->has_obj_3_extended_60d()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, this->_internal_obj_3_extended_60d(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_0_status_60a obj_0_status_60a = 14;
  if (this->has_obj_0_status_60a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      14, this->_internal_obj_0_status_60a(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c obj_2_quality_60c = 15;
  if (this->has_obj_2_quality_60c()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      15, this->_internal_obj_2_quality_60c(), output);
  }

  // .Calmcar.drivers.F_RADAR.Obj_1_general_60b obj_1_general_60b = 16;
  if (this->has_obj_1_general_60b()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      16, this->_internal_obj_1_general_60b(), output);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_0_status_600 cluster_0_status_600 = 17;
  if (this->has_cluster_0_status_600()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      17, this->_internal_cluster_0_status_600(), output);
  }

  // .Calmcar.drivers.F_RADAR.Colldetregionstate_402 colldetregionstate_402 = 18;
  if (this->has_colldetregionstate_402()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      18, this->_internal_colldetregionstate_402(), output);
  }

  // .Calmcar.drivers.F_RADAR.Colldetregioncfg_401 colldetregioncfg_401 = 19;
  if (this->has_colldetregioncfg_401()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      19, this->_internal_colldetregioncfg_401(), output);
  }

  // .Calmcar.drivers.F_RADAR.Colldetcfg_400 colldetcfg_400 = 20;
  if (this->has_colldetcfg_400()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      20, this->_internal_colldetcfg_400(), output);
  }

  // .Calmcar.drivers.F_RADAR.Colldetrelayctrl_8 colldetrelayctrl_8 = 21;
  if (this->has_colldetrelayctrl_8()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      21, this->_internal_colldetrelayctrl_8(), output);
  }

  // .Calmcar.drivers.F_RADAR.Colldetstate_408 colldetstate_408 = 22;
  if (this->has_colldetstate_408()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      22, this->_internal_colldetstate_408(), output);
  }

  // uint64 radar_ars_od_timestamp = 23;
  if (this->radar_ars_od_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(23, this->radar_ars_od_timestamp(), output);
  }

  // bool isnewobj_60b = 25;
  if (this->isnewobj_60b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->isnewobj_60b(), output);
  }

  // bool isnewobj_60c = 26;
  if (this->isnewobj_60c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(26, this->isnewobj_60c(), output);
  }

  // bool isnewobj_60d = 27;
  if (this->isnewobj_60d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->isnewobj_60d(), output);
  }

  // map<uint32, .Calmcar.drivers.F_RADAR.ArsObjectInfo> arsodmap = 29;
  if (!this->arsodmap().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::Calmcar::drivers::F_RADAR::ArsObjectInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->arsodmap().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->arsodmap().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::Calmcar::drivers::F_RADAR::ArsObjectInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::Calmcar::drivers::F_RADAR::ArsObjectInfo >::const_iterator
          it = this->arsodmap().begin();
          it != this->arsodmap().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<F_radar_ArsodmapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(arsodmap_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            29, *entry, output);
      }
    } else {
      ::std::unique_ptr<F_radar_ArsodmapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::Calmcar::drivers::F_RADAR::ArsObjectInfo >::const_iterator
          it = this->arsodmap().begin();
          it != this->arsodmap().end(); ++it) {
        entry.reset(arsodmap_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            29, *entry, output);
      }
    }
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.F_RADAR.F_radar)
}

size_t F_radar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.F_RADAR.F_radar)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // map<uint32, .Calmcar.drivers.F_RADAR.ArsObjectInfo> arsodmap = 29;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->arsodmap_size());
  {
    ::std::unique_ptr<F_radar_ArsodmapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::Calmcar::drivers::F_RADAR::ArsObjectInfo >::const_iterator
        it = this->arsodmap().begin();
        it != this->arsodmap().end(); ++it) {
      entry.reset(arsodmap_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .Calmcar.common.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .Calmcar.drivers.F_RADAR.Radarstate_201 radarstate_201 = 2;
  if (this->has_radarstate_201()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *radarstate_201_);
  }

  // .Calmcar.drivers.F_RADAR.Radarconfiguration_200 radarconfiguration_200 = 3;
  if (this->has_radarconfiguration_200()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *radarconfiguration_200_);
  }

  // .Calmcar.drivers.F_RADAR.Filterstate_header_203 filterstate_header_203 = 4;
  if (this->has_filterstate_header_203()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *filterstate_header_203_);
  }

  // .Calmcar.drivers.F_RADAR.Filtercfg_202 filtercfg_202 = 5;
  if (this->has_filtercfg_202()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *filtercfg_202_);
  }

  // .Calmcar.drivers.F_RADAR.Filterstate_cfg_204 filterstate_cfg_204 = 6;
  if (this->has_filterstate_cfg_204()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *filterstate_cfg_204_);
  }

  // .Calmcar.drivers.F_RADAR.Speedinformation_300 speedinformation_300 = 7;
  if (this->has_speedinformation_300()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *speedinformation_300_);
  }

  // .Calmcar.drivers.F_RADAR.Yawrateinformation_301 yawrateinformation_301 = 8;
  if (this->has_yawrateinformation_301()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *yawrateinformation_301_);
  }

  // .Calmcar.drivers.F_RADAR.Versionid_700 versionid_700 = 9;
  if (this->has_versionid_700()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *versionid_700_);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_1_general_701 cluster_1_general_701 = 10;
  if (this->has_cluster_1_general_701()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cluster_1_general_701_);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_2_quality_702 cluster_2_quality_702 = 11;
  if (this->has_cluster_2_quality_702()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cluster_2_quality_702_);
  }

  // .Calmcar.drivers.F_RADAR.Obj_4_warning_60e obj_4_warning_60e = 12;
  if (this->has_obj_4_warning_60e()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *obj_4_warning_60e_);
  }

  // .Calmcar.drivers.F_RADAR.Obj_3_extended_60d obj_3_extended_60d = 13;
  if (this->has_obj_3_extended_60d()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *obj_3_extended_60d_);
  }

  // .Calmcar.drivers.F_RADAR.Obj_0_status_60a obj_0_status_60a = 14;
  if (this->has_obj_0_status_60a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *obj_0_status_60a_);
  }

  // .Calmcar.drivers.F_RADAR.Obj_2_quality_60c obj_2_quality_60c = 15;
  if (this->has_obj_2_quality_60c()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *obj_2_quality_60c_);
  }

  // .Calmcar.drivers.F_RADAR.Obj_1_general_60b obj_1_general_60b = 16;
  if (this->has_obj_1_general_60b()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *obj_1_general_60b_);
  }

  // .Calmcar.drivers.F_RADAR.Cluster_0_status_600 cluster_0_status_600 = 17;
  if (this->has_cluster_0_status_600()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cluster_0_status_600_);
  }

  // .Calmcar.drivers.F_RADAR.Colldetregionstate_402 colldetregionstate_402 = 18;
  if (this->has_colldetregionstate_402()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *colldetregionstate_402_);
  }

  // .Calmcar.drivers.F_RADAR.Colldetregioncfg_401 colldetregioncfg_401 = 19;
  if (this->has_colldetregioncfg_401()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *colldetregioncfg_401_);
  }

  // .Calmcar.drivers.F_RADAR.Colldetcfg_400 colldetcfg_400 = 20;
  if (this->has_colldetcfg_400()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *colldetcfg_400_);
  }

  // .Calmcar.drivers.F_RADAR.Colldetrelayctrl_8 colldetrelayctrl_8 = 21;
  if (this->has_colldetrelayctrl_8()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *colldetrelayctrl_8_);
  }

  // .Calmcar.drivers.F_RADAR.Colldetstate_408 colldetstate_408 = 22;
  if (this->has_colldetstate_408()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *colldetstate_408_);
  }

  // uint64 radar_ars_od_timestamp = 23;
  if (this->radar_ars_od_timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->radar_ars_od_timestamp());
  }

  // bool isnewobj_60b = 25;
  if (this->isnewobj_60b() != 0) {
    total_size += 2 + 1;
  }

  // bool isnewobj_60c = 26;
  if (this->isnewobj_60c() != 0) {
    total_size += 2 + 1;
  }

  // bool isnewobj_60d = 27;
  if (this->isnewobj_60d() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void F_radar::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const F_radar*>(&from));
}

void F_radar::MergeFrom(const F_radar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.F_RADAR.F_radar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arsodmap_.MergeFrom(from.arsodmap_);
  if (from.has_header()) {
    mutable_header()->::Calmcar::common::Header::MergeFrom(from.header());
  }
  if (from.has_radarstate_201()) {
    mutable_radarstate_201()->::Calmcar::drivers::F_RADAR::Radarstate_201::MergeFrom(from.radarstate_201());
  }
  if (from.has_radarconfiguration_200()) {
    mutable_radarconfiguration_200()->::Calmcar::drivers::F_RADAR::Radarconfiguration_200::MergeFrom(from.radarconfiguration_200());
  }
  if (from.has_filterstate_header_203()) {
    mutable_filterstate_header_203()->::Calmcar::drivers::F_RADAR::Filterstate_header_203::MergeFrom(from.filterstate_header_203());
  }
  if (from.has_filtercfg_202()) {
    mutable_filtercfg_202()->::Calmcar::drivers::F_RADAR::Filtercfg_202::MergeFrom(from.filtercfg_202());
  }
  if (from.has_filterstate_cfg_204()) {
    mutable_filterstate_cfg_204()->::Calmcar::drivers::F_RADAR::Filterstate_cfg_204::MergeFrom(from.filterstate_cfg_204());
  }
  if (from.has_speedinformation_300()) {
    mutable_speedinformation_300()->::Calmcar::drivers::F_RADAR::Speedinformation_300::MergeFrom(from.speedinformation_300());
  }
  if (from.has_yawrateinformation_301()) {
    mutable_yawrateinformation_301()->::Calmcar::drivers::F_RADAR::Yawrateinformation_301::MergeFrom(from.yawrateinformation_301());
  }
  if (from.has_versionid_700()) {
    mutable_versionid_700()->::Calmcar::drivers::F_RADAR::Versionid_700::MergeFrom(from.versionid_700());
  }
  if (from.has_cluster_1_general_701()) {
    mutable_cluster_1_general_701()->::Calmcar::drivers::F_RADAR::Cluster_1_general_701::MergeFrom(from.cluster_1_general_701());
  }
  if (from.has_cluster_2_quality_702()) {
    mutable_cluster_2_quality_702()->::Calmcar::drivers::F_RADAR::Cluster_2_quality_702::MergeFrom(from.cluster_2_quality_702());
  }
  if (from.has_obj_4_warning_60e()) {
    mutable_obj_4_warning_60e()->::Calmcar::drivers::F_RADAR::Obj_4_warning_60e::MergeFrom(from.obj_4_warning_60e());
  }
  if (from.has_obj_3_extended_60d()) {
    mutable_obj_3_extended_60d()->::Calmcar::drivers::F_RADAR::Obj_3_extended_60d::MergeFrom(from.obj_3_extended_60d());
  }
  if (from.has_obj_0_status_60a()) {
    mutable_obj_0_status_60a()->::Calmcar::drivers::F_RADAR::Obj_0_status_60a::MergeFrom(from.obj_0_status_60a());
  }
  if (from.has_obj_2_quality_60c()) {
    mutable_obj_2_quality_60c()->::Calmcar::drivers::F_RADAR::Obj_2_quality_60c::MergeFrom(from.obj_2_quality_60c());
  }
  if (from.has_obj_1_general_60b()) {
    mutable_obj_1_general_60b()->::Calmcar::drivers::F_RADAR::Obj_1_general_60b::MergeFrom(from.obj_1_general_60b());
  }
  if (from.has_cluster_0_status_600()) {
    mutable_cluster_0_status_600()->::Calmcar::drivers::F_RADAR::Cluster_0_status_600::MergeFrom(from.cluster_0_status_600());
  }
  if (from.has_colldetregionstate_402()) {
    mutable_colldetregionstate_402()->::Calmcar::drivers::F_RADAR::Colldetregionstate_402::MergeFrom(from.colldetregionstate_402());
  }
  if (from.has_colldetregioncfg_401()) {
    mutable_colldetregioncfg_401()->::Calmcar::drivers::F_RADAR::Colldetregioncfg_401::MergeFrom(from.colldetregioncfg_401());
  }
  if (from.has_colldetcfg_400()) {
    mutable_colldetcfg_400()->::Calmcar::drivers::F_RADAR::Colldetcfg_400::MergeFrom(from.colldetcfg_400());
  }
  if (from.has_colldetrelayctrl_8()) {
    mutable_colldetrelayctrl_8()->::Calmcar::drivers::F_RADAR::Colldetrelayctrl_8::MergeFrom(from.colldetrelayctrl_8());
  }
  if (from.has_colldetstate_408()) {
    mutable_colldetstate_408()->::Calmcar::drivers::F_RADAR::Colldetstate_408::MergeFrom(from.colldetstate_408());
  }
  if (from.radar_ars_od_timestamp() != 0) {
    set_radar_ars_od_timestamp(from.radar_ars_od_timestamp());
  }
  if (from.isnewobj_60b() != 0) {
    set_isnewobj_60b(from.isnewobj_60b());
  }
  if (from.isnewobj_60c() != 0) {
    set_isnewobj_60c(from.isnewobj_60c());
  }
  if (from.isnewobj_60d() != 0) {
    set_isnewobj_60d(from.isnewobj_60d());
  }
}

void F_radar::CopyFrom(const F_radar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.F_RADAR.F_radar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool F_radar::IsInitialized() const {
  return true;
}

void F_radar::Swap(F_radar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void F_radar::InternalSwap(F_radar* other) {
  using std::swap;
  arsodmap_.Swap(&other->arsodmap_);
  swap(header_, other->header_);
  swap(radarstate_201_, other->radarstate_201_);
  swap(radarconfiguration_200_, other->radarconfiguration_200_);
  swap(filterstate_header_203_, other->filterstate_header_203_);
  swap(filtercfg_202_, other->filtercfg_202_);
  swap(filterstate_cfg_204_, other->filterstate_cfg_204_);
  swap(speedinformation_300_, other->speedinformation_300_);
  swap(yawrateinformation_301_, other->yawrateinformation_301_);
  swap(versionid_700_, other->versionid_700_);
  swap(cluster_1_general_701_, other->cluster_1_general_701_);
  swap(cluster_2_quality_702_, other->cluster_2_quality_702_);
  swap(obj_4_warning_60e_, other->obj_4_warning_60e_);
  swap(obj_3_extended_60d_, other->obj_3_extended_60d_);
  swap(obj_0_status_60a_, other->obj_0_status_60a_);
  swap(obj_2_quality_60c_, other->obj_2_quality_60c_);
  swap(obj_1_general_60b_, other->obj_1_general_60b_);
  swap(cluster_0_status_600_, other->cluster_0_status_600_);
  swap(colldetregionstate_402_, other->colldetregionstate_402_);
  swap(colldetregioncfg_401_, other->colldetregioncfg_401_);
  swap(colldetcfg_400_, other->colldetcfg_400_);
  swap(colldetrelayctrl_8_, other->colldetrelayctrl_8_);
  swap(colldetstate_408_, other->colldetstate_408_);
  swap(radar_ars_od_timestamp_, other->radar_ars_od_timestamp_);
  swap(isnewobj_60b_, other->isnewobj_60b_);
  swap(isnewobj_60c_, other->isnewobj_60c_);
  swap(isnewobj_60d_, other->isnewobj_60d_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string F_radar::GetTypeName() const {
  return "Calmcar.drivers.F_RADAR.F_radar";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace F_RADAR
}  // namespace drivers
}  // namespace Calmcar
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::ArsObjectInfo* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::ArsObjectInfo >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::ArsObjectInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Radarstate_201* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Radarstate_201 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Radarstate_201 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Radarconfiguration_200* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Radarconfiguration_200 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Filterstate_header_203* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Filterstate_header_203 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Filterstate_header_203 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Filtercfg_202* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Filtercfg_202 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Filtercfg_202 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Filterstate_cfg_204* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Filterstate_cfg_204 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Filterstate_cfg_204 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Speedinformation_300* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Speedinformation_300 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Speedinformation_300 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Yawrateinformation_301* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Yawrateinformation_301 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Yawrateinformation_301 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Versionid_700* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Versionid_700 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Versionid_700 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Cluster_1_general_701* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Cluster_1_general_701 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Cluster_1_general_701 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Cluster_2_quality_702 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Obj_4_warning_60e* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Obj_4_warning_60e >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Obj_4_warning_60e >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Obj_3_extended_60d* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Obj_3_extended_60d >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Obj_3_extended_60d >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Obj_0_status_60a* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Obj_0_status_60a >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Obj_0_status_60a >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Obj_2_quality_60c >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Obj_1_general_60b* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Obj_1_general_60b >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Obj_1_general_60b >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Cluster_0_status_600* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Cluster_0_status_600 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Cluster_0_status_600 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Colldetregionstate_402* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Colldetregionstate_402 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Colldetregionstate_402 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Colldetregioncfg_401* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Colldetregioncfg_401 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Colldetregioncfg_401 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Colldetcfg_400* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Colldetcfg_400 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Colldetcfg_400 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Colldetrelayctrl_8* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Colldetrelayctrl_8 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Colldetrelayctrl_8 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::Colldetstate_408* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::Colldetstate_408 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::Colldetstate_408 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::F_radar_ArsodmapEntry_DoNotUse* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::F_radar_ArsodmapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::F_radar_ArsodmapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::F_RADAR::F_radar* Arena::CreateMaybeMessage< ::Calmcar::drivers::F_RADAR::F_radar >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::F_RADAR::F_radar >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
