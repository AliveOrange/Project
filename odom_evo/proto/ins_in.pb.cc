// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ins_in.proto

#include "ins_in.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ins_5fin_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ins_5fin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Frame_Header;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ins_5fin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_AngularVelocity;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ins_5fin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_DataInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ins_5fin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_LinearAcceleration;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ins_5fin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_Orientation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ins_5fin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_Position;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ins_5fin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_Speed;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ins_5fin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_Std;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ins_5fin_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_Ins;
}  // namespace protobuf_ins_5fin_2eproto
namespace ins_in {
namespace proto {
class Ins_AngularVelocityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_AngularVelocity>
      _instance;
} _Ins_AngularVelocity_default_instance_;
class Ins_LinearAccelerationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_LinearAcceleration>
      _instance;
} _Ins_LinearAcceleration_default_instance_;
class Ins_OrientationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_Orientation>
      _instance;
} _Ins_Orientation_default_instance_;
class Ins_PositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_Position>
      _instance;
} _Ins_Position_default_instance_;
class Ins_SpeedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_Speed>
      _instance;
} _Ins_Speed_default_instance_;
class Ins_DataInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_DataInfo>
      _instance;
} _Ins_DataInfo_default_instance_;
class Ins_StdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_Std>
      _instance;
} _Ins_Std_default_instance_;
class InsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins>
      _instance;
} _Ins_default_instance_;
class Frame_HeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Frame_Header>
      _instance;
} _Frame_Header_default_instance_;
class FrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Frame>
      _instance;
} _Frame_default_instance_;
}  // namespace proto
}  // namespace ins_in
namespace protobuf_ins_5fin_2eproto {
static void InitDefaultsIns_AngularVelocity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ins_in::proto::_Ins_AngularVelocity_default_instance_;
    new (ptr) ::ins_in::proto::Ins_AngularVelocity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ins_in::proto::Ins_AngularVelocity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_AngularVelocity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_AngularVelocity}, {}};

static void InitDefaultsIns_LinearAcceleration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ins_in::proto::_Ins_LinearAcceleration_default_instance_;
    new (ptr) ::ins_in::proto::Ins_LinearAcceleration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ins_in::proto::Ins_LinearAcceleration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_LinearAcceleration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_LinearAcceleration}, {}};

static void InitDefaultsIns_Orientation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ins_in::proto::_Ins_Orientation_default_instance_;
    new (ptr) ::ins_in::proto::Ins_Orientation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ins_in::proto::Ins_Orientation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_Orientation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_Orientation}, {}};

static void InitDefaultsIns_Position() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ins_in::proto::_Ins_Position_default_instance_;
    new (ptr) ::ins_in::proto::Ins_Position();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ins_in::proto::Ins_Position::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_Position =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_Position}, {}};

static void InitDefaultsIns_Speed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ins_in::proto::_Ins_Speed_default_instance_;
    new (ptr) ::ins_in::proto::Ins_Speed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ins_in::proto::Ins_Speed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_Speed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_Speed}, {}};

static void InitDefaultsIns_DataInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ins_in::proto::_Ins_DataInfo_default_instance_;
    new (ptr) ::ins_in::proto::Ins_DataInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ins_in::proto::Ins_DataInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_DataInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_DataInfo}, {}};

static void InitDefaultsIns_Std() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ins_in::proto::_Ins_Std_default_instance_;
    new (ptr) ::ins_in::proto::Ins_Std();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ins_in::proto::Ins_Std::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_Std =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_Std}, {}};

static void InitDefaultsIns() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ins_in::proto::_Ins_default_instance_;
    new (ptr) ::ins_in::proto::Ins();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ins_in::proto::Ins::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_Ins =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsIns}, {
      &protobuf_ins_5fin_2eproto::scc_info_Ins_AngularVelocity.base,
      &protobuf_ins_5fin_2eproto::scc_info_Ins_LinearAcceleration.base,
      &protobuf_ins_5fin_2eproto::scc_info_Ins_Orientation.base,
      &protobuf_ins_5fin_2eproto::scc_info_Ins_Position.base,
      &protobuf_ins_5fin_2eproto::scc_info_Ins_Speed.base,
      &protobuf_ins_5fin_2eproto::scc_info_Ins_DataInfo.base,
      &protobuf_ins_5fin_2eproto::scc_info_Ins_Std.base,}};

static void InitDefaultsFrame_Header() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ins_in::proto::_Frame_Header_default_instance_;
    new (ptr) ::ins_in::proto::Frame_Header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ins_in::proto::Frame_Header::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Frame_Header =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFrame_Header}, {}};

static void InitDefaultsFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ins_in::proto::_Frame_default_instance_;
    new (ptr) ::ins_in::proto::Frame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ins_in::proto::Frame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Frame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFrame}, {
      &protobuf_ins_5fin_2eproto::scc_info_Frame_Header.base,
      &protobuf_ins_5fin_2eproto::scc_info_Ins.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_AngularVelocity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_LinearAcceleration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_Orientation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_Position.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_Speed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_DataInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_Std.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Frame_Header.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Frame.base);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_AngularVelocity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_AngularVelocity, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_AngularVelocity, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_AngularVelocity, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_LinearAcceleration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_LinearAcceleration, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_LinearAcceleration, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_LinearAcceleration, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Orientation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Orientation, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Orientation, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Orientation, heading_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Position, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Position, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Position, altitude_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Speed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Speed, east_spd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Speed, north_spd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Speed, to_ground_spd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_DataInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_DataInfo, gnss_age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_DataInfo, car_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_DataInfo, gnss_flag_heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_DataInfo, num_sv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_DataInfo, gnss_flag_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_DataInfo, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Std, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Std, latitude_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Std, longitude_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Std, altitude_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins_Std, heading_std_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins, angular_velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins, linear_acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins, orientation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins, data_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Ins, std_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Frame_Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Frame_Header, ins_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Frame_Header, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Frame_Header, rolling_counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Frame_Header, frame_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Frame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Frame, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Frame, sys_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ins_in::proto::Frame, ins_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ins_in::proto::Ins_AngularVelocity)},
  { 8, -1, sizeof(::ins_in::proto::Ins_LinearAcceleration)},
  { 16, -1, sizeof(::ins_in::proto::Ins_Orientation)},
  { 24, -1, sizeof(::ins_in::proto::Ins_Position)},
  { 32, -1, sizeof(::ins_in::proto::Ins_Speed)},
  { 40, -1, sizeof(::ins_in::proto::Ins_DataInfo)},
  { 51, -1, sizeof(::ins_in::proto::Ins_Std)},
  { 60, -1, sizeof(::ins_in::proto::Ins)},
  { 72, -1, sizeof(::ins_in::proto::Frame_Header)},
  { 81, -1, sizeof(::ins_in::proto::Frame)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ins_in::proto::_Ins_AngularVelocity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ins_in::proto::_Ins_LinearAcceleration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ins_in::proto::_Ins_Orientation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ins_in::proto::_Ins_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ins_in::proto::_Ins_Speed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ins_in::proto::_Ins_DataInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ins_in::proto::_Ins_Std_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ins_in::proto::_Ins_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ins_in::proto::_Frame_Header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ins_in::proto::_Frame_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ins_in.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014ins_in.proto\022\014ins_in.proto\"\366\006\n\003Ins\022;\n\020"
      "angular_velocity\030\001 \001(\0132!.ins_in.proto.In"
      "s.AngularVelocity\022A\n\023linear_acceleration"
      "\030\002 \001(\0132$.ins_in.proto.Ins.LinearAccelera"
      "tion\0222\n\013orientation\030\003 \001(\0132\035.ins_in.proto"
      ".Ins.Orientation\022,\n\010position\030\004 \001(\0132\032.ins"
      "_in.proto.Ins.Position\022&\n\005speed\030\005 \001(\0132\027."
      "ins_in.proto.Ins.Speed\022-\n\tdata_info\030\006 \001("
      "\0132\032.ins_in.proto.Ins.DataInfo\022\"\n\003std\030\007 \001"
      "(\0132\025.ins_in.proto.Ins.Std\0322\n\017AngularVelo"
      "city\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\0325\n"
      "\022LinearAcceleration\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001("
      "\001\022\t\n\001z\030\003 \001(\001\032;\n\013Orientation\022\r\n\005pitch\030\001 \001"
      "(\001\022\014\n\004roll\030\002 \001(\001\022\017\n\007heading\030\003 \001(\001\032A\n\010Pos"
      "ition\022\020\n\010latitude\030\001 \001(\001\022\021\n\tlongitude\030\002 \001"
      "(\001\022\020\n\010altitude\030\003 \001(\001\032C\n\005Speed\022\020\n\010east_sp"
      "d\030\001 \001(\001\022\021\n\tnorth_spd\030\002 \001(\001\022\025\n\rto_ground_"
      "spd\030\003 \001(\001\032\202\001\n\010DataInfo\022\020\n\010gnss_age\030\001 \001(\r"
      "\022\022\n\ncar_status\030\002 \001(\r\022\031\n\021gnss_flag_headin"
      "g\030\003 \001(\r\022\016\n\006num_sv\030\004 \001(\r\022\025\n\rgnss_flag_pos"
      "\030\005 \001(\r\022\016\n\006status\030\006 \001(\r\032]\n\003Std\022\024\n\014latitud"
      "e_std\030\001 \001(\001\022\025\n\rlongitude_std\030\002 \001(\001\022\024\n\014al"
      "titude_std\030\003 \001(\001\022\023\n\013heading_std\030\004 \001(\001\"\302\001"
      "\n\005Frame\022*\n\006header\030\001 \001(\0132\032.ins_in.proto.F"
      "rame.Header\022\025\n\rsys_timestamp\030\002 \001(\004\022\036\n\003in"
      "s\030\003 \001(\0132\021.ins_in.proto.Ins\032V\n\006Header\022\016\n\006"
      "ins_id\030\001 \001(\r\022\021\n\ttimestamp\030\002 \001(\004\022\027\n\017rolli"
      "ng_counter\030\003 \001(\004\022\020\n\010frame_id\030\004 \001(\tb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1122);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ins_in.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ins_5fin_2eproto
namespace ins_in {
namespace proto {

// ===================================================================

void Ins_AngularVelocity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_AngularVelocity::kXFieldNumber;
const int Ins_AngularVelocity::kYFieldNumber;
const int Ins_AngularVelocity::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_AngularVelocity::Ins_AngularVelocity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ins_5fin_2eproto::scc_info_Ins_AngularVelocity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ins_in.proto.Ins.AngularVelocity)
}
Ins_AngularVelocity::Ins_AngularVelocity(const Ins_AngularVelocity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ins_in.proto.Ins.AngularVelocity)
}

void Ins_AngularVelocity::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Ins_AngularVelocity::~Ins_AngularVelocity() {
  // @@protoc_insertion_point(destructor:ins_in.proto.Ins.AngularVelocity)
  SharedDtor();
}

void Ins_AngularVelocity::SharedDtor() {
}

void Ins_AngularVelocity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ins_AngularVelocity::descriptor() {
  ::protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ins_AngularVelocity& Ins_AngularVelocity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ins_5fin_2eproto::scc_info_Ins_AngularVelocity.base);
  return *internal_default_instance();
}


void Ins_AngularVelocity::Clear() {
// @@protoc_insertion_point(message_clear_start:ins_in.proto.Ins.AngularVelocity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Ins_AngularVelocity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ins_in.proto.Ins.AngularVelocity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ins_in.proto.Ins.AngularVelocity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ins_in.proto.Ins.AngularVelocity)
  return false;
#undef DO_
}

void Ins_AngularVelocity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ins_in.proto.Ins.AngularVelocity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ins_in.proto.Ins.AngularVelocity)
}

::google::protobuf::uint8* Ins_AngularVelocity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ins_in.proto.Ins.AngularVelocity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ins_in.proto.Ins.AngularVelocity)
  return target;
}

size_t Ins_AngularVelocity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ins_in.proto.Ins.AngularVelocity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_AngularVelocity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ins_in.proto.Ins.AngularVelocity)
  GOOGLE_DCHECK_NE(&from, this);
  const Ins_AngularVelocity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ins_AngularVelocity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ins_in.proto.Ins.AngularVelocity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ins_in.proto.Ins.AngularVelocity)
    MergeFrom(*source);
  }
}

void Ins_AngularVelocity::MergeFrom(const Ins_AngularVelocity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ins_in.proto.Ins.AngularVelocity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Ins_AngularVelocity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ins_in.proto.Ins.AngularVelocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ins_AngularVelocity::CopyFrom(const Ins_AngularVelocity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ins_in.proto.Ins.AngularVelocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_AngularVelocity::IsInitialized() const {
  return true;
}

void Ins_AngularVelocity::Swap(Ins_AngularVelocity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_AngularVelocity::InternalSwap(Ins_AngularVelocity* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ins_AngularVelocity::GetMetadata() const {
  protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ins_LinearAcceleration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_LinearAcceleration::kXFieldNumber;
const int Ins_LinearAcceleration::kYFieldNumber;
const int Ins_LinearAcceleration::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_LinearAcceleration::Ins_LinearAcceleration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ins_5fin_2eproto::scc_info_Ins_LinearAcceleration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ins_in.proto.Ins.LinearAcceleration)
}
Ins_LinearAcceleration::Ins_LinearAcceleration(const Ins_LinearAcceleration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ins_in.proto.Ins.LinearAcceleration)
}

void Ins_LinearAcceleration::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Ins_LinearAcceleration::~Ins_LinearAcceleration() {
  // @@protoc_insertion_point(destructor:ins_in.proto.Ins.LinearAcceleration)
  SharedDtor();
}

void Ins_LinearAcceleration::SharedDtor() {
}

void Ins_LinearAcceleration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ins_LinearAcceleration::descriptor() {
  ::protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ins_LinearAcceleration& Ins_LinearAcceleration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ins_5fin_2eproto::scc_info_Ins_LinearAcceleration.base);
  return *internal_default_instance();
}


void Ins_LinearAcceleration::Clear() {
// @@protoc_insertion_point(message_clear_start:ins_in.proto.Ins.LinearAcceleration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Ins_LinearAcceleration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ins_in.proto.Ins.LinearAcceleration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ins_in.proto.Ins.LinearAcceleration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ins_in.proto.Ins.LinearAcceleration)
  return false;
#undef DO_
}

void Ins_LinearAcceleration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ins_in.proto.Ins.LinearAcceleration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ins_in.proto.Ins.LinearAcceleration)
}

::google::protobuf::uint8* Ins_LinearAcceleration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ins_in.proto.Ins.LinearAcceleration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ins_in.proto.Ins.LinearAcceleration)
  return target;
}

size_t Ins_LinearAcceleration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ins_in.proto.Ins.LinearAcceleration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_LinearAcceleration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ins_in.proto.Ins.LinearAcceleration)
  GOOGLE_DCHECK_NE(&from, this);
  const Ins_LinearAcceleration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ins_LinearAcceleration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ins_in.proto.Ins.LinearAcceleration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ins_in.proto.Ins.LinearAcceleration)
    MergeFrom(*source);
  }
}

void Ins_LinearAcceleration::MergeFrom(const Ins_LinearAcceleration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ins_in.proto.Ins.LinearAcceleration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Ins_LinearAcceleration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ins_in.proto.Ins.LinearAcceleration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ins_LinearAcceleration::CopyFrom(const Ins_LinearAcceleration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ins_in.proto.Ins.LinearAcceleration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_LinearAcceleration::IsInitialized() const {
  return true;
}

void Ins_LinearAcceleration::Swap(Ins_LinearAcceleration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_LinearAcceleration::InternalSwap(Ins_LinearAcceleration* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ins_LinearAcceleration::GetMetadata() const {
  protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ins_Orientation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_Orientation::kPitchFieldNumber;
const int Ins_Orientation::kRollFieldNumber;
const int Ins_Orientation::kHeadingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_Orientation::Ins_Orientation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ins_5fin_2eproto::scc_info_Ins_Orientation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ins_in.proto.Ins.Orientation)
}
Ins_Orientation::Ins_Orientation(const Ins_Orientation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pitch_, &from.pitch_,
    static_cast<size_t>(reinterpret_cast<char*>(&heading_) -
    reinterpret_cast<char*>(&pitch_)) + sizeof(heading_));
  // @@protoc_insertion_point(copy_constructor:ins_in.proto.Ins.Orientation)
}

void Ins_Orientation::SharedCtor() {
  ::memset(&pitch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heading_) -
      reinterpret_cast<char*>(&pitch_)) + sizeof(heading_));
}

Ins_Orientation::~Ins_Orientation() {
  // @@protoc_insertion_point(destructor:ins_in.proto.Ins.Orientation)
  SharedDtor();
}

void Ins_Orientation::SharedDtor() {
}

void Ins_Orientation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ins_Orientation::descriptor() {
  ::protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ins_Orientation& Ins_Orientation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ins_5fin_2eproto::scc_info_Ins_Orientation.base);
  return *internal_default_instance();
}


void Ins_Orientation::Clear() {
// @@protoc_insertion_point(message_clear_start:ins_in.proto.Ins.Orientation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pitch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heading_) -
      reinterpret_cast<char*>(&pitch_)) + sizeof(heading_));
  _internal_metadata_.Clear();
}

bool Ins_Orientation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ins_in.proto.Ins.Orientation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double pitch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double roll = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double heading = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ins_in.proto.Ins.Orientation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ins_in.proto.Ins.Orientation)
  return false;
#undef DO_
}

void Ins_Orientation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ins_in.proto.Ins.Orientation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double pitch = 1;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->pitch(), output);
  }

  // double roll = 2;
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->roll(), output);
  }

  // double heading = 3;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->heading(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ins_in.proto.Ins.Orientation)
}

::google::protobuf::uint8* Ins_Orientation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ins_in.proto.Ins.Orientation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double pitch = 1;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->pitch(), target);
  }

  // double roll = 2;
  if (this->roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->roll(), target);
  }

  // double heading = 3;
  if (this->heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->heading(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ins_in.proto.Ins.Orientation)
  return target;
}

size_t Ins_Orientation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ins_in.proto.Ins.Orientation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double pitch = 1;
  if (this->pitch() != 0) {
    total_size += 1 + 8;
  }

  // double roll = 2;
  if (this->roll() != 0) {
    total_size += 1 + 8;
  }

  // double heading = 3;
  if (this->heading() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_Orientation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ins_in.proto.Ins.Orientation)
  GOOGLE_DCHECK_NE(&from, this);
  const Ins_Orientation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ins_Orientation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ins_in.proto.Ins.Orientation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ins_in.proto.Ins.Orientation)
    MergeFrom(*source);
  }
}

void Ins_Orientation::MergeFrom(const Ins_Orientation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ins_in.proto.Ins.Orientation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.roll() != 0) {
    set_roll(from.roll());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
}

void Ins_Orientation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ins_in.proto.Ins.Orientation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ins_Orientation::CopyFrom(const Ins_Orientation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ins_in.proto.Ins.Orientation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_Orientation::IsInitialized() const {
  return true;
}

void Ins_Orientation::Swap(Ins_Orientation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_Orientation::InternalSwap(Ins_Orientation* other) {
  using std::swap;
  swap(pitch_, other->pitch_);
  swap(roll_, other->roll_);
  swap(heading_, other->heading_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ins_Orientation::GetMetadata() const {
  protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ins_Position::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_Position::kLatitudeFieldNumber;
const int Ins_Position::kLongitudeFieldNumber;
const int Ins_Position::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_Position::Ins_Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ins_5fin_2eproto::scc_info_Ins_Position.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ins_in.proto.Ins.Position)
}
Ins_Position::Ins_Position(const Ins_Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&latitude_, &from.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&altitude_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(altitude_));
  // @@protoc_insertion_point(copy_constructor:ins_in.proto.Ins.Position)
}

void Ins_Position::SharedCtor() {
  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(altitude_));
}

Ins_Position::~Ins_Position() {
  // @@protoc_insertion_point(destructor:ins_in.proto.Ins.Position)
  SharedDtor();
}

void Ins_Position::SharedDtor() {
}

void Ins_Position::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ins_Position::descriptor() {
  ::protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ins_Position& Ins_Position::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ins_5fin_2eproto::scc_info_Ins_Position.base);
  return *internal_default_instance();
}


void Ins_Position::Clear() {
// @@protoc_insertion_point(message_clear_start:ins_in.proto.Ins.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(altitude_));
  _internal_metadata_.Clear();
}

bool Ins_Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ins_in.proto.Ins.Position)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double latitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double altitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ins_in.proto.Ins.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ins_in.proto.Ins.Position)
  return false;
#undef DO_
}

void Ins_Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ins_in.proto.Ins.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude = 1;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->latitude(), output);
  }

  // double longitude = 2;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // double altitude = 3;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->altitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ins_in.proto.Ins.Position)
}

::google::protobuf::uint8* Ins_Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ins_in.proto.Ins.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude = 1;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->latitude(), target);
  }

  // double longitude = 2;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude(), target);
  }

  // double altitude = 3;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->altitude(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ins_in.proto.Ins.Position)
  return target;
}

size_t Ins_Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ins_in.proto.Ins.Position)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double latitude = 1;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // double longitude = 2;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // double altitude = 3;
  if (this->altitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ins_in.proto.Ins.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Ins_Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ins_Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ins_in.proto.Ins.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ins_in.proto.Ins.Position)
    MergeFrom(*source);
  }
}

void Ins_Position::MergeFrom(const Ins_Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ins_in.proto.Ins.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
}

void Ins_Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ins_in.proto.Ins.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ins_Position::CopyFrom(const Ins_Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ins_in.proto.Ins.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_Position::IsInitialized() const {
  return true;
}

void Ins_Position::Swap(Ins_Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_Position::InternalSwap(Ins_Position* other) {
  using std::swap;
  swap(latitude_, other->latitude_);
  swap(longitude_, other->longitude_);
  swap(altitude_, other->altitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ins_Position::GetMetadata() const {
  protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ins_Speed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_Speed::kEastSpdFieldNumber;
const int Ins_Speed::kNorthSpdFieldNumber;
const int Ins_Speed::kToGroundSpdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_Speed::Ins_Speed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ins_5fin_2eproto::scc_info_Ins_Speed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ins_in.proto.Ins.Speed)
}
Ins_Speed::Ins_Speed(const Ins_Speed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&east_spd_, &from.east_spd_,
    static_cast<size_t>(reinterpret_cast<char*>(&to_ground_spd_) -
    reinterpret_cast<char*>(&east_spd_)) + sizeof(to_ground_spd_));
  // @@protoc_insertion_point(copy_constructor:ins_in.proto.Ins.Speed)
}

void Ins_Speed::SharedCtor() {
  ::memset(&east_spd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_ground_spd_) -
      reinterpret_cast<char*>(&east_spd_)) + sizeof(to_ground_spd_));
}

Ins_Speed::~Ins_Speed() {
  // @@protoc_insertion_point(destructor:ins_in.proto.Ins.Speed)
  SharedDtor();
}

void Ins_Speed::SharedDtor() {
}

void Ins_Speed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ins_Speed::descriptor() {
  ::protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ins_Speed& Ins_Speed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ins_5fin_2eproto::scc_info_Ins_Speed.base);
  return *internal_default_instance();
}


void Ins_Speed::Clear() {
// @@protoc_insertion_point(message_clear_start:ins_in.proto.Ins.Speed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&east_spd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_ground_spd_) -
      reinterpret_cast<char*>(&east_spd_)) + sizeof(to_ground_spd_));
  _internal_metadata_.Clear();
}

bool Ins_Speed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ins_in.proto.Ins.Speed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double east_spd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &east_spd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double north_spd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &north_spd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double to_ground_spd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &to_ground_spd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ins_in.proto.Ins.Speed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ins_in.proto.Ins.Speed)
  return false;
#undef DO_
}

void Ins_Speed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ins_in.proto.Ins.Speed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double east_spd = 1;
  if (this->east_spd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->east_spd(), output);
  }

  // double north_spd = 2;
  if (this->north_spd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->north_spd(), output);
  }

  // double to_ground_spd = 3;
  if (this->to_ground_spd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->to_ground_spd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ins_in.proto.Ins.Speed)
}

::google::protobuf::uint8* Ins_Speed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ins_in.proto.Ins.Speed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double east_spd = 1;
  if (this->east_spd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->east_spd(), target);
  }

  // double north_spd = 2;
  if (this->north_spd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->north_spd(), target);
  }

  // double to_ground_spd = 3;
  if (this->to_ground_spd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->to_ground_spd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ins_in.proto.Ins.Speed)
  return target;
}

size_t Ins_Speed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ins_in.proto.Ins.Speed)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double east_spd = 1;
  if (this->east_spd() != 0) {
    total_size += 1 + 8;
  }

  // double north_spd = 2;
  if (this->north_spd() != 0) {
    total_size += 1 + 8;
  }

  // double to_ground_spd = 3;
  if (this->to_ground_spd() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_Speed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ins_in.proto.Ins.Speed)
  GOOGLE_DCHECK_NE(&from, this);
  const Ins_Speed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ins_Speed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ins_in.proto.Ins.Speed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ins_in.proto.Ins.Speed)
    MergeFrom(*source);
  }
}

void Ins_Speed::MergeFrom(const Ins_Speed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ins_in.proto.Ins.Speed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.east_spd() != 0) {
    set_east_spd(from.east_spd());
  }
  if (from.north_spd() != 0) {
    set_north_spd(from.north_spd());
  }
  if (from.to_ground_spd() != 0) {
    set_to_ground_spd(from.to_ground_spd());
  }
}

void Ins_Speed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ins_in.proto.Ins.Speed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ins_Speed::CopyFrom(const Ins_Speed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ins_in.proto.Ins.Speed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_Speed::IsInitialized() const {
  return true;
}

void Ins_Speed::Swap(Ins_Speed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_Speed::InternalSwap(Ins_Speed* other) {
  using std::swap;
  swap(east_spd_, other->east_spd_);
  swap(north_spd_, other->north_spd_);
  swap(to_ground_spd_, other->to_ground_spd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ins_Speed::GetMetadata() const {
  protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ins_DataInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_DataInfo::kGnssAgeFieldNumber;
const int Ins_DataInfo::kCarStatusFieldNumber;
const int Ins_DataInfo::kGnssFlagHeadingFieldNumber;
const int Ins_DataInfo::kNumSvFieldNumber;
const int Ins_DataInfo::kGnssFlagPosFieldNumber;
const int Ins_DataInfo::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_DataInfo::Ins_DataInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ins_5fin_2eproto::scc_info_Ins_DataInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ins_in.proto.Ins.DataInfo)
}
Ins_DataInfo::Ins_DataInfo(const Ins_DataInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gnss_age_, &from.gnss_age_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&gnss_age_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:ins_in.proto.Ins.DataInfo)
}

void Ins_DataInfo::SharedCtor() {
  ::memset(&gnss_age_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&gnss_age_)) + sizeof(status_));
}

Ins_DataInfo::~Ins_DataInfo() {
  // @@protoc_insertion_point(destructor:ins_in.proto.Ins.DataInfo)
  SharedDtor();
}

void Ins_DataInfo::SharedDtor() {
}

void Ins_DataInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ins_DataInfo::descriptor() {
  ::protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ins_DataInfo& Ins_DataInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ins_5fin_2eproto::scc_info_Ins_DataInfo.base);
  return *internal_default_instance();
}


void Ins_DataInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ins_in.proto.Ins.DataInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gnss_age_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&gnss_age_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool Ins_DataInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ins_in.proto.Ins.DataInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gnss_age = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gnss_age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 car_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &car_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gnss_flag_heading = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gnss_flag_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_sv = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_sv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gnss_flag_pos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gnss_flag_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ins_in.proto.Ins.DataInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ins_in.proto.Ins.DataInfo)
  return false;
#undef DO_
}

void Ins_DataInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ins_in.proto.Ins.DataInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gnss_age = 1;
  if (this->gnss_age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gnss_age(), output);
  }

  // uint32 car_status = 2;
  if (this->car_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->car_status(), output);
  }

  // uint32 gnss_flag_heading = 3;
  if (this->gnss_flag_heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gnss_flag_heading(), output);
  }

  // uint32 num_sv = 4;
  if (this->num_sv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->num_sv(), output);
  }

  // uint32 gnss_flag_pos = 5;
  if (this->gnss_flag_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gnss_flag_pos(), output);
  }

  // uint32 status = 6;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ins_in.proto.Ins.DataInfo)
}

::google::protobuf::uint8* Ins_DataInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ins_in.proto.Ins.DataInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gnss_age = 1;
  if (this->gnss_age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gnss_age(), target);
  }

  // uint32 car_status = 2;
  if (this->car_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->car_status(), target);
  }

  // uint32 gnss_flag_heading = 3;
  if (this->gnss_flag_heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gnss_flag_heading(), target);
  }

  // uint32 num_sv = 4;
  if (this->num_sv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->num_sv(), target);
  }

  // uint32 gnss_flag_pos = 5;
  if (this->gnss_flag_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gnss_flag_pos(), target);
  }

  // uint32 status = 6;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ins_in.proto.Ins.DataInfo)
  return target;
}

size_t Ins_DataInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ins_in.proto.Ins.DataInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gnss_age = 1;
  if (this->gnss_age() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gnss_age());
  }

  // uint32 car_status = 2;
  if (this->car_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->car_status());
  }

  // uint32 gnss_flag_heading = 3;
  if (this->gnss_flag_heading() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gnss_flag_heading());
  }

  // uint32 num_sv = 4;
  if (this->num_sv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_sv());
  }

  // uint32 gnss_flag_pos = 5;
  if (this->gnss_flag_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gnss_flag_pos());
  }

  // uint32 status = 6;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_DataInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ins_in.proto.Ins.DataInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Ins_DataInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ins_DataInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ins_in.proto.Ins.DataInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ins_in.proto.Ins.DataInfo)
    MergeFrom(*source);
  }
}

void Ins_DataInfo::MergeFrom(const Ins_DataInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ins_in.proto.Ins.DataInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gnss_age() != 0) {
    set_gnss_age(from.gnss_age());
  }
  if (from.car_status() != 0) {
    set_car_status(from.car_status());
  }
  if (from.gnss_flag_heading() != 0) {
    set_gnss_flag_heading(from.gnss_flag_heading());
  }
  if (from.num_sv() != 0) {
    set_num_sv(from.num_sv());
  }
  if (from.gnss_flag_pos() != 0) {
    set_gnss_flag_pos(from.gnss_flag_pos());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Ins_DataInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ins_in.proto.Ins.DataInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ins_DataInfo::CopyFrom(const Ins_DataInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ins_in.proto.Ins.DataInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_DataInfo::IsInitialized() const {
  return true;
}

void Ins_DataInfo::Swap(Ins_DataInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_DataInfo::InternalSwap(Ins_DataInfo* other) {
  using std::swap;
  swap(gnss_age_, other->gnss_age_);
  swap(car_status_, other->car_status_);
  swap(gnss_flag_heading_, other->gnss_flag_heading_);
  swap(num_sv_, other->num_sv_);
  swap(gnss_flag_pos_, other->gnss_flag_pos_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ins_DataInfo::GetMetadata() const {
  protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ins_Std::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_Std::kLatitudeStdFieldNumber;
const int Ins_Std::kLongitudeStdFieldNumber;
const int Ins_Std::kAltitudeStdFieldNumber;
const int Ins_Std::kHeadingStdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_Std::Ins_Std()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ins_5fin_2eproto::scc_info_Ins_Std.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ins_in.proto.Ins.Std)
}
Ins_Std::Ins_Std(const Ins_Std& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&latitude_std_, &from.latitude_std_,
    static_cast<size_t>(reinterpret_cast<char*>(&heading_std_) -
    reinterpret_cast<char*>(&latitude_std_)) + sizeof(heading_std_));
  // @@protoc_insertion_point(copy_constructor:ins_in.proto.Ins.Std)
}

void Ins_Std::SharedCtor() {
  ::memset(&latitude_std_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heading_std_) -
      reinterpret_cast<char*>(&latitude_std_)) + sizeof(heading_std_));
}

Ins_Std::~Ins_Std() {
  // @@protoc_insertion_point(destructor:ins_in.proto.Ins.Std)
  SharedDtor();
}

void Ins_Std::SharedDtor() {
}

void Ins_Std::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ins_Std::descriptor() {
  ::protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ins_Std& Ins_Std::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ins_5fin_2eproto::scc_info_Ins_Std.base);
  return *internal_default_instance();
}


void Ins_Std::Clear() {
// @@protoc_insertion_point(message_clear_start:ins_in.proto.Ins.Std)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&latitude_std_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heading_std_) -
      reinterpret_cast<char*>(&latitude_std_)) + sizeof(heading_std_));
  _internal_metadata_.Clear();
}

bool Ins_Std::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ins_in.proto.Ins.Std)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double latitude_std = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_std_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double longitude_std = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_std_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double altitude_std = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &altitude_std_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double heading_std = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heading_std_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ins_in.proto.Ins.Std)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ins_in.proto.Ins.Std)
  return false;
#undef DO_
}

void Ins_Std::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ins_in.proto.Ins.Std)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude_std = 1;
  if (this->latitude_std() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->latitude_std(), output);
  }

  // double longitude_std = 2;
  if (this->longitude_std() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude_std(), output);
  }

  // double altitude_std = 3;
  if (this->altitude_std() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->altitude_std(), output);
  }

  // double heading_std = 4;
  if (this->heading_std() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->heading_std(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ins_in.proto.Ins.Std)
}

::google::protobuf::uint8* Ins_Std::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ins_in.proto.Ins.Std)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude_std = 1;
  if (this->latitude_std() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->latitude_std(), target);
  }

  // double longitude_std = 2;
  if (this->longitude_std() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude_std(), target);
  }

  // double altitude_std = 3;
  if (this->altitude_std() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->altitude_std(), target);
  }

  // double heading_std = 4;
  if (this->heading_std() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->heading_std(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ins_in.proto.Ins.Std)
  return target;
}

size_t Ins_Std::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ins_in.proto.Ins.Std)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double latitude_std = 1;
  if (this->latitude_std() != 0) {
    total_size += 1 + 8;
  }

  // double longitude_std = 2;
  if (this->longitude_std() != 0) {
    total_size += 1 + 8;
  }

  // double altitude_std = 3;
  if (this->altitude_std() != 0) {
    total_size += 1 + 8;
  }

  // double heading_std = 4;
  if (this->heading_std() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_Std::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ins_in.proto.Ins.Std)
  GOOGLE_DCHECK_NE(&from, this);
  const Ins_Std* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ins_Std>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ins_in.proto.Ins.Std)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ins_in.proto.Ins.Std)
    MergeFrom(*source);
  }
}

void Ins_Std::MergeFrom(const Ins_Std& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ins_in.proto.Ins.Std)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.latitude_std() != 0) {
    set_latitude_std(from.latitude_std());
  }
  if (from.longitude_std() != 0) {
    set_longitude_std(from.longitude_std());
  }
  if (from.altitude_std() != 0) {
    set_altitude_std(from.altitude_std());
  }
  if (from.heading_std() != 0) {
    set_heading_std(from.heading_std());
  }
}

void Ins_Std::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ins_in.proto.Ins.Std)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ins_Std::CopyFrom(const Ins_Std& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ins_in.proto.Ins.Std)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_Std::IsInitialized() const {
  return true;
}

void Ins_Std::Swap(Ins_Std* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_Std::InternalSwap(Ins_Std* other) {
  using std::swap;
  swap(latitude_std_, other->latitude_std_);
  swap(longitude_std_, other->longitude_std_);
  swap(altitude_std_, other->altitude_std_);
  swap(heading_std_, other->heading_std_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ins_Std::GetMetadata() const {
  protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ins::InitAsDefaultInstance() {
  ::ins_in::proto::_Ins_default_instance_._instance.get_mutable()->angular_velocity_ = const_cast< ::ins_in::proto::Ins_AngularVelocity*>(
      ::ins_in::proto::Ins_AngularVelocity::internal_default_instance());
  ::ins_in::proto::_Ins_default_instance_._instance.get_mutable()->linear_acceleration_ = const_cast< ::ins_in::proto::Ins_LinearAcceleration*>(
      ::ins_in::proto::Ins_LinearAcceleration::internal_default_instance());
  ::ins_in::proto::_Ins_default_instance_._instance.get_mutable()->orientation_ = const_cast< ::ins_in::proto::Ins_Orientation*>(
      ::ins_in::proto::Ins_Orientation::internal_default_instance());
  ::ins_in::proto::_Ins_default_instance_._instance.get_mutable()->position_ = const_cast< ::ins_in::proto::Ins_Position*>(
      ::ins_in::proto::Ins_Position::internal_default_instance());
  ::ins_in::proto::_Ins_default_instance_._instance.get_mutable()->speed_ = const_cast< ::ins_in::proto::Ins_Speed*>(
      ::ins_in::proto::Ins_Speed::internal_default_instance());
  ::ins_in::proto::_Ins_default_instance_._instance.get_mutable()->data_info_ = const_cast< ::ins_in::proto::Ins_DataInfo*>(
      ::ins_in::proto::Ins_DataInfo::internal_default_instance());
  ::ins_in::proto::_Ins_default_instance_._instance.get_mutable()->std_ = const_cast< ::ins_in::proto::Ins_Std*>(
      ::ins_in::proto::Ins_Std::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins::kAngularVelocityFieldNumber;
const int Ins::kLinearAccelerationFieldNumber;
const int Ins::kOrientationFieldNumber;
const int Ins::kPositionFieldNumber;
const int Ins::kSpeedFieldNumber;
const int Ins::kDataInfoFieldNumber;
const int Ins::kStdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins::Ins()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ins_5fin_2eproto::scc_info_Ins.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ins_in.proto.Ins)
}
Ins::Ins(const Ins& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_angular_velocity()) {
    angular_velocity_ = new ::ins_in::proto::Ins_AngularVelocity(*from.angular_velocity_);
  } else {
    angular_velocity_ = NULL;
  }
  if (from.has_linear_acceleration()) {
    linear_acceleration_ = new ::ins_in::proto::Ins_LinearAcceleration(*from.linear_acceleration_);
  } else {
    linear_acceleration_ = NULL;
  }
  if (from.has_orientation()) {
    orientation_ = new ::ins_in::proto::Ins_Orientation(*from.orientation_);
  } else {
    orientation_ = NULL;
  }
  if (from.has_position()) {
    position_ = new ::ins_in::proto::Ins_Position(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_speed()) {
    speed_ = new ::ins_in::proto::Ins_Speed(*from.speed_);
  } else {
    speed_ = NULL;
  }
  if (from.has_data_info()) {
    data_info_ = new ::ins_in::proto::Ins_DataInfo(*from.data_info_);
  } else {
    data_info_ = NULL;
  }
  if (from.has_std()) {
    std_ = new ::ins_in::proto::Ins_Std(*from.std_);
  } else {
    std_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ins_in.proto.Ins)
}

void Ins::SharedCtor() {
  ::memset(&angular_velocity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&std_) -
      reinterpret_cast<char*>(&angular_velocity_)) + sizeof(std_));
}

Ins::~Ins() {
  // @@protoc_insertion_point(destructor:ins_in.proto.Ins)
  SharedDtor();
}

void Ins::SharedDtor() {
  if (this != internal_default_instance()) delete angular_velocity_;
  if (this != internal_default_instance()) delete linear_acceleration_;
  if (this != internal_default_instance()) delete orientation_;
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete speed_;
  if (this != internal_default_instance()) delete data_info_;
  if (this != internal_default_instance()) delete std_;
}

void Ins::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ins::descriptor() {
  ::protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ins& Ins::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ins_5fin_2eproto::scc_info_Ins.base);
  return *internal_default_instance();
}


void Ins::Clear() {
// @@protoc_insertion_point(message_clear_start:ins_in.proto.Ins)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && angular_velocity_ != NULL) {
    delete angular_velocity_;
  }
  angular_velocity_ = NULL;
  if (GetArenaNoVirtual() == NULL && linear_acceleration_ != NULL) {
    delete linear_acceleration_;
  }
  linear_acceleration_ = NULL;
  if (GetArenaNoVirtual() == NULL && orientation_ != NULL) {
    delete orientation_;
  }
  orientation_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && speed_ != NULL) {
    delete speed_;
  }
  speed_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_info_ != NULL) {
    delete data_info_;
  }
  data_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && std_ != NULL) {
    delete std_;
  }
  std_ = NULL;
  _internal_metadata_.Clear();
}

bool Ins::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ins_in.proto.Ins)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ins_in.proto.Ins.AngularVelocity angular_velocity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angular_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ins_in.proto.Ins.LinearAcceleration linear_acceleration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_acceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ins_in.proto.Ins.Orientation orientation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orientation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ins_in.proto.Ins.Position position = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ins_in.proto.Ins.Speed speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_speed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ins_in.proto.Ins.DataInfo data_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ins_in.proto.Ins.Std std = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_std()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ins_in.proto.Ins)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ins_in.proto.Ins)
  return false;
#undef DO_
}

void Ins::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ins_in.proto.Ins)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ins_in.proto.Ins.AngularVelocity angular_velocity = 1;
  if (this->has_angular_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_angular_velocity(), output);
  }

  // .ins_in.proto.Ins.LinearAcceleration linear_acceleration = 2;
  if (this->has_linear_acceleration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_linear_acceleration(), output);
  }

  // .ins_in.proto.Ins.Orientation orientation = 3;
  if (this->has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_orientation(), output);
  }

  // .ins_in.proto.Ins.Position position = 4;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_position(), output);
  }

  // .ins_in.proto.Ins.Speed speed = 5;
  if (this->has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_speed(), output);
  }

  // .ins_in.proto.Ins.DataInfo data_info = 6;
  if (this->has_data_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_data_info(), output);
  }

  // .ins_in.proto.Ins.Std std = 7;
  if (this->has_std()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_std(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ins_in.proto.Ins)
}

::google::protobuf::uint8* Ins::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ins_in.proto.Ins)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ins_in.proto.Ins.AngularVelocity angular_velocity = 1;
  if (this->has_angular_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_angular_velocity(), deterministic, target);
  }

  // .ins_in.proto.Ins.LinearAcceleration linear_acceleration = 2;
  if (this->has_linear_acceleration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_linear_acceleration(), deterministic, target);
  }

  // .ins_in.proto.Ins.Orientation orientation = 3;
  if (this->has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_orientation(), deterministic, target);
  }

  // .ins_in.proto.Ins.Position position = 4;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_position(), deterministic, target);
  }

  // .ins_in.proto.Ins.Speed speed = 5;
  if (this->has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_speed(), deterministic, target);
  }

  // .ins_in.proto.Ins.DataInfo data_info = 6;
  if (this->has_data_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_data_info(), deterministic, target);
  }

  // .ins_in.proto.Ins.Std std = 7;
  if (this->has_std()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_std(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ins_in.proto.Ins)
  return target;
}

size_t Ins::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ins_in.proto.Ins)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ins_in.proto.Ins.AngularVelocity angular_velocity = 1;
  if (this->has_angular_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *angular_velocity_);
  }

  // .ins_in.proto.Ins.LinearAcceleration linear_acceleration = 2;
  if (this->has_linear_acceleration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *linear_acceleration_);
  }

  // .ins_in.proto.Ins.Orientation orientation = 3;
  if (this->has_orientation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *orientation_);
  }

  // .ins_in.proto.Ins.Position position = 4;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .ins_in.proto.Ins.Speed speed = 5;
  if (this->has_speed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *speed_);
  }

  // .ins_in.proto.Ins.DataInfo data_info = 6;
  if (this->has_data_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_info_);
  }

  // .ins_in.proto.Ins.Std std = 7;
  if (this->has_std()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *std_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ins_in.proto.Ins)
  GOOGLE_DCHECK_NE(&from, this);
  const Ins* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ins>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ins_in.proto.Ins)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ins_in.proto.Ins)
    MergeFrom(*source);
  }
}

void Ins::MergeFrom(const Ins& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ins_in.proto.Ins)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_angular_velocity()) {
    mutable_angular_velocity()->::ins_in::proto::Ins_AngularVelocity::MergeFrom(from.angular_velocity());
  }
  if (from.has_linear_acceleration()) {
    mutable_linear_acceleration()->::ins_in::proto::Ins_LinearAcceleration::MergeFrom(from.linear_acceleration());
  }
  if (from.has_orientation()) {
    mutable_orientation()->::ins_in::proto::Ins_Orientation::MergeFrom(from.orientation());
  }
  if (from.has_position()) {
    mutable_position()->::ins_in::proto::Ins_Position::MergeFrom(from.position());
  }
  if (from.has_speed()) {
    mutable_speed()->::ins_in::proto::Ins_Speed::MergeFrom(from.speed());
  }
  if (from.has_data_info()) {
    mutable_data_info()->::ins_in::proto::Ins_DataInfo::MergeFrom(from.data_info());
  }
  if (from.has_std()) {
    mutable_std()->::ins_in::proto::Ins_Std::MergeFrom(from.std());
  }
}

void Ins::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ins_in.proto.Ins)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ins::CopyFrom(const Ins& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ins_in.proto.Ins)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins::IsInitialized() const {
  return true;
}

void Ins::Swap(Ins* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins::InternalSwap(Ins* other) {
  using std::swap;
  swap(angular_velocity_, other->angular_velocity_);
  swap(linear_acceleration_, other->linear_acceleration_);
  swap(orientation_, other->orientation_);
  swap(position_, other->position_);
  swap(speed_, other->speed_);
  swap(data_info_, other->data_info_);
  swap(std_, other->std_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ins::GetMetadata() const {
  protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Frame_Header::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Frame_Header::kInsIdFieldNumber;
const int Frame_Header::kTimestampFieldNumber;
const int Frame_Header::kRollingCounterFieldNumber;
const int Frame_Header::kFrameIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Frame_Header::Frame_Header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ins_5fin_2eproto::scc_info_Frame_Header.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ins_in.proto.Frame.Header)
}
Frame_Header::Frame_Header(const Frame_Header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.frame_id().size() > 0) {
    frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&ins_id_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(ins_id_));
  // @@protoc_insertion_point(copy_constructor:ins_in.proto.Frame.Header)
}

void Frame_Header::SharedCtor() {
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_id_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(ins_id_));
}

Frame_Header::~Frame_Header() {
  // @@protoc_insertion_point(destructor:ins_in.proto.Frame.Header)
  SharedDtor();
}

void Frame_Header::SharedDtor() {
  frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Frame_Header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Frame_Header::descriptor() {
  ::protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Frame_Header& Frame_Header::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ins_5fin_2eproto::scc_info_Frame_Header.base);
  return *internal_default_instance();
}


void Frame_Header::Clear() {
// @@protoc_insertion_point(message_clear_start:ins_in.proto.Frame.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_id_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(ins_id_));
  _internal_metadata_.Clear();
}

bool Frame_Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ins_in.proto.Frame.Header)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ins_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ins_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 rolling_counter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rolling_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string frame_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_frame_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->frame_id().data(), static_cast<int>(this->frame_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ins_in.proto.Frame.Header.frame_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ins_in.proto.Frame.Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ins_in.proto.Frame.Header)
  return false;
#undef DO_
}

void Frame_Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ins_in.proto.Frame.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ins_id = 1;
  if (this->ins_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ins_id(), output);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp(), output);
  }

  // uint64 rolling_counter = 3;
  if (this->rolling_counter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->rolling_counter(), output);
  }

  // string frame_id = 4;
  if (this->frame_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frame_id().data(), static_cast<int>(this->frame_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ins_in.proto.Frame.Header.frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->frame_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ins_in.proto.Frame.Header)
}

::google::protobuf::uint8* Frame_Header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ins_in.proto.Frame.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ins_id = 1;
  if (this->ins_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ins_id(), target);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp(), target);
  }

  // uint64 rolling_counter = 3;
  if (this->rolling_counter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->rolling_counter(), target);
  }

  // string frame_id = 4;
  if (this->frame_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frame_id().data(), static_cast<int>(this->frame_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ins_in.proto.Frame.Header.frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->frame_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ins_in.proto.Frame.Header)
  return target;
}

size_t Frame_Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ins_in.proto.Frame.Header)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string frame_id = 4;
  if (this->frame_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->frame_id());
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // uint64 rolling_counter = 3;
  if (this->rolling_counter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rolling_counter());
  }

  // uint32 ins_id = 1;
  if (this->ins_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ins_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Frame_Header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ins_in.proto.Frame.Header)
  GOOGLE_DCHECK_NE(&from, this);
  const Frame_Header* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Frame_Header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ins_in.proto.Frame.Header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ins_in.proto.Frame.Header)
    MergeFrom(*source);
  }
}

void Frame_Header::MergeFrom(const Frame_Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ins_in.proto.Frame.Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frame_id().size() > 0) {

    frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.rolling_counter() != 0) {
    set_rolling_counter(from.rolling_counter());
  }
  if (from.ins_id() != 0) {
    set_ins_id(from.ins_id());
  }
}

void Frame_Header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ins_in.proto.Frame.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Frame_Header::CopyFrom(const Frame_Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ins_in.proto.Frame.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Frame_Header::IsInitialized() const {
  return true;
}

void Frame_Header::Swap(Frame_Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Frame_Header::InternalSwap(Frame_Header* other) {
  using std::swap;
  frame_id_.Swap(&other->frame_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(rolling_counter_, other->rolling_counter_);
  swap(ins_id_, other->ins_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Frame_Header::GetMetadata() const {
  protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Frame::InitAsDefaultInstance() {
  ::ins_in::proto::_Frame_default_instance_._instance.get_mutable()->header_ = const_cast< ::ins_in::proto::Frame_Header*>(
      ::ins_in::proto::Frame_Header::internal_default_instance());
  ::ins_in::proto::_Frame_default_instance_._instance.get_mutable()->ins_ = const_cast< ::ins_in::proto::Ins*>(
      ::ins_in::proto::Ins::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Frame::kHeaderFieldNumber;
const int Frame::kSysTimestampFieldNumber;
const int Frame::kInsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Frame::Frame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ins_5fin_2eproto::scc_info_Frame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ins_in.proto.Frame)
}
Frame::Frame(const Frame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::ins_in::proto::Frame_Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_ins()) {
    ins_ = new ::ins_in::proto::Ins(*from.ins_);
  } else {
    ins_ = NULL;
  }
  sys_timestamp_ = from.sys_timestamp_;
  // @@protoc_insertion_point(copy_constructor:ins_in.proto.Frame)
}

void Frame::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sys_timestamp_) -
      reinterpret_cast<char*>(&header_)) + sizeof(sys_timestamp_));
}

Frame::~Frame() {
  // @@protoc_insertion_point(destructor:ins_in.proto.Frame)
  SharedDtor();
}

void Frame::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete ins_;
}

void Frame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Frame::descriptor() {
  ::protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Frame& Frame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ins_5fin_2eproto::scc_info_Frame.base);
  return *internal_default_instance();
}


void Frame::Clear() {
// @@protoc_insertion_point(message_clear_start:ins_in.proto.Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && ins_ != NULL) {
    delete ins_;
  }
  ins_ = NULL;
  sys_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Frame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ins_in.proto.Frame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ins_in.proto.Frame.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sys_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sys_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ins_in.proto.Ins ins = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ins_in.proto.Frame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ins_in.proto.Frame)
  return false;
#undef DO_
}

void Frame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ins_in.proto.Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ins_in.proto.Frame.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // uint64 sys_timestamp = 2;
  if (this->sys_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->sys_timestamp(), output);
  }

  // .ins_in.proto.Ins ins = 3;
  if (this->has_ins()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_ins(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ins_in.proto.Frame)
}

::google::protobuf::uint8* Frame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ins_in.proto.Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ins_in.proto.Frame.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // uint64 sys_timestamp = 2;
  if (this->sys_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->sys_timestamp(), target);
  }

  // .ins_in.proto.Ins ins = 3;
  if (this->has_ins()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_ins(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ins_in.proto.Frame)
  return target;
}

size_t Frame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ins_in.proto.Frame)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ins_in.proto.Frame.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .ins_in.proto.Ins ins = 3;
  if (this->has_ins()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ins_);
  }

  // uint64 sys_timestamp = 2;
  if (this->sys_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sys_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Frame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ins_in.proto.Frame)
  GOOGLE_DCHECK_NE(&from, this);
  const Frame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Frame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ins_in.proto.Frame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ins_in.proto.Frame)
    MergeFrom(*source);
  }
}

void Frame::MergeFrom(const Frame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ins_in.proto.Frame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::ins_in::proto::Frame_Header::MergeFrom(from.header());
  }
  if (from.has_ins()) {
    mutable_ins()->::ins_in::proto::Ins::MergeFrom(from.ins());
  }
  if (from.sys_timestamp() != 0) {
    set_sys_timestamp(from.sys_timestamp());
  }
}

void Frame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ins_in.proto.Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Frame::CopyFrom(const Frame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ins_in.proto.Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Frame::IsInitialized() const {
  return true;
}

void Frame::Swap(Frame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Frame::InternalSwap(Frame* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(ins_, other->ins_);
  swap(sys_timestamp_, other->sys_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Frame::GetMetadata() const {
  protobuf_ins_5fin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ins_5fin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace ins_in
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ins_in::proto::Ins_AngularVelocity* Arena::CreateMaybeMessage< ::ins_in::proto::Ins_AngularVelocity >(Arena* arena) {
  return Arena::CreateInternal< ::ins_in::proto::Ins_AngularVelocity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ins_in::proto::Ins_LinearAcceleration* Arena::CreateMaybeMessage< ::ins_in::proto::Ins_LinearAcceleration >(Arena* arena) {
  return Arena::CreateInternal< ::ins_in::proto::Ins_LinearAcceleration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ins_in::proto::Ins_Orientation* Arena::CreateMaybeMessage< ::ins_in::proto::Ins_Orientation >(Arena* arena) {
  return Arena::CreateInternal< ::ins_in::proto::Ins_Orientation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ins_in::proto::Ins_Position* Arena::CreateMaybeMessage< ::ins_in::proto::Ins_Position >(Arena* arena) {
  return Arena::CreateInternal< ::ins_in::proto::Ins_Position >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ins_in::proto::Ins_Speed* Arena::CreateMaybeMessage< ::ins_in::proto::Ins_Speed >(Arena* arena) {
  return Arena::CreateInternal< ::ins_in::proto::Ins_Speed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ins_in::proto::Ins_DataInfo* Arena::CreateMaybeMessage< ::ins_in::proto::Ins_DataInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ins_in::proto::Ins_DataInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ins_in::proto::Ins_Std* Arena::CreateMaybeMessage< ::ins_in::proto::Ins_Std >(Arena* arena) {
  return Arena::CreateInternal< ::ins_in::proto::Ins_Std >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ins_in::proto::Ins* Arena::CreateMaybeMessage< ::ins_in::proto::Ins >(Arena* arena) {
  return Arena::CreateInternal< ::ins_in::proto::Ins >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ins_in::proto::Frame_Header* Arena::CreateMaybeMessage< ::ins_in::proto::Frame_Header >(Arena* arena) {
  return Arena::CreateInternal< ::ins_in::proto::Frame_Header >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ins_in::proto::Frame* Arena::CreateMaybeMessage< ::ins_in::proto::Frame >(Arena* arena) {
  return Arena::CreateInternal< ::ins_in::proto::Frame >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
