// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: imu.proto

#include "imu.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_header_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_header_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Header;
}  // namespace protobuf_header_2eproto
namespace protobuf_imu_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gear_report_67;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gnss_dop_50b;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gnss_headingandpitch_50c;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gnss_heightandweek_50a;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gnss_latitudelongitude_509;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gnss_utc_508;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_acc_500;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_datainfo_506;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_gyro_501;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_headingpitchroll_502;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_heightandtime_503;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_latitudelongitude_504;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_speed_505;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ins_std_507;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Steering_report_65;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Wheelspeed_report_6a;
}  // namespace protobuf_imu_2eproto
namespace Calmcar {
namespace drivers {
namespace IMU {
class Wheelspeed_report_6aDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Wheelspeed_report_6a>
      _instance;
} _Wheelspeed_report_6a_default_instance_;
class Steering_report_65DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Steering_report_65>
      _instance;
} _Steering_report_65_default_instance_;
class Gear_report_67DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gear_report_67>
      _instance;
} _Gear_report_67_default_instance_;
class Gnss_dop_50bDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gnss_dop_50b>
      _instance;
} _Gnss_dop_50b_default_instance_;
class Gnss_headingandpitch_50cDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gnss_headingandpitch_50c>
      _instance;
} _Gnss_headingandpitch_50c_default_instance_;
class Gnss_heightandweek_50aDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gnss_heightandweek_50a>
      _instance;
} _Gnss_heightandweek_50a_default_instance_;
class Gnss_utc_508DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gnss_utc_508>
      _instance;
} _Gnss_utc_508_default_instance_;
class Gnss_latitudelongitude_509DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gnss_latitudelongitude_509>
      _instance;
} _Gnss_latitudelongitude_509_default_instance_;
class Ins_datainfo_506DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_datainfo_506>
      _instance;
} _Ins_datainfo_506_default_instance_;
class Ins_std_507DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_std_507>
      _instance;
} _Ins_std_507_default_instance_;
class Ins_latitudelongitude_504DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_latitudelongitude_504>
      _instance;
} _Ins_latitudelongitude_504_default_instance_;
class Ins_speed_505DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_speed_505>
      _instance;
} _Ins_speed_505_default_instance_;
class Ins_headingpitchroll_502DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_headingpitchroll_502>
      _instance;
} _Ins_headingpitchroll_502_default_instance_;
class Ins_heightandtime_503DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_heightandtime_503>
      _instance;
} _Ins_heightandtime_503_default_instance_;
class Ins_acc_500DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_acc_500>
      _instance;
} _Ins_acc_500_default_instance_;
class Ins_gyro_501DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ins_gyro_501>
      _instance;
} _Ins_gyro_501_default_instance_;
class ImuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Imu>
      _instance;
} _Imu_default_instance_;
}  // namespace IMU
}  // namespace drivers
}  // namespace Calmcar
namespace protobuf_imu_2eproto {
static void InitDefaultsWheelspeed_report_6a() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Wheelspeed_report_6a_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Wheelspeed_report_6a();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Wheelspeed_report_6a::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Wheelspeed_report_6a =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWheelspeed_report_6a}, {}};

static void InitDefaultsSteering_report_65() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Steering_report_65_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Steering_report_65();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Steering_report_65::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Steering_report_65 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSteering_report_65}, {}};

static void InitDefaultsGear_report_67() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Gear_report_67_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Gear_report_67();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Gear_report_67::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gear_report_67 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGear_report_67}, {}};

static void InitDefaultsGnss_dop_50b() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Gnss_dop_50b_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Gnss_dop_50b();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Gnss_dop_50b::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gnss_dop_50b =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGnss_dop_50b}, {}};

static void InitDefaultsGnss_headingandpitch_50c() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Gnss_headingandpitch_50c_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gnss_headingandpitch_50c =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGnss_headingandpitch_50c}, {}};

static void InitDefaultsGnss_heightandweek_50a() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Gnss_heightandweek_50a_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Gnss_heightandweek_50a();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Gnss_heightandweek_50a::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gnss_heightandweek_50a =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGnss_heightandweek_50a}, {}};

static void InitDefaultsGnss_utc_508() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Gnss_utc_508_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Gnss_utc_508();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Gnss_utc_508::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gnss_utc_508 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGnss_utc_508}, {}};

static void InitDefaultsGnss_latitudelongitude_509() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Gnss_latitudelongitude_509_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gnss_latitudelongitude_509 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGnss_latitudelongitude_509}, {}};

static void InitDefaultsIns_datainfo_506() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Ins_datainfo_506_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Ins_datainfo_506();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Ins_datainfo_506::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_datainfo_506 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_datainfo_506}, {}};

static void InitDefaultsIns_std_507() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Ins_std_507_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Ins_std_507();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Ins_std_507::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_std_507 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_std_507}, {}};

static void InitDefaultsIns_latitudelongitude_504() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Ins_latitudelongitude_504_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Ins_latitudelongitude_504();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Ins_latitudelongitude_504::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_latitudelongitude_504 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_latitudelongitude_504}, {}};

static void InitDefaultsIns_speed_505() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Ins_speed_505_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Ins_speed_505();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Ins_speed_505::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_speed_505 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_speed_505}, {}};

static void InitDefaultsIns_headingpitchroll_502() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Ins_headingpitchroll_502_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Ins_headingpitchroll_502();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Ins_headingpitchroll_502::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_headingpitchroll_502 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_headingpitchroll_502}, {}};

static void InitDefaultsIns_heightandtime_503() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Ins_heightandtime_503_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Ins_heightandtime_503();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Ins_heightandtime_503::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_heightandtime_503 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_heightandtime_503}, {}};

static void InitDefaultsIns_acc_500() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Ins_acc_500_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Ins_acc_500();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Ins_acc_500::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_acc_500 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_acc_500}, {}};

static void InitDefaultsIns_gyro_501() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Ins_gyro_501_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Ins_gyro_501();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Ins_gyro_501::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ins_gyro_501 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIns_gyro_501}, {}};

static void InitDefaultsImu() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::IMU::_Imu_default_instance_;
    new (ptr) ::Calmcar::drivers::IMU::Imu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::IMU::Imu::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<17> scc_info_Imu =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 17, InitDefaultsImu}, {
      &protobuf_header_2eproto::scc_info_Header.base,
      &protobuf_imu_2eproto::scc_info_Wheelspeed_report_6a.base,
      &protobuf_imu_2eproto::scc_info_Steering_report_65.base,
      &protobuf_imu_2eproto::scc_info_Gear_report_67.base,
      &protobuf_imu_2eproto::scc_info_Gnss_dop_50b.base,
      &protobuf_imu_2eproto::scc_info_Gnss_headingandpitch_50c.base,
      &protobuf_imu_2eproto::scc_info_Gnss_heightandweek_50a.base,
      &protobuf_imu_2eproto::scc_info_Gnss_utc_508.base,
      &protobuf_imu_2eproto::scc_info_Gnss_latitudelongitude_509.base,
      &protobuf_imu_2eproto::scc_info_Ins_datainfo_506.base,
      &protobuf_imu_2eproto::scc_info_Ins_std_507.base,
      &protobuf_imu_2eproto::scc_info_Ins_latitudelongitude_504.base,
      &protobuf_imu_2eproto::scc_info_Ins_speed_505.base,
      &protobuf_imu_2eproto::scc_info_Ins_headingpitchroll_502.base,
      &protobuf_imu_2eproto::scc_info_Ins_heightandtime_503.base,
      &protobuf_imu_2eproto::scc_info_Ins_acc_500.base,
      &protobuf_imu_2eproto::scc_info_Ins_gyro_501.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Wheelspeed_report_6a.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Steering_report_65.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gear_report_67.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gnss_dop_50b.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gnss_headingandpitch_50c.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gnss_heightandweek_50a.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gnss_utc_508.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gnss_latitudelongitude_509.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_datainfo_506.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_std_507.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_latitudelongitude_504.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_speed_505.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_headingpitchroll_502.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_heightandtime_503.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_acc_500.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ins_gyro_501.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Imu.base);
}

}  // namespace protobuf_imu_2eproto
namespace Calmcar {
namespace drivers {
namespace IMU {
bool Steering_report_65_EnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_EnType Steering_report_65::EN_DISABLED;
const Steering_report_65_EnType Steering_report_65::EN_ENABLED;
const Steering_report_65_EnType Steering_report_65::EnType_MIN;
const Steering_report_65_EnType Steering_report_65::EnType_MAX;
const int Steering_report_65::EnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_OverrideType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_OverrideType Steering_report_65::OVERRIDE_NO_OVERRIDE;
const Steering_report_65_OverrideType Steering_report_65::OVERRIDE_DRIVER_OVERRIDE;
const Steering_report_65_OverrideType Steering_report_65::OverrideType_MIN;
const Steering_report_65_OverrideType Steering_report_65::OverrideType_MAX;
const int Steering_report_65::OverrideType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_FltwdcType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_FltwdcType Steering_report_65::FLTWDC_NO_FAULT;
const Steering_report_65_FltwdcType Steering_report_65::FLTWDC_FAULT;
const Steering_report_65_FltwdcType Steering_report_65::FltwdcType_MIN;
const Steering_report_65_FltwdcType Steering_report_65::FltwdcType_MAX;
const int Steering_report_65::FltwdcType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_Flt1Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_Flt1Type Steering_report_65::FLT1_NO_FAULT;
const Steering_report_65_Flt1Type Steering_report_65::FLT1_FAULT;
const Steering_report_65_Flt1Type Steering_report_65::Flt1Type_MIN;
const Steering_report_65_Flt1Type Steering_report_65::Flt1Type_MAX;
const int Steering_report_65::Flt1Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_Flt2Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_Flt2Type Steering_report_65::FLT2_NO_FAULT;
const Steering_report_65_Flt2Type Steering_report_65::FLT2_FAULT;
const Steering_report_65_Flt2Type Steering_report_65::Flt2Type_MIN;
const Steering_report_65_Flt2Type Steering_report_65::Flt2Type_MAX;
const int Steering_report_65::Flt2Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_FltcalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_FltcalType Steering_report_65::FLTCAL_NO_FAULT;
const Steering_report_65_FltcalType Steering_report_65::FLTCAL_FAULT;
const Steering_report_65_FltcalType Steering_report_65::FltcalType_MIN;
const Steering_report_65_FltcalType Steering_report_65::FltcalType_MAX;
const int Steering_report_65::FltcalType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_TmoutType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_TmoutType Steering_report_65::TMOUT_VALID;
const Steering_report_65_TmoutType Steering_report_65::TMOUT_TIMEOUT;
const Steering_report_65_TmoutType Steering_report_65::TmoutType_MIN;
const Steering_report_65_TmoutType Steering_report_65::TmoutType_MAX;
const int Steering_report_65::TmoutType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_report_67_StateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_report_67_StateType Gear_report_67::STATE_NONE;
const Gear_report_67_StateType Gear_report_67::STATE_PARK;
const Gear_report_67_StateType Gear_report_67::STATE_REVERSE;
const Gear_report_67_StateType Gear_report_67::STATE_NEUTRAL;
const Gear_report_67_StateType Gear_report_67::STATE_DRIVE;
const Gear_report_67_StateType Gear_report_67::STATE_LOW;
const Gear_report_67_StateType Gear_report_67::StateType_MIN;
const Gear_report_67_StateType Gear_report_67::StateType_MAX;
const int Gear_report_67::StateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_report_67_DriverType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_report_67_DriverType Gear_report_67::DRIVER_LAST_SHIFT_REQUESTED_BY_WIRE;
const Gear_report_67_DriverType Gear_report_67::DRIVER_LAST_SHIFT_REQUESTED_BY_DRIVER;
const Gear_report_67_DriverType Gear_report_67::DriverType_MIN;
const Gear_report_67_DriverType Gear_report_67::DriverType_MAX;
const int Gear_report_67::DriverType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_report_67_CmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_report_67_CmdType Gear_report_67::CMD_NONE;
const Gear_report_67_CmdType Gear_report_67::CMD_PARK;
const Gear_report_67_CmdType Gear_report_67::CMD_REVERSE;
const Gear_report_67_CmdType Gear_report_67::CMD_NEUTRAL;
const Gear_report_67_CmdType Gear_report_67::CMD_DRIVE;
const Gear_report_67_CmdType Gear_report_67::CMD_LOW;
const Gear_report_67_CmdType Gear_report_67::CmdType_MIN;
const Gear_report_67_CmdType Gear_report_67::CmdType_MAX;
const int Gear_report_67::CmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_report_67_FltbusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_report_67_FltbusType Gear_report_67::FLTBUS_NO_FAULT;
const Gear_report_67_FltbusType Gear_report_67::FLTBUS_FAULT;
const Gear_report_67_FltbusType Gear_report_67::FltbusType_MIN;
const Gear_report_67_FltbusType Gear_report_67::FltbusType_MAX;
const int Gear_report_67::FltbusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_report_67_RejectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_report_67_RejectType Gear_report_67::REJECT_NOT_REJECTED;
const Gear_report_67_RejectType Gear_report_67::REJECT_OVERRIDE;
const Gear_report_67_RejectType Gear_report_67::REJECT_SHIFT_IN_PROGRESS;
const Gear_report_67_RejectType Gear_report_67::REJECT_REPEAT;
const Gear_report_67_RejectType Gear_report_67::REJECT_CMD_ILLEGAL;
const Gear_report_67_RejectType Gear_report_67::REJECT_SPEED_NOT_2KPH;
const Gear_report_67_RejectType Gear_report_67::REJECT_REJECTED_BY_VEHICLE_TIMEOUT;
const Gear_report_67_RejectType Gear_report_67::RejectType_MIN;
const Gear_report_67_RejectType Gear_report_67::RejectType_MAX;
const int Gear_report_67::RejectType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Ins_datainfo_506_Ins_car_statusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ins_datainfo_506_Ins_car_statusType Ins_datainfo_506::INS_CAR_STATUS_NO_VEHICLE_INFO;
const Ins_datainfo_506_Ins_car_statusType Ins_datainfo_506::INS_CAR_STATUS_NORMALLY;
const Ins_datainfo_506_Ins_car_statusType Ins_datainfo_506::Ins_car_statusType_MIN;
const Ins_datainfo_506_Ins_car_statusType Ins_datainfo_506::Ins_car_statusType_MAX;
const int Ins_datainfo_506::Ins_car_statusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Ins_datainfo_506_Ins_gnssflag_headingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 8:
    case 16:
    case 17:
    case 24:
    case 32:
    case 33:
    case 34:
    case 48:
    case 49:
    case 50:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_NONE_;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_FIXEDPOS__FIX;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_DOPPLER_VELOCITY_;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_SINGLE_;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_PSRDIFF_;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_SBAS_;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_L1_FLOAT_L1;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_IONOFREE_FLOAT__;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_NARROW_FLOAT_;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_L1_INT_L1;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_WIDE_INT_;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::INS_GNSSFLAG_HEADING_NARROW_INT_;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::Ins_gnssflag_headingType_MIN;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::Ins_gnssflag_headingType_MAX;
const int Ins_datainfo_506::Ins_gnssflag_headingType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Ins_datainfo_506_Ins_gnssflag_posType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 8:
    case 16:
    case 17:
    case 24:
    case 32:
    case 33:
    case 34:
    case 48:
    case 49:
    case 50:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_NONE_;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_FIXEDPOS__FIX;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_DOPPLER_VELOCITY_;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_SINGLE_;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_PSRDIFF_;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_SBAS_;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_L1_FLOAT_L1;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_IONOFREE_FLOAT__;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_NARROW_FLOAT_;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_L1_INT__L1;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_WIDE_INT_;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::INS_GNSSFLAG_POS_NARROW_INT_;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::Ins_gnssflag_posType_MIN;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::Ins_gnssflag_posType_MAX;
const int Ins_datainfo_506::Ins_gnssflag_posType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Ins_datainfo_506_Ins_statusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ins_datainfo_506_Ins_statusType Ins_datainfo_506::INS_STATUS_NONE;
const Ins_datainfo_506_Ins_statusType Ins_datainfo_506::INS_STATUS_POSE_INITIALIZATION;
const Ins_datainfo_506_Ins_statusType Ins_datainfo_506::INS_STATUS_COMBINED_NAVIGATION;
const Ins_datainfo_506_Ins_statusType Ins_datainfo_506::Ins_statusType_MIN;
const Ins_datainfo_506_Ins_statusType Ins_datainfo_506::Ins_statusType_MAX;
const int Ins_datainfo_506::Ins_statusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Wheelspeed_report_6a::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Wheelspeed_report_6a::kFlFieldNumber;
const int Wheelspeed_report_6a::kFrFieldNumber;
const int Wheelspeed_report_6a::kRlFieldNumber;
const int Wheelspeed_report_6a::kRrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Wheelspeed_report_6a::Wheelspeed_report_6a()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Wheelspeed_report_6a.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Wheelspeed_report_6a)
}
Wheelspeed_report_6a::Wheelspeed_report_6a(const Wheelspeed_report_6a& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fl_, &from.fl_,
    static_cast<size_t>(reinterpret_cast<char*>(&rr_) -
    reinterpret_cast<char*>(&fl_)) + sizeof(rr_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Wheelspeed_report_6a)
}

void Wheelspeed_report_6a::SharedCtor() {
  ::memset(&fl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rr_) -
      reinterpret_cast<char*>(&fl_)) + sizeof(rr_));
}

Wheelspeed_report_6a::~Wheelspeed_report_6a() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Wheelspeed_report_6a)
  SharedDtor();
}

void Wheelspeed_report_6a::SharedDtor() {
}

void Wheelspeed_report_6a::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Wheelspeed_report_6a& Wheelspeed_report_6a::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Wheelspeed_report_6a.base);
  return *internal_default_instance();
}


void Wheelspeed_report_6a::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Wheelspeed_report_6a)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rr_) -
      reinterpret_cast<char*>(&fl_)) + sizeof(rr_));
  _internal_metadata_.Clear();
}

bool Wheelspeed_report_6a::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Wheelspeed_report_6a)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double fl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double fr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double rl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double rr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Wheelspeed_report_6a)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Wheelspeed_report_6a)
  return false;
#undef DO_
}

void Wheelspeed_report_6a::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Wheelspeed_report_6a)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double fl = 1;
  if (this->fl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->fl(), output);
  }

  // double fr = 2;
  if (this->fr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->fr(), output);
  }

  // double rl = 3;
  if (this->rl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->rl(), output);
  }

  // double rr = 4;
  if (this->rr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->rr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Wheelspeed_report_6a)
}

size_t Wheelspeed_report_6a::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Wheelspeed_report_6a)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double fl = 1;
  if (this->fl() != 0) {
    total_size += 1 + 8;
  }

  // double fr = 2;
  if (this->fr() != 0) {
    total_size += 1 + 8;
  }

  // double rl = 3;
  if (this->rl() != 0) {
    total_size += 1 + 8;
  }

  // double rr = 4;
  if (this->rr() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Wheelspeed_report_6a::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Wheelspeed_report_6a*>(&from));
}

void Wheelspeed_report_6a::MergeFrom(const Wheelspeed_report_6a& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Wheelspeed_report_6a)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fl() != 0) {
    set_fl(from.fl());
  }
  if (from.fr() != 0) {
    set_fr(from.fr());
  }
  if (from.rl() != 0) {
    set_rl(from.rl());
  }
  if (from.rr() != 0) {
    set_rr(from.rr());
  }
}

void Wheelspeed_report_6a::CopyFrom(const Wheelspeed_report_6a& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Wheelspeed_report_6a)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Wheelspeed_report_6a::IsInitialized() const {
  return true;
}

void Wheelspeed_report_6a::Swap(Wheelspeed_report_6a* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Wheelspeed_report_6a::InternalSwap(Wheelspeed_report_6a* other) {
  using std::swap;
  swap(fl_, other->fl_);
  swap(fr_, other->fr_);
  swap(rl_, other->rl_);
  swap(rr_, other->rr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Wheelspeed_report_6a::GetTypeName() const {
  return "Calmcar.drivers.IMU.Wheelspeed_report_6a";
}


// ===================================================================

void Steering_report_65::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Steering_report_65::kAngleFieldNumber;
const int Steering_report_65::kCmdFieldNumber;
const int Steering_report_65::kSpeedFieldNumber;
const int Steering_report_65::kTorqueFieldNumber;
const int Steering_report_65::kEnFieldNumber;
const int Steering_report_65::kOverrideFieldNumber;
const int Steering_report_65::kFltwdcFieldNumber;
const int Steering_report_65::kFlt1FieldNumber;
const int Steering_report_65::kFlt2FieldNumber;
const int Steering_report_65::kFltcalFieldNumber;
const int Steering_report_65::kTmoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Steering_report_65::Steering_report_65()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Steering_report_65.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Steering_report_65)
}
Steering_report_65::Steering_report_65(const Steering_report_65& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&angle_, &from.angle_,
    static_cast<size_t>(reinterpret_cast<char*>(&tmout_) -
    reinterpret_cast<char*>(&angle_)) + sizeof(tmout_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Steering_report_65)
}

void Steering_report_65::SharedCtor() {
  ::memset(&angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tmout_) -
      reinterpret_cast<char*>(&angle_)) + sizeof(tmout_));
}

Steering_report_65::~Steering_report_65() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Steering_report_65)
  SharedDtor();
}

void Steering_report_65::SharedDtor() {
}

void Steering_report_65::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Steering_report_65& Steering_report_65::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Steering_report_65.base);
  return *internal_default_instance();
}


void Steering_report_65::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Steering_report_65)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tmout_) -
      reinterpret_cast<char*>(&angle_)) + sizeof(tmout_));
  _internal_metadata_.Clear();
}

bool Steering_report_65::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Steering_report_65)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double angle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double torque = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &torque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Steering_report_65.EnType en = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_en(static_cast< ::Calmcar::drivers::IMU::Steering_report_65_EnType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Steering_report_65.OverrideType override = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_override(static_cast< ::Calmcar::drivers::IMU::Steering_report_65_OverrideType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Steering_report_65.FltwdcType fltwdc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltwdc(static_cast< ::Calmcar::drivers::IMU::Steering_report_65_FltwdcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Steering_report_65.Flt1Type flt1 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_flt1(static_cast< ::Calmcar::drivers::IMU::Steering_report_65_Flt1Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Steering_report_65.Flt2Type flt2 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_flt2(static_cast< ::Calmcar::drivers::IMU::Steering_report_65_Flt2Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Steering_report_65.FltcalType fltcal = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltcal(static_cast< ::Calmcar::drivers::IMU::Steering_report_65_FltcalType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Steering_report_65.TmoutType tmout = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tmout(static_cast< ::Calmcar::drivers::IMU::Steering_report_65_TmoutType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Steering_report_65)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Steering_report_65)
  return false;
#undef DO_
}

void Steering_report_65::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Steering_report_65)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double angle = 1;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->angle(), output);
  }

  // double cmd = 2;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->cmd(), output);
  }

  // double speed = 3;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->speed(), output);
  }

  // double torque = 4;
  if (this->torque() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->torque(), output);
  }

  // .Calmcar.drivers.IMU.Steering_report_65.EnType en = 5;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->en(), output);
  }

  // .Calmcar.drivers.IMU.Steering_report_65.OverrideType override = 6;
  if (this->override() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->override(), output);
  }

  // .Calmcar.drivers.IMU.Steering_report_65.FltwdcType fltwdc = 7;
  if (this->fltwdc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->fltwdc(), output);
  }

  // .Calmcar.drivers.IMU.Steering_report_65.Flt1Type flt1 = 8;
  if (this->flt1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->flt1(), output);
  }

  // .Calmcar.drivers.IMU.Steering_report_65.Flt2Type flt2 = 9;
  if (this->flt2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->flt2(), output);
  }

  // .Calmcar.drivers.IMU.Steering_report_65.FltcalType fltcal = 10;
  if (this->fltcal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->fltcal(), output);
  }

  // .Calmcar.drivers.IMU.Steering_report_65.TmoutType tmout = 11;
  if (this->tmout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->tmout(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Steering_report_65)
}

size_t Steering_report_65::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Steering_report_65)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double angle = 1;
  if (this->angle() != 0) {
    total_size += 1 + 8;
  }

  // double cmd = 2;
  if (this->cmd() != 0) {
    total_size += 1 + 8;
  }

  // double speed = 3;
  if (this->speed() != 0) {
    total_size += 1 + 8;
  }

  // double torque = 4;
  if (this->torque() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.IMU.Steering_report_65.EnType en = 5;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->en());
  }

  // .Calmcar.drivers.IMU.Steering_report_65.OverrideType override = 6;
  if (this->override() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->override());
  }

  // .Calmcar.drivers.IMU.Steering_report_65.FltwdcType fltwdc = 7;
  if (this->fltwdc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltwdc());
  }

  // .Calmcar.drivers.IMU.Steering_report_65.Flt1Type flt1 = 8;
  if (this->flt1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->flt1());
  }

  // .Calmcar.drivers.IMU.Steering_report_65.Flt2Type flt2 = 9;
  if (this->flt2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->flt2());
  }

  // .Calmcar.drivers.IMU.Steering_report_65.FltcalType fltcal = 10;
  if (this->fltcal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltcal());
  }

  // .Calmcar.drivers.IMU.Steering_report_65.TmoutType tmout = 11;
  if (this->tmout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tmout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Steering_report_65::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Steering_report_65*>(&from));
}

void Steering_report_65::MergeFrom(const Steering_report_65& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Steering_report_65)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.torque() != 0) {
    set_torque(from.torque());
  }
  if (from.en() != 0) {
    set_en(from.en());
  }
  if (from.override() != 0) {
    set_override(from.override());
  }
  if (from.fltwdc() != 0) {
    set_fltwdc(from.fltwdc());
  }
  if (from.flt1() != 0) {
    set_flt1(from.flt1());
  }
  if (from.flt2() != 0) {
    set_flt2(from.flt2());
  }
  if (from.fltcal() != 0) {
    set_fltcal(from.fltcal());
  }
  if (from.tmout() != 0) {
    set_tmout(from.tmout());
  }
}

void Steering_report_65::CopyFrom(const Steering_report_65& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Steering_report_65)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Steering_report_65::IsInitialized() const {
  return true;
}

void Steering_report_65::Swap(Steering_report_65* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Steering_report_65::InternalSwap(Steering_report_65* other) {
  using std::swap;
  swap(angle_, other->angle_);
  swap(cmd_, other->cmd_);
  swap(speed_, other->speed_);
  swap(torque_, other->torque_);
  swap(en_, other->en_);
  swap(override_, other->override_);
  swap(fltwdc_, other->fltwdc_);
  swap(flt1_, other->flt1_);
  swap(flt2_, other->flt2_);
  swap(fltcal_, other->fltcal_);
  swap(tmout_, other->tmout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Steering_report_65::GetTypeName() const {
  return "Calmcar.drivers.IMU.Steering_report_65";
}


// ===================================================================

void Gear_report_67::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gear_report_67::kStateFieldNumber;
const int Gear_report_67::kDriverFieldNumber;
const int Gear_report_67::kCmdFieldNumber;
const int Gear_report_67::kFltbusFieldNumber;
const int Gear_report_67::kAccStateFieldNumber;
const int Gear_report_67::kRejectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gear_report_67::Gear_report_67()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Gear_report_67.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Gear_report_67)
}
Gear_report_67::Gear_report_67(const Gear_report_67& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&reject_) -
    reinterpret_cast<char*>(&state_)) + sizeof(reject_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Gear_report_67)
}

void Gear_report_67::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reject_) -
      reinterpret_cast<char*>(&state_)) + sizeof(reject_));
}

Gear_report_67::~Gear_report_67() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Gear_report_67)
  SharedDtor();
}

void Gear_report_67::SharedDtor() {
}

void Gear_report_67::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gear_report_67& Gear_report_67::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Gear_report_67.base);
  return *internal_default_instance();
}


void Gear_report_67::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Gear_report_67)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reject_) -
      reinterpret_cast<char*>(&state_)) + sizeof(reject_));
  _internal_metadata_.Clear();
}

bool Gear_report_67::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Gear_report_67)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.IMU.Gear_report_67.StateType state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::Calmcar::drivers::IMU::Gear_report_67_StateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Gear_report_67.DriverType driver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_driver(static_cast< ::Calmcar::drivers::IMU::Gear_report_67_DriverType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Gear_report_67.CmdType cmd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd(static_cast< ::Calmcar::drivers::IMU::Gear_report_67_CmdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Gear_report_67.FltbusType fltbus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltbus(static_cast< ::Calmcar::drivers::IMU::Gear_report_67_FltbusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 acc_state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &acc_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Gear_report_67.RejectType reject = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reject(static_cast< ::Calmcar::drivers::IMU::Gear_report_67_RejectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Gear_report_67)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Gear_report_67)
  return false;
#undef DO_
}

void Gear_report_67::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Gear_report_67)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.IMU.Gear_report_67.StateType state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // .Calmcar.drivers.IMU.Gear_report_67.DriverType driver = 2;
  if (this->driver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->driver(), output);
  }

  // .Calmcar.drivers.IMU.Gear_report_67.CmdType cmd = 3;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->cmd(), output);
  }

  // .Calmcar.drivers.IMU.Gear_report_67.FltbusType fltbus = 4;
  if (this->fltbus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->fltbus(), output);
  }

  // int32 acc_state = 5;
  if (this->acc_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->acc_state(), output);
  }

  // .Calmcar.drivers.IMU.Gear_report_67.RejectType reject = 6;
  if (this->reject() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->reject(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Gear_report_67)
}

size_t Gear_report_67::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Gear_report_67)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.IMU.Gear_report_67.StateType state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // .Calmcar.drivers.IMU.Gear_report_67.DriverType driver = 2;
  if (this->driver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->driver());
  }

  // .Calmcar.drivers.IMU.Gear_report_67.CmdType cmd = 3;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }

  // .Calmcar.drivers.IMU.Gear_report_67.FltbusType fltbus = 4;
  if (this->fltbus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltbus());
  }

  // int32 acc_state = 5;
  if (this->acc_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->acc_state());
  }

  // .Calmcar.drivers.IMU.Gear_report_67.RejectType reject = 6;
  if (this->reject() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reject());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gear_report_67::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gear_report_67*>(&from));
}

void Gear_report_67::MergeFrom(const Gear_report_67& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Gear_report_67)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.driver() != 0) {
    set_driver(from.driver());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.fltbus() != 0) {
    set_fltbus(from.fltbus());
  }
  if (from.acc_state() != 0) {
    set_acc_state(from.acc_state());
  }
  if (from.reject() != 0) {
    set_reject(from.reject());
  }
}

void Gear_report_67::CopyFrom(const Gear_report_67& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Gear_report_67)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gear_report_67::IsInitialized() const {
  return true;
}

void Gear_report_67::Swap(Gear_report_67* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gear_report_67::InternalSwap(Gear_report_67* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(driver_, other->driver_);
  swap(cmd_, other->cmd_);
  swap(fltbus_, other->fltbus_);
  swap(acc_state_, other->acc_state_);
  swap(reject_, other->reject_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gear_report_67::GetTypeName() const {
  return "Calmcar.drivers.IMU.Gear_report_67";
}


// ===================================================================

void Gnss_dop_50b::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gnss_dop_50b::kGnssHtdopFieldNumber;
const int Gnss_dop_50b::kGnssPdopFieldNumber;
const int Gnss_dop_50b::kGnssHdopFieldNumber;
const int Gnss_dop_50b::kGnssGdopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gnss_dop_50b::Gnss_dop_50b()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Gnss_dop_50b.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Gnss_dop_50b)
}
Gnss_dop_50b::Gnss_dop_50b(const Gnss_dop_50b& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gnss_htdop_, &from.gnss_htdop_,
    static_cast<size_t>(reinterpret_cast<char*>(&gnss_gdop_) -
    reinterpret_cast<char*>(&gnss_htdop_)) + sizeof(gnss_gdop_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Gnss_dop_50b)
}

void Gnss_dop_50b::SharedCtor() {
  ::memset(&gnss_htdop_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gnss_gdop_) -
      reinterpret_cast<char*>(&gnss_htdop_)) + sizeof(gnss_gdop_));
}

Gnss_dop_50b::~Gnss_dop_50b() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Gnss_dop_50b)
  SharedDtor();
}

void Gnss_dop_50b::SharedDtor() {
}

void Gnss_dop_50b::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gnss_dop_50b& Gnss_dop_50b::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Gnss_dop_50b.base);
  return *internal_default_instance();
}


void Gnss_dop_50b::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Gnss_dop_50b)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gnss_htdop_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gnss_gdop_) -
      reinterpret_cast<char*>(&gnss_htdop_)) + sizeof(gnss_gdop_));
  _internal_metadata_.Clear();
}

bool Gnss_dop_50b::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Gnss_dop_50b)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double gnss_htdop = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gnss_htdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double gnss_pdop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gnss_pdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double gnss_hdop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gnss_hdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double gnss_gdop = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gnss_gdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Gnss_dop_50b)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Gnss_dop_50b)
  return false;
#undef DO_
}

void Gnss_dop_50b::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Gnss_dop_50b)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double gnss_htdop = 1;
  if (this->gnss_htdop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->gnss_htdop(), output);
  }

  // double gnss_pdop = 2;
  if (this->gnss_pdop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->gnss_pdop(), output);
  }

  // double gnss_hdop = 3;
  if (this->gnss_hdop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->gnss_hdop(), output);
  }

  // double gnss_gdop = 4;
  if (this->gnss_gdop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->gnss_gdop(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Gnss_dop_50b)
}

size_t Gnss_dop_50b::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Gnss_dop_50b)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double gnss_htdop = 1;
  if (this->gnss_htdop() != 0) {
    total_size += 1 + 8;
  }

  // double gnss_pdop = 2;
  if (this->gnss_pdop() != 0) {
    total_size += 1 + 8;
  }

  // double gnss_hdop = 3;
  if (this->gnss_hdop() != 0) {
    total_size += 1 + 8;
  }

  // double gnss_gdop = 4;
  if (this->gnss_gdop() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gnss_dop_50b::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gnss_dop_50b*>(&from));
}

void Gnss_dop_50b::MergeFrom(const Gnss_dop_50b& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Gnss_dop_50b)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gnss_htdop() != 0) {
    set_gnss_htdop(from.gnss_htdop());
  }
  if (from.gnss_pdop() != 0) {
    set_gnss_pdop(from.gnss_pdop());
  }
  if (from.gnss_hdop() != 0) {
    set_gnss_hdop(from.gnss_hdop());
  }
  if (from.gnss_gdop() != 0) {
    set_gnss_gdop(from.gnss_gdop());
  }
}

void Gnss_dop_50b::CopyFrom(const Gnss_dop_50b& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Gnss_dop_50b)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gnss_dop_50b::IsInitialized() const {
  return true;
}

void Gnss_dop_50b::Swap(Gnss_dop_50b* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gnss_dop_50b::InternalSwap(Gnss_dop_50b* other) {
  using std::swap;
  swap(gnss_htdop_, other->gnss_htdop_);
  swap(gnss_pdop_, other->gnss_pdop_);
  swap(gnss_hdop_, other->gnss_hdop_);
  swap(gnss_gdop_, other->gnss_gdop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gnss_dop_50b::GetTypeName() const {
  return "Calmcar.drivers.IMU.Gnss_dop_50b";
}


// ===================================================================

void Gnss_headingandpitch_50c::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gnss_headingandpitch_50c::kGnssPitchFieldNumber;
const int Gnss_headingandpitch_50c::kGnssHeadingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gnss_headingandpitch_50c::Gnss_headingandpitch_50c()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Gnss_headingandpitch_50c.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
}
Gnss_headingandpitch_50c::Gnss_headingandpitch_50c(const Gnss_headingandpitch_50c& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gnss_pitch_, &from.gnss_pitch_,
    static_cast<size_t>(reinterpret_cast<char*>(&gnss_heading_) -
    reinterpret_cast<char*>(&gnss_pitch_)) + sizeof(gnss_heading_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
}

void Gnss_headingandpitch_50c::SharedCtor() {
  ::memset(&gnss_pitch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gnss_heading_) -
      reinterpret_cast<char*>(&gnss_pitch_)) + sizeof(gnss_heading_));
}

Gnss_headingandpitch_50c::~Gnss_headingandpitch_50c() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
  SharedDtor();
}

void Gnss_headingandpitch_50c::SharedDtor() {
}

void Gnss_headingandpitch_50c::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gnss_headingandpitch_50c& Gnss_headingandpitch_50c::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Gnss_headingandpitch_50c.base);
  return *internal_default_instance();
}


void Gnss_headingandpitch_50c::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gnss_pitch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gnss_heading_) -
      reinterpret_cast<char*>(&gnss_pitch_)) + sizeof(gnss_heading_));
  _internal_metadata_.Clear();
}

bool Gnss_headingandpitch_50c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double gnss_pitch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gnss_pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double gnss_heading = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gnss_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
  return false;
#undef DO_
}

void Gnss_headingandpitch_50c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double gnss_pitch = 1;
  if (this->gnss_pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->gnss_pitch(), output);
  }

  // double gnss_heading = 2;
  if (this->gnss_heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->gnss_heading(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
}

size_t Gnss_headingandpitch_50c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double gnss_pitch = 1;
  if (this->gnss_pitch() != 0) {
    total_size += 1 + 8;
  }

  // double gnss_heading = 2;
  if (this->gnss_heading() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gnss_headingandpitch_50c::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gnss_headingandpitch_50c*>(&from));
}

void Gnss_headingandpitch_50c::MergeFrom(const Gnss_headingandpitch_50c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gnss_pitch() != 0) {
    set_gnss_pitch(from.gnss_pitch());
  }
  if (from.gnss_heading() != 0) {
    set_gnss_heading(from.gnss_heading());
  }
}

void Gnss_headingandpitch_50c::CopyFrom(const Gnss_headingandpitch_50c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gnss_headingandpitch_50c::IsInitialized() const {
  return true;
}

void Gnss_headingandpitch_50c::Swap(Gnss_headingandpitch_50c* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gnss_headingandpitch_50c::InternalSwap(Gnss_headingandpitch_50c* other) {
  using std::swap;
  swap(gnss_pitch_, other->gnss_pitch_);
  swap(gnss_heading_, other->gnss_heading_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gnss_headingandpitch_50c::GetTypeName() const {
  return "Calmcar.drivers.IMU.Gnss_headingandpitch_50c";
}


// ===================================================================

void Gnss_heightandweek_50a::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gnss_heightandweek_50a::kGpsWeekFieldNumber;
const int Gnss_heightandweek_50a::kGnssLocatheightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gnss_heightandweek_50a::Gnss_heightandweek_50a()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Gnss_heightandweek_50a.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
}
Gnss_heightandweek_50a::Gnss_heightandweek_50a(const Gnss_heightandweek_50a& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gnss_locatheight_, &from.gnss_locatheight_,
    static_cast<size_t>(reinterpret_cast<char*>(&gps_week_) -
    reinterpret_cast<char*>(&gnss_locatheight_)) + sizeof(gps_week_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
}

void Gnss_heightandweek_50a::SharedCtor() {
  ::memset(&gnss_locatheight_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gps_week_) -
      reinterpret_cast<char*>(&gnss_locatheight_)) + sizeof(gps_week_));
}

Gnss_heightandweek_50a::~Gnss_heightandweek_50a() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
  SharedDtor();
}

void Gnss_heightandweek_50a::SharedDtor() {
}

void Gnss_heightandweek_50a::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gnss_heightandweek_50a& Gnss_heightandweek_50a::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Gnss_heightandweek_50a.base);
  return *internal_default_instance();
}


void Gnss_heightandweek_50a::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gnss_locatheight_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gps_week_) -
      reinterpret_cast<char*>(&gnss_locatheight_)) + sizeof(gps_week_));
  _internal_metadata_.Clear();
}

bool Gnss_heightandweek_50a::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 gps_week = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gps_week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double gnss_locatheight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gnss_locatheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
  return false;
#undef DO_
}

void Gnss_heightandweek_50a::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 gps_week = 1;
  if (this->gps_week() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gps_week(), output);
  }

  // double gnss_locatheight = 2;
  if (this->gnss_locatheight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->gnss_locatheight(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
}

size_t Gnss_heightandweek_50a::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double gnss_locatheight = 2;
  if (this->gnss_locatheight() != 0) {
    total_size += 1 + 8;
  }

  // int32 gps_week = 1;
  if (this->gps_week() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gps_week());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gnss_heightandweek_50a::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gnss_heightandweek_50a*>(&from));
}

void Gnss_heightandweek_50a::MergeFrom(const Gnss_heightandweek_50a& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gnss_locatheight() != 0) {
    set_gnss_locatheight(from.gnss_locatheight());
  }
  if (from.gps_week() != 0) {
    set_gps_week(from.gps_week());
  }
}

void Gnss_heightandweek_50a::CopyFrom(const Gnss_heightandweek_50a& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gnss_heightandweek_50a::IsInitialized() const {
  return true;
}

void Gnss_heightandweek_50a::Swap(Gnss_heightandweek_50a* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gnss_heightandweek_50a::InternalSwap(Gnss_heightandweek_50a* other) {
  using std::swap;
  swap(gnss_locatheight_, other->gnss_locatheight_);
  swap(gps_week_, other->gps_week_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gnss_heightandweek_50a::GetTypeName() const {
  return "Calmcar.drivers.IMU.Gnss_heightandweek_50a";
}


// ===================================================================

void Gnss_utc_508::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gnss_utc_508::kUtcYearFieldNumber;
const int Gnss_utc_508::kUtcSecFieldNumber;
const int Gnss_utc_508::kUtcMsecFieldNumber;
const int Gnss_utc_508::kUtcMonthFieldNumber;
const int Gnss_utc_508::kUtcMinFieldNumber;
const int Gnss_utc_508::kUtcHourFieldNumber;
const int Gnss_utc_508::kUtcDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gnss_utc_508::Gnss_utc_508()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Gnss_utc_508.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Gnss_utc_508)
}
Gnss_utc_508::Gnss_utc_508(const Gnss_utc_508& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&utc_year_, &from.utc_year_,
    static_cast<size_t>(reinterpret_cast<char*>(&utc_day_) -
    reinterpret_cast<char*>(&utc_year_)) + sizeof(utc_day_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Gnss_utc_508)
}

void Gnss_utc_508::SharedCtor() {
  ::memset(&utc_year_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&utc_day_) -
      reinterpret_cast<char*>(&utc_year_)) + sizeof(utc_day_));
}

Gnss_utc_508::~Gnss_utc_508() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Gnss_utc_508)
  SharedDtor();
}

void Gnss_utc_508::SharedDtor() {
}

void Gnss_utc_508::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gnss_utc_508& Gnss_utc_508::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Gnss_utc_508.base);
  return *internal_default_instance();
}


void Gnss_utc_508::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Gnss_utc_508)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&utc_year_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&utc_day_) -
      reinterpret_cast<char*>(&utc_year_)) + sizeof(utc_day_));
  _internal_metadata_.Clear();
}

bool Gnss_utc_508::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Gnss_utc_508)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 utc_year = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &utc_year_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 utc_sec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &utc_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 utc_msec = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &utc_msec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 utc_month = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &utc_month_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 utc_min = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &utc_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 utc_hour = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &utc_hour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 utc_day = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &utc_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Gnss_utc_508)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Gnss_utc_508)
  return false;
#undef DO_
}

void Gnss_utc_508::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Gnss_utc_508)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 utc_year = 1;
  if (this->utc_year() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->utc_year(), output);
  }

  // int32 utc_sec = 2;
  if (this->utc_sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->utc_sec(), output);
  }

  // int32 utc_msec = 3;
  if (this->utc_msec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->utc_msec(), output);
  }

  // int32 utc_month = 4;
  if (this->utc_month() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->utc_month(), output);
  }

  // int32 utc_min = 5;
  if (this->utc_min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->utc_min(), output);
  }

  // int32 utc_hour = 6;
  if (this->utc_hour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->utc_hour(), output);
  }

  // int32 utc_day = 7;
  if (this->utc_day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->utc_day(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Gnss_utc_508)
}

size_t Gnss_utc_508::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Gnss_utc_508)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 utc_year = 1;
  if (this->utc_year() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->utc_year());
  }

  // int32 utc_sec = 2;
  if (this->utc_sec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->utc_sec());
  }

  // int32 utc_msec = 3;
  if (this->utc_msec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->utc_msec());
  }

  // int32 utc_month = 4;
  if (this->utc_month() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->utc_month());
  }

  // int32 utc_min = 5;
  if (this->utc_min() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->utc_min());
  }

  // int32 utc_hour = 6;
  if (this->utc_hour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->utc_hour());
  }

  // int32 utc_day = 7;
  if (this->utc_day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->utc_day());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gnss_utc_508::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gnss_utc_508*>(&from));
}

void Gnss_utc_508::MergeFrom(const Gnss_utc_508& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Gnss_utc_508)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.utc_year() != 0) {
    set_utc_year(from.utc_year());
  }
  if (from.utc_sec() != 0) {
    set_utc_sec(from.utc_sec());
  }
  if (from.utc_msec() != 0) {
    set_utc_msec(from.utc_msec());
  }
  if (from.utc_month() != 0) {
    set_utc_month(from.utc_month());
  }
  if (from.utc_min() != 0) {
    set_utc_min(from.utc_min());
  }
  if (from.utc_hour() != 0) {
    set_utc_hour(from.utc_hour());
  }
  if (from.utc_day() != 0) {
    set_utc_day(from.utc_day());
  }
}

void Gnss_utc_508::CopyFrom(const Gnss_utc_508& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Gnss_utc_508)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gnss_utc_508::IsInitialized() const {
  return true;
}

void Gnss_utc_508::Swap(Gnss_utc_508* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gnss_utc_508::InternalSwap(Gnss_utc_508* other) {
  using std::swap;
  swap(utc_year_, other->utc_year_);
  swap(utc_sec_, other->utc_sec_);
  swap(utc_msec_, other->utc_msec_);
  swap(utc_month_, other->utc_month_);
  swap(utc_min_, other->utc_min_);
  swap(utc_hour_, other->utc_hour_);
  swap(utc_day_, other->utc_day_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gnss_utc_508::GetTypeName() const {
  return "Calmcar.drivers.IMU.Gnss_utc_508";
}


// ===================================================================

void Gnss_latitudelongitude_509::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gnss_latitudelongitude_509::kGnssLongitudeFieldNumber;
const int Gnss_latitudelongitude_509::kGnssLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gnss_latitudelongitude_509::Gnss_latitudelongitude_509()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Gnss_latitudelongitude_509.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
}
Gnss_latitudelongitude_509::Gnss_latitudelongitude_509(const Gnss_latitudelongitude_509& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gnss_longitude_, &from.gnss_longitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&gnss_latitude_) -
    reinterpret_cast<char*>(&gnss_longitude_)) + sizeof(gnss_latitude_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
}

void Gnss_latitudelongitude_509::SharedCtor() {
  ::memset(&gnss_longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gnss_latitude_) -
      reinterpret_cast<char*>(&gnss_longitude_)) + sizeof(gnss_latitude_));
}

Gnss_latitudelongitude_509::~Gnss_latitudelongitude_509() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
  SharedDtor();
}

void Gnss_latitudelongitude_509::SharedDtor() {
}

void Gnss_latitudelongitude_509::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gnss_latitudelongitude_509& Gnss_latitudelongitude_509::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Gnss_latitudelongitude_509.base);
  return *internal_default_instance();
}


void Gnss_latitudelongitude_509::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gnss_longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gnss_latitude_) -
      reinterpret_cast<char*>(&gnss_longitude_)) + sizeof(gnss_latitude_));
  _internal_metadata_.Clear();
}

bool Gnss_latitudelongitude_509::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double gnss_longitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gnss_longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double gnss_latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gnss_latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
  return false;
#undef DO_
}

void Gnss_latitudelongitude_509::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double gnss_longitude = 1;
  if (this->gnss_longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->gnss_longitude(), output);
  }

  // double gnss_latitude = 2;
  if (this->gnss_latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->gnss_latitude(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
}

size_t Gnss_latitudelongitude_509::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double gnss_longitude = 1;
  if (this->gnss_longitude() != 0) {
    total_size += 1 + 8;
  }

  // double gnss_latitude = 2;
  if (this->gnss_latitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gnss_latitudelongitude_509::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gnss_latitudelongitude_509*>(&from));
}

void Gnss_latitudelongitude_509::MergeFrom(const Gnss_latitudelongitude_509& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gnss_longitude() != 0) {
    set_gnss_longitude(from.gnss_longitude());
  }
  if (from.gnss_latitude() != 0) {
    set_gnss_latitude(from.gnss_latitude());
  }
}

void Gnss_latitudelongitude_509::CopyFrom(const Gnss_latitudelongitude_509& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gnss_latitudelongitude_509::IsInitialized() const {
  return true;
}

void Gnss_latitudelongitude_509::Swap(Gnss_latitudelongitude_509* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gnss_latitudelongitude_509::InternalSwap(Gnss_latitudelongitude_509* other) {
  using std::swap;
  swap(gnss_longitude_, other->gnss_longitude_);
  swap(gnss_latitude_, other->gnss_latitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gnss_latitudelongitude_509::GetTypeName() const {
  return "Calmcar.drivers.IMU.Gnss_latitudelongitude_509";
}


// ===================================================================

void Ins_datainfo_506::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_datainfo_506::kInsGnssAgeFieldNumber;
const int Ins_datainfo_506::kInsCarStatusFieldNumber;
const int Ins_datainfo_506::kInsGnssflagHeadingFieldNumber;
const int Ins_datainfo_506::kInsNumsvFieldNumber;
const int Ins_datainfo_506::kInsGnssflagPosFieldNumber;
const int Ins_datainfo_506::kInsStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_datainfo_506::Ins_datainfo_506()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Ins_datainfo_506.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Ins_datainfo_506)
}
Ins_datainfo_506::Ins_datainfo_506(const Ins_datainfo_506& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ins_gnss_age_, &from.ins_gnss_age_,
    static_cast<size_t>(reinterpret_cast<char*>(&ins_status_) -
    reinterpret_cast<char*>(&ins_gnss_age_)) + sizeof(ins_status_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Ins_datainfo_506)
}

void Ins_datainfo_506::SharedCtor() {
  ::memset(&ins_gnss_age_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_status_) -
      reinterpret_cast<char*>(&ins_gnss_age_)) + sizeof(ins_status_));
}

Ins_datainfo_506::~Ins_datainfo_506() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Ins_datainfo_506)
  SharedDtor();
}

void Ins_datainfo_506::SharedDtor() {
}

void Ins_datainfo_506::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ins_datainfo_506& Ins_datainfo_506::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Ins_datainfo_506.base);
  return *internal_default_instance();
}


void Ins_datainfo_506::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Ins_datainfo_506)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ins_gnss_age_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_status_) -
      reinterpret_cast<char*>(&ins_gnss_age_)) + sizeof(ins_status_));
  _internal_metadata_.Clear();
}

bool Ins_datainfo_506::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Ins_datainfo_506)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ins_gnss_age = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ins_gnss_age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_car_statusType ins_car_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ins_car_status(static_cast< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_car_statusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_gnssflag_headingType ins_gnssflag_heading = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ins_gnssflag_heading(static_cast< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_headingType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ins_numsv = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ins_numsv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_gnssflag_posType ins_gnssflag_pos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ins_gnssflag_pos(static_cast< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_posType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_statusType ins_status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ins_status(static_cast< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_statusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Ins_datainfo_506)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Ins_datainfo_506)
  return false;
#undef DO_
}

void Ins_datainfo_506::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Ins_datainfo_506)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ins_gnss_age = 1;
  if (this->ins_gnss_age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ins_gnss_age(), output);
  }

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_car_statusType ins_car_status = 2;
  if (this->ins_car_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ins_car_status(), output);
  }

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_gnssflag_headingType ins_gnssflag_heading = 3;
  if (this->ins_gnssflag_heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ins_gnssflag_heading(), output);
  }

  // int32 ins_numsv = 4;
  if (this->ins_numsv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ins_numsv(), output);
  }

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_gnssflag_posType ins_gnssflag_pos = 5;
  if (this->ins_gnssflag_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->ins_gnssflag_pos(), output);
  }

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_statusType ins_status = 6;
  if (this->ins_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->ins_status(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Ins_datainfo_506)
}

size_t Ins_datainfo_506::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Ins_datainfo_506)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 ins_gnss_age = 1;
  if (this->ins_gnss_age() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ins_gnss_age());
  }

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_car_statusType ins_car_status = 2;
  if (this->ins_car_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ins_car_status());
  }

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_gnssflag_headingType ins_gnssflag_heading = 3;
  if (this->ins_gnssflag_heading() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ins_gnssflag_heading());
  }

  // int32 ins_numsv = 4;
  if (this->ins_numsv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ins_numsv());
  }

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_gnssflag_posType ins_gnssflag_pos = 5;
  if (this->ins_gnssflag_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ins_gnssflag_pos());
  }

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_statusType ins_status = 6;
  if (this->ins_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ins_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_datainfo_506::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Ins_datainfo_506*>(&from));
}

void Ins_datainfo_506::MergeFrom(const Ins_datainfo_506& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Ins_datainfo_506)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ins_gnss_age() != 0) {
    set_ins_gnss_age(from.ins_gnss_age());
  }
  if (from.ins_car_status() != 0) {
    set_ins_car_status(from.ins_car_status());
  }
  if (from.ins_gnssflag_heading() != 0) {
    set_ins_gnssflag_heading(from.ins_gnssflag_heading());
  }
  if (from.ins_numsv() != 0) {
    set_ins_numsv(from.ins_numsv());
  }
  if (from.ins_gnssflag_pos() != 0) {
    set_ins_gnssflag_pos(from.ins_gnssflag_pos());
  }
  if (from.ins_status() != 0) {
    set_ins_status(from.ins_status());
  }
}

void Ins_datainfo_506::CopyFrom(const Ins_datainfo_506& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Ins_datainfo_506)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_datainfo_506::IsInitialized() const {
  return true;
}

void Ins_datainfo_506::Swap(Ins_datainfo_506* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_datainfo_506::InternalSwap(Ins_datainfo_506* other) {
  using std::swap;
  swap(ins_gnss_age_, other->ins_gnss_age_);
  swap(ins_car_status_, other->ins_car_status_);
  swap(ins_gnssflag_heading_, other->ins_gnssflag_heading_);
  swap(ins_numsv_, other->ins_numsv_);
  swap(ins_gnssflag_pos_, other->ins_gnssflag_pos_);
  swap(ins_status_, other->ins_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Ins_datainfo_506::GetTypeName() const {
  return "Calmcar.drivers.IMU.Ins_datainfo_506";
}


// ===================================================================

void Ins_std_507::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_std_507::kInsStdLatFieldNumber;
const int Ins_std_507::kInsStdLonFieldNumber;
const int Ins_std_507::kInsStdLocatheightFieldNumber;
const int Ins_std_507::kInsStdHeadingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_std_507::Ins_std_507()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Ins_std_507.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Ins_std_507)
}
Ins_std_507::Ins_std_507(const Ins_std_507& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ins_std_lat_, &from.ins_std_lat_,
    static_cast<size_t>(reinterpret_cast<char*>(&ins_std_heading_) -
    reinterpret_cast<char*>(&ins_std_lat_)) + sizeof(ins_std_heading_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Ins_std_507)
}

void Ins_std_507::SharedCtor() {
  ::memset(&ins_std_lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_std_heading_) -
      reinterpret_cast<char*>(&ins_std_lat_)) + sizeof(ins_std_heading_));
}

Ins_std_507::~Ins_std_507() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Ins_std_507)
  SharedDtor();
}

void Ins_std_507::SharedDtor() {
}

void Ins_std_507::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ins_std_507& Ins_std_507::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Ins_std_507.base);
  return *internal_default_instance();
}


void Ins_std_507::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Ins_std_507)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ins_std_lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_std_heading_) -
      reinterpret_cast<char*>(&ins_std_lat_)) + sizeof(ins_std_heading_));
  _internal_metadata_.Clear();
}

bool Ins_std_507::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Ins_std_507)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double ins_std_lat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_std_lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_std_lon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_std_lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_std_locatheight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_std_locatheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_std_heading = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_std_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Ins_std_507)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Ins_std_507)
  return false;
#undef DO_
}

void Ins_std_507::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Ins_std_507)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ins_std_lat = 1;
  if (this->ins_std_lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ins_std_lat(), output);
  }

  // double ins_std_lon = 2;
  if (this->ins_std_lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ins_std_lon(), output);
  }

  // double ins_std_locatheight = 3;
  if (this->ins_std_locatheight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ins_std_locatheight(), output);
  }

  // double ins_std_heading = 4;
  if (this->ins_std_heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->ins_std_heading(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Ins_std_507)
}

size_t Ins_std_507::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Ins_std_507)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double ins_std_lat = 1;
  if (this->ins_std_lat() != 0) {
    total_size += 1 + 8;
  }

  // double ins_std_lon = 2;
  if (this->ins_std_lon() != 0) {
    total_size += 1 + 8;
  }

  // double ins_std_locatheight = 3;
  if (this->ins_std_locatheight() != 0) {
    total_size += 1 + 8;
  }

  // double ins_std_heading = 4;
  if (this->ins_std_heading() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_std_507::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Ins_std_507*>(&from));
}

void Ins_std_507::MergeFrom(const Ins_std_507& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Ins_std_507)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ins_std_lat() != 0) {
    set_ins_std_lat(from.ins_std_lat());
  }
  if (from.ins_std_lon() != 0) {
    set_ins_std_lon(from.ins_std_lon());
  }
  if (from.ins_std_locatheight() != 0) {
    set_ins_std_locatheight(from.ins_std_locatheight());
  }
  if (from.ins_std_heading() != 0) {
    set_ins_std_heading(from.ins_std_heading());
  }
}

void Ins_std_507::CopyFrom(const Ins_std_507& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Ins_std_507)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_std_507::IsInitialized() const {
  return true;
}

void Ins_std_507::Swap(Ins_std_507* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_std_507::InternalSwap(Ins_std_507* other) {
  using std::swap;
  swap(ins_std_lat_, other->ins_std_lat_);
  swap(ins_std_lon_, other->ins_std_lon_);
  swap(ins_std_locatheight_, other->ins_std_locatheight_);
  swap(ins_std_heading_, other->ins_std_heading_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Ins_std_507::GetTypeName() const {
  return "Calmcar.drivers.IMU.Ins_std_507";
}


// ===================================================================

void Ins_latitudelongitude_504::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_latitudelongitude_504::kInsLatitudeFieldNumber;
const int Ins_latitudelongitude_504::kInsLongitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_latitudelongitude_504::Ins_latitudelongitude_504()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Ins_latitudelongitude_504.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
}
Ins_latitudelongitude_504::Ins_latitudelongitude_504(const Ins_latitudelongitude_504& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ins_latitude_, &from.ins_latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&ins_longitude_) -
    reinterpret_cast<char*>(&ins_latitude_)) + sizeof(ins_longitude_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
}

void Ins_latitudelongitude_504::SharedCtor() {
  ::memset(&ins_latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_longitude_) -
      reinterpret_cast<char*>(&ins_latitude_)) + sizeof(ins_longitude_));
}

Ins_latitudelongitude_504::~Ins_latitudelongitude_504() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
  SharedDtor();
}

void Ins_latitudelongitude_504::SharedDtor() {
}

void Ins_latitudelongitude_504::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ins_latitudelongitude_504& Ins_latitudelongitude_504::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Ins_latitudelongitude_504.base);
  return *internal_default_instance();
}


void Ins_latitudelongitude_504::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ins_latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_longitude_) -
      reinterpret_cast<char*>(&ins_latitude_)) + sizeof(ins_longitude_));
  _internal_metadata_.Clear();
}

bool Ins_latitudelongitude_504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double ins_latitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
  return false;
#undef DO_
}

void Ins_latitudelongitude_504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ins_latitude = 1;
  if (this->ins_latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ins_latitude(), output);
  }

  // double ins_longitude = 2;
  if (this->ins_longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ins_longitude(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
}

size_t Ins_latitudelongitude_504::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double ins_latitude = 1;
  if (this->ins_latitude() != 0) {
    total_size += 1 + 8;
  }

  // double ins_longitude = 2;
  if (this->ins_longitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_latitudelongitude_504::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Ins_latitudelongitude_504*>(&from));
}

void Ins_latitudelongitude_504::MergeFrom(const Ins_latitudelongitude_504& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ins_latitude() != 0) {
    set_ins_latitude(from.ins_latitude());
  }
  if (from.ins_longitude() != 0) {
    set_ins_longitude(from.ins_longitude());
  }
}

void Ins_latitudelongitude_504::CopyFrom(const Ins_latitudelongitude_504& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_latitudelongitude_504::IsInitialized() const {
  return true;
}

void Ins_latitudelongitude_504::Swap(Ins_latitudelongitude_504* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_latitudelongitude_504::InternalSwap(Ins_latitudelongitude_504* other) {
  using std::swap;
  swap(ins_latitude_, other->ins_latitude_);
  swap(ins_longitude_, other->ins_longitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Ins_latitudelongitude_504::GetTypeName() const {
  return "Calmcar.drivers.IMU.Ins_latitudelongitude_504";
}


// ===================================================================

void Ins_speed_505::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_speed_505::kInsEastspdFieldNumber;
const int Ins_speed_505::kInsNorthspdFieldNumber;
const int Ins_speed_505::kInsTogroundspdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_speed_505::Ins_speed_505()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Ins_speed_505.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Ins_speed_505)
}
Ins_speed_505::Ins_speed_505(const Ins_speed_505& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ins_eastspd_, &from.ins_eastspd_,
    static_cast<size_t>(reinterpret_cast<char*>(&ins_togroundspd_) -
    reinterpret_cast<char*>(&ins_eastspd_)) + sizeof(ins_togroundspd_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Ins_speed_505)
}

void Ins_speed_505::SharedCtor() {
  ::memset(&ins_eastspd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_togroundspd_) -
      reinterpret_cast<char*>(&ins_eastspd_)) + sizeof(ins_togroundspd_));
}

Ins_speed_505::~Ins_speed_505() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Ins_speed_505)
  SharedDtor();
}

void Ins_speed_505::SharedDtor() {
}

void Ins_speed_505::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ins_speed_505& Ins_speed_505::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Ins_speed_505.base);
  return *internal_default_instance();
}


void Ins_speed_505::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Ins_speed_505)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ins_eastspd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_togroundspd_) -
      reinterpret_cast<char*>(&ins_eastspd_)) + sizeof(ins_togroundspd_));
  _internal_metadata_.Clear();
}

bool Ins_speed_505::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Ins_speed_505)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double ins_eastspd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_eastspd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_northspd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_northspd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_togroundspd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_togroundspd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Ins_speed_505)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Ins_speed_505)
  return false;
#undef DO_
}

void Ins_speed_505::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Ins_speed_505)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ins_eastspd = 1;
  if (this->ins_eastspd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ins_eastspd(), output);
  }

  // double ins_northspd = 2;
  if (this->ins_northspd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ins_northspd(), output);
  }

  // double ins_togroundspd = 3;
  if (this->ins_togroundspd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ins_togroundspd(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Ins_speed_505)
}

size_t Ins_speed_505::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Ins_speed_505)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double ins_eastspd = 1;
  if (this->ins_eastspd() != 0) {
    total_size += 1 + 8;
  }

  // double ins_northspd = 2;
  if (this->ins_northspd() != 0) {
    total_size += 1 + 8;
  }

  // double ins_togroundspd = 3;
  if (this->ins_togroundspd() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_speed_505::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Ins_speed_505*>(&from));
}

void Ins_speed_505::MergeFrom(const Ins_speed_505& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Ins_speed_505)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ins_eastspd() != 0) {
    set_ins_eastspd(from.ins_eastspd());
  }
  if (from.ins_northspd() != 0) {
    set_ins_northspd(from.ins_northspd());
  }
  if (from.ins_togroundspd() != 0) {
    set_ins_togroundspd(from.ins_togroundspd());
  }
}

void Ins_speed_505::CopyFrom(const Ins_speed_505& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Ins_speed_505)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_speed_505::IsInitialized() const {
  return true;
}

void Ins_speed_505::Swap(Ins_speed_505* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_speed_505::InternalSwap(Ins_speed_505* other) {
  using std::swap;
  swap(ins_eastspd_, other->ins_eastspd_);
  swap(ins_northspd_, other->ins_northspd_);
  swap(ins_togroundspd_, other->ins_togroundspd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Ins_speed_505::GetTypeName() const {
  return "Calmcar.drivers.IMU.Ins_speed_505";
}


// ===================================================================

void Ins_headingpitchroll_502::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_headingpitchroll_502::kInsPitchangleFieldNumber;
const int Ins_headingpitchroll_502::kInsRollangleFieldNumber;
const int Ins_headingpitchroll_502::kInsHeadingangleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_headingpitchroll_502::Ins_headingpitchroll_502()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Ins_headingpitchroll_502.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
}
Ins_headingpitchroll_502::Ins_headingpitchroll_502(const Ins_headingpitchroll_502& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ins_pitchangle_, &from.ins_pitchangle_,
    static_cast<size_t>(reinterpret_cast<char*>(&ins_headingangle_) -
    reinterpret_cast<char*>(&ins_pitchangle_)) + sizeof(ins_headingangle_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
}

void Ins_headingpitchroll_502::SharedCtor() {
  ::memset(&ins_pitchangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_headingangle_) -
      reinterpret_cast<char*>(&ins_pitchangle_)) + sizeof(ins_headingangle_));
}

Ins_headingpitchroll_502::~Ins_headingpitchroll_502() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
  SharedDtor();
}

void Ins_headingpitchroll_502::SharedDtor() {
}

void Ins_headingpitchroll_502::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ins_headingpitchroll_502& Ins_headingpitchroll_502::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Ins_headingpitchroll_502.base);
  return *internal_default_instance();
}


void Ins_headingpitchroll_502::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ins_pitchangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_headingangle_) -
      reinterpret_cast<char*>(&ins_pitchangle_)) + sizeof(ins_headingangle_));
  _internal_metadata_.Clear();
}

bool Ins_headingpitchroll_502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double ins_pitchangle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_pitchangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_rollangle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_rollangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_headingangle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_headingangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
  return false;
#undef DO_
}

void Ins_headingpitchroll_502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ins_pitchangle = 1;
  if (this->ins_pitchangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ins_pitchangle(), output);
  }

  // double ins_rollangle = 2;
  if (this->ins_rollangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ins_rollangle(), output);
  }

  // double ins_headingangle = 3;
  if (this->ins_headingangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ins_headingangle(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
}

size_t Ins_headingpitchroll_502::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double ins_pitchangle = 1;
  if (this->ins_pitchangle() != 0) {
    total_size += 1 + 8;
  }

  // double ins_rollangle = 2;
  if (this->ins_rollangle() != 0) {
    total_size += 1 + 8;
  }

  // double ins_headingangle = 3;
  if (this->ins_headingangle() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_headingpitchroll_502::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Ins_headingpitchroll_502*>(&from));
}

void Ins_headingpitchroll_502::MergeFrom(const Ins_headingpitchroll_502& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ins_pitchangle() != 0) {
    set_ins_pitchangle(from.ins_pitchangle());
  }
  if (from.ins_rollangle() != 0) {
    set_ins_rollangle(from.ins_rollangle());
  }
  if (from.ins_headingangle() != 0) {
    set_ins_headingangle(from.ins_headingangle());
  }
}

void Ins_headingpitchroll_502::CopyFrom(const Ins_headingpitchroll_502& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_headingpitchroll_502::IsInitialized() const {
  return true;
}

void Ins_headingpitchroll_502::Swap(Ins_headingpitchroll_502* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_headingpitchroll_502::InternalSwap(Ins_headingpitchroll_502* other) {
  using std::swap;
  swap(ins_pitchangle_, other->ins_pitchangle_);
  swap(ins_rollangle_, other->ins_rollangle_);
  swap(ins_headingangle_, other->ins_headingangle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Ins_headingpitchroll_502::GetTypeName() const {
  return "Calmcar.drivers.IMU.Ins_headingpitchroll_502";
}


// ===================================================================

void Ins_heightandtime_503::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_heightandtime_503::kInsLocatheightFieldNumber;
const int Ins_heightandtime_503::kInsTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_heightandtime_503::Ins_heightandtime_503()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Ins_heightandtime_503.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Ins_heightandtime_503)
}
Ins_heightandtime_503::Ins_heightandtime_503(const Ins_heightandtime_503& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ins_locatheight_, &from.ins_locatheight_,
    static_cast<size_t>(reinterpret_cast<char*>(&ins_time_) -
    reinterpret_cast<char*>(&ins_locatheight_)) + sizeof(ins_time_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Ins_heightandtime_503)
}

void Ins_heightandtime_503::SharedCtor() {
  ::memset(&ins_locatheight_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_time_) -
      reinterpret_cast<char*>(&ins_locatheight_)) + sizeof(ins_time_));
}

Ins_heightandtime_503::~Ins_heightandtime_503() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Ins_heightandtime_503)
  SharedDtor();
}

void Ins_heightandtime_503::SharedDtor() {
}

void Ins_heightandtime_503::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ins_heightandtime_503& Ins_heightandtime_503::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Ins_heightandtime_503.base);
  return *internal_default_instance();
}


void Ins_heightandtime_503::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Ins_heightandtime_503)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ins_locatheight_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_time_) -
      reinterpret_cast<char*>(&ins_locatheight_)) + sizeof(ins_time_));
  _internal_metadata_.Clear();
}

bool Ins_heightandtime_503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Ins_heightandtime_503)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double ins_locatheight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_locatheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ins_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ins_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Ins_heightandtime_503)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Ins_heightandtime_503)
  return false;
#undef DO_
}

void Ins_heightandtime_503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Ins_heightandtime_503)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ins_locatheight = 1;
  if (this->ins_locatheight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ins_locatheight(), output);
  }

  // uint32 ins_time = 2;
  if (this->ins_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ins_time(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Ins_heightandtime_503)
}

size_t Ins_heightandtime_503::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Ins_heightandtime_503)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double ins_locatheight = 1;
  if (this->ins_locatheight() != 0) {
    total_size += 1 + 8;
  }

  // uint32 ins_time = 2;
  if (this->ins_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ins_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_heightandtime_503::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Ins_heightandtime_503*>(&from));
}

void Ins_heightandtime_503::MergeFrom(const Ins_heightandtime_503& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Ins_heightandtime_503)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ins_locatheight() != 0) {
    set_ins_locatheight(from.ins_locatheight());
  }
  if (from.ins_time() != 0) {
    set_ins_time(from.ins_time());
  }
}

void Ins_heightandtime_503::CopyFrom(const Ins_heightandtime_503& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Ins_heightandtime_503)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_heightandtime_503::IsInitialized() const {
  return true;
}

void Ins_heightandtime_503::Swap(Ins_heightandtime_503* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_heightandtime_503::InternalSwap(Ins_heightandtime_503* other) {
  using std::swap;
  swap(ins_locatheight_, other->ins_locatheight_);
  swap(ins_time_, other->ins_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Ins_heightandtime_503::GetTypeName() const {
  return "Calmcar.drivers.IMU.Ins_heightandtime_503";
}


// ===================================================================

void Ins_acc_500::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_acc_500::kInsAccXFieldNumber;
const int Ins_acc_500::kInsAccYFieldNumber;
const int Ins_acc_500::kInsAccZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_acc_500::Ins_acc_500()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Ins_acc_500.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Ins_acc_500)
}
Ins_acc_500::Ins_acc_500(const Ins_acc_500& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ins_acc_x_, &from.ins_acc_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&ins_acc_z_) -
    reinterpret_cast<char*>(&ins_acc_x_)) + sizeof(ins_acc_z_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Ins_acc_500)
}

void Ins_acc_500::SharedCtor() {
  ::memset(&ins_acc_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_acc_z_) -
      reinterpret_cast<char*>(&ins_acc_x_)) + sizeof(ins_acc_z_));
}

Ins_acc_500::~Ins_acc_500() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Ins_acc_500)
  SharedDtor();
}

void Ins_acc_500::SharedDtor() {
}

void Ins_acc_500::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ins_acc_500& Ins_acc_500::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Ins_acc_500.base);
  return *internal_default_instance();
}


void Ins_acc_500::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Ins_acc_500)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ins_acc_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_acc_z_) -
      reinterpret_cast<char*>(&ins_acc_x_)) + sizeof(ins_acc_z_));
  _internal_metadata_.Clear();
}

bool Ins_acc_500::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Ins_acc_500)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double ins_acc_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_acc_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_acc_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_acc_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_acc_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_acc_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Ins_acc_500)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Ins_acc_500)
  return false;
#undef DO_
}

void Ins_acc_500::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Ins_acc_500)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ins_acc_x = 1;
  if (this->ins_acc_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ins_acc_x(), output);
  }

  // double ins_acc_y = 2;
  if (this->ins_acc_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ins_acc_y(), output);
  }

  // double ins_acc_z = 3;
  if (this->ins_acc_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ins_acc_z(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Ins_acc_500)
}

size_t Ins_acc_500::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Ins_acc_500)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double ins_acc_x = 1;
  if (this->ins_acc_x() != 0) {
    total_size += 1 + 8;
  }

  // double ins_acc_y = 2;
  if (this->ins_acc_y() != 0) {
    total_size += 1 + 8;
  }

  // double ins_acc_z = 3;
  if (this->ins_acc_z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_acc_500::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Ins_acc_500*>(&from));
}

void Ins_acc_500::MergeFrom(const Ins_acc_500& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Ins_acc_500)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ins_acc_x() != 0) {
    set_ins_acc_x(from.ins_acc_x());
  }
  if (from.ins_acc_y() != 0) {
    set_ins_acc_y(from.ins_acc_y());
  }
  if (from.ins_acc_z() != 0) {
    set_ins_acc_z(from.ins_acc_z());
  }
}

void Ins_acc_500::CopyFrom(const Ins_acc_500& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Ins_acc_500)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_acc_500::IsInitialized() const {
  return true;
}

void Ins_acc_500::Swap(Ins_acc_500* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_acc_500::InternalSwap(Ins_acc_500* other) {
  using std::swap;
  swap(ins_acc_x_, other->ins_acc_x_);
  swap(ins_acc_y_, other->ins_acc_y_);
  swap(ins_acc_z_, other->ins_acc_z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Ins_acc_500::GetTypeName() const {
  return "Calmcar.drivers.IMU.Ins_acc_500";
}


// ===================================================================

void Ins_gyro_501::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ins_gyro_501::kInsGyroXFieldNumber;
const int Ins_gyro_501::kInsGyroYFieldNumber;
const int Ins_gyro_501::kInsGyroZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ins_gyro_501::Ins_gyro_501()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Ins_gyro_501.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Ins_gyro_501)
}
Ins_gyro_501::Ins_gyro_501(const Ins_gyro_501& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ins_gyro_x_, &from.ins_gyro_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&ins_gyro_z_) -
    reinterpret_cast<char*>(&ins_gyro_x_)) + sizeof(ins_gyro_z_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Ins_gyro_501)
}

void Ins_gyro_501::SharedCtor() {
  ::memset(&ins_gyro_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_gyro_z_) -
      reinterpret_cast<char*>(&ins_gyro_x_)) + sizeof(ins_gyro_z_));
}

Ins_gyro_501::~Ins_gyro_501() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Ins_gyro_501)
  SharedDtor();
}

void Ins_gyro_501::SharedDtor() {
}

void Ins_gyro_501::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ins_gyro_501& Ins_gyro_501::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Ins_gyro_501.base);
  return *internal_default_instance();
}


void Ins_gyro_501::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Ins_gyro_501)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ins_gyro_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_gyro_z_) -
      reinterpret_cast<char*>(&ins_gyro_x_)) + sizeof(ins_gyro_z_));
  _internal_metadata_.Clear();
}

bool Ins_gyro_501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Ins_gyro_501)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double ins_gyro_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_gyro_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_gyro_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_gyro_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ins_gyro_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ins_gyro_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Ins_gyro_501)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Ins_gyro_501)
  return false;
#undef DO_
}

void Ins_gyro_501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Ins_gyro_501)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ins_gyro_x = 1;
  if (this->ins_gyro_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ins_gyro_x(), output);
  }

  // double ins_gyro_y = 2;
  if (this->ins_gyro_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ins_gyro_y(), output);
  }

  // double ins_gyro_z = 3;
  if (this->ins_gyro_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ins_gyro_z(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Ins_gyro_501)
}

size_t Ins_gyro_501::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Ins_gyro_501)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double ins_gyro_x = 1;
  if (this->ins_gyro_x() != 0) {
    total_size += 1 + 8;
  }

  // double ins_gyro_y = 2;
  if (this->ins_gyro_y() != 0) {
    total_size += 1 + 8;
  }

  // double ins_gyro_z = 3;
  if (this->ins_gyro_z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ins_gyro_501::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Ins_gyro_501*>(&from));
}

void Ins_gyro_501::MergeFrom(const Ins_gyro_501& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Ins_gyro_501)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ins_gyro_x() != 0) {
    set_ins_gyro_x(from.ins_gyro_x());
  }
  if (from.ins_gyro_y() != 0) {
    set_ins_gyro_y(from.ins_gyro_y());
  }
  if (from.ins_gyro_z() != 0) {
    set_ins_gyro_z(from.ins_gyro_z());
  }
}

void Ins_gyro_501::CopyFrom(const Ins_gyro_501& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Ins_gyro_501)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ins_gyro_501::IsInitialized() const {
  return true;
}

void Ins_gyro_501::Swap(Ins_gyro_501* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ins_gyro_501::InternalSwap(Ins_gyro_501* other) {
  using std::swap;
  swap(ins_gyro_x_, other->ins_gyro_x_);
  swap(ins_gyro_y_, other->ins_gyro_y_);
  swap(ins_gyro_z_, other->ins_gyro_z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Ins_gyro_501::GetTypeName() const {
  return "Calmcar.drivers.IMU.Ins_gyro_501";
}


// ===================================================================

void Imu::InitAsDefaultInstance() {
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->header_ = const_cast< ::Calmcar::common::Header*>(
      ::Calmcar::common::Header::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->wheelspeed_report_6a_ = const_cast< ::Calmcar::drivers::IMU::Wheelspeed_report_6a*>(
      ::Calmcar::drivers::IMU::Wheelspeed_report_6a::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->steering_report_65_ = const_cast< ::Calmcar::drivers::IMU::Steering_report_65*>(
      ::Calmcar::drivers::IMU::Steering_report_65::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->gear_report_67_ = const_cast< ::Calmcar::drivers::IMU::Gear_report_67*>(
      ::Calmcar::drivers::IMU::Gear_report_67::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->gnss_dop_50b_ = const_cast< ::Calmcar::drivers::IMU::Gnss_dop_50b*>(
      ::Calmcar::drivers::IMU::Gnss_dop_50b::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->gnss_headingandpitch_50c_ = const_cast< ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c*>(
      ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->gnss_heightandweek_50a_ = const_cast< ::Calmcar::drivers::IMU::Gnss_heightandweek_50a*>(
      ::Calmcar::drivers::IMU::Gnss_heightandweek_50a::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->gnss_utc_508_ = const_cast< ::Calmcar::drivers::IMU::Gnss_utc_508*>(
      ::Calmcar::drivers::IMU::Gnss_utc_508::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->gnss_latitudelongitude_509_ = const_cast< ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509*>(
      ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->ins_datainfo_506_ = const_cast< ::Calmcar::drivers::IMU::Ins_datainfo_506*>(
      ::Calmcar::drivers::IMU::Ins_datainfo_506::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->ins_std_507_ = const_cast< ::Calmcar::drivers::IMU::Ins_std_507*>(
      ::Calmcar::drivers::IMU::Ins_std_507::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->ins_latitudelongitude_504_ = const_cast< ::Calmcar::drivers::IMU::Ins_latitudelongitude_504*>(
      ::Calmcar::drivers::IMU::Ins_latitudelongitude_504::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->ins_speed_505_ = const_cast< ::Calmcar::drivers::IMU::Ins_speed_505*>(
      ::Calmcar::drivers::IMU::Ins_speed_505::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->ins_headingpitchroll_502_ = const_cast< ::Calmcar::drivers::IMU::Ins_headingpitchroll_502*>(
      ::Calmcar::drivers::IMU::Ins_headingpitchroll_502::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->ins_heightandtime_503_ = const_cast< ::Calmcar::drivers::IMU::Ins_heightandtime_503*>(
      ::Calmcar::drivers::IMU::Ins_heightandtime_503::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->ins_acc_500_ = const_cast< ::Calmcar::drivers::IMU::Ins_acc_500*>(
      ::Calmcar::drivers::IMU::Ins_acc_500::internal_default_instance());
  ::Calmcar::drivers::IMU::_Imu_default_instance_._instance.get_mutable()->ins_gyro_501_ = const_cast< ::Calmcar::drivers::IMU::Ins_gyro_501*>(
      ::Calmcar::drivers::IMU::Ins_gyro_501::internal_default_instance());
}
void Imu::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Imu::kHeaderFieldNumber;
const int Imu::kWheelspeedReport6AFieldNumber;
const int Imu::kSteeringReport65FieldNumber;
const int Imu::kGearReport67FieldNumber;
const int Imu::kGnssDop50BFieldNumber;
const int Imu::kGnssHeadingandpitch50CFieldNumber;
const int Imu::kGnssHeightandweek50AFieldNumber;
const int Imu::kGnssUtc508FieldNumber;
const int Imu::kGnssLatitudelongitude509FieldNumber;
const int Imu::kInsDatainfo506FieldNumber;
const int Imu::kInsStd507FieldNumber;
const int Imu::kInsLatitudelongitude504FieldNumber;
const int Imu::kInsSpeed505FieldNumber;
const int Imu::kInsHeadingpitchroll502FieldNumber;
const int Imu::kInsHeightandtime503FieldNumber;
const int Imu::kInsAcc500FieldNumber;
const int Imu::kInsGyro501FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Imu::Imu()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Imu.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.IMU.Imu)
}
Imu::Imu(const Imu& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::Calmcar::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_wheelspeed_report_6a()) {
    wheelspeed_report_6a_ = new ::Calmcar::drivers::IMU::Wheelspeed_report_6a(*from.wheelspeed_report_6a_);
  } else {
    wheelspeed_report_6a_ = NULL;
  }
  if (from.has_steering_report_65()) {
    steering_report_65_ = new ::Calmcar::drivers::IMU::Steering_report_65(*from.steering_report_65_);
  } else {
    steering_report_65_ = NULL;
  }
  if (from.has_gear_report_67()) {
    gear_report_67_ = new ::Calmcar::drivers::IMU::Gear_report_67(*from.gear_report_67_);
  } else {
    gear_report_67_ = NULL;
  }
  if (from.has_gnss_dop_50b()) {
    gnss_dop_50b_ = new ::Calmcar::drivers::IMU::Gnss_dop_50b(*from.gnss_dop_50b_);
  } else {
    gnss_dop_50b_ = NULL;
  }
  if (from.has_gnss_headingandpitch_50c()) {
    gnss_headingandpitch_50c_ = new ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c(*from.gnss_headingandpitch_50c_);
  } else {
    gnss_headingandpitch_50c_ = NULL;
  }
  if (from.has_gnss_heightandweek_50a()) {
    gnss_heightandweek_50a_ = new ::Calmcar::drivers::IMU::Gnss_heightandweek_50a(*from.gnss_heightandweek_50a_);
  } else {
    gnss_heightandweek_50a_ = NULL;
  }
  if (from.has_gnss_utc_508()) {
    gnss_utc_508_ = new ::Calmcar::drivers::IMU::Gnss_utc_508(*from.gnss_utc_508_);
  } else {
    gnss_utc_508_ = NULL;
  }
  if (from.has_gnss_latitudelongitude_509()) {
    gnss_latitudelongitude_509_ = new ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509(*from.gnss_latitudelongitude_509_);
  } else {
    gnss_latitudelongitude_509_ = NULL;
  }
  if (from.has_ins_datainfo_506()) {
    ins_datainfo_506_ = new ::Calmcar::drivers::IMU::Ins_datainfo_506(*from.ins_datainfo_506_);
  } else {
    ins_datainfo_506_ = NULL;
  }
  if (from.has_ins_std_507()) {
    ins_std_507_ = new ::Calmcar::drivers::IMU::Ins_std_507(*from.ins_std_507_);
  } else {
    ins_std_507_ = NULL;
  }
  if (from.has_ins_latitudelongitude_504()) {
    ins_latitudelongitude_504_ = new ::Calmcar::drivers::IMU::Ins_latitudelongitude_504(*from.ins_latitudelongitude_504_);
  } else {
    ins_latitudelongitude_504_ = NULL;
  }
  if (from.has_ins_speed_505()) {
    ins_speed_505_ = new ::Calmcar::drivers::IMU::Ins_speed_505(*from.ins_speed_505_);
  } else {
    ins_speed_505_ = NULL;
  }
  if (from.has_ins_headingpitchroll_502()) {
    ins_headingpitchroll_502_ = new ::Calmcar::drivers::IMU::Ins_headingpitchroll_502(*from.ins_headingpitchroll_502_);
  } else {
    ins_headingpitchroll_502_ = NULL;
  }
  if (from.has_ins_heightandtime_503()) {
    ins_heightandtime_503_ = new ::Calmcar::drivers::IMU::Ins_heightandtime_503(*from.ins_heightandtime_503_);
  } else {
    ins_heightandtime_503_ = NULL;
  }
  if (from.has_ins_acc_500()) {
    ins_acc_500_ = new ::Calmcar::drivers::IMU::Ins_acc_500(*from.ins_acc_500_);
  } else {
    ins_acc_500_ = NULL;
  }
  if (from.has_ins_gyro_501()) {
    ins_gyro_501_ = new ::Calmcar::drivers::IMU::Ins_gyro_501(*from.ins_gyro_501_);
  } else {
    ins_gyro_501_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.IMU.Imu)
}

void Imu::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ins_gyro_501_) -
      reinterpret_cast<char*>(&header_)) + sizeof(ins_gyro_501_));
}

Imu::~Imu() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.IMU.Imu)
  SharedDtor();
}

void Imu::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete wheelspeed_report_6a_;
  if (this != internal_default_instance()) delete steering_report_65_;
  if (this != internal_default_instance()) delete gear_report_67_;
  if (this != internal_default_instance()) delete gnss_dop_50b_;
  if (this != internal_default_instance()) delete gnss_headingandpitch_50c_;
  if (this != internal_default_instance()) delete gnss_heightandweek_50a_;
  if (this != internal_default_instance()) delete gnss_utc_508_;
  if (this != internal_default_instance()) delete gnss_latitudelongitude_509_;
  if (this != internal_default_instance()) delete ins_datainfo_506_;
  if (this != internal_default_instance()) delete ins_std_507_;
  if (this != internal_default_instance()) delete ins_latitudelongitude_504_;
  if (this != internal_default_instance()) delete ins_speed_505_;
  if (this != internal_default_instance()) delete ins_headingpitchroll_502_;
  if (this != internal_default_instance()) delete ins_heightandtime_503_;
  if (this != internal_default_instance()) delete ins_acc_500_;
  if (this != internal_default_instance()) delete ins_gyro_501_;
}

void Imu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Imu& Imu::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Imu.base);
  return *internal_default_instance();
}


void Imu::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.IMU.Imu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && wheelspeed_report_6a_ != NULL) {
    delete wheelspeed_report_6a_;
  }
  wheelspeed_report_6a_ = NULL;
  if (GetArenaNoVirtual() == NULL && steering_report_65_ != NULL) {
    delete steering_report_65_;
  }
  steering_report_65_ = NULL;
  if (GetArenaNoVirtual() == NULL && gear_report_67_ != NULL) {
    delete gear_report_67_;
  }
  gear_report_67_ = NULL;
  if (GetArenaNoVirtual() == NULL && gnss_dop_50b_ != NULL) {
    delete gnss_dop_50b_;
  }
  gnss_dop_50b_ = NULL;
  if (GetArenaNoVirtual() == NULL && gnss_headingandpitch_50c_ != NULL) {
    delete gnss_headingandpitch_50c_;
  }
  gnss_headingandpitch_50c_ = NULL;
  if (GetArenaNoVirtual() == NULL && gnss_heightandweek_50a_ != NULL) {
    delete gnss_heightandweek_50a_;
  }
  gnss_heightandweek_50a_ = NULL;
  if (GetArenaNoVirtual() == NULL && gnss_utc_508_ != NULL) {
    delete gnss_utc_508_;
  }
  gnss_utc_508_ = NULL;
  if (GetArenaNoVirtual() == NULL && gnss_latitudelongitude_509_ != NULL) {
    delete gnss_latitudelongitude_509_;
  }
  gnss_latitudelongitude_509_ = NULL;
  if (GetArenaNoVirtual() == NULL && ins_datainfo_506_ != NULL) {
    delete ins_datainfo_506_;
  }
  ins_datainfo_506_ = NULL;
  if (GetArenaNoVirtual() == NULL && ins_std_507_ != NULL) {
    delete ins_std_507_;
  }
  ins_std_507_ = NULL;
  if (GetArenaNoVirtual() == NULL && ins_latitudelongitude_504_ != NULL) {
    delete ins_latitudelongitude_504_;
  }
  ins_latitudelongitude_504_ = NULL;
  if (GetArenaNoVirtual() == NULL && ins_speed_505_ != NULL) {
    delete ins_speed_505_;
  }
  ins_speed_505_ = NULL;
  if (GetArenaNoVirtual() == NULL && ins_headingpitchroll_502_ != NULL) {
    delete ins_headingpitchroll_502_;
  }
  ins_headingpitchroll_502_ = NULL;
  if (GetArenaNoVirtual() == NULL && ins_heightandtime_503_ != NULL) {
    delete ins_heightandtime_503_;
  }
  ins_heightandtime_503_ = NULL;
  if (GetArenaNoVirtual() == NULL && ins_acc_500_ != NULL) {
    delete ins_acc_500_;
  }
  ins_acc_500_ = NULL;
  if (GetArenaNoVirtual() == NULL && ins_gyro_501_ != NULL) {
    delete ins_gyro_501_;
  }
  ins_gyro_501_ = NULL;
  _internal_metadata_.Clear();
}

bool Imu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.IMU.Imu)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Wheelspeed_report_6a wheelspeed_report_6a = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wheelspeed_report_6a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Steering_report_65 steering_report_65 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_steering_report_65()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Gear_report_67 gear_report_67 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gear_report_67()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Gnss_dop_50b gnss_dop_50b = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gnss_dop_50b()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Gnss_headingandpitch_50c gnss_headingandpitch_50c = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gnss_headingandpitch_50c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Gnss_heightandweek_50a gnss_heightandweek_50a = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gnss_heightandweek_50a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Gnss_utc_508 gnss_utc_508 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gnss_utc_508()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Gnss_latitudelongitude_509 gnss_latitudelongitude_509 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gnss_latitudelongitude_509()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_datainfo_506 ins_datainfo_506 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ins_datainfo_506()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_std_507 ins_std_507 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ins_std_507()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_latitudelongitude_504 ins_latitudelongitude_504 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ins_latitudelongitude_504()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_speed_505 ins_speed_505 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ins_speed_505()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_headingpitchroll_502 ins_headingpitchroll_502 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ins_headingpitchroll_502()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_heightandtime_503 ins_heightandtime_503 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ins_heightandtime_503()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_acc_500 ins_acc_500 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ins_acc_500()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.IMU.Ins_gyro_501 ins_gyro_501 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ins_gyro_501()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.IMU.Imu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.IMU.Imu)
  return false;
#undef DO_
}

void Imu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.IMU.Imu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.common.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .Calmcar.drivers.IMU.Wheelspeed_report_6a wheelspeed_report_6a = 2;
  if (this->has_wheelspeed_report_6a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_wheelspeed_report_6a(), output);
  }

  // .Calmcar.drivers.IMU.Steering_report_65 steering_report_65 = 3;
  if (this->has_steering_report_65()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_steering_report_65(), output);
  }

  // .Calmcar.drivers.IMU.Gear_report_67 gear_report_67 = 4;
  if (this->has_gear_report_67()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_gear_report_67(), output);
  }

  // .Calmcar.drivers.IMU.Gnss_dop_50b gnss_dop_50b = 5;
  if (this->has_gnss_dop_50b()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_gnss_dop_50b(), output);
  }

  // .Calmcar.drivers.IMU.Gnss_headingandpitch_50c gnss_headingandpitch_50c = 6;
  if (this->has_gnss_headingandpitch_50c()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->_internal_gnss_headingandpitch_50c(), output);
  }

  // .Calmcar.drivers.IMU.Gnss_heightandweek_50a gnss_heightandweek_50a = 7;
  if (this->has_gnss_heightandweek_50a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->_internal_gnss_heightandweek_50a(), output);
  }

  // .Calmcar.drivers.IMU.Gnss_utc_508 gnss_utc_508 = 8;
  if (this->has_gnss_utc_508()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8, this->_internal_gnss_utc_508(), output);
  }

  // .Calmcar.drivers.IMU.Gnss_latitudelongitude_509 gnss_latitudelongitude_509 = 9;
  if (this->has_gnss_latitudelongitude_509()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      9, this->_internal_gnss_latitudelongitude_509(), output);
  }

  // .Calmcar.drivers.IMU.Ins_datainfo_506 ins_datainfo_506 = 10;
  if (this->has_ins_datainfo_506()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, this->_internal_ins_datainfo_506(), output);
  }

  // .Calmcar.drivers.IMU.Ins_std_507 ins_std_507 = 11;
  if (this->has_ins_std_507()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, this->_internal_ins_std_507(), output);
  }

  // .Calmcar.drivers.IMU.Ins_latitudelongitude_504 ins_latitudelongitude_504 = 12;
  if (this->has_ins_latitudelongitude_504()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, this->_internal_ins_latitudelongitude_504(), output);
  }

  // .Calmcar.drivers.IMU.Ins_speed_505 ins_speed_505 = 13;
  if (this->has_ins_speed_505()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, this->_internal_ins_speed_505(), output);
  }

  // .Calmcar.drivers.IMU.Ins_headingpitchroll_502 ins_headingpitchroll_502 = 14;
  if (this->has_ins_headingpitchroll_502()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      14, this->_internal_ins_headingpitchroll_502(), output);
  }

  // .Calmcar.drivers.IMU.Ins_heightandtime_503 ins_heightandtime_503 = 15;
  if (this->has_ins_heightandtime_503()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      15, this->_internal_ins_heightandtime_503(), output);
  }

  // .Calmcar.drivers.IMU.Ins_acc_500 ins_acc_500 = 16;
  if (this->has_ins_acc_500()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      16, this->_internal_ins_acc_500(), output);
  }

  // .Calmcar.drivers.IMU.Ins_gyro_501 ins_gyro_501 = 17;
  if (this->has_ins_gyro_501()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      17, this->_internal_ins_gyro_501(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.IMU.Imu)
}

size_t Imu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.IMU.Imu)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.common.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .Calmcar.drivers.IMU.Wheelspeed_report_6a wheelspeed_report_6a = 2;
  if (this->has_wheelspeed_report_6a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *wheelspeed_report_6a_);
  }

  // .Calmcar.drivers.IMU.Steering_report_65 steering_report_65 = 3;
  if (this->has_steering_report_65()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *steering_report_65_);
  }

  // .Calmcar.drivers.IMU.Gear_report_67 gear_report_67 = 4;
  if (this->has_gear_report_67()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gear_report_67_);
  }

  // .Calmcar.drivers.IMU.Gnss_dop_50b gnss_dop_50b = 5;
  if (this->has_gnss_dop_50b()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gnss_dop_50b_);
  }

  // .Calmcar.drivers.IMU.Gnss_headingandpitch_50c gnss_headingandpitch_50c = 6;
  if (this->has_gnss_headingandpitch_50c()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gnss_headingandpitch_50c_);
  }

  // .Calmcar.drivers.IMU.Gnss_heightandweek_50a gnss_heightandweek_50a = 7;
  if (this->has_gnss_heightandweek_50a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gnss_heightandweek_50a_);
  }

  // .Calmcar.drivers.IMU.Gnss_utc_508 gnss_utc_508 = 8;
  if (this->has_gnss_utc_508()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gnss_utc_508_);
  }

  // .Calmcar.drivers.IMU.Gnss_latitudelongitude_509 gnss_latitudelongitude_509 = 9;
  if (this->has_gnss_latitudelongitude_509()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gnss_latitudelongitude_509_);
  }

  // .Calmcar.drivers.IMU.Ins_datainfo_506 ins_datainfo_506 = 10;
  if (this->has_ins_datainfo_506()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ins_datainfo_506_);
  }

  // .Calmcar.drivers.IMU.Ins_std_507 ins_std_507 = 11;
  if (this->has_ins_std_507()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ins_std_507_);
  }

  // .Calmcar.drivers.IMU.Ins_latitudelongitude_504 ins_latitudelongitude_504 = 12;
  if (this->has_ins_latitudelongitude_504()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ins_latitudelongitude_504_);
  }

  // .Calmcar.drivers.IMU.Ins_speed_505 ins_speed_505 = 13;
  if (this->has_ins_speed_505()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ins_speed_505_);
  }

  // .Calmcar.drivers.IMU.Ins_headingpitchroll_502 ins_headingpitchroll_502 = 14;
  if (this->has_ins_headingpitchroll_502()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ins_headingpitchroll_502_);
  }

  // .Calmcar.drivers.IMU.Ins_heightandtime_503 ins_heightandtime_503 = 15;
  if (this->has_ins_heightandtime_503()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ins_heightandtime_503_);
  }

  // .Calmcar.drivers.IMU.Ins_acc_500 ins_acc_500 = 16;
  if (this->has_ins_acc_500()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ins_acc_500_);
  }

  // .Calmcar.drivers.IMU.Ins_gyro_501 ins_gyro_501 = 17;
  if (this->has_ins_gyro_501()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ins_gyro_501_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Imu::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Imu*>(&from));
}

void Imu::MergeFrom(const Imu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.IMU.Imu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::Calmcar::common::Header::MergeFrom(from.header());
  }
  if (from.has_wheelspeed_report_6a()) {
    mutable_wheelspeed_report_6a()->::Calmcar::drivers::IMU::Wheelspeed_report_6a::MergeFrom(from.wheelspeed_report_6a());
  }
  if (from.has_steering_report_65()) {
    mutable_steering_report_65()->::Calmcar::drivers::IMU::Steering_report_65::MergeFrom(from.steering_report_65());
  }
  if (from.has_gear_report_67()) {
    mutable_gear_report_67()->::Calmcar::drivers::IMU::Gear_report_67::MergeFrom(from.gear_report_67());
  }
  if (from.has_gnss_dop_50b()) {
    mutable_gnss_dop_50b()->::Calmcar::drivers::IMU::Gnss_dop_50b::MergeFrom(from.gnss_dop_50b());
  }
  if (from.has_gnss_headingandpitch_50c()) {
    mutable_gnss_headingandpitch_50c()->::Calmcar::drivers::IMU::Gnss_headingandpitch_50c::MergeFrom(from.gnss_headingandpitch_50c());
  }
  if (from.has_gnss_heightandweek_50a()) {
    mutable_gnss_heightandweek_50a()->::Calmcar::drivers::IMU::Gnss_heightandweek_50a::MergeFrom(from.gnss_heightandweek_50a());
  }
  if (from.has_gnss_utc_508()) {
    mutable_gnss_utc_508()->::Calmcar::drivers::IMU::Gnss_utc_508::MergeFrom(from.gnss_utc_508());
  }
  if (from.has_gnss_latitudelongitude_509()) {
    mutable_gnss_latitudelongitude_509()->::Calmcar::drivers::IMU::Gnss_latitudelongitude_509::MergeFrom(from.gnss_latitudelongitude_509());
  }
  if (from.has_ins_datainfo_506()) {
    mutable_ins_datainfo_506()->::Calmcar::drivers::IMU::Ins_datainfo_506::MergeFrom(from.ins_datainfo_506());
  }
  if (from.has_ins_std_507()) {
    mutable_ins_std_507()->::Calmcar::drivers::IMU::Ins_std_507::MergeFrom(from.ins_std_507());
  }
  if (from.has_ins_latitudelongitude_504()) {
    mutable_ins_latitudelongitude_504()->::Calmcar::drivers::IMU::Ins_latitudelongitude_504::MergeFrom(from.ins_latitudelongitude_504());
  }
  if (from.has_ins_speed_505()) {
    mutable_ins_speed_505()->::Calmcar::drivers::IMU::Ins_speed_505::MergeFrom(from.ins_speed_505());
  }
  if (from.has_ins_headingpitchroll_502()) {
    mutable_ins_headingpitchroll_502()->::Calmcar::drivers::IMU::Ins_headingpitchroll_502::MergeFrom(from.ins_headingpitchroll_502());
  }
  if (from.has_ins_heightandtime_503()) {
    mutable_ins_heightandtime_503()->::Calmcar::drivers::IMU::Ins_heightandtime_503::MergeFrom(from.ins_heightandtime_503());
  }
  if (from.has_ins_acc_500()) {
    mutable_ins_acc_500()->::Calmcar::drivers::IMU::Ins_acc_500::MergeFrom(from.ins_acc_500());
  }
  if (from.has_ins_gyro_501()) {
    mutable_ins_gyro_501()->::Calmcar::drivers::IMU::Ins_gyro_501::MergeFrom(from.ins_gyro_501());
  }
}

void Imu::CopyFrom(const Imu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.IMU.Imu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Imu::IsInitialized() const {
  return true;
}

void Imu::Swap(Imu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Imu::InternalSwap(Imu* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(wheelspeed_report_6a_, other->wheelspeed_report_6a_);
  swap(steering_report_65_, other->steering_report_65_);
  swap(gear_report_67_, other->gear_report_67_);
  swap(gnss_dop_50b_, other->gnss_dop_50b_);
  swap(gnss_headingandpitch_50c_, other->gnss_headingandpitch_50c_);
  swap(gnss_heightandweek_50a_, other->gnss_heightandweek_50a_);
  swap(gnss_utc_508_, other->gnss_utc_508_);
  swap(gnss_latitudelongitude_509_, other->gnss_latitudelongitude_509_);
  swap(ins_datainfo_506_, other->ins_datainfo_506_);
  swap(ins_std_507_, other->ins_std_507_);
  swap(ins_latitudelongitude_504_, other->ins_latitudelongitude_504_);
  swap(ins_speed_505_, other->ins_speed_505_);
  swap(ins_headingpitchroll_502_, other->ins_headingpitchroll_502_);
  swap(ins_heightandtime_503_, other->ins_heightandtime_503_);
  swap(ins_acc_500_, other->ins_acc_500_);
  swap(ins_gyro_501_, other->ins_gyro_501_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Imu::GetTypeName() const {
  return "Calmcar.drivers.IMU.Imu";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace IMU
}  // namespace drivers
}  // namespace Calmcar
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Wheelspeed_report_6a* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Wheelspeed_report_6a >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Wheelspeed_report_6a >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Steering_report_65* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Steering_report_65 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Steering_report_65 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Gear_report_67* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Gear_report_67 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Gear_report_67 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Gnss_dop_50b* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Gnss_dop_50b >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Gnss_dop_50b >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Gnss_heightandweek_50a* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Gnss_heightandweek_50a >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Gnss_heightandweek_50a >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Gnss_utc_508* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Gnss_utc_508 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Gnss_utc_508 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Ins_datainfo_506* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Ins_datainfo_506 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Ins_datainfo_506 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Ins_std_507* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Ins_std_507 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Ins_std_507 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Ins_latitudelongitude_504* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Ins_latitudelongitude_504 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Ins_latitudelongitude_504 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Ins_speed_505* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Ins_speed_505 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Ins_speed_505 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Ins_headingpitchroll_502* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Ins_headingpitchroll_502 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Ins_headingpitchroll_502 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Ins_heightandtime_503* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Ins_heightandtime_503 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Ins_heightandtime_503 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Ins_acc_500* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Ins_acc_500 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Ins_acc_500 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Ins_gyro_501* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Ins_gyro_501 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Ins_gyro_501 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::IMU::Imu* Arena::CreateMaybeMessage< ::Calmcar::drivers::IMU::Imu >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::IMU::Imu >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
