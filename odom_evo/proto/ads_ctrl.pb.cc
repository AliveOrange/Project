// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ads_ctrl.proto

#include "ads_ctrl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ads_5fcom_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ACCOutputs;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ARBOutputs;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Brake_Command_60_st;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Gear_Command_66_st;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Steering_Command_64_st;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Throttle_Command_62_st;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_TurnSignal_Command_68_st;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HafLonTrajParam;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HafTrajParam;
}  // namespace protobuf_ads_5fcom_2eproto
namespace ads_ctrl {
class CTRL_OutputsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CTRL_Outputs>
      _instance;
} _CTRL_Outputs_default_instance_;
class HafACCCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HafACCCmd>
      _instance;
} _HafACCCmd_default_instance_;
class HafTrajCoeffDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HafTrajCoeff>
      _instance;
} _HafTrajCoeff_default_instance_;
}  // namespace ads_ctrl
namespace protobuf_ads_5fctrl_2eproto {
static void InitDefaultsCTRL_Outputs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_ctrl::_CTRL_Outputs_default_instance_;
    new (ptr) ::ads_ctrl::CTRL_Outputs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_ctrl::CTRL_Outputs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_CTRL_Outputs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsCTRL_Outputs}, {
      &protobuf_ads_5fcom_2eproto::scc_info_ACCOutputs.base,
      &protobuf_ads_5fcom_2eproto::scc_info_ARBOutputs.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Brake_Command_60_st.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Throttle_Command_62_st.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Steering_Command_64_st.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Gear_Command_66_st.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_TurnSignal_Command_68_st.base,}};

static void InitDefaultsHafACCCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_ctrl::_HafACCCmd_default_instance_;
    new (ptr) ::ads_ctrl::HafACCCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_ctrl::HafACCCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HafACCCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHafACCCmd}, {
      &protobuf_ads_5fcom_2eproto::scc_info_HafLonTrajParam.base,}};

static void InitDefaultsHafTrajCoeff() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_ctrl::_HafTrajCoeff_default_instance_;
    new (ptr) ::ads_ctrl::HafTrajCoeff();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_ctrl::HafTrajCoeff::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HafTrajCoeff =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHafTrajCoeff}, {
      &protobuf_ads_5fcom_2eproto::scc_info_HafTrajParam.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CTRL_Outputs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HafACCCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HafTrajCoeff.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_yr_desyawrcmd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_cv_despathcrv_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_d_ctrlposerr_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_angd_ctrlhdangerr_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_bus_accoutputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_reqstrgwhloffsttorqcmd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_sts_rampstate_ers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_is_functionenable_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_angd_reqstrgwhlangcmd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_bus_arboutputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_v_tmpaccfscsetspderr_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_d_tmpaccftcdeltdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_v_tmpaccftcdeltav_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, adptrout_brake_command_60_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, adptrout_throttle_command_62_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, adptrout_steering_command_64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, adptrout_gear_command_66_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, adptrout_turnsignal_command_68_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_d_accdiserr_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_v_accspdtar_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_v_accspderr_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_a_acclgtacctar_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_a_acclgtaccerr_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_is_brkreqactive_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_pct_tarbrkopening_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_kpa_tarbrkpressure_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_is_drvreqactive_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_pct_tardrvopening_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::CTRL_Outputs, ctrl_out_t_tardrvtoq_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, accsystemstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, accstopreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, deltavelocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, deltadist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, acc_indx_smrsts_u8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, pln_out_m_strajerror_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, pln_out_v_spdtrajcmd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, pln_out_a_acctrajcmd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, ctrl_out_angd_reqstrgwhlangcmd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, pln_out_is_longtraj_replan_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafACCCmd, trajparamlong_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafTrajCoeff, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafTrajCoeff, is_lccactive_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafTrajCoeff, trajparam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafTrajCoeff, trp_replan_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafTrajCoeff, da_in_is_hostlindchgtoleft_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_ctrl::HafTrajCoeff, da_in_is_hostrindchgtorght_bl_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ads_ctrl::CTRL_Outputs)},
  { 34, -1, sizeof(::ads_ctrl::HafACCCmd)},
  { 50, -1, sizeof(::ads_ctrl::HafTrajCoeff)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_ctrl::_CTRL_Outputs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_ctrl::_HafACCCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_ctrl::_HafTrajCoeff_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ads_ctrl.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016ads_ctrl.proto\022\010ads_ctrl\032\rads_com.prot"
      "o\"\361\n\n\014CTRL_Outputs\022!\n\031CTRL_OUT_yr_desYaw"
      "RCmd_sg\030\001 \001(\002\022!\n\031CTRL_OUT_cv_DesPathCrv_"
      "sg\030\002 \001(\002\022 \n\030CTRL_OUT_d_CtrlPosErr_sg\030\003 \001"
      "(\002\022%\n\035CTRL_OUT_angD_CtrlHdAngErr_sg\030\004 \001("
      "\002\0227\n\027CTRL_OUT_bus_ACCOutputs\030\005 \001(\0132\026.ads"
      "_common.ACCOutputs\022*\n\"CTRL_OUT_reqStrgWh"
      "lOffstTorqCmd_sg\030\006 \001(\002\022=\n\032CTRL_OUT_sts_R"
      "ampState_eRS\030\007 \001(\0162\031.ads_common.eRS_Ramp"
      "State\022%\n\035CTRL_OUT_is_FunctionEnable_bl\030\010"
      " \001(\010\022)\n!CTRL_OUT_angD_reqStrgWhlAngCmd_s"
      "g\030\t \001(\002\0227\n\027CTRL_OUT_bus_ARBOutputs\030\n \001(\013"
      "2\026.ads_common.ARBOutputs\022(\n CTRL_OUT_v_T"
      "mpACCFSCSetSpdErr_sg\030\013 \001(\002\022\'\n\037CTRL_OUT_d"
      "_TmpACCFTCDeltDist_sg\030\014 \001(\002\022%\n\035CTRL_OUT_"
      "v_TmpACCFTCdeltaV_sg\030\r \001(\002\022M\n\031Adptrout_B"
      "rake_Command_60\030\016 \001(\0132*.ads_common.B_Adp"
      "trout_Brake_Command_60_st\022S\n\034Adptrout_Th"
      "rottle_Command_62\030\017 \001(\0132-.ads_common.B_A"
      "dptrout_Throttle_Command_62_st\022S\n\034Adptro"
      "ut_Steering_Command_64\030\020 \001(\0132-.ads_commo"
      "n.B_Adptrout_Steering_Command_64_st\022K\n\030A"
      "dptrout_Gear_Command_66\030\021 \001(\0132).ads_comm"
      "on.B_Adptrout_Gear_Command_66_st\022W\n\036Adpt"
      "rout_TurnSignal_Command_68\030\022 \001(\0132/.ads_c"
      "ommon.B_Adptrout_TurnSignal_Command_68_s"
      "t\022\037\n\027CTRL_OUT_d_AccDisErr_sg\030\023 \001(\002\022\037\n\027CT"
      "RL_OUT_v_AccSpdTar_sg\030\024 \001(\002\022\037\n\027CTRL_OUT_"
      "v_AccSpdErr_sg\030\025 \001(\002\022\"\n\032CTRL_OUT_a_AccLg"
      "tAccTar_sg\030\026 \001(\002\022\"\n\032CTRL_OUT_a_AccLgtAcc"
      "Err_sg\030\027 \001(\002\022#\n\033CTRL_OUT_is_BrkReqActive"
      "_bl\030\030 \001(\010\022%\n\035CTRL_OUT_pct_tarBrkOpening_"
      "sg\030\031 \001(\002\022&\n\036CTRL_OUT_kpa_tarBrkPressure_"
      "sg\030\032 \001(\002\022#\n\033CTRL_OUT_is_DrvReqActive_bl\030"
      "\033 \001(\010\022%\n\035CTRL_OUT_pct_tarDrvOpening_sg\030\034"
      " \001(\002\022\037\n\027CTRL_OUT_T_tarDrvToq_sg\030\035 \001(\002\"\351\002"
      "\n\tHafACCCmd\022\026\n\016ACCSystemState\030\001 \001(\r\022\022\n\nA"
      "CCStopReq\030\002 \001(\r\022\025\n\rDeltaVelocity\030\003 \001(\002\022\021"
      "\n\tDeltaDist\030\004 \001(\002\022\032\n\022ACC_indx_SMRSts_u8\030"
      "\005 \001(\r\022\037\n\027PLN_OUT_m_STrajError_sg\030\006 \001(\002\022\037"
      "\n\027PLN_OUT_v_SpdTrajCmd_sg\030\007 \001(\002\022\037\n\027PLN_O"
      "UT_a_AccTrajCmd_sg\030\010 \001(\002\022)\n!CTRL_OUT_ang"
      "D_reqStrgWhlAngCmd_sg\030\t \001(\002\022(\n PLN_OUT_i"
      "s_LongTraj_Replan_Level\030\n \001(\r\0222\n\rTrajPar"
      "amLong\030\013 \001(\0132\033.ads_common.HafLonTrajPara"
      "m\"\274\001\n\014HafTrajCoeff\022\027\n\017is_LCCActive_bl\030\001 "
      "\001(\010\022+\n\tTrajParam\030\002 \001(\0132\030.ads_common.HafT"
      "rajParam\022\030\n\020TRP_Replan_Level\030\003 \001(\r\022%\n\035DA"
      "_IN_is_HostLIndChgToLeft_bl\030\004 \001(\r\022%\n\035DA_"
      "IN_is_HostRIndChgToRght_bl\030\005 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2000);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ads_ctrl.proto", &protobuf_RegisterTypes);
  ::protobuf_ads_5fcom_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ads_5fctrl_2eproto
namespace ads_ctrl {

// ===================================================================

void CTRL_Outputs::InitAsDefaultInstance() {
  ::ads_ctrl::_CTRL_Outputs_default_instance_._instance.get_mutable()->ctrl_out_bus_accoutputs_ = const_cast< ::ads_common::ACCOutputs*>(
      ::ads_common::ACCOutputs::internal_default_instance());
  ::ads_ctrl::_CTRL_Outputs_default_instance_._instance.get_mutable()->ctrl_out_bus_arboutputs_ = const_cast< ::ads_common::ARBOutputs*>(
      ::ads_common::ARBOutputs::internal_default_instance());
  ::ads_ctrl::_CTRL_Outputs_default_instance_._instance.get_mutable()->adptrout_brake_command_60_ = const_cast< ::ads_common::B_Adptrout_Brake_Command_60_st*>(
      ::ads_common::B_Adptrout_Brake_Command_60_st::internal_default_instance());
  ::ads_ctrl::_CTRL_Outputs_default_instance_._instance.get_mutable()->adptrout_throttle_command_62_ = const_cast< ::ads_common::B_Adptrout_Throttle_Command_62_st*>(
      ::ads_common::B_Adptrout_Throttle_Command_62_st::internal_default_instance());
  ::ads_ctrl::_CTRL_Outputs_default_instance_._instance.get_mutable()->adptrout_steering_command_64_ = const_cast< ::ads_common::B_Adptrout_Steering_Command_64_st*>(
      ::ads_common::B_Adptrout_Steering_Command_64_st::internal_default_instance());
  ::ads_ctrl::_CTRL_Outputs_default_instance_._instance.get_mutable()->adptrout_gear_command_66_ = const_cast< ::ads_common::B_Adptrout_Gear_Command_66_st*>(
      ::ads_common::B_Adptrout_Gear_Command_66_st::internal_default_instance());
  ::ads_ctrl::_CTRL_Outputs_default_instance_._instance.get_mutable()->adptrout_turnsignal_command_68_ = const_cast< ::ads_common::B_Adptrout_TurnSignal_Command_68_st*>(
      ::ads_common::B_Adptrout_TurnSignal_Command_68_st::internal_default_instance());
}
void CTRL_Outputs::clear_ctrl_out_bus_accoutputs() {
  if (GetArenaNoVirtual() == NULL && ctrl_out_bus_accoutputs_ != NULL) {
    delete ctrl_out_bus_accoutputs_;
  }
  ctrl_out_bus_accoutputs_ = NULL;
}
void CTRL_Outputs::clear_ctrl_out_bus_arboutputs() {
  if (GetArenaNoVirtual() == NULL && ctrl_out_bus_arboutputs_ != NULL) {
    delete ctrl_out_bus_arboutputs_;
  }
  ctrl_out_bus_arboutputs_ = NULL;
}
void CTRL_Outputs::clear_adptrout_brake_command_60() {
  if (GetArenaNoVirtual() == NULL && adptrout_brake_command_60_ != NULL) {
    delete adptrout_brake_command_60_;
  }
  adptrout_brake_command_60_ = NULL;
}
void CTRL_Outputs::clear_adptrout_throttle_command_62() {
  if (GetArenaNoVirtual() == NULL && adptrout_throttle_command_62_ != NULL) {
    delete adptrout_throttle_command_62_;
  }
  adptrout_throttle_command_62_ = NULL;
}
void CTRL_Outputs::clear_adptrout_steering_command_64() {
  if (GetArenaNoVirtual() == NULL && adptrout_steering_command_64_ != NULL) {
    delete adptrout_steering_command_64_;
  }
  adptrout_steering_command_64_ = NULL;
}
void CTRL_Outputs::clear_adptrout_gear_command_66() {
  if (GetArenaNoVirtual() == NULL && adptrout_gear_command_66_ != NULL) {
    delete adptrout_gear_command_66_;
  }
  adptrout_gear_command_66_ = NULL;
}
void CTRL_Outputs::clear_adptrout_turnsignal_command_68() {
  if (GetArenaNoVirtual() == NULL && adptrout_turnsignal_command_68_ != NULL) {
    delete adptrout_turnsignal_command_68_;
  }
  adptrout_turnsignal_command_68_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CTRL_Outputs::kCTRLOUTYrDesYawRCmdSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTCvDesPathCrvSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTDCtrlPosErrSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTAngDCtrlHdAngErrSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTBusACCOutputsFieldNumber;
const int CTRL_Outputs::kCTRLOUTReqStrgWhlOffstTorqCmdSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTStsRampStateERSFieldNumber;
const int CTRL_Outputs::kCTRLOUTIsFunctionEnableBlFieldNumber;
const int CTRL_Outputs::kCTRLOUTAngDReqStrgWhlAngCmdSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTBusARBOutputsFieldNumber;
const int CTRL_Outputs::kCTRLOUTVTmpACCFSCSetSpdErrSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTDTmpACCFTCDeltDistSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTVTmpACCFTCdeltaVSgFieldNumber;
const int CTRL_Outputs::kAdptroutBrakeCommand60FieldNumber;
const int CTRL_Outputs::kAdptroutThrottleCommand62FieldNumber;
const int CTRL_Outputs::kAdptroutSteeringCommand64FieldNumber;
const int CTRL_Outputs::kAdptroutGearCommand66FieldNumber;
const int CTRL_Outputs::kAdptroutTurnSignalCommand68FieldNumber;
const int CTRL_Outputs::kCTRLOUTDAccDisErrSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTVAccSpdTarSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTVAccSpdErrSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTAAccLgtAccTarSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTAAccLgtAccErrSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTIsBrkReqActiveBlFieldNumber;
const int CTRL_Outputs::kCTRLOUTPctTarBrkOpeningSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTKpaTarBrkPressureSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTIsDrvReqActiveBlFieldNumber;
const int CTRL_Outputs::kCTRLOUTPctTarDrvOpeningSgFieldNumber;
const int CTRL_Outputs::kCTRLOUTTTarDrvToqSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CTRL_Outputs::CTRL_Outputs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fctrl_2eproto::scc_info_CTRL_Outputs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_ctrl.CTRL_Outputs)
}
CTRL_Outputs::CTRL_Outputs(const CTRL_Outputs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ctrl_out_bus_accoutputs()) {
    ctrl_out_bus_accoutputs_ = new ::ads_common::ACCOutputs(*from.ctrl_out_bus_accoutputs_);
  } else {
    ctrl_out_bus_accoutputs_ = NULL;
  }
  if (from.has_ctrl_out_bus_arboutputs()) {
    ctrl_out_bus_arboutputs_ = new ::ads_common::ARBOutputs(*from.ctrl_out_bus_arboutputs_);
  } else {
    ctrl_out_bus_arboutputs_ = NULL;
  }
  if (from.has_adptrout_brake_command_60()) {
    adptrout_brake_command_60_ = new ::ads_common::B_Adptrout_Brake_Command_60_st(*from.adptrout_brake_command_60_);
  } else {
    adptrout_brake_command_60_ = NULL;
  }
  if (from.has_adptrout_throttle_command_62()) {
    adptrout_throttle_command_62_ = new ::ads_common::B_Adptrout_Throttle_Command_62_st(*from.adptrout_throttle_command_62_);
  } else {
    adptrout_throttle_command_62_ = NULL;
  }
  if (from.has_adptrout_steering_command_64()) {
    adptrout_steering_command_64_ = new ::ads_common::B_Adptrout_Steering_Command_64_st(*from.adptrout_steering_command_64_);
  } else {
    adptrout_steering_command_64_ = NULL;
  }
  if (from.has_adptrout_gear_command_66()) {
    adptrout_gear_command_66_ = new ::ads_common::B_Adptrout_Gear_Command_66_st(*from.adptrout_gear_command_66_);
  } else {
    adptrout_gear_command_66_ = NULL;
  }
  if (from.has_adptrout_turnsignal_command_68()) {
    adptrout_turnsignal_command_68_ = new ::ads_common::B_Adptrout_TurnSignal_Command_68_st(*from.adptrout_turnsignal_command_68_);
  } else {
    adptrout_turnsignal_command_68_ = NULL;
  }
  ::memcpy(&ctrl_out_yr_desyawrcmd_sg_, &from.ctrl_out_yr_desyawrcmd_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&ctrl_out_t_tardrvtoq_sg_) -
    reinterpret_cast<char*>(&ctrl_out_yr_desyawrcmd_sg_)) + sizeof(ctrl_out_t_tardrvtoq_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_ctrl.CTRL_Outputs)
}

void CTRL_Outputs::SharedCtor() {
  ::memset(&ctrl_out_bus_accoutputs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ctrl_out_t_tardrvtoq_sg_) -
      reinterpret_cast<char*>(&ctrl_out_bus_accoutputs_)) + sizeof(ctrl_out_t_tardrvtoq_sg_));
}

CTRL_Outputs::~CTRL_Outputs() {
  // @@protoc_insertion_point(destructor:ads_ctrl.CTRL_Outputs)
  SharedDtor();
}

void CTRL_Outputs::SharedDtor() {
  if (this != internal_default_instance()) delete ctrl_out_bus_accoutputs_;
  if (this != internal_default_instance()) delete ctrl_out_bus_arboutputs_;
  if (this != internal_default_instance()) delete adptrout_brake_command_60_;
  if (this != internal_default_instance()) delete adptrout_throttle_command_62_;
  if (this != internal_default_instance()) delete adptrout_steering_command_64_;
  if (this != internal_default_instance()) delete adptrout_gear_command_66_;
  if (this != internal_default_instance()) delete adptrout_turnsignal_command_68_;
}

void CTRL_Outputs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CTRL_Outputs::descriptor() {
  ::protobuf_ads_5fctrl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fctrl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CTRL_Outputs& CTRL_Outputs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fctrl_2eproto::scc_info_CTRL_Outputs.base);
  return *internal_default_instance();
}


void CTRL_Outputs::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_ctrl.CTRL_Outputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ctrl_out_bus_accoutputs_ != NULL) {
    delete ctrl_out_bus_accoutputs_;
  }
  ctrl_out_bus_accoutputs_ = NULL;
  if (GetArenaNoVirtual() == NULL && ctrl_out_bus_arboutputs_ != NULL) {
    delete ctrl_out_bus_arboutputs_;
  }
  ctrl_out_bus_arboutputs_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_brake_command_60_ != NULL) {
    delete adptrout_brake_command_60_;
  }
  adptrout_brake_command_60_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_throttle_command_62_ != NULL) {
    delete adptrout_throttle_command_62_;
  }
  adptrout_throttle_command_62_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_steering_command_64_ != NULL) {
    delete adptrout_steering_command_64_;
  }
  adptrout_steering_command_64_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_gear_command_66_ != NULL) {
    delete adptrout_gear_command_66_;
  }
  adptrout_gear_command_66_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_turnsignal_command_68_ != NULL) {
    delete adptrout_turnsignal_command_68_;
  }
  adptrout_turnsignal_command_68_ = NULL;
  ::memset(&ctrl_out_yr_desyawrcmd_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ctrl_out_t_tardrvtoq_sg_) -
      reinterpret_cast<char*>(&ctrl_out_yr_desyawrcmd_sg_)) + sizeof(ctrl_out_t_tardrvtoq_sg_));
  _internal_metadata_.Clear();
}

bool CTRL_Outputs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_ctrl.CTRL_Outputs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float CTRL_OUT_yr_desYawRCmd_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_yr_desyawrcmd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_cv_DesPathCrv_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_cv_despathcrv_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_d_CtrlPosErr_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_d_ctrlposerr_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_angD_CtrlHdAngErr_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_angd_ctrlhdangerr_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ACCOutputs CTRL_OUT_bus_ACCOutputs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ctrl_out_bus_accoutputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_reqStrgWhlOffstTorqCmd_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_reqstrgwhloffsttorqcmd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eRS_RampState CTRL_OUT_sts_RampState_eRS = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ctrl_out_sts_rampstate_ers(static_cast< ::ads_common::eRS_RampState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CTRL_OUT_is_FunctionEnable_bl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ctrl_out_is_functionenable_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_angD_reqStrgWhlAngCmd_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_angd_reqstrgwhlangcmd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ARBOutputs CTRL_OUT_bus_ARBOutputs = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ctrl_out_bus_arboutputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_v_TmpACCFSCSetSpdErr_sg = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_v_tmpaccfscsetspderr_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_d_TmpACCFTCDeltDist_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_d_tmpaccftcdeltdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_v_TmpACCFTCdeltaV_sg = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_v_tmpaccftcdeltav_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_Brake_Command_60_st Adptrout_Brake_Command_60 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_brake_command_60()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_Throttle_Command_62_st Adptrout_Throttle_Command_62 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_throttle_command_62()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_Steering_Command_64_st Adptrout_Steering_Command_64 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_steering_command_64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_Gear_Command_66_st Adptrout_Gear_Command_66 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_gear_command_66()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_TurnSignal_Command_68_st Adptrout_TurnSignal_Command_68 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_turnsignal_command_68()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_d_AccDisErr_sg = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_d_accdiserr_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_v_AccSpdTar_sg = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u /* 165 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_v_accspdtar_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_v_AccSpdErr_sg = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_v_accspderr_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_a_AccLgtAccTar_sg = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_a_acclgtacctar_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_a_AccLgtAccErr_sg = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_a_acclgtaccerr_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CTRL_OUT_is_BrkReqActive_bl = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ctrl_out_is_brkreqactive_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_pct_tarBrkOpening_sg = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(205u /* 205 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_pct_tarbrkopening_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_kpa_tarBrkPressure_sg = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(213u /* 213 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_kpa_tarbrkpressure_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CTRL_OUT_is_DrvReqActive_bl = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ctrl_out_is_drvreqactive_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_pct_tarDrvOpening_sg = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(229u /* 229 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_pct_tardrvopening_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_T_tarDrvToq_sg = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(237u /* 237 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_t_tardrvtoq_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_ctrl.CTRL_Outputs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_ctrl.CTRL_Outputs)
  return false;
#undef DO_
}

void CTRL_Outputs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_ctrl.CTRL_Outputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float CTRL_OUT_yr_desYawRCmd_sg = 1;
  if (this->ctrl_out_yr_desyawrcmd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->ctrl_out_yr_desyawrcmd_sg(), output);
  }

  // float CTRL_OUT_cv_DesPathCrv_sg = 2;
  if (this->ctrl_out_cv_despathcrv_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->ctrl_out_cv_despathcrv_sg(), output);
  }

  // float CTRL_OUT_d_CtrlPosErr_sg = 3;
  if (this->ctrl_out_d_ctrlposerr_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ctrl_out_d_ctrlposerr_sg(), output);
  }

  // float CTRL_OUT_angD_CtrlHdAngErr_sg = 4;
  if (this->ctrl_out_angd_ctrlhdangerr_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->ctrl_out_angd_ctrlhdangerr_sg(), output);
  }

  // .ads_common.ACCOutputs CTRL_OUT_bus_ACCOutputs = 5;
  if (this->has_ctrl_out_bus_accoutputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_ctrl_out_bus_accoutputs(), output);
  }

  // float CTRL_OUT_reqStrgWhlOffstTorqCmd_sg = 6;
  if (this->ctrl_out_reqstrgwhloffsttorqcmd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->ctrl_out_reqstrgwhloffsttorqcmd_sg(), output);
  }

  // .ads_common.eRS_RampState CTRL_OUT_sts_RampState_eRS = 7;
  if (this->ctrl_out_sts_rampstate_ers() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->ctrl_out_sts_rampstate_ers(), output);
  }

  // bool CTRL_OUT_is_FunctionEnable_bl = 8;
  if (this->ctrl_out_is_functionenable_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->ctrl_out_is_functionenable_bl(), output);
  }

  // float CTRL_OUT_angD_reqStrgWhlAngCmd_sg = 9;
  if (this->ctrl_out_angd_reqstrgwhlangcmd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->ctrl_out_angd_reqstrgwhlangcmd_sg(), output);
  }

  // .ads_common.ARBOutputs CTRL_OUT_bus_ARBOutputs = 10;
  if (this->has_ctrl_out_bus_arboutputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_ctrl_out_bus_arboutputs(), output);
  }

  // float CTRL_OUT_v_TmpACCFSCSetSpdErr_sg = 11;
  if (this->ctrl_out_v_tmpaccfscsetspderr_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->ctrl_out_v_tmpaccfscsetspderr_sg(), output);
  }

  // float CTRL_OUT_d_TmpACCFTCDeltDist_sg = 12;
  if (this->ctrl_out_d_tmpaccftcdeltdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->ctrl_out_d_tmpaccftcdeltdist_sg(), output);
  }

  // float CTRL_OUT_v_TmpACCFTCdeltaV_sg = 13;
  if (this->ctrl_out_v_tmpaccftcdeltav_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->ctrl_out_v_tmpaccftcdeltav_sg(), output);
  }

  // .ads_common.B_Adptrout_Brake_Command_60_st Adptrout_Brake_Command_60 = 14;
  if (this->has_adptrout_brake_command_60()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_adptrout_brake_command_60(), output);
  }

  // .ads_common.B_Adptrout_Throttle_Command_62_st Adptrout_Throttle_Command_62 = 15;
  if (this->has_adptrout_throttle_command_62()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_adptrout_throttle_command_62(), output);
  }

  // .ads_common.B_Adptrout_Steering_Command_64_st Adptrout_Steering_Command_64 = 16;
  if (this->has_adptrout_steering_command_64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_adptrout_steering_command_64(), output);
  }

  // .ads_common.B_Adptrout_Gear_Command_66_st Adptrout_Gear_Command_66 = 17;
  if (this->has_adptrout_gear_command_66()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_adptrout_gear_command_66(), output);
  }

  // .ads_common.B_Adptrout_TurnSignal_Command_68_st Adptrout_TurnSignal_Command_68 = 18;
  if (this->has_adptrout_turnsignal_command_68()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_adptrout_turnsignal_command_68(), output);
  }

  // float CTRL_OUT_d_AccDisErr_sg = 19;
  if (this->ctrl_out_d_accdiserr_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->ctrl_out_d_accdiserr_sg(), output);
  }

  // float CTRL_OUT_v_AccSpdTar_sg = 20;
  if (this->ctrl_out_v_accspdtar_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->ctrl_out_v_accspdtar_sg(), output);
  }

  // float CTRL_OUT_v_AccSpdErr_sg = 21;
  if (this->ctrl_out_v_accspderr_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->ctrl_out_v_accspderr_sg(), output);
  }

  // float CTRL_OUT_a_AccLgtAccTar_sg = 22;
  if (this->ctrl_out_a_acclgtacctar_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->ctrl_out_a_acclgtacctar_sg(), output);
  }

  // float CTRL_OUT_a_AccLgtAccErr_sg = 23;
  if (this->ctrl_out_a_acclgtaccerr_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->ctrl_out_a_acclgtaccerr_sg(), output);
  }

  // bool CTRL_OUT_is_BrkReqActive_bl = 24;
  if (this->ctrl_out_is_brkreqactive_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->ctrl_out_is_brkreqactive_bl(), output);
  }

  // float CTRL_OUT_pct_tarBrkOpening_sg = 25;
  if (this->ctrl_out_pct_tarbrkopening_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(25, this->ctrl_out_pct_tarbrkopening_sg(), output);
  }

  // float CTRL_OUT_kpa_tarBrkPressure_sg = 26;
  if (this->ctrl_out_kpa_tarbrkpressure_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(26, this->ctrl_out_kpa_tarbrkpressure_sg(), output);
  }

  // bool CTRL_OUT_is_DrvReqActive_bl = 27;
  if (this->ctrl_out_is_drvreqactive_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->ctrl_out_is_drvreqactive_bl(), output);
  }

  // float CTRL_OUT_pct_tarDrvOpening_sg = 28;
  if (this->ctrl_out_pct_tardrvopening_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(28, this->ctrl_out_pct_tardrvopening_sg(), output);
  }

  // float CTRL_OUT_T_tarDrvToq_sg = 29;
  if (this->ctrl_out_t_tardrvtoq_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(29, this->ctrl_out_t_tardrvtoq_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_ctrl.CTRL_Outputs)
}

::google::protobuf::uint8* CTRL_Outputs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_ctrl.CTRL_Outputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float CTRL_OUT_yr_desYawRCmd_sg = 1;
  if (this->ctrl_out_yr_desyawrcmd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->ctrl_out_yr_desyawrcmd_sg(), target);
  }

  // float CTRL_OUT_cv_DesPathCrv_sg = 2;
  if (this->ctrl_out_cv_despathcrv_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->ctrl_out_cv_despathcrv_sg(), target);
  }

  // float CTRL_OUT_d_CtrlPosErr_sg = 3;
  if (this->ctrl_out_d_ctrlposerr_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ctrl_out_d_ctrlposerr_sg(), target);
  }

  // float CTRL_OUT_angD_CtrlHdAngErr_sg = 4;
  if (this->ctrl_out_angd_ctrlhdangerr_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->ctrl_out_angd_ctrlhdangerr_sg(), target);
  }

  // .ads_common.ACCOutputs CTRL_OUT_bus_ACCOutputs = 5;
  if (this->has_ctrl_out_bus_accoutputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_ctrl_out_bus_accoutputs(), deterministic, target);
  }

  // float CTRL_OUT_reqStrgWhlOffstTorqCmd_sg = 6;
  if (this->ctrl_out_reqstrgwhloffsttorqcmd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->ctrl_out_reqstrgwhloffsttorqcmd_sg(), target);
  }

  // .ads_common.eRS_RampState CTRL_OUT_sts_RampState_eRS = 7;
  if (this->ctrl_out_sts_rampstate_ers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->ctrl_out_sts_rampstate_ers(), target);
  }

  // bool CTRL_OUT_is_FunctionEnable_bl = 8;
  if (this->ctrl_out_is_functionenable_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->ctrl_out_is_functionenable_bl(), target);
  }

  // float CTRL_OUT_angD_reqStrgWhlAngCmd_sg = 9;
  if (this->ctrl_out_angd_reqstrgwhlangcmd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->ctrl_out_angd_reqstrgwhlangcmd_sg(), target);
  }

  // .ads_common.ARBOutputs CTRL_OUT_bus_ARBOutputs = 10;
  if (this->has_ctrl_out_bus_arboutputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_ctrl_out_bus_arboutputs(), deterministic, target);
  }

  // float CTRL_OUT_v_TmpACCFSCSetSpdErr_sg = 11;
  if (this->ctrl_out_v_tmpaccfscsetspderr_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->ctrl_out_v_tmpaccfscsetspderr_sg(), target);
  }

  // float CTRL_OUT_d_TmpACCFTCDeltDist_sg = 12;
  if (this->ctrl_out_d_tmpaccftcdeltdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->ctrl_out_d_tmpaccftcdeltdist_sg(), target);
  }

  // float CTRL_OUT_v_TmpACCFTCdeltaV_sg = 13;
  if (this->ctrl_out_v_tmpaccftcdeltav_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->ctrl_out_v_tmpaccftcdeltav_sg(), target);
  }

  // .ads_common.B_Adptrout_Brake_Command_60_st Adptrout_Brake_Command_60 = 14;
  if (this->has_adptrout_brake_command_60()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_adptrout_brake_command_60(), deterministic, target);
  }

  // .ads_common.B_Adptrout_Throttle_Command_62_st Adptrout_Throttle_Command_62 = 15;
  if (this->has_adptrout_throttle_command_62()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_adptrout_throttle_command_62(), deterministic, target);
  }

  // .ads_common.B_Adptrout_Steering_Command_64_st Adptrout_Steering_Command_64 = 16;
  if (this->has_adptrout_steering_command_64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_adptrout_steering_command_64(), deterministic, target);
  }

  // .ads_common.B_Adptrout_Gear_Command_66_st Adptrout_Gear_Command_66 = 17;
  if (this->has_adptrout_gear_command_66()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_adptrout_gear_command_66(), deterministic, target);
  }

  // .ads_common.B_Adptrout_TurnSignal_Command_68_st Adptrout_TurnSignal_Command_68 = 18;
  if (this->has_adptrout_turnsignal_command_68()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_adptrout_turnsignal_command_68(), deterministic, target);
  }

  // float CTRL_OUT_d_AccDisErr_sg = 19;
  if (this->ctrl_out_d_accdiserr_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->ctrl_out_d_accdiserr_sg(), target);
  }

  // float CTRL_OUT_v_AccSpdTar_sg = 20;
  if (this->ctrl_out_v_accspdtar_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->ctrl_out_v_accspdtar_sg(), target);
  }

  // float CTRL_OUT_v_AccSpdErr_sg = 21;
  if (this->ctrl_out_v_accspderr_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->ctrl_out_v_accspderr_sg(), target);
  }

  // float CTRL_OUT_a_AccLgtAccTar_sg = 22;
  if (this->ctrl_out_a_acclgtacctar_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->ctrl_out_a_acclgtacctar_sg(), target);
  }

  // float CTRL_OUT_a_AccLgtAccErr_sg = 23;
  if (this->ctrl_out_a_acclgtaccerr_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->ctrl_out_a_acclgtaccerr_sg(), target);
  }

  // bool CTRL_OUT_is_BrkReqActive_bl = 24;
  if (this->ctrl_out_is_brkreqactive_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->ctrl_out_is_brkreqactive_bl(), target);
  }

  // float CTRL_OUT_pct_tarBrkOpening_sg = 25;
  if (this->ctrl_out_pct_tarbrkopening_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(25, this->ctrl_out_pct_tarbrkopening_sg(), target);
  }

  // float CTRL_OUT_kpa_tarBrkPressure_sg = 26;
  if (this->ctrl_out_kpa_tarbrkpressure_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(26, this->ctrl_out_kpa_tarbrkpressure_sg(), target);
  }

  // bool CTRL_OUT_is_DrvReqActive_bl = 27;
  if (this->ctrl_out_is_drvreqactive_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->ctrl_out_is_drvreqactive_bl(), target);
  }

  // float CTRL_OUT_pct_tarDrvOpening_sg = 28;
  if (this->ctrl_out_pct_tardrvopening_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(28, this->ctrl_out_pct_tardrvopening_sg(), target);
  }

  // float CTRL_OUT_T_tarDrvToq_sg = 29;
  if (this->ctrl_out_t_tardrvtoq_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(29, this->ctrl_out_t_tardrvtoq_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_ctrl.CTRL_Outputs)
  return target;
}

size_t CTRL_Outputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_ctrl.CTRL_Outputs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ads_common.ACCOutputs CTRL_OUT_bus_ACCOutputs = 5;
  if (this->has_ctrl_out_bus_accoutputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ctrl_out_bus_accoutputs_);
  }

  // .ads_common.ARBOutputs CTRL_OUT_bus_ARBOutputs = 10;
  if (this->has_ctrl_out_bus_arboutputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ctrl_out_bus_arboutputs_);
  }

  // .ads_common.B_Adptrout_Brake_Command_60_st Adptrout_Brake_Command_60 = 14;
  if (this->has_adptrout_brake_command_60()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_brake_command_60_);
  }

  // .ads_common.B_Adptrout_Throttle_Command_62_st Adptrout_Throttle_Command_62 = 15;
  if (this->has_adptrout_throttle_command_62()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_throttle_command_62_);
  }

  // .ads_common.B_Adptrout_Steering_Command_64_st Adptrout_Steering_Command_64 = 16;
  if (this->has_adptrout_steering_command_64()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_steering_command_64_);
  }

  // .ads_common.B_Adptrout_Gear_Command_66_st Adptrout_Gear_Command_66 = 17;
  if (this->has_adptrout_gear_command_66()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_gear_command_66_);
  }

  // .ads_common.B_Adptrout_TurnSignal_Command_68_st Adptrout_TurnSignal_Command_68 = 18;
  if (this->has_adptrout_turnsignal_command_68()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_turnsignal_command_68_);
  }

  // float CTRL_OUT_yr_desYawRCmd_sg = 1;
  if (this->ctrl_out_yr_desyawrcmd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float CTRL_OUT_cv_DesPathCrv_sg = 2;
  if (this->ctrl_out_cv_despathcrv_sg() != 0) {
    total_size += 1 + 4;
  }

  // float CTRL_OUT_d_CtrlPosErr_sg = 3;
  if (this->ctrl_out_d_ctrlposerr_sg() != 0) {
    total_size += 1 + 4;
  }

  // float CTRL_OUT_angD_CtrlHdAngErr_sg = 4;
  if (this->ctrl_out_angd_ctrlhdangerr_sg() != 0) {
    total_size += 1 + 4;
  }

  // float CTRL_OUT_reqStrgWhlOffstTorqCmd_sg = 6;
  if (this->ctrl_out_reqstrgwhloffsttorqcmd_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eRS_RampState CTRL_OUT_sts_RampState_eRS = 7;
  if (this->ctrl_out_sts_rampstate_ers() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctrl_out_sts_rampstate_ers());
  }

  // float CTRL_OUT_angD_reqStrgWhlAngCmd_sg = 9;
  if (this->ctrl_out_angd_reqstrgwhlangcmd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float CTRL_OUT_v_TmpACCFSCSetSpdErr_sg = 11;
  if (this->ctrl_out_v_tmpaccfscsetspderr_sg() != 0) {
    total_size += 1 + 4;
  }

  // float CTRL_OUT_d_TmpACCFTCDeltDist_sg = 12;
  if (this->ctrl_out_d_tmpaccftcdeltdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float CTRL_OUT_v_TmpACCFTCdeltaV_sg = 13;
  if (this->ctrl_out_v_tmpaccftcdeltav_sg() != 0) {
    total_size += 1 + 4;
  }

  // float CTRL_OUT_d_AccDisErr_sg = 19;
  if (this->ctrl_out_d_accdiserr_sg() != 0) {
    total_size += 2 + 4;
  }

  // bool CTRL_OUT_is_FunctionEnable_bl = 8;
  if (this->ctrl_out_is_functionenable_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool CTRL_OUT_is_BrkReqActive_bl = 24;
  if (this->ctrl_out_is_brkreqactive_bl() != 0) {
    total_size += 2 + 1;
  }

  // bool CTRL_OUT_is_DrvReqActive_bl = 27;
  if (this->ctrl_out_is_drvreqactive_bl() != 0) {
    total_size += 2 + 1;
  }

  // float CTRL_OUT_v_AccSpdTar_sg = 20;
  if (this->ctrl_out_v_accspdtar_sg() != 0) {
    total_size += 2 + 4;
  }

  // float CTRL_OUT_v_AccSpdErr_sg = 21;
  if (this->ctrl_out_v_accspderr_sg() != 0) {
    total_size += 2 + 4;
  }

  // float CTRL_OUT_a_AccLgtAccTar_sg = 22;
  if (this->ctrl_out_a_acclgtacctar_sg() != 0) {
    total_size += 2 + 4;
  }

  // float CTRL_OUT_a_AccLgtAccErr_sg = 23;
  if (this->ctrl_out_a_acclgtaccerr_sg() != 0) {
    total_size += 2 + 4;
  }

  // float CTRL_OUT_pct_tarBrkOpening_sg = 25;
  if (this->ctrl_out_pct_tarbrkopening_sg() != 0) {
    total_size += 2 + 4;
  }

  // float CTRL_OUT_kpa_tarBrkPressure_sg = 26;
  if (this->ctrl_out_kpa_tarbrkpressure_sg() != 0) {
    total_size += 2 + 4;
  }

  // float CTRL_OUT_pct_tarDrvOpening_sg = 28;
  if (this->ctrl_out_pct_tardrvopening_sg() != 0) {
    total_size += 2 + 4;
  }

  // float CTRL_OUT_T_tarDrvToq_sg = 29;
  if (this->ctrl_out_t_tardrvtoq_sg() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CTRL_Outputs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_ctrl.CTRL_Outputs)
  GOOGLE_DCHECK_NE(&from, this);
  const CTRL_Outputs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CTRL_Outputs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_ctrl.CTRL_Outputs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_ctrl.CTRL_Outputs)
    MergeFrom(*source);
  }
}

void CTRL_Outputs::MergeFrom(const CTRL_Outputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_ctrl.CTRL_Outputs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ctrl_out_bus_accoutputs()) {
    mutable_ctrl_out_bus_accoutputs()->::ads_common::ACCOutputs::MergeFrom(from.ctrl_out_bus_accoutputs());
  }
  if (from.has_ctrl_out_bus_arboutputs()) {
    mutable_ctrl_out_bus_arboutputs()->::ads_common::ARBOutputs::MergeFrom(from.ctrl_out_bus_arboutputs());
  }
  if (from.has_adptrout_brake_command_60()) {
    mutable_adptrout_brake_command_60()->::ads_common::B_Adptrout_Brake_Command_60_st::MergeFrom(from.adptrout_brake_command_60());
  }
  if (from.has_adptrout_throttle_command_62()) {
    mutable_adptrout_throttle_command_62()->::ads_common::B_Adptrout_Throttle_Command_62_st::MergeFrom(from.adptrout_throttle_command_62());
  }
  if (from.has_adptrout_steering_command_64()) {
    mutable_adptrout_steering_command_64()->::ads_common::B_Adptrout_Steering_Command_64_st::MergeFrom(from.adptrout_steering_command_64());
  }
  if (from.has_adptrout_gear_command_66()) {
    mutable_adptrout_gear_command_66()->::ads_common::B_Adptrout_Gear_Command_66_st::MergeFrom(from.adptrout_gear_command_66());
  }
  if (from.has_adptrout_turnsignal_command_68()) {
    mutable_adptrout_turnsignal_command_68()->::ads_common::B_Adptrout_TurnSignal_Command_68_st::MergeFrom(from.adptrout_turnsignal_command_68());
  }
  if (from.ctrl_out_yr_desyawrcmd_sg() != 0) {
    set_ctrl_out_yr_desyawrcmd_sg(from.ctrl_out_yr_desyawrcmd_sg());
  }
  if (from.ctrl_out_cv_despathcrv_sg() != 0) {
    set_ctrl_out_cv_despathcrv_sg(from.ctrl_out_cv_despathcrv_sg());
  }
  if (from.ctrl_out_d_ctrlposerr_sg() != 0) {
    set_ctrl_out_d_ctrlposerr_sg(from.ctrl_out_d_ctrlposerr_sg());
  }
  if (from.ctrl_out_angd_ctrlhdangerr_sg() != 0) {
    set_ctrl_out_angd_ctrlhdangerr_sg(from.ctrl_out_angd_ctrlhdangerr_sg());
  }
  if (from.ctrl_out_reqstrgwhloffsttorqcmd_sg() != 0) {
    set_ctrl_out_reqstrgwhloffsttorqcmd_sg(from.ctrl_out_reqstrgwhloffsttorqcmd_sg());
  }
  if (from.ctrl_out_sts_rampstate_ers() != 0) {
    set_ctrl_out_sts_rampstate_ers(from.ctrl_out_sts_rampstate_ers());
  }
  if (from.ctrl_out_angd_reqstrgwhlangcmd_sg() != 0) {
    set_ctrl_out_angd_reqstrgwhlangcmd_sg(from.ctrl_out_angd_reqstrgwhlangcmd_sg());
  }
  if (from.ctrl_out_v_tmpaccfscsetspderr_sg() != 0) {
    set_ctrl_out_v_tmpaccfscsetspderr_sg(from.ctrl_out_v_tmpaccfscsetspderr_sg());
  }
  if (from.ctrl_out_d_tmpaccftcdeltdist_sg() != 0) {
    set_ctrl_out_d_tmpaccftcdeltdist_sg(from.ctrl_out_d_tmpaccftcdeltdist_sg());
  }
  if (from.ctrl_out_v_tmpaccftcdeltav_sg() != 0) {
    set_ctrl_out_v_tmpaccftcdeltav_sg(from.ctrl_out_v_tmpaccftcdeltav_sg());
  }
  if (from.ctrl_out_d_accdiserr_sg() != 0) {
    set_ctrl_out_d_accdiserr_sg(from.ctrl_out_d_accdiserr_sg());
  }
  if (from.ctrl_out_is_functionenable_bl() != 0) {
    set_ctrl_out_is_functionenable_bl(from.ctrl_out_is_functionenable_bl());
  }
  if (from.ctrl_out_is_brkreqactive_bl() != 0) {
    set_ctrl_out_is_brkreqactive_bl(from.ctrl_out_is_brkreqactive_bl());
  }
  if (from.ctrl_out_is_drvreqactive_bl() != 0) {
    set_ctrl_out_is_drvreqactive_bl(from.ctrl_out_is_drvreqactive_bl());
  }
  if (from.ctrl_out_v_accspdtar_sg() != 0) {
    set_ctrl_out_v_accspdtar_sg(from.ctrl_out_v_accspdtar_sg());
  }
  if (from.ctrl_out_v_accspderr_sg() != 0) {
    set_ctrl_out_v_accspderr_sg(from.ctrl_out_v_accspderr_sg());
  }
  if (from.ctrl_out_a_acclgtacctar_sg() != 0) {
    set_ctrl_out_a_acclgtacctar_sg(from.ctrl_out_a_acclgtacctar_sg());
  }
  if (from.ctrl_out_a_acclgtaccerr_sg() != 0) {
    set_ctrl_out_a_acclgtaccerr_sg(from.ctrl_out_a_acclgtaccerr_sg());
  }
  if (from.ctrl_out_pct_tarbrkopening_sg() != 0) {
    set_ctrl_out_pct_tarbrkopening_sg(from.ctrl_out_pct_tarbrkopening_sg());
  }
  if (from.ctrl_out_kpa_tarbrkpressure_sg() != 0) {
    set_ctrl_out_kpa_tarbrkpressure_sg(from.ctrl_out_kpa_tarbrkpressure_sg());
  }
  if (from.ctrl_out_pct_tardrvopening_sg() != 0) {
    set_ctrl_out_pct_tardrvopening_sg(from.ctrl_out_pct_tardrvopening_sg());
  }
  if (from.ctrl_out_t_tardrvtoq_sg() != 0) {
    set_ctrl_out_t_tardrvtoq_sg(from.ctrl_out_t_tardrvtoq_sg());
  }
}

void CTRL_Outputs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_ctrl.CTRL_Outputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTRL_Outputs::CopyFrom(const CTRL_Outputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_ctrl.CTRL_Outputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTRL_Outputs::IsInitialized() const {
  return true;
}

void CTRL_Outputs::Swap(CTRL_Outputs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CTRL_Outputs::InternalSwap(CTRL_Outputs* other) {
  using std::swap;
  swap(ctrl_out_bus_accoutputs_, other->ctrl_out_bus_accoutputs_);
  swap(ctrl_out_bus_arboutputs_, other->ctrl_out_bus_arboutputs_);
  swap(adptrout_brake_command_60_, other->adptrout_brake_command_60_);
  swap(adptrout_throttle_command_62_, other->adptrout_throttle_command_62_);
  swap(adptrout_steering_command_64_, other->adptrout_steering_command_64_);
  swap(adptrout_gear_command_66_, other->adptrout_gear_command_66_);
  swap(adptrout_turnsignal_command_68_, other->adptrout_turnsignal_command_68_);
  swap(ctrl_out_yr_desyawrcmd_sg_, other->ctrl_out_yr_desyawrcmd_sg_);
  swap(ctrl_out_cv_despathcrv_sg_, other->ctrl_out_cv_despathcrv_sg_);
  swap(ctrl_out_d_ctrlposerr_sg_, other->ctrl_out_d_ctrlposerr_sg_);
  swap(ctrl_out_angd_ctrlhdangerr_sg_, other->ctrl_out_angd_ctrlhdangerr_sg_);
  swap(ctrl_out_reqstrgwhloffsttorqcmd_sg_, other->ctrl_out_reqstrgwhloffsttorqcmd_sg_);
  swap(ctrl_out_sts_rampstate_ers_, other->ctrl_out_sts_rampstate_ers_);
  swap(ctrl_out_angd_reqstrgwhlangcmd_sg_, other->ctrl_out_angd_reqstrgwhlangcmd_sg_);
  swap(ctrl_out_v_tmpaccfscsetspderr_sg_, other->ctrl_out_v_tmpaccfscsetspderr_sg_);
  swap(ctrl_out_d_tmpaccftcdeltdist_sg_, other->ctrl_out_d_tmpaccftcdeltdist_sg_);
  swap(ctrl_out_v_tmpaccftcdeltav_sg_, other->ctrl_out_v_tmpaccftcdeltav_sg_);
  swap(ctrl_out_d_accdiserr_sg_, other->ctrl_out_d_accdiserr_sg_);
  swap(ctrl_out_is_functionenable_bl_, other->ctrl_out_is_functionenable_bl_);
  swap(ctrl_out_is_brkreqactive_bl_, other->ctrl_out_is_brkreqactive_bl_);
  swap(ctrl_out_is_drvreqactive_bl_, other->ctrl_out_is_drvreqactive_bl_);
  swap(ctrl_out_v_accspdtar_sg_, other->ctrl_out_v_accspdtar_sg_);
  swap(ctrl_out_v_accspderr_sg_, other->ctrl_out_v_accspderr_sg_);
  swap(ctrl_out_a_acclgtacctar_sg_, other->ctrl_out_a_acclgtacctar_sg_);
  swap(ctrl_out_a_acclgtaccerr_sg_, other->ctrl_out_a_acclgtaccerr_sg_);
  swap(ctrl_out_pct_tarbrkopening_sg_, other->ctrl_out_pct_tarbrkopening_sg_);
  swap(ctrl_out_kpa_tarbrkpressure_sg_, other->ctrl_out_kpa_tarbrkpressure_sg_);
  swap(ctrl_out_pct_tardrvopening_sg_, other->ctrl_out_pct_tardrvopening_sg_);
  swap(ctrl_out_t_tardrvtoq_sg_, other->ctrl_out_t_tardrvtoq_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CTRL_Outputs::GetMetadata() const {
  protobuf_ads_5fctrl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fctrl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HafACCCmd::InitAsDefaultInstance() {
  ::ads_ctrl::_HafACCCmd_default_instance_._instance.get_mutable()->trajparamlong_ = const_cast< ::ads_common::HafLonTrajParam*>(
      ::ads_common::HafLonTrajParam::internal_default_instance());
}
void HafACCCmd::clear_trajparamlong() {
  if (GetArenaNoVirtual() == NULL && trajparamlong_ != NULL) {
    delete trajparamlong_;
  }
  trajparamlong_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HafACCCmd::kACCSystemStateFieldNumber;
const int HafACCCmd::kACCStopReqFieldNumber;
const int HafACCCmd::kDeltaVelocityFieldNumber;
const int HafACCCmd::kDeltaDistFieldNumber;
const int HafACCCmd::kACCIndxSMRStsU8FieldNumber;
const int HafACCCmd::kPLNOUTMSTrajErrorSgFieldNumber;
const int HafACCCmd::kPLNOUTVSpdTrajCmdSgFieldNumber;
const int HafACCCmd::kPLNOUTAAccTrajCmdSgFieldNumber;
const int HafACCCmd::kCTRLOUTAngDReqStrgWhlAngCmdSgFieldNumber;
const int HafACCCmd::kPLNOUTIsLongTrajReplanLevelFieldNumber;
const int HafACCCmd::kTrajParamLongFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HafACCCmd::HafACCCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fctrl_2eproto::scc_info_HafACCCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_ctrl.HafACCCmd)
}
HafACCCmd::HafACCCmd(const HafACCCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_trajparamlong()) {
    trajparamlong_ = new ::ads_common::HafLonTrajParam(*from.trajparamlong_);
  } else {
    trajparamlong_ = NULL;
  }
  ::memcpy(&accsystemstate_, &from.accsystemstate_,
    static_cast<size_t>(reinterpret_cast<char*>(&pln_out_is_longtraj_replan_level_) -
    reinterpret_cast<char*>(&accsystemstate_)) + sizeof(pln_out_is_longtraj_replan_level_));
  // @@protoc_insertion_point(copy_constructor:ads_ctrl.HafACCCmd)
}

void HafACCCmd::SharedCtor() {
  ::memset(&trajparamlong_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pln_out_is_longtraj_replan_level_) -
      reinterpret_cast<char*>(&trajparamlong_)) + sizeof(pln_out_is_longtraj_replan_level_));
}

HafACCCmd::~HafACCCmd() {
  // @@protoc_insertion_point(destructor:ads_ctrl.HafACCCmd)
  SharedDtor();
}

void HafACCCmd::SharedDtor() {
  if (this != internal_default_instance()) delete trajparamlong_;
}

void HafACCCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HafACCCmd::descriptor() {
  ::protobuf_ads_5fctrl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fctrl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HafACCCmd& HafACCCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fctrl_2eproto::scc_info_HafACCCmd.base);
  return *internal_default_instance();
}


void HafACCCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_ctrl.HafACCCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && trajparamlong_ != NULL) {
    delete trajparamlong_;
  }
  trajparamlong_ = NULL;
  ::memset(&accsystemstate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pln_out_is_longtraj_replan_level_) -
      reinterpret_cast<char*>(&accsystemstate_)) + sizeof(pln_out_is_longtraj_replan_level_));
  _internal_metadata_.Clear();
}

bool HafACCCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_ctrl.HafACCCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ACCSystemState = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accsystemstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ACCStopReq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accstopreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DeltaVelocity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &deltavelocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DeltaDist = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &deltadist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ACC_indx_SMRSts_u8 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &acc_indx_smrsts_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float PLN_OUT_m_STrajError_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pln_out_m_strajerror_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float PLN_OUT_v_SpdTrajCmd_sg = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pln_out_v_spdtrajcmd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float PLN_OUT_a_AccTrajCmd_sg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pln_out_a_acctrajcmd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTRL_OUT_angD_reqStrgWhlAngCmd_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctrl_out_angd_reqstrgwhlangcmd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PLN_OUT_is_LongTraj_Replan_Level = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pln_out_is_longtraj_replan_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.HafLonTrajParam TrajParamLong = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trajparamlong()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_ctrl.HafACCCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_ctrl.HafACCCmd)
  return false;
#undef DO_
}

void HafACCCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_ctrl.HafACCCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ACCSystemState = 1;
  if (this->accsystemstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accsystemstate(), output);
  }

  // uint32 ACCStopReq = 2;
  if (this->accstopreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->accstopreq(), output);
  }

  // float DeltaVelocity = 3;
  if (this->deltavelocity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->deltavelocity(), output);
  }

  // float DeltaDist = 4;
  if (this->deltadist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->deltadist(), output);
  }

  // uint32 ACC_indx_SMRSts_u8 = 5;
  if (this->acc_indx_smrsts_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->acc_indx_smrsts_u8(), output);
  }

  // float PLN_OUT_m_STrajError_sg = 6;
  if (this->pln_out_m_strajerror_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->pln_out_m_strajerror_sg(), output);
  }

  // float PLN_OUT_v_SpdTrajCmd_sg = 7;
  if (this->pln_out_v_spdtrajcmd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->pln_out_v_spdtrajcmd_sg(), output);
  }

  // float PLN_OUT_a_AccTrajCmd_sg = 8;
  if (this->pln_out_a_acctrajcmd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->pln_out_a_acctrajcmd_sg(), output);
  }

  // float CTRL_OUT_angD_reqStrgWhlAngCmd_sg = 9;
  if (this->ctrl_out_angd_reqstrgwhlangcmd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->ctrl_out_angd_reqstrgwhlangcmd_sg(), output);
  }

  // uint32 PLN_OUT_is_LongTraj_Replan_Level = 10;
  if (this->pln_out_is_longtraj_replan_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->pln_out_is_longtraj_replan_level(), output);
  }

  // .ads_common.HafLonTrajParam TrajParamLong = 11;
  if (this->has_trajparamlong()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_trajparamlong(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_ctrl.HafACCCmd)
}

::google::protobuf::uint8* HafACCCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_ctrl.HafACCCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ACCSystemState = 1;
  if (this->accsystemstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accsystemstate(), target);
  }

  // uint32 ACCStopReq = 2;
  if (this->accstopreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->accstopreq(), target);
  }

  // float DeltaVelocity = 3;
  if (this->deltavelocity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->deltavelocity(), target);
  }

  // float DeltaDist = 4;
  if (this->deltadist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->deltadist(), target);
  }

  // uint32 ACC_indx_SMRSts_u8 = 5;
  if (this->acc_indx_smrsts_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->acc_indx_smrsts_u8(), target);
  }

  // float PLN_OUT_m_STrajError_sg = 6;
  if (this->pln_out_m_strajerror_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->pln_out_m_strajerror_sg(), target);
  }

  // float PLN_OUT_v_SpdTrajCmd_sg = 7;
  if (this->pln_out_v_spdtrajcmd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->pln_out_v_spdtrajcmd_sg(), target);
  }

  // float PLN_OUT_a_AccTrajCmd_sg = 8;
  if (this->pln_out_a_acctrajcmd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->pln_out_a_acctrajcmd_sg(), target);
  }

  // float CTRL_OUT_angD_reqStrgWhlAngCmd_sg = 9;
  if (this->ctrl_out_angd_reqstrgwhlangcmd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->ctrl_out_angd_reqstrgwhlangcmd_sg(), target);
  }

  // uint32 PLN_OUT_is_LongTraj_Replan_Level = 10;
  if (this->pln_out_is_longtraj_replan_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->pln_out_is_longtraj_replan_level(), target);
  }

  // .ads_common.HafLonTrajParam TrajParamLong = 11;
  if (this->has_trajparamlong()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_trajparamlong(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_ctrl.HafACCCmd)
  return target;
}

size_t HafACCCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_ctrl.HafACCCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ads_common.HafLonTrajParam TrajParamLong = 11;
  if (this->has_trajparamlong()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *trajparamlong_);
  }

  // uint32 ACCSystemState = 1;
  if (this->accsystemstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accsystemstate());
  }

  // uint32 ACCStopReq = 2;
  if (this->accstopreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accstopreq());
  }

  // float DeltaVelocity = 3;
  if (this->deltavelocity() != 0) {
    total_size += 1 + 4;
  }

  // float DeltaDist = 4;
  if (this->deltadist() != 0) {
    total_size += 1 + 4;
  }

  // uint32 ACC_indx_SMRSts_u8 = 5;
  if (this->acc_indx_smrsts_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->acc_indx_smrsts_u8());
  }

  // float PLN_OUT_m_STrajError_sg = 6;
  if (this->pln_out_m_strajerror_sg() != 0) {
    total_size += 1 + 4;
  }

  // float PLN_OUT_v_SpdTrajCmd_sg = 7;
  if (this->pln_out_v_spdtrajcmd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float PLN_OUT_a_AccTrajCmd_sg = 8;
  if (this->pln_out_a_acctrajcmd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float CTRL_OUT_angD_reqStrgWhlAngCmd_sg = 9;
  if (this->ctrl_out_angd_reqstrgwhlangcmd_sg() != 0) {
    total_size += 1 + 4;
  }

  // uint32 PLN_OUT_is_LongTraj_Replan_Level = 10;
  if (this->pln_out_is_longtraj_replan_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pln_out_is_longtraj_replan_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HafACCCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_ctrl.HafACCCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const HafACCCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HafACCCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_ctrl.HafACCCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_ctrl.HafACCCmd)
    MergeFrom(*source);
  }
}

void HafACCCmd::MergeFrom(const HafACCCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_ctrl.HafACCCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_trajparamlong()) {
    mutable_trajparamlong()->::ads_common::HafLonTrajParam::MergeFrom(from.trajparamlong());
  }
  if (from.accsystemstate() != 0) {
    set_accsystemstate(from.accsystemstate());
  }
  if (from.accstopreq() != 0) {
    set_accstopreq(from.accstopreq());
  }
  if (from.deltavelocity() != 0) {
    set_deltavelocity(from.deltavelocity());
  }
  if (from.deltadist() != 0) {
    set_deltadist(from.deltadist());
  }
  if (from.acc_indx_smrsts_u8() != 0) {
    set_acc_indx_smrsts_u8(from.acc_indx_smrsts_u8());
  }
  if (from.pln_out_m_strajerror_sg() != 0) {
    set_pln_out_m_strajerror_sg(from.pln_out_m_strajerror_sg());
  }
  if (from.pln_out_v_spdtrajcmd_sg() != 0) {
    set_pln_out_v_spdtrajcmd_sg(from.pln_out_v_spdtrajcmd_sg());
  }
  if (from.pln_out_a_acctrajcmd_sg() != 0) {
    set_pln_out_a_acctrajcmd_sg(from.pln_out_a_acctrajcmd_sg());
  }
  if (from.ctrl_out_angd_reqstrgwhlangcmd_sg() != 0) {
    set_ctrl_out_angd_reqstrgwhlangcmd_sg(from.ctrl_out_angd_reqstrgwhlangcmd_sg());
  }
  if (from.pln_out_is_longtraj_replan_level() != 0) {
    set_pln_out_is_longtraj_replan_level(from.pln_out_is_longtraj_replan_level());
  }
}

void HafACCCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_ctrl.HafACCCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HafACCCmd::CopyFrom(const HafACCCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_ctrl.HafACCCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HafACCCmd::IsInitialized() const {
  return true;
}

void HafACCCmd::Swap(HafACCCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HafACCCmd::InternalSwap(HafACCCmd* other) {
  using std::swap;
  swap(trajparamlong_, other->trajparamlong_);
  swap(accsystemstate_, other->accsystemstate_);
  swap(accstopreq_, other->accstopreq_);
  swap(deltavelocity_, other->deltavelocity_);
  swap(deltadist_, other->deltadist_);
  swap(acc_indx_smrsts_u8_, other->acc_indx_smrsts_u8_);
  swap(pln_out_m_strajerror_sg_, other->pln_out_m_strajerror_sg_);
  swap(pln_out_v_spdtrajcmd_sg_, other->pln_out_v_spdtrajcmd_sg_);
  swap(pln_out_a_acctrajcmd_sg_, other->pln_out_a_acctrajcmd_sg_);
  swap(ctrl_out_angd_reqstrgwhlangcmd_sg_, other->ctrl_out_angd_reqstrgwhlangcmd_sg_);
  swap(pln_out_is_longtraj_replan_level_, other->pln_out_is_longtraj_replan_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HafACCCmd::GetMetadata() const {
  protobuf_ads_5fctrl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fctrl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HafTrajCoeff::InitAsDefaultInstance() {
  ::ads_ctrl::_HafTrajCoeff_default_instance_._instance.get_mutable()->trajparam_ = const_cast< ::ads_common::HafTrajParam*>(
      ::ads_common::HafTrajParam::internal_default_instance());
}
void HafTrajCoeff::clear_trajparam() {
  if (GetArenaNoVirtual() == NULL && trajparam_ != NULL) {
    delete trajparam_;
  }
  trajparam_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HafTrajCoeff::kIsLCCActiveBlFieldNumber;
const int HafTrajCoeff::kTrajParamFieldNumber;
const int HafTrajCoeff::kTRPReplanLevelFieldNumber;
const int HafTrajCoeff::kDAINIsHostLIndChgToLeftBlFieldNumber;
const int HafTrajCoeff::kDAINIsHostRIndChgToRghtBlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HafTrajCoeff::HafTrajCoeff()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fctrl_2eproto::scc_info_HafTrajCoeff.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_ctrl.HafTrajCoeff)
}
HafTrajCoeff::HafTrajCoeff(const HafTrajCoeff& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_trajparam()) {
    trajparam_ = new ::ads_common::HafTrajParam(*from.trajparam_);
  } else {
    trajparam_ = NULL;
  }
  ::memcpy(&is_lccactive_bl_, &from.is_lccactive_bl_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_is_hostrindchgtorght_bl_) -
    reinterpret_cast<char*>(&is_lccactive_bl_)) + sizeof(da_in_is_hostrindchgtorght_bl_));
  // @@protoc_insertion_point(copy_constructor:ads_ctrl.HafTrajCoeff)
}

void HafTrajCoeff::SharedCtor() {
  ::memset(&trajparam_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_is_hostrindchgtorght_bl_) -
      reinterpret_cast<char*>(&trajparam_)) + sizeof(da_in_is_hostrindchgtorght_bl_));
}

HafTrajCoeff::~HafTrajCoeff() {
  // @@protoc_insertion_point(destructor:ads_ctrl.HafTrajCoeff)
  SharedDtor();
}

void HafTrajCoeff::SharedDtor() {
  if (this != internal_default_instance()) delete trajparam_;
}

void HafTrajCoeff::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HafTrajCoeff::descriptor() {
  ::protobuf_ads_5fctrl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fctrl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HafTrajCoeff& HafTrajCoeff::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fctrl_2eproto::scc_info_HafTrajCoeff.base);
  return *internal_default_instance();
}


void HafTrajCoeff::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_ctrl.HafTrajCoeff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && trajparam_ != NULL) {
    delete trajparam_;
  }
  trajparam_ = NULL;
  ::memset(&is_lccactive_bl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_is_hostrindchgtorght_bl_) -
      reinterpret_cast<char*>(&is_lccactive_bl_)) + sizeof(da_in_is_hostrindchgtorght_bl_));
  _internal_metadata_.Clear();
}

bool HafTrajCoeff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_ctrl.HafTrajCoeff)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_LCCActive_bl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_lccactive_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.HafTrajParam TrajParam = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trajparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TRP_Replan_Level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trp_replan_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DA_IN_is_HostLIndChgToLeft_bl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &da_in_is_hostlindchgtoleft_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DA_IN_is_HostRIndChgToRght_bl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &da_in_is_hostrindchgtorght_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_ctrl.HafTrajCoeff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_ctrl.HafTrajCoeff)
  return false;
#undef DO_
}

void HafTrajCoeff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_ctrl.HafTrajCoeff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_LCCActive_bl = 1;
  if (this->is_lccactive_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_lccactive_bl(), output);
  }

  // .ads_common.HafTrajParam TrajParam = 2;
  if (this->has_trajparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_trajparam(), output);
  }

  // uint32 TRP_Replan_Level = 3;
  if (this->trp_replan_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->trp_replan_level(), output);
  }

  // uint32 DA_IN_is_HostLIndChgToLeft_bl = 4;
  if (this->da_in_is_hostlindchgtoleft_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->da_in_is_hostlindchgtoleft_bl(), output);
  }

  // uint32 DA_IN_is_HostRIndChgToRght_bl = 5;
  if (this->da_in_is_hostrindchgtorght_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->da_in_is_hostrindchgtorght_bl(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_ctrl.HafTrajCoeff)
}

::google::protobuf::uint8* HafTrajCoeff::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_ctrl.HafTrajCoeff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_LCCActive_bl = 1;
  if (this->is_lccactive_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_lccactive_bl(), target);
  }

  // .ads_common.HafTrajParam TrajParam = 2;
  if (this->has_trajparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_trajparam(), deterministic, target);
  }

  // uint32 TRP_Replan_Level = 3;
  if (this->trp_replan_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->trp_replan_level(), target);
  }

  // uint32 DA_IN_is_HostLIndChgToLeft_bl = 4;
  if (this->da_in_is_hostlindchgtoleft_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->da_in_is_hostlindchgtoleft_bl(), target);
  }

  // uint32 DA_IN_is_HostRIndChgToRght_bl = 5;
  if (this->da_in_is_hostrindchgtorght_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->da_in_is_hostrindchgtorght_bl(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_ctrl.HafTrajCoeff)
  return target;
}

size_t HafTrajCoeff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_ctrl.HafTrajCoeff)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ads_common.HafTrajParam TrajParam = 2;
  if (this->has_trajparam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *trajparam_);
  }

  // bool is_LCCActive_bl = 1;
  if (this->is_lccactive_bl() != 0) {
    total_size += 1 + 1;
  }

  // uint32 TRP_Replan_Level = 3;
  if (this->trp_replan_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->trp_replan_level());
  }

  // uint32 DA_IN_is_HostLIndChgToLeft_bl = 4;
  if (this->da_in_is_hostlindchgtoleft_bl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->da_in_is_hostlindchgtoleft_bl());
  }

  // uint32 DA_IN_is_HostRIndChgToRght_bl = 5;
  if (this->da_in_is_hostrindchgtorght_bl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->da_in_is_hostrindchgtorght_bl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HafTrajCoeff::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_ctrl.HafTrajCoeff)
  GOOGLE_DCHECK_NE(&from, this);
  const HafTrajCoeff* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HafTrajCoeff>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_ctrl.HafTrajCoeff)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_ctrl.HafTrajCoeff)
    MergeFrom(*source);
  }
}

void HafTrajCoeff::MergeFrom(const HafTrajCoeff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_ctrl.HafTrajCoeff)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_trajparam()) {
    mutable_trajparam()->::ads_common::HafTrajParam::MergeFrom(from.trajparam());
  }
  if (from.is_lccactive_bl() != 0) {
    set_is_lccactive_bl(from.is_lccactive_bl());
  }
  if (from.trp_replan_level() != 0) {
    set_trp_replan_level(from.trp_replan_level());
  }
  if (from.da_in_is_hostlindchgtoleft_bl() != 0) {
    set_da_in_is_hostlindchgtoleft_bl(from.da_in_is_hostlindchgtoleft_bl());
  }
  if (from.da_in_is_hostrindchgtorght_bl() != 0) {
    set_da_in_is_hostrindchgtorght_bl(from.da_in_is_hostrindchgtorght_bl());
  }
}

void HafTrajCoeff::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_ctrl.HafTrajCoeff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HafTrajCoeff::CopyFrom(const HafTrajCoeff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_ctrl.HafTrajCoeff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HafTrajCoeff::IsInitialized() const {
  return true;
}

void HafTrajCoeff::Swap(HafTrajCoeff* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HafTrajCoeff::InternalSwap(HafTrajCoeff* other) {
  using std::swap;
  swap(trajparam_, other->trajparam_);
  swap(is_lccactive_bl_, other->is_lccactive_bl_);
  swap(trp_replan_level_, other->trp_replan_level_);
  swap(da_in_is_hostlindchgtoleft_bl_, other->da_in_is_hostlindchgtoleft_bl_);
  swap(da_in_is_hostrindchgtorght_bl_, other->da_in_is_hostrindchgtorght_bl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HafTrajCoeff::GetMetadata() const {
  protobuf_ads_5fctrl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fctrl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ads_ctrl
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_ctrl::CTRL_Outputs* Arena::CreateMaybeMessage< ::ads_ctrl::CTRL_Outputs >(Arena* arena) {
  return Arena::CreateInternal< ::ads_ctrl::CTRL_Outputs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_ctrl::HafACCCmd* Arena::CreateMaybeMessage< ::ads_ctrl::HafACCCmd >(Arena* arena) {
  return Arena::CreateInternal< ::ads_ctrl::HafACCCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_ctrl::HafTrajCoeff* Arena::CreateMaybeMessage< ::ads_ctrl::HafTrajCoeff >(Arena* arena) {
  return Arena::CreateInternal< ::ads_ctrl::HafTrajCoeff >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
