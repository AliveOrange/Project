// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ads_com.proto

#include "ads_com.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ads_5fcom_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HafTime_COM;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point2D_COM;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point3D_COM;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VCP_B_StateEst;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HafRect3D_COM;
}  // namespace protobuf_ads_5fcom_2eproto
namespace ads_common {
class B1_LaneLineInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B1_LaneLineInfo>
      _instance;
} _B1_LaneLineInfo_default_instance_;
class B1_RefLineInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B1_RefLineInfo>
      _instance;
} _B1_RefLineInfo_default_instance_;
class HafLonTrajParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HafLonTrajParam>
      _instance;
} _HafLonTrajParam_default_instance_;
class B_ACCObjVldLv2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCObjVldLv2>
      _instance;
} _B_ACCObjVldLv2_default_instance_;
class B_ACCObj03_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCObj03_st>
      _instance;
} _B_ACCObj03_st_default_instance_;
class B_ACCObj04_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCObj04_st>
      _instance;
} _B_ACCObj04_st_default_instance_;
class B_ACCStnObj03_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCStnObj03_st>
      _instance;
} _B_ACCStnObj03_st_default_instance_;
class B_ACCStnObj04_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCStnObj04_st>
      _instance;
} _B_ACCStnObj04_st_default_instance_;
class B_ACCObjVldRawDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCObjVldRaw>
      _instance;
} _B_ACCObjVldRaw_default_instance_;
class B_Inputs_VSP_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_Inputs_VSP_st>
      _instance;
} _B_Inputs_VSP_st_default_instance_;
class B_Inputs_VCP_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_Inputs_VCP_st>
      _instance;
} _B_Inputs_VCP_st_default_instance_;
class VCP_B_StateEstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VCP_B_StateEst>
      _instance;
} _VCP_B_StateEst_default_instance_;
class B_Inputs_VDP_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_Inputs_VDP_st>
      _instance;
} _B_Inputs_VDP_st_default_instance_;
class B_ConfgDID_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ConfgDID_st>
      _instance;
} _B_ConfgDID_st_default_instance_;
class B_ACCobj01_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCobj01_st>
      _instance;
} _B_ACCobj01_st_default_instance_;
class B_ACCobj02_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCobj02_st>
      _instance;
} _B_ACCobj02_st_default_instance_;
class B_ACCobj05_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCobj05_st>
      _instance;
} _B_ACCobj05_st_default_instance_;
class B_ACCobj06_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCobj06_st>
      _instance;
} _B_ACCobj06_st_default_instance_;
class B_ACCStnObj01_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCStnObj01_st>
      _instance;
} _B_ACCStnObj01_st_default_instance_;
class B_ACCStnObj02_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCStnObj02_st>
      _instance;
} _B_ACCStnObj02_st_default_instance_;
class B_ACCStnObj05_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCStnObj05_st>
      _instance;
} _B_ACCStnObj05_st_default_instance_;
class B_ACCStnObj06_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_ACCStnObj06_st>
      _instance;
} _B_ACCStnObj06_st_default_instance_;
class B_HostL_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_HostL_st>
      _instance;
} _B_HostL_st_default_instance_;
class B_HostR_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_HostR_st>
      _instance;
} _B_HostR_st_default_instance_;
class B_NextLL_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_NextLL_st>
      _instance;
} _B_NextLL_st_default_instance_;
class B_NextRR_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_NextRR_st>
      _instance;
} _B_NextRR_st_default_instance_;
class B_DngrObj_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrObj_st>
      _instance;
} _B_DngrObj_st_default_instance_;
class B_DngrStnObj_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrStnObj_st>
      _instance;
} _B_DngrStnObj_st_default_instance_;
class B_DngrPed01_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrPed01_st>
      _instance;
} _B_DngrPed01_st_default_instance_;
class B_DngrPed02_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrPed02_st>
      _instance;
} _B_DngrPed02_st_default_instance_;
class B_DngrPed03_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrPed03_st>
      _instance;
} _B_DngrPed03_st_default_instance_;
class B_DngrPed04_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrPed04_st>
      _instance;
} _B_DngrPed04_st_default_instance_;
class B_DngrPed05_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrPed05_st>
      _instance;
} _B_DngrPed05_st_default_instance_;
class B_DngrPed06_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrPed06_st>
      _instance;
} _B_DngrPed06_st_default_instance_;
class B_DngrPed07_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrPed07_st>
      _instance;
} _B_DngrPed07_st_default_instance_;
class B_DngrPed08_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrPed08_st>
      _instance;
} _B_DngrPed08_st_default_instance_;
class B_DngrPed09_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrPed09_st>
      _instance;
} _B_DngrPed09_st_default_instance_;
class B_DngrPed10_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_DngrPed10_st>
      _instance;
} _B_DngrPed10_st_default_instance_;
class B_CenterLine_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_CenterLine_st>
      _instance;
} _B_CenterLine_st_default_instance_;
class B_LeftRoadEdge_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_LeftRoadEdge_st>
      _instance;
} _B_LeftRoadEdge_st_default_instance_;
class B_RightRoadEdge_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_RightRoadEdge_st>
      _instance;
} _B_RightRoadEdge_st_default_instance_;
class B_LeftBarrier_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_LeftBarrier_st>
      _instance;
} _B_LeftBarrier_st_default_instance_;
class B_RightBarrier_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_RightBarrier_st>
      _instance;
} _B_RightBarrier_st_default_instance_;
class B_SppPolyCoeff_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_SppPolyCoeff_st>
      _instance;
} _B_SppPolyCoeff_st_default_instance_;
class B_HostRHSP_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_HostRHSP_st>
      _instance;
} _B_HostRHSP_st_default_instance_;
class B_HostLHSP_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_HostLHSP_st>
      _instance;
} _B_HostLHSP_st_default_instance_;
class B_HostRInd_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_HostRInd_st>
      _instance;
} _B_HostRInd_st_default_instance_;
class B_HostLInd_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_HostLInd_st>
      _instance;
} _B_HostLInd_st_default_instance_;
class Point3D_COMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3D_COM>
      _instance;
} _Point3D_COM_default_instance_;
class HafRect3D_COMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HafRect3D_COM>
      _instance;
} _HafRect3D_COM_default_instance_;
class Point2D_COMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point2D_COM>
      _instance;
} _Point2D_COM_default_instance_;
class HafTime_COMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HafTime_COM>
      _instance;
} _HafTime_COM_default_instance_;
class HafFusionOut_COMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HafFusionOut_COM>
      _instance;
} _HafFusionOut_COM_default_instance_;
class HafTrajParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HafTrajParam>
      _instance;
} _HafTrajParam_default_instance_;
class ACCOutputsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ACCOutputs>
      _instance;
} _ACCOutputs_default_instance_;
class ARBOutputsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ARBOutputs>
      _instance;
} _ARBOutputs_default_instance_;
class B1_RdEdgeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B1_RdEdgeInfo>
      _instance;
} _B1_RdEdgeInfo_default_instance_;
class B1_BorderLaneDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B1_BorderLaneData>
      _instance;
} _B1_BorderLaneData_default_instance_;
class B1_SelObjDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B1_SelObjData>
      _instance;
} _B1_SelObjData_default_instance_;
class B1_ObjTrajInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B1_ObjTrajInfo>
      _instance;
} _B1_ObjTrajInfo_default_instance_;
class B1_ObjPredTrajDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B1_ObjPredTraj>
      _instance;
} _B1_ObjPredTraj_default_instance_;
class B1_ObjPredTrajV2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B1_ObjPredTrajV2>
      _instance;
} _B1_ObjPredTrajV2_default_instance_;
class B_Adptrout_Brake_Command_60_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_Adptrout_Brake_Command_60_st>
      _instance;
} _B_Adptrout_Brake_Command_60_st_default_instance_;
class B_Adptrout_Throttle_Command_62_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_Adptrout_Throttle_Command_62_st>
      _instance;
} _B_Adptrout_Throttle_Command_62_st_default_instance_;
class B_Adptrout_Steering_Command_64_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_Adptrout_Steering_Command_64_st>
      _instance;
} _B_Adptrout_Steering_Command_64_st_default_instance_;
class B_Adptrout_Gear_Command_66_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_Adptrout_Gear_Command_66_st>
      _instance;
} _B_Adptrout_Gear_Command_66_st_default_instance_;
class B_Adptrout_TurnSignal_Command_68_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_Adptrout_TurnSignal_Command_68_st>
      _instance;
} _B_Adptrout_TurnSignal_Command_68_st_default_instance_;
class B_Adptrout_LatCtrl_State_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_Adptrout_LatCtrl_State_st>
      _instance;
} _B_Adptrout_LatCtrl_State_st_default_instance_;
class B_Adptrout_LonCtrl_State_stDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<B_Adptrout_LonCtrl_State_st>
      _instance;
} _B_Adptrout_LonCtrl_State_st_default_instance_;
}  // namespace ads_common
namespace protobuf_ads_5fcom_2eproto {
static void InitDefaultsB1_LaneLineInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B1_LaneLineInfo_default_instance_;
    new (ptr) ::ads_common::B1_LaneLineInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B1_LaneLineInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B1_LaneLineInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB1_LaneLineInfo}, {}};

static void InitDefaultsB1_RefLineInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B1_RefLineInfo_default_instance_;
    new (ptr) ::ads_common::B1_RefLineInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B1_RefLineInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B1_RefLineInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB1_RefLineInfo}, {}};

static void InitDefaultsHafLonTrajParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_HafLonTrajParam_default_instance_;
    new (ptr) ::ads_common::HafLonTrajParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::HafLonTrajParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HafLonTrajParam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHafLonTrajParam}, {}};

static void InitDefaultsB_ACCObjVldLv2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCObjVldLv2_default_instance_;
    new (ptr) ::ads_common::B_ACCObjVldLv2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCObjVldLv2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCObjVldLv2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCObjVldLv2}, {}};

static void InitDefaultsB_ACCObj03_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCObj03_st_default_instance_;
    new (ptr) ::ads_common::B_ACCObj03_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCObj03_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCObj03_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCObj03_st}, {}};

static void InitDefaultsB_ACCObj04_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCObj04_st_default_instance_;
    new (ptr) ::ads_common::B_ACCObj04_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCObj04_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCObj04_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCObj04_st}, {}};

static void InitDefaultsB_ACCStnObj03_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCStnObj03_st_default_instance_;
    new (ptr) ::ads_common::B_ACCStnObj03_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCStnObj03_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCStnObj03_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCStnObj03_st}, {}};

static void InitDefaultsB_ACCStnObj04_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCStnObj04_st_default_instance_;
    new (ptr) ::ads_common::B_ACCStnObj04_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCStnObj04_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCStnObj04_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCStnObj04_st}, {}};

static void InitDefaultsB_ACCObjVldRaw() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCObjVldRaw_default_instance_;
    new (ptr) ::ads_common::B_ACCObjVldRaw();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCObjVldRaw::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCObjVldRaw =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCObjVldRaw}, {}};

static void InitDefaultsB_Inputs_VSP_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_Inputs_VSP_st_default_instance_;
    new (ptr) ::ads_common::B_Inputs_VSP_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_Inputs_VSP_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_Inputs_VSP_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_Inputs_VSP_st}, {}};

static void InitDefaultsB_Inputs_VCP_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_Inputs_VCP_st_default_instance_;
    new (ptr) ::ads_common::B_Inputs_VCP_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_Inputs_VCP_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_B_Inputs_VCP_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsB_Inputs_VCP_st}, {
      &protobuf_ads_5fcom_2eproto::scc_info_VCP_B_StateEst.base,}};

static void InitDefaultsVCP_B_StateEst() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_VCP_B_StateEst_default_instance_;
    new (ptr) ::ads_common::VCP_B_StateEst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::VCP_B_StateEst::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VCP_B_StateEst =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVCP_B_StateEst}, {}};

static void InitDefaultsB_Inputs_VDP_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_Inputs_VDP_st_default_instance_;
    new (ptr) ::ads_common::B_Inputs_VDP_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_Inputs_VDP_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_Inputs_VDP_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_Inputs_VDP_st}, {}};

static void InitDefaultsB_ConfgDID_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ConfgDID_st_default_instance_;
    new (ptr) ::ads_common::B_ConfgDID_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ConfgDID_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ConfgDID_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ConfgDID_st}, {}};

static void InitDefaultsB_ACCobj01_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCobj01_st_default_instance_;
    new (ptr) ::ads_common::B_ACCobj01_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCobj01_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCobj01_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCobj01_st}, {}};

static void InitDefaultsB_ACCobj02_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCobj02_st_default_instance_;
    new (ptr) ::ads_common::B_ACCobj02_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCobj02_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCobj02_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCobj02_st}, {}};

static void InitDefaultsB_ACCobj05_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCobj05_st_default_instance_;
    new (ptr) ::ads_common::B_ACCobj05_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCobj05_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCobj05_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCobj05_st}, {}};

static void InitDefaultsB_ACCobj06_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCobj06_st_default_instance_;
    new (ptr) ::ads_common::B_ACCobj06_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCobj06_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCobj06_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCobj06_st}, {}};

static void InitDefaultsB_ACCStnObj01_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCStnObj01_st_default_instance_;
    new (ptr) ::ads_common::B_ACCStnObj01_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCStnObj01_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCStnObj01_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCStnObj01_st}, {}};

static void InitDefaultsB_ACCStnObj02_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCStnObj02_st_default_instance_;
    new (ptr) ::ads_common::B_ACCStnObj02_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCStnObj02_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCStnObj02_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCStnObj02_st}, {}};

static void InitDefaultsB_ACCStnObj05_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCStnObj05_st_default_instance_;
    new (ptr) ::ads_common::B_ACCStnObj05_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCStnObj05_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCStnObj05_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCStnObj05_st}, {}};

static void InitDefaultsB_ACCStnObj06_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_ACCStnObj06_st_default_instance_;
    new (ptr) ::ads_common::B_ACCStnObj06_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_ACCStnObj06_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_ACCStnObj06_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_ACCStnObj06_st}, {}};

static void InitDefaultsB_HostL_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_HostL_st_default_instance_;
    new (ptr) ::ads_common::B_HostL_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_HostL_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_HostL_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_HostL_st}, {}};

static void InitDefaultsB_HostR_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_HostR_st_default_instance_;
    new (ptr) ::ads_common::B_HostR_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_HostR_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_HostR_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_HostR_st}, {}};

static void InitDefaultsB_NextLL_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_NextLL_st_default_instance_;
    new (ptr) ::ads_common::B_NextLL_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_NextLL_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_NextLL_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_NextLL_st}, {}};

static void InitDefaultsB_NextRR_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_NextRR_st_default_instance_;
    new (ptr) ::ads_common::B_NextRR_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_NextRR_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_NextRR_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_NextRR_st}, {}};

static void InitDefaultsB_DngrObj_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrObj_st_default_instance_;
    new (ptr) ::ads_common::B_DngrObj_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrObj_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrObj_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrObj_st}, {}};

static void InitDefaultsB_DngrStnObj_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrStnObj_st_default_instance_;
    new (ptr) ::ads_common::B_DngrStnObj_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrStnObj_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrStnObj_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrStnObj_st}, {}};

static void InitDefaultsB_DngrPed01_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrPed01_st_default_instance_;
    new (ptr) ::ads_common::B_DngrPed01_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrPed01_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrPed01_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrPed01_st}, {}};

static void InitDefaultsB_DngrPed02_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrPed02_st_default_instance_;
    new (ptr) ::ads_common::B_DngrPed02_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrPed02_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrPed02_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrPed02_st}, {}};

static void InitDefaultsB_DngrPed03_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrPed03_st_default_instance_;
    new (ptr) ::ads_common::B_DngrPed03_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrPed03_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrPed03_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrPed03_st}, {}};

static void InitDefaultsB_DngrPed04_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrPed04_st_default_instance_;
    new (ptr) ::ads_common::B_DngrPed04_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrPed04_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrPed04_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrPed04_st}, {}};

static void InitDefaultsB_DngrPed05_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrPed05_st_default_instance_;
    new (ptr) ::ads_common::B_DngrPed05_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrPed05_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrPed05_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrPed05_st}, {}};

static void InitDefaultsB_DngrPed06_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrPed06_st_default_instance_;
    new (ptr) ::ads_common::B_DngrPed06_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrPed06_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrPed06_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrPed06_st}, {}};

static void InitDefaultsB_DngrPed07_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrPed07_st_default_instance_;
    new (ptr) ::ads_common::B_DngrPed07_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrPed07_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrPed07_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrPed07_st}, {}};

static void InitDefaultsB_DngrPed08_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrPed08_st_default_instance_;
    new (ptr) ::ads_common::B_DngrPed08_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrPed08_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrPed08_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrPed08_st}, {}};

static void InitDefaultsB_DngrPed09_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrPed09_st_default_instance_;
    new (ptr) ::ads_common::B_DngrPed09_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrPed09_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrPed09_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrPed09_st}, {}};

static void InitDefaultsB_DngrPed10_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_DngrPed10_st_default_instance_;
    new (ptr) ::ads_common::B_DngrPed10_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_DngrPed10_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_DngrPed10_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_DngrPed10_st}, {}};

static void InitDefaultsB_CenterLine_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_CenterLine_st_default_instance_;
    new (ptr) ::ads_common::B_CenterLine_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_CenterLine_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_CenterLine_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_CenterLine_st}, {}};

static void InitDefaultsB_LeftRoadEdge_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_LeftRoadEdge_st_default_instance_;
    new (ptr) ::ads_common::B_LeftRoadEdge_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_LeftRoadEdge_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_LeftRoadEdge_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_LeftRoadEdge_st}, {}};

static void InitDefaultsB_RightRoadEdge_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_RightRoadEdge_st_default_instance_;
    new (ptr) ::ads_common::B_RightRoadEdge_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_RightRoadEdge_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_RightRoadEdge_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_RightRoadEdge_st}, {}};

static void InitDefaultsB_LeftBarrier_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_LeftBarrier_st_default_instance_;
    new (ptr) ::ads_common::B_LeftBarrier_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_LeftBarrier_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_LeftBarrier_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_LeftBarrier_st}, {}};

static void InitDefaultsB_RightBarrier_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_RightBarrier_st_default_instance_;
    new (ptr) ::ads_common::B_RightBarrier_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_RightBarrier_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_RightBarrier_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_RightBarrier_st}, {}};

static void InitDefaultsB_SppPolyCoeff_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_SppPolyCoeff_st_default_instance_;
    new (ptr) ::ads_common::B_SppPolyCoeff_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_SppPolyCoeff_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_SppPolyCoeff_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_SppPolyCoeff_st}, {}};

static void InitDefaultsB_HostRHSP_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_HostRHSP_st_default_instance_;
    new (ptr) ::ads_common::B_HostRHSP_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_HostRHSP_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_HostRHSP_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_HostRHSP_st}, {}};

static void InitDefaultsB_HostLHSP_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_HostLHSP_st_default_instance_;
    new (ptr) ::ads_common::B_HostLHSP_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_HostLHSP_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_HostLHSP_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_HostLHSP_st}, {}};

static void InitDefaultsB_HostRInd_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_HostRInd_st_default_instance_;
    new (ptr) ::ads_common::B_HostRInd_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_HostRInd_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_HostRInd_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_HostRInd_st}, {}};

static void InitDefaultsB_HostLInd_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_HostLInd_st_default_instance_;
    new (ptr) ::ads_common::B_HostLInd_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_HostLInd_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_HostLInd_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_HostLInd_st}, {}};

static void InitDefaultsPoint3D_COM() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_Point3D_COM_default_instance_;
    new (ptr) ::ads_common::Point3D_COM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::Point3D_COM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point3D_COM =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint3D_COM}, {}};

static void InitDefaultsHafRect3D_COM() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_HafRect3D_COM_default_instance_;
    new (ptr) ::ads_common::HafRect3D_COM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::HafRect3D_COM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HafRect3D_COM =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHafRect3D_COM}, {
      &protobuf_ads_5fcom_2eproto::scc_info_Point3D_COM.base,}};

static void InitDefaultsPoint2D_COM() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_Point2D_COM_default_instance_;
    new (ptr) ::ads_common::Point2D_COM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::Point2D_COM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point2D_COM =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint2D_COM}, {}};

static void InitDefaultsHafTime_COM() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_HafTime_COM_default_instance_;
    new (ptr) ::ads_common::HafTime_COM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::HafTime_COM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HafTime_COM =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHafTime_COM}, {}};

static void InitDefaultsHafFusionOut_COM() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_HafFusionOut_COM_default_instance_;
    new (ptr) ::ads_common::HafFusionOut_COM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::HafFusionOut_COM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_HafFusionOut_COM =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsHafFusionOut_COM}, {
      &protobuf_ads_5fcom_2eproto::scc_info_HafRect3D_COM.base,
      &protobuf_ads_5fcom_2eproto::scc_info_Point2D_COM.base,
      &protobuf_ads_5fcom_2eproto::scc_info_HafTime_COM.base,}};

static void InitDefaultsHafTrajParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_HafTrajParam_default_instance_;
    new (ptr) ::ads_common::HafTrajParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::HafTrajParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HafTrajParam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHafTrajParam}, {}};

static void InitDefaultsACCOutputs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_ACCOutputs_default_instance_;
    new (ptr) ::ads_common::ACCOutputs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::ACCOutputs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ACCOutputs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsACCOutputs}, {}};

static void InitDefaultsARBOutputs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_ARBOutputs_default_instance_;
    new (ptr) ::ads_common::ARBOutputs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::ARBOutputs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ARBOutputs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsARBOutputs}, {}};

static void InitDefaultsB1_RdEdgeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B1_RdEdgeInfo_default_instance_;
    new (ptr) ::ads_common::B1_RdEdgeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B1_RdEdgeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B1_RdEdgeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB1_RdEdgeInfo}, {}};

static void InitDefaultsB1_BorderLaneData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B1_BorderLaneData_default_instance_;
    new (ptr) ::ads_common::B1_BorderLaneData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B1_BorderLaneData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B1_BorderLaneData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB1_BorderLaneData}, {}};

static void InitDefaultsB1_SelObjData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B1_SelObjData_default_instance_;
    new (ptr) ::ads_common::B1_SelObjData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B1_SelObjData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B1_SelObjData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB1_SelObjData}, {}};

static void InitDefaultsB1_ObjTrajInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B1_ObjTrajInfo_default_instance_;
    new (ptr) ::ads_common::B1_ObjTrajInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B1_ObjTrajInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B1_ObjTrajInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB1_ObjTrajInfo}, {}};

static void InitDefaultsB1_ObjPredTraj() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B1_ObjPredTraj_default_instance_;
    new (ptr) ::ads_common::B1_ObjPredTraj();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B1_ObjPredTraj::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B1_ObjPredTraj =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB1_ObjPredTraj}, {}};

static void InitDefaultsB1_ObjPredTrajV2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B1_ObjPredTrajV2_default_instance_;
    new (ptr) ::ads_common::B1_ObjPredTrajV2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B1_ObjPredTrajV2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B1_ObjPredTrajV2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB1_ObjPredTrajV2}, {}};

static void InitDefaultsB_Adptrout_Brake_Command_60_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_Adptrout_Brake_Command_60_st_default_instance_;
    new (ptr) ::ads_common::B_Adptrout_Brake_Command_60_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_Adptrout_Brake_Command_60_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Brake_Command_60_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_Adptrout_Brake_Command_60_st}, {}};

static void InitDefaultsB_Adptrout_Throttle_Command_62_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_Adptrout_Throttle_Command_62_st_default_instance_;
    new (ptr) ::ads_common::B_Adptrout_Throttle_Command_62_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_Adptrout_Throttle_Command_62_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Throttle_Command_62_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_Adptrout_Throttle_Command_62_st}, {}};

static void InitDefaultsB_Adptrout_Steering_Command_64_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_Adptrout_Steering_Command_64_st_default_instance_;
    new (ptr) ::ads_common::B_Adptrout_Steering_Command_64_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_Adptrout_Steering_Command_64_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Steering_Command_64_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_Adptrout_Steering_Command_64_st}, {}};

static void InitDefaultsB_Adptrout_Gear_Command_66_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_Adptrout_Gear_Command_66_st_default_instance_;
    new (ptr) ::ads_common::B_Adptrout_Gear_Command_66_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_Adptrout_Gear_Command_66_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Gear_Command_66_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_Adptrout_Gear_Command_66_st}, {}};

static void InitDefaultsB_Adptrout_TurnSignal_Command_68_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_Adptrout_TurnSignal_Command_68_st_default_instance_;
    new (ptr) ::ads_common::B_Adptrout_TurnSignal_Command_68_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_Adptrout_TurnSignal_Command_68_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_TurnSignal_Command_68_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_Adptrout_TurnSignal_Command_68_st}, {}};

static void InitDefaultsB_Adptrout_LatCtrl_State_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_Adptrout_LatCtrl_State_st_default_instance_;
    new (ptr) ::ads_common::B_Adptrout_LatCtrl_State_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_Adptrout_LatCtrl_State_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_LatCtrl_State_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_Adptrout_LatCtrl_State_st}, {}};

static void InitDefaultsB_Adptrout_LonCtrl_State_st() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_common::_B_Adptrout_LonCtrl_State_st_default_instance_;
    new (ptr) ::ads_common::B_Adptrout_LonCtrl_State_st();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_common::B_Adptrout_LonCtrl_State_st::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_LonCtrl_State_st =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsB_Adptrout_LonCtrl_State_st}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_B1_LaneLineInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B1_RefLineInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HafLonTrajParam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCObjVldLv2.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCObj03_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCObj04_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCStnObj03_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCStnObj04_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCObjVldRaw.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_Inputs_VSP_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_Inputs_VCP_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VCP_B_StateEst.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_Inputs_VDP_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ConfgDID_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCobj01_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCobj02_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCobj05_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCobj06_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCStnObj01_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCStnObj02_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCStnObj05_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_ACCStnObj06_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_HostL_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_HostR_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_NextLL_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_NextRR_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrObj_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrStnObj_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrPed01_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrPed02_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrPed03_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrPed04_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrPed05_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrPed06_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrPed07_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrPed08_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrPed09_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_DngrPed10_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_CenterLine_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_LeftRoadEdge_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_RightRoadEdge_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_LeftBarrier_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_RightBarrier_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_SppPolyCoeff_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_HostRHSP_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_HostLHSP_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_HostRInd_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_HostLInd_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point3D_COM.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HafRect3D_COM.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point2D_COM.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HafTime_COM.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HafFusionOut_COM.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HafTrajParam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ACCOutputs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ARBOutputs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B1_RdEdgeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B1_BorderLaneData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B1_SelObjData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B1_ObjTrajInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B1_ObjPredTraj.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B1_ObjPredTrajV2.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_Adptrout_Brake_Command_60_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_Adptrout_Throttle_Command_62_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_Adptrout_Steering_Command_64_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_Adptrout_Gear_Command_66_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_Adptrout_TurnSignal_Command_68_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_Adptrout_LatCtrl_State_st.base);
  ::google::protobuf::internal::InitSCC(&scc_info_B_Adptrout_LonCtrl_State_st.base);
}

::google::protobuf::Metadata file_level_metadata[69];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[202];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_LaneLineInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_LaneLineInfo, lli_d_linelatposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_LaneLineInfo, lli_angr_linehdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_LaneLineInfo, lli_cv_linecrva2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_LaneLineInfo, lli_cvr_linecrvrta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_LaneLineInfo, lli_d_linerngstart_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_LaneLineInfo, lli_d_linerngend_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_LaneLineInfo, lli_stat_lineqltycnfd_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_LaneLineInfo, lli_stat_linecolor_elcr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_LaneLineInfo, lli_stat_linetype_eltp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RefLineInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RefLineInfo, rli_d_linelatposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RefLineInfo, rli_angr_linehdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RefLineInfo, rli_cv_linecrva2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RefLineInfo, rli_cvr_linecrvrta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RefLineInfo, rli_v_spdlmtval_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RefLineInfo, rli_d_linerngstart_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RefLineInfo, rli_d_linerngend_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RefLineInfo, rli_stat_lineqltycnfd_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RefLineInfo, rli_stat_linecolor_elcr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RefLineInfo, rli_stat_linetype_eltp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafLonTrajParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafLonTrajParam, a0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafLonTrajParam, a1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafLonTrajParam, a2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafLonTrajParam, a3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafLonTrajParam, a4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafLonTrajParam, a5_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_acc01vldlv2_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_acc02vldlv2_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_acc03vldlv2_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_acc04vldlv2_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_acc05vldlv2_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_acc06vldlv2_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_accstn01vldlv2_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_accstn02vldlv2_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_accstn03vldlv2_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_accstn04vldlv2_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_accstn05vldlv2_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldLv2, acc_is_accstn06vldlv2_bl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_indx_acc03id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_v_acc03longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_v_acc03latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_d_acc03longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_d_acc03latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_stat_acc03snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_stat_acc03trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_stat_acc03mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_a_acc03longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_a_acc03latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_stat_acc03class_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj03_st, da_in_d_acc03width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_indx_acc04id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_v_acc04longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_v_acc04latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_d_acc04longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_d_acc04latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_stat_acc04snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_stat_acc04trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_stat_acc04mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_a_acc04longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_a_acc04latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_stat_acc04class_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObj04_st, da_in_d_acc04width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_indx_accstn03id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_v_accstn03longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_v_accstn03latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_d_accstn03longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_d_accstn03latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_stat_accstn03snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_stat_accstn03trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_stat_accstn03mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_a_accstn03longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_a_accstn03latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_stat_accstn03cls_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj03_st, da_in_d_accstn03width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_indx_accstn04id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_v_accstn04longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_v_accstn04latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_d_accstn04longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_d_accstn04latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_stat_accstn04snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_stat_accstn04trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_stat_accstn04mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_a_accstn04longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_a_accstn04latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_stat_accstn04cls_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj04_st, da_in_d_accstn04width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_acc01vldflgraw_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_acc02vldflgraw_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_acc03vldflgraw_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_acc04vldflgraw_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_acc05vldflgraw_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_acc06vldflgraw_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_accstn01vldflgraw_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_accstn02vldflgraw_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_accstn03vldflgraw_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_accstn04vldflgraw_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_accstn05vldflgraw_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCObjVldRaw, dfin_is_accstn06vldflgraw_bl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VSP_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VSP_st, da_in_vsp_d_vehparwhlbase_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VSP_st, da_in_vsp_k_vehparstrratio_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VSP_st, da_in_vsp_k_vehparustrgrd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VSP_st, da_in_vsp_d_vehparvehwidth_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VSP_st, da_in_vsp_d_camposoffst2cent_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_angd_strgwhlang_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_wd_strgwhlanggrd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_v_vehspdavgdrn_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_t_drvrstrtoq_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_yr_vehyawrate_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_a_vselatacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_is_strwhlangvalid_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_is_yawrtvalid_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_is_lataccvalid_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_is_lgtaccvalid_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_a_lgtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_rho_curvtrjest_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_is_egovehstatc_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_t_drvrtorqesti_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_sts_dvrhndsoffdtcn_ehos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_is_drvrtorqestifail_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VCP_st, da_in_vcp_b_stateest_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::VCP_B_StateEst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::VCP_B_StateEst, vcp_is_roadbackangvalid_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::VCP_B_StateEst, vcp_angd_roadbankang_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::VCP_B_StateEst, vcp_v2_vehparsquvch_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::VCP_B_StateEst, vcp_k_vehparstrstabfactk_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::VCP_B_StateEst, vcp_kv_ustrgrdkv_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VDP_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VDP_st, da_in_vdp_is_ldircnio_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VDP_st, da_in_vdp_is_rdircnio_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VDP_st, da_in_vdp_is_engrunactv_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VDP_st, da_in_vdp_a_vselongtaccel_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VDP_st, da_in_vdp_a_estdvselongtaccel_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VDP_st, da_in_vdp_sts_egovehspdv_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VDP_st, da_in_vdpestdegovehspdipk_u16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VDP_st, da_in_vdp_is_vehrolbck_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Inputs_VDP_st, da_in_vdp_v_egoavgvehspd_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_indx_funcconfdid_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_indx_subfuncconfdid_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_stat_ldwldpdftsw_elksds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_stat_tjaicadftsw_etjads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_stat_lacstvtlvldftsw_elsds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_stat_audwrnngdftsw_eahwds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_stat_hptcwrnngdftsw_eahwds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_stat_aebfcwdftsw_eafds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_stat_aebpdftsw_eaebpds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_stat_fcwstvtlvldftsw_elsds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_stat_elkdftsw_eelkds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_indx_lstigncyclfuncsts_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ConfgDID_st, da_in_indx_reserve_u8_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_indx_acc01id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_v_acc01longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_v_acc01latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_d_acc01longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_d_acc01latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_stat_acc01snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_stat_acc01trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_stat_acc01mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_a_acc01longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_a_acc01latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_stat_acc01class_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj01_st, da_in_d_acc01width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_indx_acc02id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_v_acc02longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_v_acc02latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_d_acc02longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_d_acc02latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_stat_acc02snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_stat_acc02trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_stat_acc02mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_a_acc02longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_a_acc02latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_stat_acc02class_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj02_st, da_in_d_acc02width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_indx_acc05id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_v_acc05longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_v_acc05latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_d_acc05longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_d_acc05latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_stat_acc05snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_stat_acc05trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_stat_acc05mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_a_acc05longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_a_acc05latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_stat_acc05class_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj05_st, da_in_d_acc05width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_indx_acc06id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_v_acc06longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_v_acc06latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_d_acc06longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_d_acc06latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_stat_acc06snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_stat_acc06trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_stat_acc06mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_a_acc06longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_a_acc06latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_stat_acc06class_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCobj06_st, da_in_d_acc06width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_indx_accstn01id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_v_accstn01longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_v_accstn01latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_d_accstn01longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_d_accstn01latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_stat_accstn01snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_stat_accstn01trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_stat_accstn01mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_a_accstn01longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_a_accstn01latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_stat_accstn01cls_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj01_st, da_in_d_accstn01width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_indx_accstn02id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_v_accstn02longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_v_accstn02latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_d_accstn02longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_d_accstn02latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_stat_accstn02snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_stat_accstn02trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_stat_accstn02mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_a_accstn02longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_a_accstn02latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_stat_accstn02cls_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj02_st, da_in_d_accstn02width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_indx_accstn05id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_v_accstn05longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_v_accstn05latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_d_accstn05longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_d_accstn05latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_stat_accstn05snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_stat_accstn05trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_stat_accstn05mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_a_accstn05longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_a_accstn05latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_stat_accstn05cls_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj05_st, da_in_d_accstn05width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_indx_accstn06id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_v_accstn06longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_v_accstn06latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_d_accstn06longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_d_accstn06latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_stat_accstn06snsr_ecsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_stat_accstn06trk_ectrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_stat_accstn06mvsts_ecmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_a_accstn06longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_a_accstn06latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_stat_accstn06cls_ecls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_ACCStnObj06_st, da_in_d_accstn06width_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostL_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostL_st, da_in_d_hostllneposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostL_st, da_in_angr_hostllnehdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostL_st, da_in_cv_hostllnecrvtea2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostL_st, da_in_cvr_hostllnecrvterta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostL_st, da_in_is_hostllnechgtoleft_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostL_st, da_in_d_hostllnernge_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostL_st, da_in_stat_hostllnecnfdn_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostL_st, da_in_stat_hostllnecolor_elcr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostL_st, da_in_stat_hostllnetype_eltp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostR_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostR_st, da_in_d_hostrlneposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostR_st, da_in_angr_hostrlnehdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostR_st, da_in_cv_hostrlnecrvtea2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostR_st, da_in_cvr_hostrlnecrvterta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostR_st, da_in_is_hostrlnechgtorght_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostR_st, da_in_d_hostrlnernge_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostR_st, da_in_stat_hostrlnecnfdn_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostR_st, da_in_stat_hostrlnecolor_elcr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostR_st, da_in_stat_hostrlnetype_eltp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextLL_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextLL_st, da_in_d_nextlllneposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextLL_st, da_in_angr_nextlllnehdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextLL_st, da_in_cv_nextlllnecrvtea2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextLL_st, da_in_cvr_nextlllnecrvterta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextLL_st, da_in_d_nextlllnernge_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextLL_st, da_in_stat_nextlllnecnfdn_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextLL_st, da_in_stat_nextlllnecolor_elcr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextLL_st, da_in_stat_nextlllnetype_eltp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextRR_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextRR_st, da_in_d_nextrrlneposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextRR_st, da_in_angr_nextrrlnehdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextRR_st, da_in_cv_nextrrlnecrvtea2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextRR_st, da_in_cvr_nextrrlnecrvterta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextRR_st, da_in_d_nextrrlnernge_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextRR_st, da_in_stat_nextrrlnecnfdn_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextRR_st, da_in_stat_nextrrlnecolor_elcr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_NextRR_st, da_in_stat_nextrrlnetype_eltp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_indx_dngrobjid_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_v_dngrobjlongtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_v_dngrobjlatspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_d_dngrobjlongtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_d_dngrobjlatdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_stat_dngrobjsnsr_edsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_stat_dngrobjtrk_edtrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_stat_dngrobjmvsts_edmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_a_dngrobjlongtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_a_dngrobjlatacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_stat_dngrobjclass_edcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrObj_st, da_in_d_dngrobjwidth_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_indx_dngrstnobjid_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_v_dngrstnobjlongtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_v_dngrstnobjlatspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_d_dngrstnobjlongtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_d_dngrstnobjlatdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_stat_dngrstnobjsnsr_edsnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_stat_dngrstnobjtrk_edtrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_stat_dngrstnobjmvsts_edmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_a_dngrstnobjlongtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_a_dngrstnobjlatacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_stat_dngrstnobjclass_edcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrStnObj_st, da_in_d_dngrstnobjwidth_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, da_in_d_dngrped01longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, da_in_d_dngrped01latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, da_in_v_dngrped01longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, da_in_a_dngrped01longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, da_in_v_dngrped01latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, da_in_a_dngrped01latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, da_in_indx_dngrped01id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, da_in_indx_dngrped01age_u16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, da_in_stat_dngrped01sts_eptrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, da_in_stat_dngrped01class_epcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed01_st, da_in_stat_dngrped01src_epsnr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, da_in_d_dngrped02longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, da_in_d_dngrped02latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, da_in_v_dngrped02longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, da_in_a_dngrped02longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, da_in_v_dngrped02latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, da_in_a_dngrped02latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, da_in_indx_dngrped02id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, da_in_indx_dngrped02age_u16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, da_in_stat_dngrped02sts_eptrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, da_in_stat_dngrped02class_epcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed02_st, da_in_stat_dngrped02src_epsnr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, da_in_d_dngrped03longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, da_in_d_dngrped03latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, da_in_v_dngrped03longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, da_in_a_dngrped03longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, da_in_v_dngrped03latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, da_in_a_dngrped03latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, da_in_indx_dngrped03id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, da_in_indx_dngrped03age_u16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, da_in_stat_dngrped03sts_eptrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, da_in_stat_dngrped03class_epcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed03_st, da_in_stat_dngrped03src_epsnr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, da_in_d_dngrped04longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, da_in_d_dngrped04latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, da_in_v_dngrped04longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, da_in_a_dngrped04longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, da_in_v_dngrped04latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, da_in_a_dngrped04latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, da_in_indx_dngrped04id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, da_in_indx_dngrped04age_u16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, da_in_stat_dngrped04sts_eptrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, da_in_stat_dngrped04class_epcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed04_st, da_in_stat_dngrped04src_epsnr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, da_in_d_dngrped05longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, da_in_d_dngrped05latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, da_in_v_dngrped05longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, da_in_a_dngrped05longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, da_in_v_dngrped05latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, da_in_a_dngrped05latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, da_in_indx_dngrped05id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, da_in_indx_dngrped05age_u16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, da_in_stat_dngrped05sts_eptrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, da_in_stat_dngrped05class_epcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed05_st, da_in_stat_dngrped05src_epsnr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, da_in_d_dngrped06longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, da_in_d_dngrped06latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, da_in_v_dngrped06longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, da_in_a_dngrped06longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, da_in_v_dngrped06latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, da_in_a_dngrped06latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, da_in_indx_dngrped06id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, da_in_indx_dngrped06age_u16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, da_in_stat_dngrped06sts_eptrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, da_in_stat_dngrped06class_epcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed06_st, da_in_stat_dngrped06src_epsnr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, da_in_d_dngrped07longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, da_in_d_dngrped07latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, da_in_v_dngrped07longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, da_in_a_dngrped07longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, da_in_v_dngrped07latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, da_in_a_dngrped07latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, da_in_indx_dngrped07id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, da_in_indx_dngrped07age_u16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, da_in_stat_dngrped07sts_eptrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, da_in_stat_dngrped07class_epcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed07_st, da_in_stat_dngrped07src_epsnr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, da_in_d_dngrped08longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, da_in_d_dngrped08latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, da_in_v_dngrped08longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, da_in_a_dngrped08longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, da_in_v_dngrped08latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, da_in_a_dngrped08latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, da_in_indx_dngrped08id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, da_in_indx_dngrped08age_u16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, da_in_stat_dngrped08sts_eptrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, da_in_stat_dngrped08class_epcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed08_st, da_in_stat_dngrped08src_epsnr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, da_in_d_dngrped09longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, da_in_d_dngrped09latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, da_in_v_dngrped09longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, da_in_a_dngrped09longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, da_in_v_dngrped09latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, da_in_a_dngrped09latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, da_in_indx_dngrped09id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, da_in_indx_dngrped09age_u16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, da_in_stat_dngrped09sts_eptrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, da_in_stat_dngrped09class_epcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed09_st, da_in_stat_dngrped09src_epsnr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, da_in_d_dngrped10longtdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, da_in_d_dngrped10latdist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, da_in_v_dngrped10longtspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, da_in_a_dngrped10longtacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, da_in_v_dngrped10latspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, da_in_a_dngrped10latacc_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, da_in_indx_dngrped10id_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, da_in_indx_dngrped10age_u16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, da_in_stat_dngrped10sts_eptrk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, da_in_stat_dngrped10class_epcls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_DngrPed10_st, da_in_stat_dngrped10src_epsnr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_CenterLine_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_CenterLine_st, da_in_d_cntrlnposoffsta0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_CenterLine_st, da_in_angr_cntrlnhdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_CenterLine_st, da_in_cv_cntrlncurva2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_CenterLine_st, da_in_cvr_cntrlndcurva3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_CenterLine_st, da_in_stat_cntrlnmrkcnfdn_elcf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftRoadEdge_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftRoadEdge_st, da_in_d_lftroadedgea0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftRoadEdge_st, da_in_angr_lftroadedgea1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftRoadEdge_st, da_in_cv_lftroadedgea2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftRoadEdge_st, da_in_cvr_lftroadedgea3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftRoadEdge_st, da_in_d_lftroadedgerangend_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftRoadEdge_st, da_in_stat_lftroadedgecnfdn_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftRoadEdge_st, da_in_stat_lftlnemrkcolor_elcr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightRoadEdge_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightRoadEdge_st, da_in_d_rghtroadedgea0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightRoadEdge_st, da_in_angr_rghtroadedgea1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightRoadEdge_st, da_in_cv_rghtroadedgea2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightRoadEdge_st, da_in_cvr_rghtroadedgea3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightRoadEdge_st, da_in_d_rghtroadedgerangend_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightRoadEdge_st, da_in_stat_rghtroadedgecnfdn_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightRoadEdge_st, da_in_stat_rghtlnemrkcolor_elcr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftBarrier_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftBarrier_st, da_in_d_lftbarriera0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftBarrier_st, da_in_angr_lftbarriera1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftBarrier_st, da_in_cv_lftbarriera2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftBarrier_st, da_in_cvr_lftbarriera3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftBarrier_st, da_in_d_lftbarrierrangend_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftBarrier_st, da_in_indx_lftbarrierstatus_u8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_LeftBarrier_st, da_in_stat_lftbarriercnfdn_elcf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightBarrier_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightBarrier_st, da_in_d_rghtbarriera0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightBarrier_st, da_in_angr_rghtbarriera1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightBarrier_st, da_in_cv_rghtbarriera2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightBarrier_st, da_in_cvr_rghtbarriera3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightBarrier_st, da_in_d_rghtbarrierrangend_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightBarrier_st, da_in_indx_rghtbarrierstatus_u8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_RightBarrier_st, da_in_stat_rghtbarriercnfdn_elcf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_SppPolyCoeff_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_SppPolyCoeff_st, da_in_d_spppolycoefa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_SppPolyCoeff_st, da_in_angr_spppolycoefa1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_SppPolyCoeff_st, da_in_cv_spppolycoefa2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_SppPolyCoeff_st, da_in_cvr_spppolycoefa3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_SppPolyCoeff_st, da_in_stat_spppolycoefcnfdn_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_SppPolyCoeff_st, da_in_indx_spppolycoeftype_u8_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRHSP_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRHSP_st, da_in_d_hostrhspposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRHSP_st, da_in_angr_hostrhsphdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRHSP_st, da_in_cv_hostrhspcrvtea2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRHSP_st, da_in_cvr_hostrhspcrvterta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRHSP_st, da_in_is_hostrhspchgtorght_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRHSP_st, da_in_d_hostrhsprnge_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRHSP_st, da_in_stat_hostrhspcnfdn_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRHSP_st, da_in_stat_hostrhspcolor_elcr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRHSP_st, da_in_stat_hostrhsptype_eltp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLHSP_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLHSP_st, da_in_d_hostlhspposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLHSP_st, da_in_angr_hostlhsphdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLHSP_st, da_in_cv_hostlhspcrvtea2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLHSP_st, da_in_cvr_hostlhspcrvterta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLHSP_st, da_in_is_hostlhspchgtoleft_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLHSP_st, da_in_d_hostlhsprnge_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLHSP_st, da_in_stat_hostlhspcnfdn_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLHSP_st, da_in_stat_hostlhspcolor_elcr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLHSP_st, da_in_stat_hostlhsptype_eltp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRInd_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRInd_st, da_in_d_hostrindposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRInd_st, da_in_angr_hostrindhdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRInd_st, da_in_cv_hostrindcrvtea2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRInd_st, da_in_cvr_hostrindcrvterta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRInd_st, da_in_is_hostrindchgtorght_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRInd_st, da_in_d_hostrindrnge_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRInd_st, da_in_stat_hostrindcnfdn_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRInd_st, da_in_stat_hostrindcolor_elcr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostRInd_st, da_in_stat_hostrindtype_eltp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLInd_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLInd_st, da_in_d_hostlindposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLInd_st, da_in_angr_hostlindhdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLInd_st, da_in_cv_hostlindcrvtea2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLInd_st, da_in_cvr_hostlindcrvterta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLInd_st, da_in_is_hostlindchgtoleft_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLInd_st, da_in_d_hostlindrnge_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLInd_st, da_in_stat_hostlindcnfdn_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLInd_st, da_in_stat_hostlindcolor_elcr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_HostLInd_st, da_in_stat_hostlindtype_eltp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::Point3D_COM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::Point3D_COM, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::Point3D_COM, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::Point3D_COM, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafRect3D_COM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafRect3D_COM, center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafRect3D_COM, centerstddev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafRect3D_COM, sizelwh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafRect3D_COM, sizestddev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafRect3D_COM, orientation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafRect3D_COM, orientationstddev_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::Point2D_COM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::Point2D_COM, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::Point2D_COM, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafTime_COM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafTime_COM, sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafTime_COM, nsec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, objectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, class__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, detectsensor_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, detectsensor_history_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, maintenancestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, classconfidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, existenceprobability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, rectinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, velocityabs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, accelerationabs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, timecreation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, lastupdatedtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, motionpattern_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, motionpatternhistory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, brakelightst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, turnlightst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafFusionOut_COM, nearside_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafTrajParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafTrajParam, a0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafTrajParam, a1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafTrajParam, a2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::HafTrajParam, a3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_v_cscmaxcrvtespd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_is_cscctrlactv_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_a_cscaccel_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_is_cscactvrtlmtoff_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_is_cscactvrtlmtmstlgt_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_a_fscaccel_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_a_ftcaccel_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_d_ftclongtdsrddist_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_is_ftcstdy_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_is_ftcslideflag_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_d_ftcdsrddistlvl1hmi_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_d_ftcdsrddistlvl2hmi_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_d_ftcdsrddistlvl3hmi_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_a_ftcacceldyn_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_is_ftcdnsteephill_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_is_ftcupsteephill_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_d_distmingap_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_is_cbcactv_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_a_maltgtaccel_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_a_maltgtaccelraw_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_is_malcscaccelused_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ACCOutputs, acc_a_maltgtacceldeadcomp_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ARBOutputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ARBOutputs, arb_t_pcttoqreqval_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ARBOutputs, arb_t_pcttorqcmpval_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ARBOutputs, arb_t_pcttorqslpestd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ARBOutputs, arb_indx_pctwhltoq2ptrat_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ARBOutputs, arb_a_pctmaxslidedecel_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ARBOutputs, arb_is_pctuphillbackslidrisk_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ARBOutputs, arb_indx_bpaarbreqsts_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ARBOutputs, arb_a_bpadclreqval_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ARBOutputs, arb_t_bpatoqreqval_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::ARBOutputs, arb_indx_bpaespecmactvsts_en_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RdEdgeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RdEdgeInfo, rei_d_rdedgelatposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RdEdgeInfo, rei_angr_rdedgehdanga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RdEdgeInfo, rei_cv_rdedgecrva2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RdEdgeInfo, rei_cvr_rdedgecrvrta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RdEdgeInfo, rei_d_rdedgerngstart_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RdEdgeInfo, rei_d_rdedgerngend_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RdEdgeInfo, rei_stat_rdedgeqltycnfd_elcf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_RdEdgeInfo, rei_stat_rdedgetype_u8_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_BorderLaneData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_BorderLaneData, bld_indx_rdtwosidesbndrycase_u8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_BorderLaneData, bld_d_lftlmreposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_BorderLaneData, bld_angr_lftlmrehdaga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_BorderLaneData, bld_cv_lftlmrecrva2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_BorderLaneData, bld_cvr_lftlmrecrvterta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_BorderLaneData, bld_d_rghtlmreposa0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_BorderLaneData, bld_angr_rghtlmrehdaga1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_BorderLaneData, bld_cv_rghtlmrecrva2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_BorderLaneData, bld_cvr_rghtlmrecrvterta3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_BorderLaneData, bld_d_egolanewidth_sg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_idx_objid_u32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_d_objoffset_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_v_objoffsetderiv_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_v_objspd_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_a_objaccel_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_angr_objhdang_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_d_objlgtposn_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_d_objlgtposnstddev_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_d_objlatposn_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_idx_objtype_u8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_sts_objlnechgtrnd_etls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_idx_objtrfcjamasstqlty_u8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_sts_objselctqlty_etsq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_idx_objfusnsrc_u8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_SelObjData, sod_idx_objselectposinarray_u8_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_d_objtraj1orderc0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_angr_objtraj1orderc1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_d_objtraj3orderc0_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_angr_objtraj3orderc1_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_cv_objtraj3orderc2_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_cvr_objtraj3orderc3_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_is_objtrajrst_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_arr_objtrajhistxpnts_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_arr_objtrajhistypnts_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_k_objavgmvslope_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_cv_objavgmvcrv_sg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_is_objtrajvalid_bl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjTrajInfo, oti_perc_objtrajqlty_u8_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTraj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTraj, obj_pred_xpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTraj, obj_pred_ypoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTraj, obj_pred_quality_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTrajV2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTrajV2, obj_pred_v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTrajV2, obj_pred_v_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTrajV2, obj_pred_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTrajV2, obj_pred_a_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTrajV2, obj_pred_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTrajV2, obj_pred_x_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTrajV2, obj_pred_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTrajV2, obj_pred_y_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTrajV2, obj_pred_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B1_ObjPredTrajV2, obj_pred_quality_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Brake_Command_60_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Brake_Command_60_st, audio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Brake_Command_60_st, acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Brake_Command_60_st, quiet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Brake_Command_60_st, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Brake_Command_60_st, ignore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Brake_Command_60_st, clear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Brake_Command_60_st, pcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Brake_Command_60_st, en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Brake_Command_60_st, bcmd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Throttle_Command_62_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Throttle_Command_62_st, quiet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Throttle_Command_62_st, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Throttle_Command_62_st, ignore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Throttle_Command_62_st, clear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Throttle_Command_62_st, pcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Throttle_Command_62_st, en_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Steering_Command_64_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Steering_Command_64_st, quiet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Steering_Command_64_st, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Steering_Command_64_st, ignore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Steering_Command_64_st, svel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Steering_Command_64_st, clear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Steering_Command_64_st, en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Steering_Command_64_st, scmd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Gear_Command_66_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Gear_Command_66_st, en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Gear_Command_66_st, gcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_Gear_Command_66_st, clear_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_TurnSignal_Command_68_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_TurnSignal_Command_68_st, trncmd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_ldwlkadspcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_ldwsyssts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_ldwsysfltsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_ldwlkaaudreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_lkasyssts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_lkasysfltsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_lkavbnlvlreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_pltdspcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_pltsyssts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_pltsysfltsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_snstvtlvldspcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_adowrnngdspcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_drvrtkovreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_hptcwrngdspcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_lvsulznreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_rvsulznreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_nocdspcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_nocsyssts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_nocsysfltsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_lkareqctrlsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_lkareqtoq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_lkareqtoqv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_lkareqang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_lkareqangv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LatCtrl_State_st, adptr_out_lkarampstate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accsyssts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accsysfltsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accsetspd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accsetdistance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accsgrgoreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accsgrsdslreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accdetobjdistlvl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accdrvrtkovreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accstopreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accjerkupperlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accjerklowerlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accreqaccel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_common::B_Adptrout_LonCtrl_State_st, adptr_out_accacceldeadcomp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ads_common::B1_LaneLineInfo)},
  { 14, -1, sizeof(::ads_common::B1_RefLineInfo)},
  { 29, -1, sizeof(::ads_common::HafLonTrajParam)},
  { 40, -1, sizeof(::ads_common::B_ACCObjVldLv2)},
  { 57, -1, sizeof(::ads_common::B_ACCObj03_st)},
  { 74, -1, sizeof(::ads_common::B_ACCObj04_st)},
  { 91, -1, sizeof(::ads_common::B_ACCStnObj03_st)},
  { 108, -1, sizeof(::ads_common::B_ACCStnObj04_st)},
  { 125, -1, sizeof(::ads_common::B_ACCObjVldRaw)},
  { 142, -1, sizeof(::ads_common::B_Inputs_VSP_st)},
  { 152, -1, sizeof(::ads_common::B_Inputs_VCP_st)},
  { 174, -1, sizeof(::ads_common::VCP_B_StateEst)},
  { 184, -1, sizeof(::ads_common::B_Inputs_VDP_st)},
  { 198, -1, sizeof(::ads_common::B_ConfgDID_st)},
  { 216, -1, sizeof(::ads_common::B_ACCobj01_st)},
  { 233, -1, sizeof(::ads_common::B_ACCobj02_st)},
  { 250, -1, sizeof(::ads_common::B_ACCobj05_st)},
  { 267, -1, sizeof(::ads_common::B_ACCobj06_st)},
  { 284, -1, sizeof(::ads_common::B_ACCStnObj01_st)},
  { 301, -1, sizeof(::ads_common::B_ACCStnObj02_st)},
  { 318, -1, sizeof(::ads_common::B_ACCStnObj05_st)},
  { 335, -1, sizeof(::ads_common::B_ACCStnObj06_st)},
  { 352, -1, sizeof(::ads_common::B_HostL_st)},
  { 366, -1, sizeof(::ads_common::B_HostR_st)},
  { 380, -1, sizeof(::ads_common::B_NextLL_st)},
  { 393, -1, sizeof(::ads_common::B_NextRR_st)},
  { 406, -1, sizeof(::ads_common::B_DngrObj_st)},
  { 423, -1, sizeof(::ads_common::B_DngrStnObj_st)},
  { 440, -1, sizeof(::ads_common::B_DngrPed01_st)},
  { 456, -1, sizeof(::ads_common::B_DngrPed02_st)},
  { 472, -1, sizeof(::ads_common::B_DngrPed03_st)},
  { 488, -1, sizeof(::ads_common::B_DngrPed04_st)},
  { 504, -1, sizeof(::ads_common::B_DngrPed05_st)},
  { 520, -1, sizeof(::ads_common::B_DngrPed06_st)},
  { 536, -1, sizeof(::ads_common::B_DngrPed07_st)},
  { 552, -1, sizeof(::ads_common::B_DngrPed08_st)},
  { 568, -1, sizeof(::ads_common::B_DngrPed09_st)},
  { 584, -1, sizeof(::ads_common::B_DngrPed10_st)},
  { 600, -1, sizeof(::ads_common::B_CenterLine_st)},
  { 610, -1, sizeof(::ads_common::B_LeftRoadEdge_st)},
  { 622, -1, sizeof(::ads_common::B_RightRoadEdge_st)},
  { 634, -1, sizeof(::ads_common::B_LeftBarrier_st)},
  { 646, -1, sizeof(::ads_common::B_RightBarrier_st)},
  { 658, -1, sizeof(::ads_common::B_SppPolyCoeff_st)},
  { 669, -1, sizeof(::ads_common::B_HostRHSP_st)},
  { 683, -1, sizeof(::ads_common::B_HostLHSP_st)},
  { 697, -1, sizeof(::ads_common::B_HostRInd_st)},
  { 711, -1, sizeof(::ads_common::B_HostLInd_st)},
  { 725, -1, sizeof(::ads_common::Point3D_COM)},
  { 733, -1, sizeof(::ads_common::HafRect3D_COM)},
  { 744, -1, sizeof(::ads_common::Point2D_COM)},
  { 751, -1, sizeof(::ads_common::HafTime_COM)},
  { 758, -1, sizeof(::ads_common::HafFusionOut_COM)},
  { 780, -1, sizeof(::ads_common::HafTrajParam)},
  { 789, -1, sizeof(::ads_common::ACCOutputs)},
  { 816, -1, sizeof(::ads_common::ARBOutputs)},
  { 831, -1, sizeof(::ads_common::B1_RdEdgeInfo)},
  { 844, -1, sizeof(::ads_common::B1_BorderLaneData)},
  { 859, -1, sizeof(::ads_common::B1_SelObjData)},
  { 879, -1, sizeof(::ads_common::B1_ObjTrajInfo)},
  { 897, -1, sizeof(::ads_common::B1_ObjPredTraj)},
  { 905, -1, sizeof(::ads_common::B1_ObjPredTrajV2)},
  { 920, -1, sizeof(::ads_common::B_Adptrout_Brake_Command_60_st)},
  { 934, -1, sizeof(::ads_common::B_Adptrout_Throttle_Command_62_st)},
  { 945, -1, sizeof(::ads_common::B_Adptrout_Steering_Command_64_st)},
  { 957, -1, sizeof(::ads_common::B_Adptrout_Gear_Command_66_st)},
  { 965, -1, sizeof(::ads_common::B_Adptrout_TurnSignal_Command_68_st)},
  { 971, -1, sizeof(::ads_common::B_Adptrout_LatCtrl_State_st)},
  { 1001, -1, sizeof(::ads_common::B_Adptrout_LonCtrl_State_st)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B1_LaneLineInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B1_RefLineInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_HafLonTrajParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCObjVldLv2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCObj03_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCObj04_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCStnObj03_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCStnObj04_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCObjVldRaw_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_Inputs_VSP_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_Inputs_VCP_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_VCP_B_StateEst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_Inputs_VDP_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ConfgDID_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCobj01_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCobj02_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCobj05_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCobj06_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCStnObj01_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCStnObj02_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCStnObj05_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_ACCStnObj06_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_HostL_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_HostR_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_NextLL_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_NextRR_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrObj_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrStnObj_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrPed01_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrPed02_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrPed03_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrPed04_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrPed05_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrPed06_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrPed07_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrPed08_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrPed09_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_DngrPed10_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_CenterLine_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_LeftRoadEdge_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_RightRoadEdge_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_LeftBarrier_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_RightBarrier_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_SppPolyCoeff_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_HostRHSP_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_HostLHSP_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_HostRInd_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_HostLInd_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_Point3D_COM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_HafRect3D_COM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_Point2D_COM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_HafTime_COM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_HafFusionOut_COM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_HafTrajParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_ACCOutputs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_ARBOutputs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B1_RdEdgeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B1_BorderLaneData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B1_SelObjData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B1_ObjTrajInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B1_ObjPredTraj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B1_ObjPredTrajV2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_Adptrout_Brake_Command_60_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_Adptrout_Throttle_Command_62_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_Adptrout_Steering_Command_64_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_Adptrout_Gear_Command_66_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_Adptrout_TurnSignal_Command_68_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_Adptrout_LatCtrl_State_st_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_common::_B_Adptrout_LonCtrl_State_st_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ads_com.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 69);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rads_com.proto\022\nads_common\"\202\003\n\017B1_LaneL"
      "ineInfo\022\035\n\025LLI_d_LineLatPosA0_sg\030\001 \001(\002\022\037"
      "\n\027LLI_angR_LineHdAngA1_sg\030\002 \001(\002\022\033\n\023LLI_c"
      "v_LineCrvA2_sg\030\003 \001(\002\022\036\n\026LLI_cvr_LineCrvR"
      "tA3_sg\030\004 \001(\002\022\035\n\025LLI_d_LineRngStart_sg\030\005 "
      "\001(\002\022\033\n\023LLI_d_LineRngEnd_sg\030\006 \001(\002\022>\n\032LLI_"
      "stat_LineQltyCnfd_eLCF\030\007 \001(\0162\032.ads_commo"
      "n.eLCF_LaneCnfdn\022;\n\027LLI_stat_LineColor_e"
      "LCR\030\010 \001(\0162\032.ads_common.eLCR_LaneColor\0229\n"
      "\026LLI_stat_LineType_eLTP\030\t \001(\0162\031.ads_comm"
      "on.eLTP_LaneType\"\235\003\n\016B1_RefLineInfo\022\035\n\025R"
      "LI_d_LineLatPosA0_sg\030\001 \001(\002\022\037\n\027RLI_angR_L"
      "ineHdAngA1_sg\030\002 \001(\002\022\033\n\023RLI_cv_LineCrvA2_"
      "sg\030\003 \001(\002\022\036\n\026RLI_cvr_LineCrvRtA3_sg\030\004 \001(\002"
      "\022\032\n\022RLI_V_SpdLmtVal_sg\030\005 \001(\002\022\035\n\025RLI_d_Li"
      "neRngStart_sg\030\006 \001(\002\022\033\n\023RLI_d_LineRngEnd_"
      "sg\030\007 \001(\002\022>\n\032RLI_stat_LineQltyCnfd_eLCF\030\010"
      " \001(\0162\032.ads_common.eLCF_LaneCnfdn\022;\n\027RLI_"
      "stat_LineColor_eLCR\030\t \001(\0162\032.ads_common.e"
      "LCR_LaneColor\0229\n\026RLI_stat_LineType_eLTP\030"
      "\n \001(\0162\031.ads_common.eLTP_LaneType\"Y\n\017HafL"
      "onTrajParam\022\n\n\002A0\030\001 \001(\002\022\n\n\002A1\030\002 \001(\002\022\n\n\002A"
      "2\030\003 \001(\002\022\n\n\002A3\030\004 \001(\002\022\n\n\002A4\030\005 \001(\002\022\n\n\002A5\030\006 "
      "\001(\002\"\226\003\n\016B_ACCObjVldLv2\022\035\n\025ACC_is_ACC01Vl"
      "dLv2_bl\030\001 \001(\010\022\035\n\025ACC_is_ACC02VldLv2_bl\030\002"
      " \001(\010\022\035\n\025ACC_is_ACC03VldLv2_bl\030\003 \001(\010\022\035\n\025A"
      "CC_is_ACC04VldLv2_bl\030\004 \001(\010\022\035\n\025ACC_is_ACC"
      "05VldLv2_bl\030\005 \001(\010\022\035\n\025ACC_is_ACC06VldLv2_"
      "bl\030\006 \001(\010\022 \n\030ACC_is_ACCStn01VldLv2_bl\030\007 \001"
      "(\010\022 \n\030ACC_is_ACCStn02VldLv2_bl\030\010 \001(\010\022 \n\030"
      "ACC_is_ACCStn03VldLv2_bl\030\t \001(\010\022 \n\030ACC_is"
      "_ACCStn04VldLv2_bl\030\n \001(\010\022 \n\030ACC_is_ACCSt"
      "n05VldLv2_bl\030\013 \001(\010\022 \n\030ACC_is_ACCStn06Vld"
      "Lv2_bl\030\014 \001(\010\"\241\004\n\rB_ACCObj03_st\022\036\n\026DA_IN_"
      "indx_ACC03ID_u32\030\001 \001(\021\022 \n\030DA_IN_v_ACC03L"
      "ongtSpd_sg\030\002 \001(\002\022\036\n\026DA_IN_v_ACC03LatSpd_"
      "sg\030\003 \001(\002\022!\n\031DA_IN_d_ACC03LongtDist_sg\030\004 "
      "\001(\002\022\037\n\027DA_IN_d_ACC03LatDist_sg\030\005 \001(\002\022@\n\032"
      "DA_IN_stat_ACC03Snsr_eCSNR\030\006 \001(\0162\034.ads_c"
      "ommon.eCSNR_ACCObjSnsr\022C\n\031DA_IN_stat_ACC"
      "03Trk_eCTRK\030\007 \001(\0162 .ads_common.eCTRK_ACC"
      "ObjTrackSts\022@\n\032DA_IN_stat_ACC03MvSts_eCM"
      "V\030\010 \001(\0162\034.ads_common.eCMV_ACCObjMvSts\022 \n"
      "\030DA_IN_a_ACC03LongtAcc_sg\030\t \001(\002\022\036\n\026DA_IN"
      "_a_ACC03LatAcc_sg\030\n \001(\002\022@\n\032DA_IN_stat_AC"
      "C03Class_eCLS\030\013 \001(\0162\034.ads_common.eCLS_AC"
      "CObjClass\022\035\n\025DA_IN_d_ACC03Width_sg\030\014 \001(\002"
      "\"\241\004\n\rB_ACCObj04_st\022\036\n\026DA_IN_indx_ACC04ID"
      "_u32\030\001 \001(\021\022 \n\030DA_IN_v_ACC04LongtSpd_sg\030\002"
      " \001(\002\022\036\n\026DA_IN_v_ACC04LatSpd_sg\030\003 \001(\002\022!\n\031"
      "DA_IN_d_ACC04LongtDist_sg\030\004 \001(\002\022\037\n\027DA_IN"
      "_d_ACC04LatDist_sg\030\005 \001(\002\022@\n\032DA_IN_stat_A"
      "CC04Snsr_eCSNR\030\006 \001(\0162\034.ads_common.eCSNR_"
      "ACCObjSnsr\022C\n\031DA_IN_stat_ACC04Trk_eCTRK\030"
      "\007 \001(\0162 .ads_common.eCTRK_ACCObjTrackSts\022"
      "@\n\032DA_IN_stat_ACC04MvSts_eCMV\030\010 \001(\0162\034.ad"
      "s_common.eCMV_ACCObjMvSts\022 \n\030DA_IN_a_ACC"
      "04LongtAcc_sg\030\t \001(\002\022\036\n\026DA_IN_a_ACC04LatA"
      "cc_sg\030\n \001(\002\022@\n\032DA_IN_stat_ACC04Class_eCL"
      "S\030\013 \001(\0162\034.ads_common.eCLS_ACCObjClass\022\035\n"
      "\025DA_IN_d_ACC04Width_sg\030\014 \001(\002\"\306\004\n\020B_ACCSt"
      "nObj03_st\022!\n\031DA_IN_indx_ACCStn03ID_u32\030\001"
      " \001(\021\022#\n\033DA_IN_v_ACCStn03LongtSpd_sg\030\002 \001("
      "\002\022!\n\031DA_IN_v_ACCStn03LatSpd_sg\030\003 \001(\002\022$\n\034"
      "DA_IN_d_ACCStn03LongtDist_sg\030\004 \001(\002\022\"\n\032DA"
      "_IN_d_ACCStn03LatDist_sg\030\005 \001(\002\022C\n\035DA_IN_"
      "stat_ACCStn03Snsr_eCSNR\030\006 \001(\0162\034.ads_comm"
      "on.eCSNR_ACCObjSnsr\022F\n\034DA_IN_stat_ACCStn"
      "03Trk_eCTRK\030\007 \001(\0162 .ads_common.eCTRK_ACC"
      "ObjTrackSts\022C\n\035DA_IN_stat_ACCStn03MvSts_"
      "eCMV\030\010 \001(\0162\034.ads_common.eCMV_ACCObjMvSts"
      "\022#\n\033DA_IN_a_ACCStn03LongtAcc_sg\030\t \001(\002\022!\n"
      "\031DA_IN_a_ACCStn03LatAcc_sg\030\n \001(\002\022A\n\033DA_I"
      "N_stat_ACCStn03Cls_eCLS\030\013 \001(\0162\034.ads_comm"
      "on.eCLS_ACCObjClass\022 \n\030DA_IN_d_ACCStn03W"
      "idth_sg\030\014 \001(\002\"\306\004\n\020B_ACCStnObj04_st\022!\n\031DA"
      "_IN_indx_ACCStn04ID_u32\030\001 \001(\021\022#\n\033DA_IN_v"
      "_ACCStn04LongtSpd_sg\030\002 \001(\002\022!\n\031DA_IN_v_AC"
      "CStn04LatSpd_sg\030\003 \001(\002\022$\n\034DA_IN_d_ACCStn0"
      "4LongtDist_sg\030\004 \001(\002\022\"\n\032DA_IN_d_ACCStn04L"
      "atDist_sg\030\005 \001(\002\022C\n\035DA_IN_stat_ACCStn04Sn"
      "sr_eCSNR\030\006 \001(\0162\034.ads_common.eCSNR_ACCObj"
      "Snsr\022F\n\034DA_IN_stat_ACCStn04Trk_eCTRK\030\007 \001"
      "(\0162 .ads_common.eCTRK_ACCObjTrackSts\022C\n\035"
      "DA_IN_stat_ACCStn04MvSts_eCMV\030\010 \001(\0162\034.ad"
      "s_common.eCMV_ACCObjMvSts\022#\n\033DA_IN_a_ACC"
      "Stn04LongtAcc_sg\030\t \001(\002\022!\n\031DA_IN_a_ACCStn"
      "04LatAcc_sg\030\n \001(\002\022A\n\033DA_IN_stat_ACCStn04"
      "Cls_eCLS\030\013 \001(\0162\034.ads_common.eCLS_ACCObjC"
      "lass\022 \n\030DA_IN_d_ACCStn04Width_sg\030\014 \001(\002\"\306"
      "\003\n\016B_ACCObjVldRaw\022!\n\031DFIn_is_ACC01VldFlg"
      "Raw_bl\030\001 \001(\010\022!\n\031DFIn_is_ACC02VldFlgRaw_b"
      "l\030\002 \001(\010\022!\n\031DFIn_is_ACC03VldFlgRaw_bl\030\003 \001"
      "(\010\022!\n\031DFIn_is_ACC04VldFlgRaw_bl\030\004 \001(\010\022!\n"
      "\031DFIn_is_ACC05VldFlgRaw_bl\030\005 \001(\010\022!\n\031DFIn"
      "_is_ACC06VldFlgRaw_bl\030\006 \001(\010\022$\n\034DFIn_is_A"
      "CCStn01VldFlgRaw_bl\030\007 \001(\010\022$\n\034DFIn_is_ACC"
      "Stn02VldFlgRaw_bl\030\010 \001(\010\022$\n\034DFIn_is_ACCSt"
      "n03VldFlgRaw_bl\030\t \001(\010\022$\n\034DFIn_is_ACCStn0"
      "4VldFlgRaw_bl\030\n \001(\010\022$\n\034DFIn_is_ACCStn05V"
      "ldFlgRaw_bl\030\013 \001(\010\022$\n\034DFIn_is_ACCStn06Vld"
      "FlgRaw_bl\030\014 \001(\010\"\324\001\n\017B_Inputs_VSP_st\022$\n\034D"
      "A_IN_VSP_d_VehParWhlBase_sg\030\001 \001(\002\022%\n\035DA_"
      "IN_VSP_K_VehParStrRatio_sg\030\002 \001(\002\022$\n\034DA_I"
      "N_VSP_k_VehParUStrGrd_sg\030\003 \001(\002\022%\n\035DA_IN_"
      "VSP_d_VehParVehWidth_sg\030\004 \001(\002\022\'\n\037DA_IN_V"
      "SP_d_CamPosOffst2Cent_sg\030\005 \001(\002\"\277\005\n\017B_Inp"
      "uts_VCP_st\022$\n\034DA_IN_VCP_angD_StrgWhlAng_"
      "sg\030\001 \001(\002\022%\n\035DA_IN_VCP_wD_StrgWhlAngGrd_s"
      "g\030\002 \001(\002\022#\n\033DA_IN_VCP_V_VehSpdAvgDrn_sg\030\003"
      " \001(\002\022!\n\031DA_IN_VCP_T_DrvrStrToq_sg\030\004 \001(\002\022"
      "\"\n\032DA_IN_VCP_yr_VehYawRate_sg\030\005 \001(\002\022 \n\030D"
      "A_IN_VCP_a_VSELatAcc_sg\030\006 \001(\002\022&\n\036DA_IN_V"
      "CP_is_strWhlAngValid_bl\030\007 \001(\010\022\"\n\032DA_IN_V"
      "CP_is_YawRtValid_bl\030\010 \001(\010\022#\n\033DA_IN_VCP_i"
      "s_LatAccValid_bl\030\t \001(\010\022#\n\033DA_IN_VCP_is_L"
      "gtAccValid_bl\030\n \001(\010\022\035\n\025DA_IN_VCP_a_LgtAc"
      "c_sg\030\013 \001(\002\022#\n\033DA_IN_VCP_rho_CurvTrjEst_s"
      "g\030\014 \001(\002\022#\n\033DA_IN_VCP_is_EgoVehStatc_bl\030\r"
      " \001(\010\022#\n\033DA_IN_VCP_T_DrvrTorqEsti_sg\030\016 \001("
      "\002\022I\n!DA_IN_VCP_sts_DvrHndsOffDtcn_Ehos\030\017"
      " \001(\0162\036.ads_common.eHOS_HandsOnStates\022(\n "
      "DA_IN_VCP_is_DrvrTorqEstiFail_bl\030\020 \001(\010\0228"
      "\n\024DA_IN_VCP_B_StateEst\030\021 \001(\0132\032.ads_commo"
      "n.VCP_B_StateEst\"\267\001\n\016VCP_B_StateEst\022\"\n\032V"
      "CP_is_RoadBackAngValid_bl\030\001 \001(\010\022\037\n\027VCP_a"
      "ngD_RoadBankAng_sg\030\002 \001(\002\022\036\n\026VCP_v2_VehPa"
      "rSquVch_sg\030\003 \001(\002\022#\n\033VCP_k_VehParStrStabF"
      "actK_sg\030\004 \001(\002\022\033\n\023VCP_kv_UStrGrdKv_sg\030\005 \001"
      "(\002\"\370\002\n\017B_Inputs_VDP_st\022 \n\030DA_IN_VDP_is_L"
      "DircnIO_bl\030\001 \001(\010\022 \n\030DA_IN_VDP_is_RDircnI"
      "O_bl\030\002 \001(\010\022\"\n\032DA_IN_VDP_is_EngRunActv_bl"
      "\030\003 \001(\010\022$\n\034DA_IN_VDP_a_VSELongtAccel_sg\030\004"
      " \001(\002\022(\n DA_IN_VDP_a_EstdVSELongtAccel_sg"
      "\030\005 \001(\002\022>\n\033DA_IN_VDP_sts_EgoVehSpdV_en\030\006 "
      "\001(\0162\031.ads_common.eVLD_ValidSts\022%\n\035DA_IN_"
      "VDPEstdEgoVehSpdIPK_u16\030\007 \001(\021\022!\n\031DA_IN_V"
      "DP_is_VehRolBck_bl\030\010 \001(\010\022#\n\033DA_IN_VDP_v_"
      "EgoAvgVehSpd_sg\030\t \001(\002\"\257\006\n\rB_ConfgDID_st\022"
      "\"\n\032DA_IN_indx_FuncConfDID_u32\030\001 \001(\021\022%\n\035D"
      "A_IN_indx_SubFuncConfDID_u32\030\002 \001(\021\022B\n\035DA"
      "_IN_stat_LDWLDPDftSw_eLKSDS\030\003 \001(\0162\033.ads_"
      "common.eLKSDS_LKSDftSw\022B\n\035DA_IN_stat_TJA"
      "ICADftSw_eTJADS\030\004 \001(\0162\033.ads_common.eTJAD"
      "S_TJADftSw\022J\n DA_IN_stat_LACStvtLvlDftSw"
      "_eLSDS\030\005 \001(\0162 .ads_common.eLSDS_SnstvtLv"
      "lDftSw\022M\n\037DA_IN_stat_AudWrnngDftSw_eAHWD"
      "S\030\006 \001(\0162$.ads_common.eAHWDS_AudHptcWrnng"
      "DftSw\022N\n DA_IN_stat_HptcWrnngDftSw_eAHWD"
      "S\030\007 \001(\0162$.ads_common.eAHWDS_AudHptcWrnng"
      "DftSw\022C\n\034DA_IN_stat_AEBFCWDftSw_eAFDS\030\010 "
      "\001(\0162\035.ads_common.eAFDS_AEBFCWDftSw\022E\n\034DA"
      "_IN_stat_AEBPDftSw_eAEBPDS\030\t \001(\0162\037.ads_c"
      "ommon.eAEBPDS_AEBPedDftSw\022J\n DA_IN_stat_"
      "FCWStvtLvlDftSw_eLSDS\030\n \001(\0162 .ads_common"
      ".eLSDS_SnstvtLvlDftSw\022\?\n\032DA_IN_stat_ELKD"
      "ftSw_eELKDS\030\013 \001(\0162\033.ads_common.eELKDS_EL"
      "KDftSw\022(\n DA_IN_indx_LstIgnCyclFuncSts_u"
      "32\030\014 \001(\021\022\035\n\025DA_IN_indx_reserve_u8\030\r \001(\021\""
      "\241\004\n\rB_ACCobj01_st\022\036\n\026DA_IN_indx_ACC01ID_"
      "u32\030\001 \001(\021\022 \n\030DA_IN_v_ACC01LongtSpd_sg\030\002 "
      "\001(\002\022\036\n\026DA_IN_v_ACC01LatSpd_sg\030\003 \001(\002\022!\n\031D"
      "A_IN_d_ACC01LongtDist_sg\030\004 \001(\002\022\037\n\027DA_IN_"
      "d_ACC01LatDist_sg\030\005 \001(\002\022@\n\032DA_IN_stat_AC"
      "C01Snsr_eCSNR\030\006 \001(\0162\034.ads_common.eCSNR_A"
      "CCObjSnsr\022C\n\031DA_IN_stat_ACC01Trk_eCTRK\030\007"
      " \001(\0162 .ads_common.eCTRK_ACCObjTrackSts\022@"
      "\n\032DA_IN_stat_ACC01MvSts_eCMV\030\010 \001(\0162\034.ads"
      "_common.eCMV_ACCObjMvSts\022 \n\030DA_IN_a_ACC0"
      "1LongtAcc_sg\030\t \001(\002\022\036\n\026DA_IN_a_ACC01LatAc"
      "c_sg\030\n \001(\002\022@\n\032DA_IN_stat_ACC01Class_eCLS"
      "\030\013 \001(\0162\034.ads_common.eCLS_ACCObjClass\022\035\n\025"
      "DA_IN_d_ACC01Width_sg\030\014 \001(\002\"\241\004\n\rB_ACCobj"
      "02_st\022\036\n\026DA_IN_indx_ACC02ID_u32\030\001 \001(\021\022 \n"
      "\030DA_IN_v_ACC02LongtSpd_sg\030\002 \001(\002\022\036\n\026DA_IN"
      "_v_ACC02LatSpd_sg\030\003 \001(\002\022!\n\031DA_IN_d_ACC02"
      "LongtDist_sg\030\004 \001(\002\022\037\n\027DA_IN_d_ACC02LatDi"
      "st_sg\030\005 \001(\002\022@\n\032DA_IN_stat_ACC02Snsr_eCSN"
      "R\030\006 \001(\0162\034.ads_common.eCSNR_ACCObjSnsr\022C\n"
      "\031DA_IN_stat_ACC02Trk_eCTRK\030\007 \001(\0162 .ads_c"
      "ommon.eCTRK_ACCObjTrackSts\022@\n\032DA_IN_stat"
      "_ACC02MvSts_eCMV\030\010 \001(\0162\034.ads_common.eCMV"
      "_ACCObjMvSts\022 \n\030DA_IN_a_ACC02LongtAcc_sg"
      "\030\t \001(\002\022\036\n\026DA_IN_a_ACC02LatAcc_sg\030\n \001(\002\022@"
      "\n\032DA_IN_stat_ACC02Class_eCLS\030\013 \001(\0162\034.ads"
      "_common.eCLS_ACCObjClass\022\035\n\025DA_IN_d_ACC0"
      "2Width_sg\030\014 \001(\002\"\241\004\n\rB_ACCobj05_st\022\036\n\026DA_"
      "IN_indx_ACC05ID_u32\030\001 \001(\021\022 \n\030DA_IN_v_ACC"
      "05LongtSpd_sg\030\002 \001(\002\022\036\n\026DA_IN_v_ACC05LatS"
      "pd_sg\030\003 \001(\002\022!\n\031DA_IN_d_ACC05LongtDist_sg"
      "\030\004 \001(\002\022\037\n\027DA_IN_d_ACC05LatDist_sg\030\005 \001(\002\022"
      "@\n\032DA_IN_stat_ACC05Snsr_eCSNR\030\006 \001(\0162\034.ad"
      "s_common.eCSNR_ACCObjSnsr\022C\n\031DA_IN_stat_"
      "ACC05Trk_eCTRK\030\007 \001(\0162 .ads_common.eCTRK_"
      "ACCObjTrackSts\022@\n\032DA_IN_stat_ACC05MvSts_"
      "eCMV\030\010 \001(\0162\034.ads_common.eCMV_ACCObjMvSts"
      "\022 \n\030DA_IN_a_ACC05LongtAcc_sg\030\t \001(\002\022\036\n\026DA"
      "_IN_a_ACC05LatAcc_sg\030\n \001(\002\022@\n\032DA_IN_stat"
      "_ACC05Class_eCLS\030\013 \001(\0162\034.ads_common.eCLS"
      "_ACCObjClass\022\035\n\025DA_IN_d_ACC05Width_sg\030\014 "
      "\001(\002\"\241\004\n\rB_ACCobj06_st\022\036\n\026DA_IN_indx_ACC0"
      "6ID_u32\030\001 \001(\021\022 \n\030DA_IN_v_ACC06LongtSpd_s"
      "g\030\002 \001(\002\022\036\n\026DA_IN_v_ACC06LatSpd_sg\030\003 \001(\002\022"
      "!\n\031DA_IN_d_ACC06LongtDist_sg\030\004 \001(\002\022\037\n\027DA"
      "_IN_d_ACC06LatDist_sg\030\005 \001(\002\022@\n\032DA_IN_sta"
      "t_ACC06Snsr_eCSNR\030\006 \001(\0162\034.ads_common.eCS"
      "NR_ACCObjSnsr\022C\n\031DA_IN_stat_ACC06Trk_eCT"
      "RK\030\007 \001(\0162 .ads_common.eCTRK_ACCObjTrackS"
      "ts\022@\n\032DA_IN_stat_ACC06MvSts_eCMV\030\010 \001(\0162\034"
      ".ads_common.eCMV_ACCObjMvSts\022 \n\030DA_IN_a_"
      "ACC06LongtAcc_sg\030\t \001(\002\022\036\n\026DA_IN_a_ACC06L"
      "atAcc_sg\030\n \001(\002\022@\n\032DA_IN_stat_ACC06Class_"
      "eCLS\030\013 \001(\0162\034.ads_common.eCLS_ACCObjClass"
      "\022\035\n\025DA_IN_d_ACC06Width_sg\030\014 \001(\002\"\306\004\n\020B_AC"
      "CStnObj01_st\022!\n\031DA_IN_indx_ACCStn01ID_u3"
      "2\030\001 \001(\021\022#\n\033DA_IN_v_ACCStn01LongtSpd_sg\030\002"
      " \001(\002\022!\n\031DA_IN_v_ACCStn01LatSpd_sg\030\003 \001(\002\022"
      "$\n\034DA_IN_d_ACCStn01LongtDist_sg\030\004 \001(\002\022\"\n"
      "\032DA_IN_d_ACCStn01LatDist_sg\030\005 \001(\002\022C\n\035DA_"
      "IN_stat_ACCStn01Snsr_eCSNR\030\006 \001(\0162\034.ads_c"
      "ommon.eCSNR_ACCObjSnsr\022F\n\034DA_IN_stat_ACC"
      "Stn01Trk_eCTRK\030\007 \001(\0162 .ads_common.eCTRK_"
      "ACCObjTrackSts\022C\n\035DA_IN_stat_ACCStn01MvS"
      "ts_eCMV\030\010 \001(\0162\034.ads_common.eCMV_ACCObjMv"
      "Sts\022#\n\033DA_IN_a_ACCStn01LongtAcc_sg\030\t \001(\002"
      "\022!\n\031DA_IN_a_ACCStn01LatAcc_sg\030\n \001(\002\022A\n\033D"
      "A_IN_stat_ACCStn01Cls_eCLS\030\013 \001(\0162\034.ads_c"
      "ommon.eCLS_ACCObjClass\022 \n\030DA_IN_d_ACCStn"
      "01Width_sg\030\014 \001(\002\"\306\004\n\020B_ACCStnObj02_st\022!\n"
      "\031DA_IN_indx_ACCStn02ID_u32\030\001 \001(\021\022#\n\033DA_I"
      "N_v_ACCStn02LongtSpd_sg\030\002 \001(\002\022!\n\031DA_IN_v"
      "_ACCStn02LatSpd_sg\030\003 \001(\002\022$\n\034DA_IN_d_ACCS"
      "tn02LongtDist_sg\030\004 \001(\002\022\"\n\032DA_IN_d_ACCStn"
      "02LatDist_sg\030\005 \001(\002\022C\n\035DA_IN_stat_ACCStn0"
      "2Snsr_eCSNR\030\006 \001(\0162\034.ads_common.eCSNR_ACC"
      "ObjSnsr\022F\n\034DA_IN_stat_ACCStn02Trk_eCTRK\030"
      "\007 \001(\0162 .ads_common.eCTRK_ACCObjTrackSts\022"
      "C\n\035DA_IN_stat_ACCStn02MvSts_eCMV\030\010 \001(\0162\034"
      ".ads_common.eCMV_ACCObjMvSts\022#\n\033DA_IN_a_"
      "ACCStn02LongtAcc_sg\030\t \001(\002\022!\n\031DA_IN_a_ACC"
      "Stn02LatAcc_sg\030\n \001(\002\022A\n\033DA_IN_stat_ACCSt"
      "n02Cls_eCLS\030\013 \001(\0162\034.ads_common.eCLS_ACCO"
      "bjClass\022 \n\030DA_IN_d_ACCStn02Width_sg\030\014 \001("
      "\002\"\306\004\n\020B_ACCStnObj05_st\022!\n\031DA_IN_indx_ACC"
      "Stn05ID_u32\030\001 \001(\021\022#\n\033DA_IN_v_ACCStn05Lon"
      "gtSpd_sg\030\002 \001(\002\022!\n\031DA_IN_v_ACCStn05LatSpd"
      "_sg\030\003 \001(\002\022$\n\034DA_IN_d_ACCStn05LongtDist_s"
      "g\030\004 \001(\002\022\"\n\032DA_IN_d_ACCStn05LatDist_sg\030\005 "
      "\001(\002\022C\n\035DA_IN_stat_ACCStn05Snsr_eCSNR\030\006 \001"
      "(\0162\034.ads_common.eCSNR_ACCObjSnsr\022F\n\034DA_I"
      "N_stat_ACCStn05Trk_eCTRK\030\007 \001(\0162 .ads_com"
      "mon.eCTRK_ACCObjTrackSts\022C\n\035DA_IN_stat_A"
      "CCStn05MvSts_eCMV\030\010 \001(\0162\034.ads_common.eCM"
      "V_ACCObjMvSts\022#\n\033DA_IN_a_ACCStn05LongtAc"
      "c_sg\030\t \001(\002\022!\n\031DA_IN_a_ACCStn05LatAcc_sg\030"
      "\n \001(\002\022A\n\033DA_IN_stat_ACCStn05Cls_eCLS\030\013 \001"
      "(\0162\034.ads_common.eCLS_ACCObjClass\022 \n\030DA_I"
      "N_d_ACCStn05Width_sg\030\014 \001(\002\"\306\004\n\020B_ACCStnO"
      "bj06_st\022!\n\031DA_IN_indx_ACCStn06ID_u32\030\001 \001"
      "(\021\022#\n\033DA_IN_v_ACCStn06LongtSpd_sg\030\002 \001(\002\022"
      "!\n\031DA_IN_v_ACCStn06LatSpd_sg\030\003 \001(\002\022$\n\034DA"
      "_IN_d_ACCStn06LongtDist_sg\030\004 \001(\002\022\"\n\032DA_I"
      "N_d_ACCStn06LatDist_sg\030\005 \001(\002\022C\n\035DA_IN_st"
      "at_ACCStn06Snsr_eCSNR\030\006 \001(\0162\034.ads_common"
      ".eCSNR_ACCObjSnsr\022F\n\034DA_IN_stat_ACCStn06"
      "Trk_eCTRK\030\007 \001(\0162 .ads_common.eCTRK_ACCOb"
      "jTrackSts\022C\n\035DA_IN_stat_ACCStn06MvSts_eC"
      "MV\030\010 \001(\0162\034.ads_common.eCMV_ACCObjMvSts\022#"
      "\n\033DA_IN_a_ACCStn06LongtAcc_sg\030\t \001(\002\022!\n\031D"
      "A_IN_a_ACCStn06LatAcc_sg\030\n \001(\002\022A\n\033DA_IN_"
      "stat_ACCStn06Cls_eCLS\030\013 \001(\0162\034.ads_common"
      ".eCLS_ACCObjClass\022 \n\030DA_IN_d_ACCStn06Wid"
      "th_sg\030\014 \001(\002\"\261\003\n\nB_HostL_st\022 \n\030DA_IN_d_Ho"
      "stLLnePosA0_sg\030\001 \001(\002\022%\n\035DA_IN_angR_HostL"
      "LneHdAngA1_sg\030\002 \001(\002\022#\n\033DA_IN_cv_HostLLne"
      "CrvteA2_sg\030\003 \001(\002\022&\n\036DA_IN_cvr_HostLLneCr"
      "vteRtA3_sg\030\004 \001(\002\022%\n\035DA_IN_is_HostLLneChg"
      "ToLeft_bl\030\005 \001(\010\022\037\n\027DA_IN_d_HostLLneRnge_"
      "sg\030\006 \001(\002\022A\n\035DA_IN_stat_HostLLneCnfdn_eLC"
      "F\030\007 \001(\0162\032.ads_common.eLCF_LaneCnfdn\022A\n\035D"
      "A_IN_stat_HostLLneColor_eLCR\030\010 \001(\0162\032.ads"
      "_common.eLCR_LaneColor\022\?\n\034DA_IN_stat_Hos"
      "tLLneType_eLTP\030\t \001(\0162\031.ads_common.eLTP_L"
      "aneType\"\261\003\n\nB_HostR_st\022 \n\030DA_IN_d_HostRL"
      "nePosA0_sg\030\001 \001(\002\022%\n\035DA_IN_angR_HostRLneH"
      "dAngA1_sg\030\002 \001(\002\022#\n\033DA_IN_cv_HostRLneCrvt"
      "eA2_sg\030\003 \001(\002\022&\n\036DA_IN_cvr_HostRLneCrvteR"
      "tA3_sg\030\004 \001(\002\022%\n\035DA_IN_is_HostRLneChgToRg"
      "ht_bl\030\005 \001(\010\022\037\n\027DA_IN_d_HostRLneRnge_sg\030\006"
      " \001(\002\022A\n\035DA_IN_stat_HostRLneCnfdn_eLCF\030\007 "
      "\001(\0162\032.ads_common.eLCF_LaneCnfdn\022A\n\035DA_IN"
      "_stat_HostRLneColor_eLCR\030\010 \001(\0162\032.ads_com"
      "mon.eLCR_LaneColor\022\?\n\034DA_IN_stat_HostRLn"
      "eType_eLTP\030\t \001(\0162\031.ads_common.eLTP_LaneT"
      "ype\"\223\003\n\013B_NextLL_st\022!\n\031DA_IN_d_NextLLLne"
      "PosA0_sg\030\001 \001(\002\022&\n\036DA_IN_angR_NextLLLneHd"
      "AngA1_sg\030\002 \001(\002\022$\n\034DA_IN_cv_NextLLLneCrvt"
      "eA2_sg\030\003 \001(\002\022\'\n\037DA_IN_cvr_NextLLLneCrvte"
      "RtA3_sg\030\004 \001(\002\022 \n\030DA_IN_d_NextLLLneRnge_s"
      "g\030\005 \001(\002\022B\n\036DA_IN_stat_NextLLLneCnfdn_eLC"
      "F\030\006 \001(\0162\032.ads_common.eLCF_LaneCnfdn\022B\n\036D"
      "A_IN_stat_NextLLLneColor_eLCR\030\007 \001(\0162\032.ad"
      "s_common.eLCR_LaneColor\022@\n\035DA_IN_stat_Ne"
      "xtLLLneType_eLTP\030\010 \001(\0162\031.ads_common.eLTP"
      "_LaneType\"\223\003\n\013B_NextRR_st\022!\n\031DA_IN_d_Nex"
      "tRRLnePosA0_sg\030\001 \001(\002\022&\n\036DA_IN_angR_NextR"
      "RLneHdAngA1_sg\030\002 \001(\002\022$\n\034DA_IN_cv_NextRRL"
      "neCrvteA2_sg\030\003 \001(\002\022\'\n\037DA_IN_cvr_NextRRLn"
      "eCrvteRtA3_sg\030\004 \001(\002\022 \n\030DA_IN_d_NextRRLne"
      "Rnge_sg\030\005 \001(\002\022B\n\036DA_IN_stat_NextRRLneCnf"
      "dn_eLCF\030\006 \001(\0162\032.ads_common.eLCF_LaneCnfd"
      "n\022B\n\036DA_IN_stat_NextRRLneColor_eLCR\030\007 \001("
      "\0162\032.ads_common.eLCR_LaneColor\022@\n\035DA_IN_s"
      "tat_NextRRLneType_eLTP\030\010 \001(\0162\031.ads_commo"
      "n.eLTP_LaneType\"\276\004\n\014B_DngrObj_st\022 \n\030DA_I"
      "N_indx_DngrObjID_u32\030\001 \001(\021\022\"\n\032DA_IN_v_Dn"
      "grObjLongtSpd_sg\030\002 \001(\002\022 \n\030DA_IN_v_DngrOb"
      "jLatSpd_sg\030\003 \001(\002\022#\n\033DA_IN_d_DngrObjLongt"
      "Dist_sg\030\004 \001(\002\022!\n\031DA_IN_d_DngrObjLatDist_"
      "sg\030\005 \001(\002\022C\n\034DA_IN_stat_DngrObjSnsr_eDSNR"
      "\030\006 \001(\0162\035.ads_common.eDSNR_DngrObjSnsr\022F\n"
      "\033DA_IN_stat_DngrObjTrk_eDTRK\030\007 \001(\0162!.ads"
      "_common.eDTRK_DngrObjTrackSts\022C\n\034DA_IN_s"
      "tat_DngrObjMvSts_eDMV\030\010 \001(\0162\035.ads_common"
      ".eDMV_DngrObjMvSts\022\"\n\032DA_IN_a_DngrObjLon"
      "gtAcc_sg\030\t \001(\002\022 \n\030DA_IN_a_DngrObjLatAcc_"
      "sg\030\n \001(\002\022E\n\035DA_IN_stat_DngrObjClass_eDCL"
      "S\030\013 \001(\0162\036.ads_common.eDCLS_DngrObjClass\022"
      "\037\n\027DA_IN_d_DngrObjWidth_sg\030\014 \001(\002\"\345\004\n\017B_D"
      "ngrStnObj_st\022#\n\033DA_IN_indx_DngrStnObjID_"
      "u32\030\001 \001(\021\022%\n\035DA_IN_v_DngrStnObjLongtSpd_"
      "sg\030\002 \001(\002\022#\n\033DA_IN_v_DngrStnObjLatSpd_sg\030"
      "\003 \001(\002\022&\n\036DA_IN_d_DngrStnObjLongtDist_sg\030"
      "\004 \001(\002\022$\n\034DA_IN_d_DngrStnObjLatDist_sg\030\005 "
      "\001(\002\022F\n\037DA_IN_stat_DngrStnObjSnsr_eDSNR\030\006"
      " \001(\0162\035.ads_common.eDSNR_DngrObjSnsr\022I\n\036D"
      "A_IN_stat_DngrStnObjTrk_eDTRK\030\007 \001(\0162!.ad"
      "s_common.eDTRK_DngrObjTrackSts\022F\n\037DA_IN_"
      "stat_DngrStnObjMvSts_eDMV\030\010 \001(\0162\035.ads_co"
      "mmon.eDMV_DngrObjMvSts\022%\n\035DA_IN_a_DngrSt"
      "nObjLongtAcc_sg\030\t \001(\002\022#\n\033DA_IN_a_DngrStn"
      "ObjLatAcc_sg\030\n \001(\002\022H\n DA_IN_stat_DngrStn"
      "ObjClass_eDCLS\030\013 \001(\0162\036.ads_common.eDCLS_"
      "DngrObjClass\022\"\n\032DA_IN_d_DngrStnObjWidth_"
      "sg\030\014 \001(\002\"\217\004\n\016B_DngrPed01_st\022%\n\035DA_IN_d_D"
      "ngrPed01LongtDist_sg\030\001 \001(\002\022#\n\033DA_IN_d_Dn"
      "grPed01LatDist_sg\030\002 \001(\002\022$\n\034DA_IN_v_DngrP"
      "ed01LongtSpd_sg\030\003 \001(\002\022$\n\034DA_IN_a_DngrPed"
      "01LongtAcc_sg\030\004 \001(\002\022\"\n\032DA_IN_v_DngrPed01"
      "LatSpd_sg\030\005 \001(\002\022\"\n\032DA_IN_a_DngrPed01LatA"
      "cc_sg\030\006 \001(\002\022\"\n\032DA_IN_indx_DngrPed01ID_u3"
      "2\030\007 \001(\021\022#\n\033DA_IN_indx_DngrPed01Age_u16\030\010"
      " \001(\021\022C\n\035DA_IN_stat_DngrPed01Sts_ePTRK\030\t "
      "\001(\0162\034.ads_common.ePTRK_DngrPedSts\022G\n\037DA_"
      "IN_stat_DngrPed01Class_ePCLS\030\n \001(\0162\036.ads"
      "_common.ePCLS_DngrPedClass\022F\n\035DA_IN_stat"
      "_DngrPed01Src_ePSNR\030\013 \001(\0162\037.ads_common.e"
      "PSNR_DngrPedFusSrc\"\217\004\n\016B_DngrPed02_st\022%\n"
      "\035DA_IN_d_DngrPed02LongtDist_sg\030\001 \001(\002\022#\n\033"
      "DA_IN_d_DngrPed02LatDist_sg\030\002 \001(\002\022$\n\034DA_"
      "IN_v_DngrPed02LongtSpd_sg\030\003 \001(\002\022$\n\034DA_IN"
      "_a_DngrPed02LongtAcc_sg\030\004 \001(\002\022\"\n\032DA_IN_v"
      "_DngrPed02LatSpd_sg\030\005 \001(\002\022\"\n\032DA_IN_a_Dng"
      "rPed02LatAcc_sg\030\006 \001(\002\022\"\n\032DA_IN_indx_Dngr"
      "Ped02ID_u32\030\007 \001(\021\022#\n\033DA_IN_indx_DngrPed0"
      "2Age_u16\030\010 \001(\021\022C\n\035DA_IN_stat_DngrPed02St"
      "s_ePTRK\030\t \001(\0162\034.ads_common.ePTRK_DngrPed"
      "Sts\022G\n\037DA_IN_stat_DngrPed02Class_ePCLS\030\n"
      " \001(\0162\036.ads_common.ePCLS_DngrPedClass\022F\n\035"
      "DA_IN_stat_DngrPed02Src_ePSNR\030\013 \001(\0162\037.ad"
      "s_common.ePSNR_DngrPedFusSrc\"\217\004\n\016B_DngrP"
      "ed03_st\022%\n\035DA_IN_d_DngrPed03LongtDist_sg"
      "\030\001 \001(\002\022#\n\033DA_IN_d_DngrPed03LatDist_sg\030\002 "
      "\001(\002\022$\n\034DA_IN_v_DngrPed03LongtSpd_sg\030\003 \001("
      "\002\022$\n\034DA_IN_a_DngrPed03LongtAcc_sg\030\004 \001(\002\022"
      "\"\n\032DA_IN_v_DngrPed03LatSpd_sg\030\005 \001(\002\022\"\n\032D"
      "A_IN_a_DngrPed03LatAcc_sg\030\006 \001(\002\022\"\n\032DA_IN"
      "_indx_DngrPed03ID_u32\030\007 \001(\021\022#\n\033DA_IN_ind"
      "x_DngrPed03Age_u16\030\010 \001(\021\022C\n\035DA_IN_stat_D"
      "ngrPed03Sts_ePTRK\030\t \001(\0162\034.ads_common.ePT"
      "RK_DngrPedSts\022G\n\037DA_IN_stat_DngrPed03Cla"
      "ss_ePCLS\030\n \001(\0162\036.ads_common.ePCLS_DngrPe"
      "dClass\022F\n\035DA_IN_stat_DngrPed03Src_ePSNR\030"
      "\013 \001(\0162\037.ads_common.ePSNR_DngrPedFusSrc\"\217"
      "\004\n\016B_DngrPed04_st\022%\n\035DA_IN_d_DngrPed04Lo"
      "ngtDist_sg\030\001 \001(\002\022#\n\033DA_IN_d_DngrPed04Lat"
      "Dist_sg\030\002 \001(\002\022$\n\034DA_IN_v_DngrPed04LongtS"
      "pd_sg\030\003 \001(\002\022$\n\034DA_IN_a_DngrPed04LongtAcc"
      "_sg\030\004 \001(\002\022\"\n\032DA_IN_v_DngrPed04LatSpd_sg\030"
      "\005 \001(\002\022\"\n\032DA_IN_a_DngrPed04LatAcc_sg\030\006 \001("
      "\002\022\"\n\032DA_IN_indx_DngrPed04ID_u32\030\007 \001(\021\022#\n"
      "\033DA_IN_indx_DngrPed04Age_u16\030\010 \001(\021\022C\n\035DA"
      "_IN_stat_DngrPed04Sts_ePTRK\030\t \001(\0162\034.ads_"
      "common.ePTRK_DngrPedSts\022G\n\037DA_IN_stat_Dn"
      "grPed04Class_ePCLS\030\n \001(\0162\036.ads_common.eP"
      "CLS_DngrPedClass\022F\n\035DA_IN_stat_DngrPed04"
      "Src_ePSNR\030\013 \001(\0162\037.ads_common.ePSNR_DngrP"
      "edFusSrc\"\217\004\n\016B_DngrPed05_st\022%\n\035DA_IN_d_D"
      "ngrPed05LongtDist_sg\030\001 \001(\002\022#\n\033DA_IN_d_Dn"
      "grPed05LatDist_sg\030\002 \001(\002\022$\n\034DA_IN_v_DngrP"
      "ed05LongtSpd_sg\030\003 \001(\002\022$\n\034DA_IN_a_DngrPed"
      "05LongtAcc_sg\030\004 \001(\002\022\"\n\032DA_IN_v_DngrPed05"
      "LatSpd_sg\030\005 \001(\002\022\"\n\032DA_IN_a_DngrPed05LatA"
      "cc_sg\030\006 \001(\002\022\"\n\032DA_IN_indx_DngrPed05ID_u3"
      "2\030\007 \001(\021\022#\n\033DA_IN_indx_DngrPed05Age_u16\030\010"
      " \001(\021\022C\n\035DA_IN_stat_DngrPed05Sts_ePTRK\030\t "
      "\001(\0162\034.ads_common.ePTRK_DngrPedSts\022G\n\037DA_"
      "IN_stat_DngrPed05Class_ePCLS\030\n \001(\0162\036.ads"
      "_common.ePCLS_DngrPedClass\022F\n\035DA_IN_stat"
      "_DngrPed05Src_ePSNR\030\013 \001(\0162\037.ads_common.e"
      "PSNR_DngrPedFusSrc\"\217\004\n\016B_DngrPed06_st\022%\n"
      "\035DA_IN_d_DngrPed06LongtDist_sg\030\001 \001(\002\022#\n\033"
      "DA_IN_d_DngrPed06LatDist_sg\030\002 \001(\002\022$\n\034DA_"
      "IN_v_DngrPed06LongtSpd_sg\030\003 \001(\002\022$\n\034DA_IN"
      "_a_DngrPed06LongtAcc_sg\030\004 \001(\002\022\"\n\032DA_IN_v"
      "_DngrPed06LatSpd_sg\030\005 \001(\002\022\"\n\032DA_IN_a_Dng"
      "rPed06LatAcc_sg\030\006 \001(\002\022\"\n\032DA_IN_indx_Dngr"
      "Ped06ID_u32\030\007 \001(\021\022#\n\033DA_IN_indx_DngrPed0"
      "6Age_u16\030\010 \001(\021\022C\n\035DA_IN_stat_DngrPed06St"
      "s_ePTRK\030\t \001(\0162\034.ads_common.ePTRK_DngrPed"
      "Sts\022G\n\037DA_IN_stat_DngrPed06Class_ePCLS\030\n"
      " \001(\0162\036.ads_common.ePCLS_DngrPedClass\022F\n\035"
      "DA_IN_stat_DngrPed06Src_ePSNR\030\013 \001(\0162\037.ad"
      "s_common.ePSNR_DngrPedFusSrc\"\217\004\n\016B_DngrP"
      "ed07_st\022%\n\035DA_IN_d_DngrPed07LongtDist_sg"
      "\030\001 \001(\002\022#\n\033DA_IN_d_DngrPed07LatDist_sg\030\002 "
      "\001(\002\022$\n\034DA_IN_v_DngrPed07LongtSpd_sg\030\003 \001("
      "\002\022$\n\034DA_IN_a_DngrPed07LongtAcc_sg\030\004 \001(\002\022"
      "\"\n\032DA_IN_v_DngrPed07LatSpd_sg\030\005 \001(\002\022\"\n\032D"
      "A_IN_a_DngrPed07LatAcc_sg\030\006 \001(\002\022\"\n\032DA_IN"
      "_indx_DngrPed07ID_u32\030\007 \001(\021\022#\n\033DA_IN_ind"
      "x_DngrPed07Age_u16\030\010 \001(\021\022C\n\035DA_IN_stat_D"
      "ngrPed07Sts_ePTRK\030\t \001(\0162\034.ads_common.ePT"
      "RK_DngrPedSts\022G\n\037DA_IN_stat_DngrPed07Cla"
      "ss_ePCLS\030\n \001(\0162\036.ads_common.ePCLS_DngrPe"
      "dClass\022F\n\035DA_IN_stat_DngrPed07Src_ePSNR\030"
      "\013 \001(\0162\037.ads_common.ePSNR_DngrPedFusSrc\"\217"
      "\004\n\016B_DngrPed08_st\022%\n\035DA_IN_d_DngrPed08Lo"
      "ngtDist_sg\030\001 \001(\002\022#\n\033DA_IN_d_DngrPed08Lat"
      "Dist_sg\030\002 \001(\002\022$\n\034DA_IN_v_DngrPed08LongtS"
      "pd_sg\030\003 \001(\002\022$\n\034DA_IN_a_DngrPed08LongtAcc"
      "_sg\030\004 \001(\002\022\"\n\032DA_IN_v_DngrPed08LatSpd_sg\030"
      "\005 \001(\002\022\"\n\032DA_IN_a_DngrPed08LatAcc_sg\030\006 \001("
      "\002\022\"\n\032DA_IN_indx_DngrPed08ID_u32\030\007 \001(\021\022#\n"
      "\033DA_IN_indx_DngrPed08Age_u16\030\010 \001(\021\022C\n\035DA"
      "_IN_stat_DngrPed08Sts_ePTRK\030\t \001(\0162\034.ads_"
      "common.ePTRK_DngrPedSts\022G\n\037DA_IN_stat_Dn"
      "grPed08Class_ePCLS\030\n \001(\0162\036.ads_common.eP"
      "CLS_DngrPedClass\022F\n\035DA_IN_stat_DngrPed08"
      "Src_ePSNR\030\013 \001(\0162\037.ads_common.ePSNR_DngrP"
      "edFusSrc\"\217\004\n\016B_DngrPed09_st\022%\n\035DA_IN_d_D"
      "ngrPed09LongtDist_sg\030\001 \001(\002\022#\n\033DA_IN_d_Dn"
      "grPed09LatDist_sg\030\002 \001(\002\022$\n\034DA_IN_v_DngrP"
      "ed09LongtSpd_sg\030\003 \001(\002\022$\n\034DA_IN_a_DngrPed"
      "09LongtAcc_sg\030\004 \001(\002\022\"\n\032DA_IN_v_DngrPed09"
      "LatSpd_sg\030\005 \001(\002\022\"\n\032DA_IN_a_DngrPed09LatA"
      "cc_sg\030\006 \001(\002\022\"\n\032DA_IN_indx_DngrPed09ID_u3"
      "2\030\007 \001(\021\022#\n\033DA_IN_indx_DngrPed09Age_u16\030\010"
      " \001(\021\022C\n\035DA_IN_stat_DngrPed09Sts_ePTRK\030\t "
      "\001(\0162\034.ads_common.ePTRK_DngrPedSts\022G\n\037DA_"
      "IN_stat_DngrPed09Class_ePCLS\030\n \001(\0162\036.ads"
      "_common.ePCLS_DngrPedClass\022F\n\035DA_IN_stat"
      "_DngrPed09Src_ePSNR\030\013 \001(\0162\037.ads_common.e"
      "PSNR_DngrPedFusSrc\"\217\004\n\016B_DngrPed10_st\022%\n"
      "\035DA_IN_d_DngrPed10LongtDist_sg\030\001 \001(\002\022#\n\033"
      "DA_IN_d_DngrPed10LatDist_sg\030\002 \001(\002\022$\n\034DA_"
      "IN_v_DngrPed10LongtSpd_sg\030\003 \001(\002\022$\n\034DA_IN"
      "_a_DngrPed10LongtAcc_sg\030\004 \001(\002\022\"\n\032DA_IN_v"
      "_DngrPed10LatSpd_sg\030\005 \001(\002\022\"\n\032DA_IN_a_Dng"
      "rPed10LatAcc_sg\030\006 \001(\002\022\"\n\032DA_IN_indx_Dngr"
      "Ped10ID_u32\030\007 \001(\021\022#\n\033DA_IN_indx_DngrPed1"
      "0Age_u16\030\010 \001(\021\022C\n\035DA_IN_stat_DngrPed10St"
      "s_ePTRK\030\t \001(\0162\034.ads_common.ePTRK_DngrPed"
      "Sts\022G\n\037DA_IN_stat_DngrPed10Class_ePCLS\030\n"
      " \001(\0162\036.ads_common.ePCLS_DngrPedClass\022F\n\035"
      "DA_IN_stat_DngrPed10Src_ePSNR\030\013 \001(\0162\037.ad"
      "s_common.ePSNR_DngrPedFusSrc\"\345\001\n\017B_Cente"
      "rLine_st\022#\n\033DA_IN_d_CntrLnPosOffstA0_sg\030"
      "\001 \001(\002\022#\n\033DA_IN_angR_CntrLnHdAngA1_sg\030\002 \001"
      "(\002\022 \n\030DA_IN_cv_CntrLnCurvA2_sg\030\003 \001(\002\022\"\n\032"
      "DA_IN_cvr_CntrLndCurvA3_sg\030\004 \001(\002\022B\n\036DA_I"
      "N_stat_CntrLnMrkCnfdn_eLCF\030\005 \001(\0162\032.ads_c"
      "ommon.eLCF_LaneCnfdn\"\322\002\n\021B_LeftRoadEdge_"
      "st\022 \n\030DA_IN_d_LftRoadEdgeA0_sg\030\001 \001(\002\022#\n\033"
      "DA_IN_angR_LftRoadEdgeA1_sg\030\002 \001(\002\022!\n\031DA_"
      "IN_cv_LftRoadEdgeA2_sg\030\003 \001(\002\022\"\n\032DA_IN_cv"
      "r_LftRoadEdgeA3_sg\030\004 \001(\002\022%\n\035DA_IN_d_LftR"
      "oadEdgeRangEnd_sg\030\005 \001(\002\022D\n DA_IN_stat_Lf"
      "tRoadEdgeCnfdn_eLCF\030\006 \001(\0162\032.ads_common.e"
      "LCF_LaneCnfdn\022B\n\036DA_IN_stat_LftLneMrkCol"
      "or_eLCR\030\007 \001(\0162\032.ads_common.eLCR_LaneColo"
      "r\"\332\002\n\022B_RightRoadEdge_st\022!\n\031DA_IN_d_Rght"
      "RoadEdgeA0_sg\030\001 \001(\002\022$\n\034DA_IN_angR_RghtRo"
      "adEdgeA1_sg\030\002 \001(\002\022\"\n\032DA_IN_cv_RghtRoadEd"
      "geA2_sg\030\003 \001(\002\022#\n\033DA_IN_cvr_RghtRoadEdgeA"
      "3_sg\030\004 \001(\002\022&\n\036DA_IN_d_RghtRoadEdgeRangEn"
      "d_sg\030\005 \001(\002\022E\n!DA_IN_stat_RghtRoadEdgeCnf"
      "dn_eLCF\030\006 \001(\0162\032.ads_common.eLCF_LaneCnfd"
      "n\022C\n\037DA_IN_stat_RghtLneMrkColor_eLCR\030\007 \001"
      "(\0162\032.ads_common.eLCR_LaneColor\"\257\002\n\020B_Lef"
      "tBarrier_st\022\037\n\027DA_IN_d_LftBarrierA0_sg\030\001"
      " \001(\002\022\"\n\032DA_IN_angR_LftBarrierA1_sg\030\002 \001(\002"
      "\022 \n\030DA_IN_cv_LftBarrierA2_sg\030\003 \001(\002\022!\n\031DA"
      "_IN_cvr_LftBarrierA3_sg\030\004 \001(\002\022$\n\034DA_IN_d"
      "_LftBarrierRangEnd_sg\030\005 \001(\002\022&\n\036DA_IN_ind"
      "x_LftBarrierStatus_u8\030\006 \001(\021\022C\n\037DA_IN_sta"
      "t_LftBarrierCnfdn_eLCF\030\007 \001(\0162\032.ads_commo"
      "n.eLCF_LaneCnfdn\"\267\002\n\021B_RightBarrier_st\022 "
      "\n\030DA_IN_d_RghtBarrierA0_sg\030\001 \001(\002\022#\n\033DA_I"
      "N_angR_RghtBarrierA1_sg\030\002 \001(\002\022!\n\031DA_IN_c"
      "v_RghtBarrierA2_sg\030\003 \001(\002\022\"\n\032DA_IN_cvr_Rg"
      "htBarrierA3_sg\030\004 \001(\002\022%\n\035DA_IN_d_RghtBarr"
      "ierRangEnd_sg\030\005 \001(\002\022\'\n\037DA_IN_indx_RghtBa"
      "rrierStatus_u8\030\006 \001(\021\022D\n DA_IN_stat_RghtB"
      "arrierCnfdn_eLCF\030\007 \001(\0162\032.ads_common.eLCF"
      "_LaneCnfdn\"\216\002\n\021B_SppPolyCoeff_st\022 \n\030DA_I"
      "N_d_SppPolyCoefA0_sg\030\001 \001(\002\022#\n\033DA_IN_angR"
      "_SppPolyCoefA1_sg\030\002 \001(\002\022!\n\031DA_IN_cv_SppP"
      "olyCoefA2_sg\030\003 \001(\002\022\"\n\032DA_IN_cvr_SppPolyC"
      "oefA3_sg\030\004 \001(\002\022D\n DA_IN_stat_SppPolyCoef"
      "Cnfdn_eLCF\030\005 \001(\0162\032.ads_common.eLCF_LaneC"
      "nfdn\022%\n\035DA_IN_indx_SppPolyCoefType_u8\030\006 "
      "\001(\021\"\264\003\n\rB_HostRHSP_st\022 \n\030DA_IN_d_HostRHS"
      "PPosA0_sg\030\001 \001(\002\022%\n\035DA_IN_angR_HostRHSPHd"
      "AngA1_sg\030\002 \001(\002\022#\n\033DA_IN_cv_HostRHSPCrvte"
      "A2_sg\030\003 \001(\002\022&\n\036DA_IN_cvr_HostRHSPCrvteRt"
      "A3_sg\030\004 \001(\002\022%\n\035DA_IN_is_HostRHSPChgToRgh"
      "t_bl\030\005 \001(\010\022\037\n\027DA_IN_d_HostRHSPRnge_sg\030\006 "
      "\001(\002\022A\n\035DA_IN_stat_HostRHSPCnfdn_eLCF\030\007 \001"
      "(\0162\032.ads_common.eLCF_LaneCnfdn\022A\n\035DA_IN_"
      "stat_HostRHSPColor_eLCR\030\010 \001(\0162\032.ads_comm"
      "on.eLCR_LaneColor\022\?\n\034DA_IN_stat_HostRHSP"
      "Type_eLTP\030\t \001(\0162\031.ads_common.eLTP_LaneTy"
      "pe\"\264\003\n\rB_HostLHSP_st\022 \n\030DA_IN_d_HostLHSP"
      "PosA0_sg\030\001 \001(\002\022%\n\035DA_IN_angR_HostLHSPHdA"
      "ngA1_sg\030\002 \001(\002\022#\n\033DA_IN_cv_HostLHSPCrvteA"
      "2_sg\030\003 \001(\002\022&\n\036DA_IN_cvr_HostLHSPCrvteRtA"
      "3_sg\030\004 \001(\002\022%\n\035DA_IN_is_HostLHSPChgToLeft"
      "_bl\030\005 \001(\010\022\037\n\027DA_IN_d_HostLHSPRnge_sg\030\006 \001"
      "(\002\022A\n\035DA_IN_stat_HostLHSPCnfdn_eLCF\030\007 \001("
      "\0162\032.ads_common.eLCF_LaneCnfdn\022A\n\035DA_IN_s"
      "tat_HostLHSPColor_eLCR\030\010 \001(\0162\032.ads_commo"
      "n.eLCR_LaneColor\022\?\n\034DA_IN_stat_HostLHSPT"
      "ype_eLTP\030\t \001(\0162\031.ads_common.eLTP_LaneTyp"
      "e\"\264\003\n\rB_HostRInd_st\022 \n\030DA_IN_d_HostRIndP"
      "osA0_sg\030\001 \001(\002\022%\n\035DA_IN_angR_HostRIndHdAn"
      "gA1_sg\030\002 \001(\002\022#\n\033DA_IN_cv_HostRIndCrvteA2"
      "_sg\030\003 \001(\002\022&\n\036DA_IN_cvr_HostRIndCrvteRtA3"
      "_sg\030\004 \001(\002\022%\n\035DA_IN_is_HostRIndChgToRght_"
      "bl\030\005 \001(\010\022\037\n\027DA_IN_d_HostRIndRnge_sg\030\006 \001("
      "\002\022A\n\035DA_IN_stat_HostRIndCnfdn_eLCF\030\007 \001(\016"
      "2\032.ads_common.eLCF_LaneCnfdn\022A\n\035DA_IN_st"
      "at_HostRIndColor_eLCR\030\010 \001(\0162\032.ads_common"
      ".eLCR_LaneColor\022\?\n\034DA_IN_stat_HostRIndTy"
      "pe_eLTP\030\t \001(\0162\031.ads_common.eLTP_LaneType"
      "\"\264\003\n\rB_HostLInd_st\022 \n\030DA_IN_d_HostLIndPo"
      "sA0_sg\030\001 \001(\002\022%\n\035DA_IN_angR_HostLIndHdAng"
      "A1_sg\030\002 \001(\002\022#\n\033DA_IN_cv_HostLIndCrvteA2_"
      "sg\030\003 \001(\002\022&\n\036DA_IN_cvr_HostLIndCrvteRtA3_"
      "sg\030\004 \001(\002\022%\n\035DA_IN_is_HostLIndChgToLeft_b"
      "l\030\005 \001(\010\022\037\n\027DA_IN_d_HostLIndRnge_sg\030\006 \001(\002"
      "\022A\n\035DA_IN_stat_HostLIndCnfdn_eLCF\030\007 \001(\0162"
      "\032.ads_common.eLCF_LaneCnfdn\022A\n\035DA_IN_sta"
      "t_HostLIndColor_eLCR\030\010 \001(\0162\032.ads_common."
      "eLCR_LaneColor\022\?\n\034DA_IN_stat_HostLIndTyp"
      "e_eLTP\030\t \001(\0162\031.ads_common.eLTP_LaneType\""
      ".\n\013Point3D_COM\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001"
      "z\030\003 \001(\002\"\356\001\n\rHafRect3D_COM\022\'\n\006Center\030\001 \001("
      "\0132\027.ads_common.Point3D_COM\022-\n\014CenterStdD"
      "ev\030\002 \001(\0132\027.ads_common.Point3D_COM\022(\n\007Siz"
      "eLWH\030\003 \001(\0132\027.ads_common.Point3D_COM\022+\n\nS"
      "izeStdDev\030\004 \001(\0132\027.ads_common.Point3D_COM"
      "\022\023\n\013Orientation\030\005 \001(\002\022\031\n\021OrientationStdD"
      "ev\030\006 \001(\002\"#\n\013Point2D_COM\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030"
      "\002 \001(\002\"(\n\013HafTime_COM\022\013\n\003sec\030\001 \001(\002\022\014\n\004nse"
      "c\030\002 \001(\002\"\241\004\n\020HafFusionOut_COM\022\020\n\010ObjectID"
      "\030\001 \001(\021\022\r\n\005Class\030\002 \001(\021\022\034\n\024DetectSensor_Cu"
      "rrent\030\003 \001(\021\022\034\n\024DetectSensor_History\030\004 \001("
      "\021\022\031\n\021MaintenanceStatus\030\005 \001(\021\022\027\n\017ClassCon"
      "fidence\030\006 \001(\021\022\034\n\024ExistenceProbability\030\007 "
      "\001(\021\022+\n\010RectInfo\030\010 \001(\0132\031.ads_common.HafRe"
      "ct3D_COM\022,\n\013VelocityAbs\030\t \001(\0132\027.ads_comm"
      "on.Point2D_COM\0220\n\017AccelerationAbs\030\n \001(\0132"
      "\027.ads_common.Point2D_COM\022-\n\014TimeCreation"
      "\030\013 \001(\0132\027.ads_common.HafTime_COM\0220\n\017LastU"
      "pdatedTime\030\014 \001(\0132\027.ads_common.HafTime_CO"
      "M\022\025\n\rMotionPattern\030\r \001(\021\022\034\n\024MotionPatter"
      "nHistory\030\016 \001(\021\022\024\n\014BrakeLightSt\030\017 \001(\021\022\023\n\013"
      "TurnLightSt\030\020 \001(\021\022\020\n\010NearSide\030\021 \001(\021\">\n\014H"
      "afTrajParam\022\n\n\002A0\030\001 \001(\002\022\n\n\002A1\030\002 \001(\002\022\n\n\002A"
      "2\030\003 \001(\002\022\n\n\002A3\030\004 \001(\002\"\325\005\n\nACCOutputs\022\037\n\027AC"
      "C_v_CSCMaxCrvteSpd_sg\030\001 \001(\002\022\035\n\025ACC_is_CS"
      "CCtrlActv_bl\030\002 \001(\010\022\031\n\021ACC_a_CSCAccel_sg\030"
      "\003 \001(\002\022!\n\031ACC_is_CSCActvRtLmtOff_bl\030\004 \001(\010"
      "\022$\n\034ACC_is_CSCActvRtLmtMstLgt_bl\030\005 \001(\010\022\031"
      "\n\021ACC_a_FSCAccel_sg\030\006 \001(\002\022\031\n\021ACC_a_FTCAc"
      "cel_sg\030\007 \001(\002\022!\n\031ACC_d_FTCLongtDsrdDist_s"
      "g\030\010 \001(\002\022\031\n\021ACC_is_FTCStdy_bl\030\t \001(\010\022\036\n\026AC"
      "C_is_FTCSlideFlag_bl\030\n \001(\010\022#\n\033ACC_d_FTCD"
      "srdDistLvl1HMI_sg\030\013 \001(\002\022#\n\033ACC_d_FTCDsrd"
      "DistLvl2HMI_sg\030\014 \001(\002\022#\n\033ACC_d_FTCDsrdDis"
      "tLvl3HMI_sg\030\r \001(\002\022\034\n\024ACC_a_FTCAccelDyn_s"
      "g\030\016 \001(\002\022 \n\030ACC_is_FTCDnSteepHill_bl\030\017 \001("
      "\010\022 \n\030ACC_is_FTCUpSteepHill_bl\030\020 \001(\010\022\033\n\023A"
      "CC_d_DistMinGap_sg\030\021 \001(\002\022\031\n\021ACC_is_CBCAc"
      "tv_bl\030\022 \001(\010\022\034\n\024ACC_a_MALTgtAccel_sg\030\023 \001("
      "\002\022\037\n\027ACC_a_MALTgtAccelRAW_sg\030\024 \001(\002\022!\n\031AC"
      "C_is_MALCSCAccelUsed_bl\030\025 \001(\010\022$\n\034ACC_a_M"
      "ALTgtAccelDeadComp_sg\030\026 \001(\002\"\237\003\n\nARBOutpu"
      "ts\022\035\n\025ARB_T_PCTToqReqVal_sg\030\001 \001(\002\022\036\n\026ARB"
      "_T_PCTTorqCmpVal_sg\030\002 \001(\002\022\037\n\027ARB_T_PCTTo"
      "rqSlpEstd_sg\030\003 \001(\002\022#\n\033ARB_indx_PCTWhlToq"
      "2PTRat_sg\030\004 \001(\002\022!\n\031ARB_a_PCTMaxSlideDece"
      "l_sg\030\005 \001(\002\022\'\n\037ARB_is_PCTUphillBackSlidRi"
      "sk_bl\030\006 \001(\010\022;\n\030ARB_indx_BPAARBReqSts_en\030"
      "\007 \001(\0162\031.ads_common.E_ARBReqSts_t\022\035\n\025ARB_"
      "a_BPADclReqVal_sg\030\010 \001(\002\022\035\n\025ARB_T_BPAToqR"
      "eqVal_sg\030\t \001(\002\022E\n\034ARB_indx_BPAESPECMActv"
      "Sts_en\030\n \001(\0162\037.ads_common.E_ACCESPECMReq"
      "Sts_t\"\266\002\n\rB1_RdEdgeInfo\022\037\n\027REI_d_RdEdgeL"
      "atPosA0_sg\030\001 \001(\002\022!\n\031REI_angR_RdEdgeHdAng"
      "A1_sg\030\002 \001(\002\022\035\n\025REI_cv_RdEdgeCrvA2_sg\030\003 \001"
      "(\002\022 \n\030REI_cvr_RdEdgeCrvRtA3_sg\030\004 \001(\002\022\037\n\027"
      "REI_d_RdEdgeRngStart_sg\030\005 \001(\002\022\035\n\025REI_d_R"
      "dEdgeRngEnd_sg\030\006 \001(\002\022@\n\034REI_stat_RdEdgeQ"
      "ltyCnfd_eLCF\030\007 \001(\0162\032.ads_common.eLCF_Lan"
      "eCnfdn\022\036\n\026REI_stat_RdEdgeType_u8\030\010 \001(\021\"\355"
      "\002\n\021B1_BorderLaneData\022\'\n\037BLD_indx_RdTwoSi"
      "desBndryCase_u8\030\001 \001(\021\022\035\n\025BLD_d_LftLmRePo"
      "sA0_sg\030\002 \001(\002\022!\n\031BLD_angR_LftLmReHdAgA1_s"
      "g\030\003 \001(\002\022\036\n\026BLD_cv_LftLmReCrvA2_sg\030\004 \001(\002\022"
      "#\n\033BLD_cvr_LftLmReCrvteRtA3_sg\030\005 \001(\002\022\036\n\026"
      "BLD_d_RghtLmRePosA0_sg\030\006 \001(\002\022\"\n\032BLD_angR"
      "_RghtLmReHdAgA1_sg\030\007 \001(\002\022\037\n\027BLD_cv_RghtL"
      "mReCrvA2_sg\030\010 \001(\002\022$\n\034BLD_cvr_RghtLmReCrv"
      "teRtA3_sg\030\t \001(\002\022\035\n\025BLD_d_EgoLaneWidth_sg"
      "\030\n \001(\002\"\250\004\n\rB1_SelObjData\022\031\n\021SOD_idx_ObjI"
      "D_u32\030\001 \001(\021\022\032\n\022SOD_d_ObjOffset_sg\030\002 \001(\002\022"
      "\037\n\027SOD_v_ObjOffsetDeriv_sg\030\003 \001(\002\022\027\n\017SOD_"
      "v_ObjSpd_sg\030\004 \001(\002\022\031\n\021SOD_a_ObjAccel_sg\030\005"
      " \001(\002\022\034\n\024SOD_angR_ObjHdAng_sg\030\006 \001(\002\022\033\n\023SO"
      "D_d_ObjLgtPosn_sg\030\007 \001(\002\022!\n\031SOD_d_ObjLgtP"
      "osnStdDev_sg\030\010 \001(\002\022\033\n\023SOD_d_ObjLatPosn_s"
      "g\030\t \001(\002\022\032\n\022SOD_idx_ObjType_u8\030\n \001(\021\022@\n\032S"
      "OD_sts_ObjLneChgTrnd_eTLS\030\013 \001(\0162\034.ads_co"
      "mmon.eTLS_TrgtLaneSts\022%\n\035SOD_idx_ObjTrfc"
      "JamAsstQlty_u8\030\014 \001(\021\022D\n\031SOD_sts_ObjSelct"
      "Qlty_eTSQ\030\r \001(\0162!.ads_common.eTSQ_TrgtSe"
      "lectQualty\022\035\n\025SOD_idx_ObjFusnSrc_u8\030\016 \001("
      "\021\022&\n\036SOD_idx_ObjSelectPosInArray_u8\030\017 \001("
      "\021\"\315\003\n\016B1_ObjTrajInfo\022 \n\030OTI_d_ObjTraj1or"
      "derC0_sg\030\001 \001(\002\022#\n\033OTI_angR_ObjTraj1order"
      "C1_sg\030\002 \001(\002\022 \n\030OTI_d_ObjTraj3orderC0_sg\030"
      "\003 \001(\002\022#\n\033OTI_angR_ObjTraj3orderC1_sg\030\004 \001"
      "(\002\022!\n\031OTI_cv_ObjTraj3orderC2_sg\030\005 \001(\002\022\"\n"
      "\032OTI_cvr_ObjTraj3orderC3_sg\030\006 \001(\002\022\034\n\024OTI"
      "_is_ObjTrajRst_bl\030\007 \001(\010\022#\n\033OTI_arr_ObjTr"
      "ajhistXPnts_sg\030\010 \003(\002\022#\n\033OTI_arr_ObjTrajh"
      "istYPnts_sg\030\t \003(\002\022\036\n\026OTI_k_ObjAvgMVSlope"
      "_sg\030\n \001(\002\022\035\n\025OTI_cv_ObjAvgMVCrv_sg\030\013 \001(\002"
      "\022\036\n\026OTI_is_ObjTrajValid_bl\030\014 \001(\010\022\037\n\027OTI_"
      "perc_ObjTrajQlty_u8\030\r \001(\021\"^\n\016B1_ObjPredT"
      "raj\022\030\n\020obj_pred_xpoints\030\001 \003(\002\022\030\n\020obj_pre"
      "d_ypoints\030\002 \003(\002\022\030\n\020obj_pred_quality\030\003 \001("
      "\010\"\363\001\n\020B1_ObjPredTrajV2\022\022\n\nobj_pred_v\030\001 \003"
      "(\002\022\026\n\016obj_pred_v_std\030\002 \003(\002\022\022\n\nobj_pred_a"
      "\030\003 \003(\002\022\026\n\016obj_pred_a_std\030\004 \003(\002\022\022\n\nobj_pr"
      "ed_x\030\005 \003(\002\022\026\n\016obj_pred_x_std\030\006 \003(\002\022\022\n\nob"
      "j_pred_y\030\007 \003(\002\022\026\n\016obj_pred_y_std\030\010 \003(\002\022\025"
      "\n\robj_pred_time\030\t \003(\002\022\030\n\020obj_pred_qualit"
      "y\030\n \001(\021\"\241\001\n\036B_Adptrout_Brake_Command_60_"
      "st\022\r\n\005audio\030\001 \001(\021\022\013\n\003acc\030\002 \001(\002\022\r\n\005quiet\030"
      "\003 \001(\021\022\r\n\005count\030\004 \001(\021\022\016\n\006ignore\030\005 \001(\021\022\r\n\005"
      "clear\030\006 \001(\021\022\014\n\004pcmd\030\007 \001(\002\022\n\n\002en\030\010 \001(\021\022\014\n"
      "\004bcmd\030\t \001(\021\"z\n!B_Adptrout_Throttle_Comma"
      "nd_62_st\022\r\n\005quiet\030\001 \001(\021\022\r\n\005count\030\002 \001(\021\022\016"
      "\n\006ignore\030\003 \001(\021\022\r\n\005clear\030\004 \001(\021\022\014\n\004pcmd\030\005 "
      "\001(\002\022\n\n\002en\030\006 \001(\021\"\210\001\n!B_Adptrout_Steering_"
      "Command_64_st\022\r\n\005quiet\030\001 \001(\021\022\r\n\005count\030\002 "
      "\001(\021\022\016\n\006ignore\030\003 \001(\021\022\014\n\004svel\030\004 \001(\002\022\r\n\005cle"
      "ar\030\005 \001(\021\022\n\n\002en\030\006 \001(\021\022\014\n\004scmd\030\007 \001(\021\"H\n\035B_"
      "Adptrout_Gear_Command_66_st\022\n\n\002en\030\001 \001(\021\022"
      "\014\n\004gcmd\030\002 \001(\021\022\r\n\005clear\030\003 \001(\021\"5\n#B_Adptro"
      "ut_TurnSignal_Command_68_st\022\016\n\006trncmd\030\001 "
      "\001(\021\"\244\006\n\033B_Adptrout_LatCtrl_State_st\022\036\n\026A"
      "dptr_Out_LDWLKADspCmd\030\001 \001(\021\022\033\n\023Adptr_Out"
      "_LDWSysSts\030\002 \001(\021\022\036\n\026Adptr_Out_LDWSysFltS"
      "ts\030\003 \001(\021\022\036\n\026Adptr_Out_LDWLKAAudReq\030\004 \001(\021"
      "\022\033\n\023Adptr_Out_LKASysSts\030\005 \001(\021\022\036\n\026Adptr_O"
      "ut_LKASysFltSts\030\006 \001(\021\022\036\n\026Adptr_Out_LKAVb"
      "nLvlReq\030\007 \001(\021\022\033\n\023Adptr_Out_PLTDspCmd\030\010 \001"
      "(\021\022\033\n\023Adptr_Out_PLTSysSts\030\t \001(\021\022\036\n\026Adptr"
      "_Out_PLTSysFltSts\030\n \001(\021\022!\n\031Adptr_Out_Sns"
      "tvtLvlDspCmd\030\013 \001(\021\022 \n\030Adptr_Out_AdoWrnng"
      "DspCmd\030\014 \001(\021\022\035\n\025Adptr_Out_DrvrTkovReq\030\r "
      "\001(\021\022 \n\030Adptr_Out_HptcWrngDspCmd\030\016 \001(\021\022\034\n"
      "\024Adptr_Out_LVsulznReq\030\017 \001(\021\022\034\n\024Adptr_Out"
      "_RVsulznReq\030\020 \001(\021\022\033\n\023Adptr_Out_NOCDspCmd"
      "\030\021 \001(\021\022\033\n\023Adptr_Out_NOCSysSts\030\022 \001(\021\022\036\n\026A"
      "dptr_Out_NOCSysFltSts\030\023 \001(\021\022\037\n\027Adptr_Out"
      "_LKAReqCtrlSts\030\024 \001(\021\022\033\n\023Adptr_Out_LKAReq"
      "Toq\030\025 \001(\002\022\034\n\024Adptr_Out_LKAReqToqV\030\026 \001(\021\022"
      "\033\n\023Adptr_Out_LKAReqAng\030\027 \001(\002\022\034\n\024Adptr_Ou"
      "t_LKAReqAngV\030\030 \001(\021\022\036\n\026Adptr_Out_LKARampS"
      "tate\030\031 \001(\021\"\312\003\n\033B_Adptrout_LonCtrl_State_"
      "st\022\033\n\023Adptr_Out_ACCSysSts\030\001 \001(\021\022\036\n\026Adptr"
      "_Out_ACCSysFltSts\030\002 \001(\021\022\033\n\023Adptr_Out_ACC"
      "SetSpd\030\003 \001(\002\022 \n\030Adptr_Out_ACCSetDistance"
      "\030\004 \001(\002\022\035\n\025Adptr_Out_ACCSGRGoReq\030\005 \001(\021\022\037\n"
      "\027Adptr_Out_ACCSGRSdslReq\030\006 \001(\021\022\"\n\032Adptr_"
      "Out_ACCDetObjDistLvl\030\007 \001(\021\022 \n\030Adptr_Out_"
      "ACCDrvrTkovReq\030\010 \001(\021\022\034\n\024Adptr_Out_ACCSto"
      "pReq\030\t \001(\021\022#\n\033Adptr_Out_ACCJerkUpperLimi"
      "t\030\n \001(\002\022#\n\033Adptr_Out_ACCJerkLowerLimit\030\013"
      " \001(\002\022\035\n\025Adptr_Out_ACCReqAccel\030\014 \001(\002\022\"\n\032A"
      "dptr_Out_ACCAccelDeadComp\030\r \001(\002*\340\001\n\021eNTR"
      "C_TrgtRdCatgr\022\021\n\rNTRC_NotAvlbl\020\000\022\021\n\rNTRC"
      "_RmpDvdRd\020\001\022\r\n\tNTRC_JCRd\020\002\022\r\n\tNTRC_ICRd\020"
      "\003\022\022\n\016NTRC_SpltMrgRd\020\004\022\023\n\017NTRC_VirtSpltRd"
      "\020\005\022\023\n\017NTRC_NormSpltRd\020\006\022\020\n\014NTRC_MrgCARd\020"
      "\007\022\022\n\016NTRC_NormMrgRd\020\010\022\021\n\rNTRC_RmpMrgRd\020\t"
      "\022\020\n\014NTRC_Unknown\020\017*S\n\022eTRP_TrgtRdRltvPos"
      "\022\020\n\014TRP_NotAvlbl\020\000\022\014\n\010TRP_Left\020\001\022\r\n\tTRP_"
      "Right\020\002\022\016\n\nTRP_Middle\020\003*\216\001\n\017eDST_DtlSplt"
      "Typ\022\020\n\014DST_NotAvlbl\020\000\022\021\n\rDST_LeftSplit\020\001"
      "\022\022\n\016DST_RightSplit\020\002\022\027\n\023DST_MiddleLeftSp"
      "lit\020\003\022\030\n\024DST_MiddleRightSplit\020\004\022\017\n\013DST_U"
      "nknown\020\005*\215\001\n\016eDMT_DtlMrgTyp\022\020\n\014DMT_NotAv"
      "lbl\020\000\022\021\n\rDMT_LeftMerge\020\001\022\022\n\016DMT_RightMer"
      "ge\020\002\022\027\n\023DMT_MiddleLeftMerge\020\003\022\030\n\024DMT_Mid"
      "dleRightMerge\020\004\022\017\n\013DMT_Unknown\020\005*\250\001\n\025eLO"
      "T_LinearObjectType\022\021\n\rLO_Centerline\020\000\022\022\n"
      "\016LO_LaneMarking\020\001\022\020\n\014LO_Guardrail\020\002\022\014\n\010L"
      "O_Fence\020\003\022\013\n\007LO_Kerb\020\004\022\013\n\007LO_Wall\020\005\022\022\n\016L"
      "O_OutsideLine\020\006\022\016\n\nLO_Overlap\020\017\022\n\n\005LO_NA"
      "\020\377\001*n\n\014eNES_EHRStat\022\021\n\rEHRS_NotReady\020\000\022\020"
      "\n\014EHRS_LineMss\020\001\022\027\n\023EHRS_LclECUNotReady\020"
      "\002\022\017\n\013EHRS_HSWErr\020\003\022\017\n\013EHRS_Others\020\004*B\n\013e"
      "NVS_NavSts\022\016\n\nNVS_Cruise\020\000\022\022\n\016NVS_Naviga"
      "tion\020\001\022\017\n\013NVS_Invalid\020\002*F\n\017eTRT_TrgtRmpT"
      "yp\022\020\n\014TRT_NotAvlbl\020\000\022\021\n\rTRT_NonDirect\020\001\022"
      "\016\n\nTRT_Direct\020\002*\315\001\n\027eNDADS_DrvrActOnDirc"
      "nSw\022\017\n\013DrvrReqIdle\020\000\022\022\n\016DrvrReqLneChng\020\001"
      "\022\r\n\tWait4Drvr\020\002\022\n\n\006Ignore\020\003\022\020\n\014LPReqLneC"
      "hng\020\004\022\023\n\017DrvrConfrmLPReq\020\005\022\021\n\rDrvrCancel"
      "Req\020\006\022\016\n\nNoNedLPRem\020\t\022\017\n\013MustLneChng\020\n\022\027"
      "\n\023RemdDrvrRutnDircnSw\020\013*h\n\020eNLCR_LneChng"
      "Rec\022\016\n\neNLCR_None\020\000\022\016\n\neNLCR_Rght\020\001\022\022\n\016e"
      "NLCR_MustRght\020\002\022\r\n\teNLCR_Lft\020\003\022\021\n\reNLCR_"
      "MustLft\020\004*H\n\021eADI_AirBagDplIvn\022\027\n\023ADI_Ai"
      "rbag_Deployed\020\000\022\032\n\026ADI_No_Airbag_Deploye"
      "d\020\001*P\n\013eAEBFunType\022\016\n\nAEB_No_Fun\020\000\022\013\n\007AE"
      "B_C2C\020\001\022\r\n\tAEB_C2C_P\020\002\022\025\n\021AEB_C2C_P_Cycl"
      "ist\020\003*o\n\023eAEBPDS_AEBPedDftSw\022\021\n\rAEBPDS_D"
      "ft_ON\020\000\022\022\n\016AEBPDS_Dft_OFF\020\001\022\034\n\030AEBPDS_Df"
      "t_LstIgnCyclSts\020\002\022\023\n\017AEBPDS_Reversed\020\003*D"
      "\n\013eAEBVCtrlSw\022\026\n\022AEBVSw_Unavailable\020\000\022\016\n"
      "\nAEBVSw_Off\020\001\022\r\n\tAEBVSw_On\020\002*\177\n\021eAFDS_AE"
      "BFCWDftSw\022\020\n\014AFDS_Dft_OFF\020\000\022\022\n\016AFDS_Dft_"
      "FCWON\020\001\022\025\n\021AFDS_Dft_AEBFCWON\020\002\022\032\n\026AFDS_D"
      "ft_LstIgnCyclSts\020\003\022\021\n\rAFDS_Reserved\020\004*X\n"
      "\022eAF_ActiveFunction\022\014\n\010No_VLatC\020\000\022\007\n\003LDP"
      "\020\001\022\007\n\003LKA\020\002\022\007\n\003TJA\020\003\022\007\n\003LCA\020\004\022\007\n\003ELK\020\005\022\007"
      "\n\003PLT\020\006*J\n\017eAHR_AdoHptcReq\022\r\n\tAHR_NoReq\020"
      "\000\022\014\n\010AHR_Lvl1\020\001\022\014\n\010AHR_Lvl2\020\002\022\014\n\010AHR_Lvl"
      "3\020\003*p\n\030eAHWDS_AudHptcWrnngDftSw\022\020\n\014AHWDS"
      "_Dft_ON\020\000\022\021\n\rAHWDS_Dft_OFF\020\001\022\033\n\027AHWDS_Df"
      "t_LstIgnCyclSts\020\002\022\022\n\016AHWDS_Reversed\020\003*B\n"
      "\025eAHWR_AdoHptcWrnngReq\022\016\n\nAHWR_NoReq\020\000\022\014"
      "\n\010AHWR_Off\020\001\022\013\n\007AHWR_On\020\002*\372\001\n\016eALCS_ALCS"
      "tate\022\032\n\026ALCS_LaneChangeInhibit\020\000\022\023\n\017ALCS"
      "_LaneFollow\020\001\022\027\n\023ALCS_LaneChangeWait\020\002\022\027"
      "\n\023ALCS_LeftLaneChange\020\003\022\030\n\024ALCS_RightLan"
      "eChange\020\004\022\027\n\023ALCS_LeftLaneReturn\020\005\022\030\n\024AL"
      "CS_RightLaneReturn\020\006\022\033\n\027ALCS_LaneChangeF"
      "inished\020\007\022\033\n\027ALCS_LaneReturnFinished\020\010*p"
      "\n\013eAPA_ApaSts\022\017\n\013APA_Disable\020\000\022\017\n\013APA_St"
      "andby\020\001\022\026\n\022APA_SemiAPA_Active\020\002\022\027\n\023APA_F"
      "ullyAPA_Active\020\003\022\016\n\nAPA_Failed\020\004*U\n\020eAVH"
      "_AutoHoldSts\022\013\n\007AVH_Off\020\000\022\024\n\020AVH_Interve"
      "ntion\020\001\022\017\n\013AVH_Standby\020\002\022\r\n\tAVH_Error\020\003*"
      "@\n\016eBDT_BrkDiscTm\022\020\n\014BDT_Not_High\020\000\022\034\n\030B"
      "DT_Temperature_Too_High\020\001*\202\001\n\023eBHAS_BrkH"
      "illAstSts\022\021\n\rBHAS_Inactive\020\000\022\032\n\026BHAS_Bra"
      "kePressureHold\020\001\022\034\n\030BHAS_NormalPressureD"
      "ecay\020\002\022\036\n\032BHAS_DriveoffPressureDecay\020\003*\\"
      "\n\014eBOS_BntOpen\022\025\n\021BOS_Bonnet_Closed\020\000\022\023\n"
      "\017BOS_Bonnet_Open\020\001\022 \n\034BOS_Bonnet_Switch_"
      "Disconnect\020\002*B\n\016eBPL_BrkPdlApl\022\031\n\025BPL_Br"
      "ake_Not_Applied\020\000\022\025\n\021BPL_Brake_Applied\020\001"
      "*n\n\023eBSDW_BSDWarningSts\022\022\n\016BSDW_NoWarnin"
      "g\020\000\022\027\n\023BSDW_Warning_Level1\020\001\022\027\n\023BSDW_War"
      "ning_Level2\020\002\022\021\n\rBSDW_Reserved\020\003*R\n\021eCCR"
      "_ACCCancelReq\022\017\n\013CCR_NoCancl\020\000\022\023\n\017CCR_Ma"
      "nualCancl\020\001\022\027\n\023CCR_ACC_CondDissatf\020\002*}\n\017"
      "eCDL_ACCDistLvl\022\020\n\014CDL_DistLvl0\020\000\022\020\n\014CDL"
      "_DistLvl1\020\001\022\020\n\014CDL_DistLvl2\020\002\022\020\n\014CDL_Dis"
      "tLvl3\020\003\022\020\n\014CDL_DistLvl4\020\004\022\020\n\014CDL_DistLvl"
      "5\020\005*2\n\017eCDR_ACCDeclReq\022\r\n\tCDR_NoReq\020\000\022\020\n"
      "\014CDR_AccelReq\020\001*1\n\017eCFS_CamrFltSts\022\017\n\013CF"
      "S_NoFault\020\000\022\r\n\tCFS_Fault\020\001*+\n\reCGR_ACCGo"
      "Req\022\r\n\tCGR_NoReq\020\000\022\013\n\007CGR_Req\020\001*y\n\021eCLC_"
      "ChLkaCtrlSts\022\r\n\tCLC_NoReq\020\000\022\022\n\016CLC_ReqHo"
      "nored\020\001\022\016\n\nCLC_LstArb\020\002\022\031\n\025CLC_CtrlNotAl"
      "ldforFlt\020\003\022\026\n\022CLC_PreCondNotSatf\020\004*\360\001\n\020e"
      "CLS_ACCObjClass\022\022\n\016CLS_Undermined\020\000\022\017\n\013C"
      "LS_Vehicle\020\001\022\022\n\016CLS_Motorcycle\020\002\022\r\n\tCLS_"
      "Truck\020\003\022\022\n\016CLS_Pedestrian\020\004\022\025\n\021CLS_NotSu"
      "pptdPole\020\005\022\025\n\021CLS_NotSupptdTree\020\006\022\016\n\nCLS"
      "_Animal\020\007\022\024\n\020CLS_GenOnRoadObj\020\010\022\017\n\013CLS_B"
      "icycle\020\t\022\033\n\027CLS_UnidentifiedVehicle\020\n*>\n"
      "\016eCMD_HMIDspCMD\022\023\n\017CMD_Unavailable\020\000\022\013\n\007"
      "CMD_Off\020\001\022\n\n\006CMD_On\020\002*\321\002\n\013eCMR_ACCMsg\022\r\n"
      "\tCMR_NoDsp\020\000\022\023\n\017CMR_UnablActACC\020\001\022\022\n\016CMR"
      "_ACCisCancl\020\002\022\016\n\nCMR_Active\020\003\022\023\n\017CMR_ACC"
      "inErrMod\020\004\022\022\n\016CMR_ACCSwtchOn\020\005\022\023\n\017CMR_AC"
      "CSwtchOff\020\006\022\023\n\017CMR_DrvrTkovReq\020\007\022\023\n\017CMR_"
      "SwitchGoReq\020\010\022\020\n\014CMR_RadarErr\020\t\022\021\n\rCMR_E"
      "ngNotRun\020\n\022\023\n\017CMR_EPB_Applied\020\013\022\021\n\rCMR_S"
      "hiftNotD\020\014\022\026\n\022CMR_DoorBonnetOpen\020\r\022\024\n\020CM"
      "R_DrvrSbltRels\020\016\022\027\n\023CMR_DrvrModeNotSpot\020"
      "\017*\327\002\n\020eCMV_ACCObjMvSts\022\022\n\016CMV_Stationary"
      "\020\000\022\027\n\023CMV_TrckStpdFrmMvng\020\001\022\023\n\017CMV_Track"
      "Moving\020\002\022\025\n\021CMV_TrackOncoming\020\003\022\031\n\025CMV_T"
      "rckStpdFrmOncmng\020\004\022\017\n\013CMV_NoTrack\020\013\022\r\n\tC"
      "MV_Error\020\016\022\024\n\020CMV_NotAvailable\020\017\022\021\n\rCMV_"
      "Reserved5\020\005\022\021\n\rCMV_Reserved6\020\006\022\021\n\rCMV_Re"
      "served7\020\007\022\021\n\rCMV_Reserved8\020\010\022\021\n\rCMV_Rese"
      "rved9\020\t\022\022\n\016CMV_Reserved10\020\n\022\022\n\016CMV_Reser"
      "ved12\020\014\022\022\n\016CMV_Reserved13\020\r*\213\001\n\017eCPR_PTC"
      "ruzResp\022\022\n\016CPR_No_Request\020\000\022\027\n\023CPR_Reque"
      "st_Honored\020\001\022\030\n\024CPR_Lost_Arbitration\020\002\022\r"
      "\n\tCPR_Error\020\003\022\"\n\036CPR_Precondition_Not_Sa"
      "tisfied\020\004*y\n\020eCSNR_ACCObjSnsr\022\027\n\023CSNR_Si"
      "ngleTracklet\020\000\022\032\n\026CSNR_MultipleTracklets"
      "\020\001\022\023\n\017CSNR_VisionOnly\020\002\022\033\n\027CSNR_Tracklet"
      "sAndVision\020\003*\317\001\n\017eCSRP_SCSReqRsp\022\023\n\017CSRP"
      "_No_request\020\000\022\030\n\024CSRP_Request_honored\020\001\022"
      "\031\n\025CSRP_Lost_Arbitration\020\002\022&\n\"CSRP_Contr"
      "ol_Not_Allowed_For_Error\020\003\022#\n\037CSRP_PreCo"
      "ndition_Not_Satisfied\020\004\022%\n!CSRP_ReqRecei"
      "ved_NoFlt_NotHonored\020\005*\210\001\n\013eCST_ACCSts\022\013"
      "\n\007CST_Off\020\000\022\017\n\013CST_Standby\020\001\022\016\n\nCST_Acti"
      "ve\020\002\022\020\n\014CST_Override\020\003\022\021\n\rCST_BrakeOnly\020"
      "\004\022\022\n\016CST_StdStlActv\020\005\022\022\n\016CST_StdStlWait\020"
      "\006*j\n\reCSW_CCSwIntg\022\022\n\016CSW_Data_Valid\020\000\022\024"
      "\n\020CSW_Data_Invalid\020\001\022\030\n\024CSW_Failure_Dete"
      "cted\020\002\022\025\n\021CSW_Illegal_Range\020\003*\225\001\n\024eCTRK_"
      "ACCObjTrackSts\022\020\n\014CTRK_Invalid\020\000\022\017\n\013CTRK"
      "_Merged\020\001\022\014\n\010CTRK_New\020\002\022\023\n\017CTRK_NewCoast"
      "ed\020\003\022\023\n\017CTRK_NewUpdated\020\004\022\020\n\014CTRK_Update"
      "d\020\005\022\020\n\014CTRK_Coasted\020\006*1\n\017eCTR_ACCTorqReq"
      "\022\r\n\tCTR_NoReq\020\000\022\017\n\013CTR_TorqReq\020\001*\375\001\n\022eDC"
      "LS_DngrObjClass\022\023\n\017DCLS_Undermined\020\000\022\020\n\014"
      "DCLS_Vehicle\020\001\022\023\n\017DCLS_Motorcycle\020\002\022\016\n\nD"
      "CLS_Truck\020\003\022\023\n\017DCLS_Pedestrian\020\004\022\026\n\022DCLS"
      "_NotSupptdPole\020\005\022\026\n\022DCLS_NotSupptdTree\020\006"
      "\022\017\n\013DCLS_Animal\020\007\022\025\n\021DCLS_GenOnRoadObj\020\010"
      "\022\020\n\014DCLS_Bicycle\020\t\022\034\n\030DCLS_UnidentifiedV"
      "ehicle\020\n*U\n\017eDCM_DesCtrlMod\022\017\n\013DCM_NoneF"
      "ol\020\000\022\016\n\nDCM_VehFol\020\001\022\020\n\014DCM_MergeFol\020\002\022\017"
      "\n\013DCM_PathFol\020\003*A\n\021eDLS_DircnIndLamp\022\013\n\007"
      "DLS_Off\020\000\022\016\n\nDLS_LeftOn\020\001\022\017\n\013DLS_RightOn"
      "\020\002*\247\001\n\neDMD_DrvMd\022\027\n\023DMD_No_Driving_Mode"
      "\020\000\022\020\n\014DMD_SuperECO\020\001\022\013\n\007DMD_ECO\020\002\022\016\n\nDMD"
      "_Normal\020\003\022\r\n\tDMD_Sport\020\004\022\023\n\017DMD_Super_Sp"
      "ort\020\005\022\032\n\026DMD_Customization_Mode\020\007\022\021\n\rDMD"
      "_Reserved6\020\006*+\n\017eDMS_DspMeasSys\022\013\n\007DMS_k"
      "ph\020\000\022\013\n\007DMS_mph\020\001*\330\002\n\021eDMV_DngrObjMvSts\022"
      "\022\n\016DMV_Stationary\020\000\022\027\n\023DMV_TrckStpdFrmMv"
      "ng\020\001\022\023\n\017DMV_TrackMoving\020\002\022\025\n\021DMV_TrackOn"
      "coming\020\003\022\031\n\025DMV_TrckStpdFrmOncmng\020\004\022\017\n\013D"
      "MV_NoTrack\020\013\022\r\n\tDMV_Error\020\016\022\024\n\020DMV_NotAv"
      "ailable\020\017\022\021\n\rDMV_Reserved5\020\005\022\021\n\rDMV_Rese"
      "rved6\020\006\022\021\n\rDMV_Reserved7\020\007\022\021\n\rDMV_Reserv"
      "ed8\020\010\022\021\n\rDMV_Reserved9\020\t\022\022\n\016DMV_Reserved"
      "10\020\n\022\022\n\016DMV_Reserved12\020\014\022\022\n\016DMV_Reserved"
      "13\020\r*Q\n\020eDOS_DoorOpenSts\022\016\n\nDOS_Closed\020\000"
      "\022\014\n\010DOS_Open\020\001\022\014\n\010DOS_Ajar\020\002\022\021\n\rDOS_Full"
      "_Open\020\003*}\n\017eDSL_DrvrSetLvl\022\020\n\014DSL_DistLv"
      "l0\020\000\022\020\n\014DSL_DistLvl1\020\001\022\020\n\014DSL_DistLvl2\020\002"
      "\022\020\n\014DSL_DistLvl3\020\003\022\020\n\014DSL_DistLvl4\020\004\022\020\n\014"
      "DSL_DistLvl5\020\005*z\n\021eDSNR_DngrObjSnsr\022\027\n\023D"
      "SNR_SingleTracklet\020\000\022\032\n\026DSNR_MultipleTra"
      "cklets\020\001\022\023\n\017DSNR_VisionOnly\020\002\022\033\n\027DSNR_Tr"
      "ackletsAndVision\020\003*\226\001\n\025eDTRK_DngrObjTrac"
      "kSts\022\020\n\014DTRK_Invalid\020\000\022\017\n\013DTRK_Merged\020\001\022"
      "\014\n\010DTRK_New\020\002\022\023\n\017DTRK_NewCoasted\020\003\022\023\n\017DT"
      "RK_NewUpdated\020\004\022\020\n\014DTRK_Updated\020\005\022\020\n\014DTR"
      "K_Coasted\020\006*4\n\016eEDR_AEBDclReq\022\r\n\tEDR_NoR"
      "eq\020\000\022\023\n\017EDR_AEB_DeclReq\020\001*[\n\016eEHL_AEBHBA"
      "Lvl\022\r\n\tEHL_NoReq\020\000\022\022\n\016EHL_WarnngLvl1\020\001\022\022"
      "\n\016EHL_WarnngLvl2\020\002\022\022\n\016EHL_WarnngLvl3\020\003*I"
      "\n\016eEJR_FCWJrkLvl\022\r\n\tEJR_NoReq\020\000\022\014\n\010EJR_L"
      "vl1\020\001\022\014\n\010EJR_Lvl2\020\002\022\014\n\010EJR_Lvl3\020\003*g\n\017eEL"
      "KDS_ELKDftSw\022\020\n\014ELKDS_Dft_ON\020\000\022\021\n\rELKDS_"
      "Dft_OFF\020\001\022\033\n\027ELKDS_Dft_LstIgnCyclSts\020\002\022\022"
      "\n\016ELKDS_Reversed\020\003*\221\001\n\013eEMS_AEBMsg\022\r\n\tEM"
      "S_NoDsp\020\000\022\023\n\017EMS_UnablActAEB\020\001\022\016\n\nEMS_Ac"
      "tive\020\002\022\023\n\017EMS_AEBinErrMod\020\003\022\022\n\016EMS_AEBSw"
      "tchOn\020\004\022\023\n\017EMS_AEBSwtchOff\020\005\022\020\n\014EMS_Rada"
      "rErr\020\006*g\n\016eENS_EngSpdSts\022\027\n\023ENS_NormalOp"
      "eration\020\000\022\031\n\025ENS_DegradedOperation\020\001\022\020\n\014"
      "ENS_Reserved\020\002\022\017\n\013EMS_Invalid\020\003*9\n\017eEPBF"
      "_EPBFlrSts\022\023\n\017EPBF_EPBNoError\020\000\022\021\n\rEPBF_"
      "EPBError\020\001*X\n\reEPB_AppcnSts\022\017\n\013EPB_Unkno"
      "wn\020\000\022\017\n\013EPB_Applied\020\001\022\020\n\014EPS_Released\020\002\022"
      "\023\n\017EPB_In_Progress\020\003*[\n\reEP_AEBPedSts\022\n\n"
      "\006EP_Off\020\000\022\016\n\nEP_Standby\020\001\022\016\n\nEP_Disable\020"
      "\002\022\017\n\013EP_Override\020\003\022\r\n\tEP_Active\020\004*\242\001\n\017eE"
      "RS_AEBDclResp\022\r\n\tERS_NoReq\020\000\022\022\n\016ERS_ReqH"
      "onored\020\001\022\027\n\023ERS_LostArbitration\020\002\022\034\n\030ERS"
      "_CtrlNotAllowedForErr\020\003\022\033\n\027ERS_PreCondNo"
      "tSatisfied\020\004\022\030\n\024ERS_DclReqRcvdNoFalt\020\005*P"
      "\n\017eESL_FCWSnstLvl\022\023\n\017ESL_Unavailable\020\000\022\014"
      "\n\010ESL_Lvl1\020\001\022\014\n\010ESL_Lvl2\020\002\022\014\n\010ESL_Lvl3\020\003"
      "*m\n\reESS_EnASSSta\022\022\n\016ESS_Engine_Off\020\000\022\026\n"
      "\022ESS_Engine_Running\020\001\022\027\n\023ESS_Engine_Star"
      "ting\020\002\022\027\n\023ESS_Engine_Stopping\020\003*S\n\neES_A"
      "EBSts\022\n\n\006ES_Off\020\000\022\t\n\005ES_On\020\001\022\016\n\nES_Disab"
      "le\020\002\022\017\n\013ES_Override\020\003\022\r\n\tES_Active\020\004*\215\001\n"
      "\023eETRF_EnToqRducnFlr\022\022\n\016ETRF_ToqRdctOK\020\000"
      "\022\027\n\023ETRF_ToqRdctTempFlr\020\001\022\027\n\023ETRF_ToqRdc"
      "tPermFlr\020\002\022\027\n\023ETRF_ToqRdctLimited\020\003\022\027\n\023E"
      "TRF_ToqRdctCommFlr\020\004*X\n\013eEWS_FCWSts\022\r\n\tE"
      "WS_NoReq\020\000\022\022\n\016EWS_WarnngLvl1\020\001\022\022\n\016EWS_Wa"
      "rnngLvl2\020\002\022\022\n\016EWS_WarnngLvl3\020\003*\?\n\reFCD_F"
      "CWCnfdn\022\024\n\020eFCD_NotReliable\020\000\022\030\n\024eFCD_Wa"
      "rningReliable\020\001*@\n\neFCWCtrlSw\022\025\n\021FCWSw_U"
      "navailable\020\000\022\r\n\tFCWSw_Off\020\001\022\014\n\010FCWSw_On\020"
      "\002*K\n\020eFLTS_FaultState\022\020\n\014FLTS_NoError\020\000\022"
      "\023\n\017FLTS_TmpUnavabl\020\001\022\020\n\014FLTS_ServReq\020\002*["
      "\n\016eFLT_SysFltSts\022\017\n\013FLT_NoError\020\000\022\023\n\017FLT"
      "_PerfmDeGrad\020\001\022\022\n\016FLT_TmpUnavabl\020\002\022\017\n\013FL"
      "T_ServReq\020\003*N\n\reFSR_SnstvLvl\022\r\n\tFSR_NoRe"
      "q\020\000\022\016\n\nFSR_Level1\020\001\022\016\n\nFSR_Level2\020\002\022\016\n\nF"
      "SR_Level3\020\003*p\n\016eHDC_HDCSysSts\022\016\n\nHDC_Nor"
      "aml\020\000\022\017\n\013HDC_Enabled\020\001\022\016\n\nHDC_Active\020\002\022\016"
      "\n\nHDC_Failed\020\003\022\035\n\031HDC_Temporarily_Inhibi"
      "ted\020\004*h\n\020eHOD_HandsOffDet\022\025\n\021HOD_HandsOf"
      "f_Lvl1\020\000\022\017\n\013HOD_HandsOn\020\001\022\025\n\021HOD_HandsOf"
      "f_Lvl2\020\002\022\025\n\021HOD_HandsOff_Lvl3\020\003*7\n\022eHOS_"
      "HandsOnStates\022\020\n\014HOS_HandsOff\020\000\022\017\n\013HOS_H"
      "andsOn\020\001*\234\001\n\014eHRS_HBAResp\022\r\n\tHRS_NoReq\020\000"
      "\022\022\n\016HRS_ReqHonored\020\001\022\027\n\023HRS_LostArbitrat"
      "ion\020\002\022\034\n\030HRS_CtrlNotAllowedForErr\020\003\022\033\n\027H"
      "RS_PreCondNotSatisfied\020\004\022\025\n\021HRS_ReqRcvdN"
      "oFalt\020\005*\235\001\n\reJRS_JerkResp\022\r\n\tJRS_NoReq\020\000"
      "\022\022\n\016JRS_ReqHonored\020\001\022\027\n\023JRS_LostArbitrat"
      "ion\020\002\022\034\n\030JRS_CtrlNotAllowedForErr\020\003\022\033\n\027J"
      "RS_PreCondNotSatisfied\020\004\022\025\n\021JRS_ReqRcvdN"
      "oFalt\020\005*V\n\020eLACS_LatCtrlSts\022\014\n\010LACS_Off\020"
      "\000\022\020\n\014LACS_Standby\020\001\022\017\n\013LACS_Active\020\002\022\021\n\r"
      "LACS_Override\020\003*g\n\016eLCF_LaneCnfdn\022\023\n\017LCF"
      "_NotReliable\020\000\022\026\n\022LCF_RelbleforWrnng\020\001\022\027"
      "\n\023LCF_RelbleforInterv\020\002\022\017\n\013LCF_Reserve\020\003"
      "*p\n\022eLCMD_LSSHMIDspCMD\022\024\n\020LCMD_Unavailab"
      "le\020\000\022\014\n\010LCMD_Off\020\001\022\014\n\010LCMD_LDW\020\002\022\014\n\010LCMD"
      "_LDP\020\003\022\014\n\010LCMD_LKA\020\004\022\014\n\010LCMD_ELK\020\005*N\n\016eL"
      "CR_LaneColor\022\017\n\013LCR_Unknown\020\000\022\016\n\nLCR_Yel"
      "low\020\001\022\r\n\tLCR_White\020\002\022\014\n\010LCR_Blue\020\003*\215\001\n\016e"
      "LDPS_LDPState\022\014\n\010LDPS_OFF\020\000\022\020\n\014LDPS_STAN"
      "DBY\020\001\022\020\n\014LDPS_PASSIVE\020\002\022\017\n\013LDPS_ACTIVE\020\003"
      "\022\021\n\rLDPS_OVERRIDE\020\004\022\020\n\014LDPS_SrvcRqd\020\005\022\023\n"
      "\017LDPS_SysTmpUnbl\020\006*;\n\021eLDWCM_LDWCtrlMod\022"
      "\023\n\017LDWCM_NoWarning\020\000\022\021\n\rLDWCM_Warning\020\001*"
      "\257\001\n\016eLDWS_LDWState\022\014\n\010LDWS_OFF\020\000\022\020\n\014LDWS"
      "_STANDBY\020\001\022\020\n\014LDWS_PASSIVE\020\002\022\017\n\013LDWS_ACT"
      "IVE\020\003\022\031\n\025LDWS_Passive_Override\020\004\022\030\n\024LDWS"
      "_Active_Override\020\005\022\020\n\014LDWS_SrvcRqd\020\006\022\023\n\017"
      "LDWS_SysTmpUnbl\020\007*Z\n\021eLKACM_LKACtrlMod\022\023"
      "\n\017LKACM_Disenable\020\000\022\030\n\024LKACM_EnableUnman"
      "ned\020\001\022\026\n\022LKACM_EnableManned\020\002*{\n\016eLKAS_L"
      "KAState\022\014\n\010LKAS_OFF\020\000\022\020\n\014LKAS_STANDBY\020\001\022"
      "\017\n\013LKAS_ACTIVE\020\002\022\021\n\rLKAS_OVERRIDE\020\003\022\023\n\017L"
      "KAS_TmpUnavabl\020\004\022\020\n\014LKAS_ServReq\020\005*\246\001\n\017e"
      "LKSDS_LKSDftSw\022\020\n\014LKSDS_Dft_ON\020\000\022\021\n\rLKSD"
      "S_Dft_OFF\020\001\022\023\n\017LKSDS_Dft_LDWON\020\002\022\023\n\017LKSD"
      "S_Dft_LDPON\020\003\022\023\n\017LKSDS_Dft_LKAON\020\004\022\033\n\027LK"
      "SDS_Dft_LstIgnCyclSts\020\005\022\022\n\016LKSDS_Reverse"
      "d\020\006*b\n\020eLLR_LkaLdwSwReq\022\r\n\tLLR_NoReq\020\000\022\013"
      "\n\007LLR_Off\020\001\022\013\n\007LLR_LDW\020\002\022\013\n\007LLR_LDP\020\003\022\013\n"
      "\007LLR_LKA\020\004\022\013\n\007LLR_ELK\020\005*P\n\022eLMC_LaneMrkr"
      "Color\022\016\n\nLMC_NoLine\020\000\022\r\n\tLMC_White\020\001\022\013\n\007"
      "LMC_Red\020\002\022\016\n\nLMC_Yellow\020\003*t\n\020eLMT_LaneMr"
      "krTyp\022\016\n\nLMT_NoLine\020\000\022\r\n\tLMT_Solid\020\001\022\016\n\n"
      "LMT_Dashed\020\002\022\021\n\rLMT_Curbstone\020\003\022\r\n\tLMT_G"
      "rass\020\004\022\017\n\013LMT_BotDott\020\005*D\n\016eLOS_LdSpcOpe"
      "n\022\031\n\025LOS_Load_Space_Closed\020\000\022\027\n\023LOS_Load"
      "_Space_Open\020\001*{\n\024eLSDS_SnstvtLvlDftSw\022\020\n"
      "\014LSDS_Dft_LOW\020\000\022\020\n\014LSDS_Dft_STD\020\001\022\020\n\014LSD"
      "S_Dft_HGH\020\002\022\032\n\026LSDS_Dft_LstIgnCyclSts\020\003\022"
      "\021\n\rLSDS_Reserved\020\004*T\n\022eLSLR_SnstvtLvlReq"
      "\022\016\n\nLSLR_NoReq\020\000\022\014\n\010LSLR_Low\020\001\022\021\n\rLSLR_S"
      "tandard\020\002\022\r\n\tLSLR_High\020\003*\262\001\n\reLTP_LaneTy"
      "pe\022\014\n\010LTP_None\020\000\022\r\n\tLTP_Solid\020\001\022\016\n\nLTP_D"
      "ashed\020\002\022\022\n\016LTP_Botts_Dots\020\004\022\017\n\013LTP_Inval"
      "id\020\006\022\021\n\rLTP_Undecided\020\007\022\026\n\022LTP_DoublLanM"
      "arker\020\010\022\021\n\rLTP_Reserved3\020\003\022\021\n\rLTP_Reserv"
      "ed5\020\005*\330\002\n\024eNCRT_NavCrntRoadTyp\022\020\n\014NCRT_U"
      "nknown\020\000\022\020\n\014NCRT_Highway\020\001\022\030\n\024NCRT_Inter"
      "urbanRoads\020\002\022\022\n\016NCRT_CityRoads\020\003\022\r\n\tNCRT"
      "_Ramp\020\004\022\025\n\021NCRT_NationalRoad\020\005\022\027\n\023NCRT_P"
      "rovincialRoad\020\006\022\024\n\020NCRT_CountryRoad\020\007\022\024\n"
      "\020NCRT_VillageRoad\020\010\022\027\n\023NCRT_CityExpressW"
      "ay\020\t\022\027\n\023NCRT_MajorUrbanRoad\020\n\022\033\n\027NCRT_Se"
      "condaryUrbanRoad\020\013\022\030\n\024NCRT_NormalUrbanRo"
      "ad\020\014\022\032\n\026NCRT_NonNavigationRoad\020\r*\336\002\n\022eND"
      "AB_AbnormBehvor\022\021\n\reNDAB_Unknown\020\000\022\021\n\reN"
      "DAB_NoAbnom\020\001\022\023\n\017eNDAB_PhoneCall\020\002\022\021\n\reN"
      "DAB_Smoking\020\003\022\017\n\013eNDAB_Drink\020\004\022\r\n\teNDAB_"
      "Eat\020\005\022\024\n\020eNDAB_6_Reserved\020\006\022\024\n\020eNDAB_7_R"
      "eserved\020\007\022\024\n\020eNDAB_8_Reserved\020\010\022\024\n\020eNDAB"
      "_9_Reserved\020\t\022\024\n\020eNDAB_A_Reserved\020\n\022\024\n\020e"
      "NDAB_B_Reserved\020\013\022\024\n\020eNDAB_C_Reserved\020\014\022"
      "\024\n\020eNDAB_D_Reserved\020\r\022\024\n\020eNDAB_E_Reserve"
      "d\020\016\022\024\n\020eNDAB_F_Reserved\020\017*<\n\014eNDAR_AudRe"
      "q\022\017\n\013eNDAR_NoReq\020\000\022\r\n\teNDAR_Off\020\001\022\014\n\010eND"
      "AR_On\020\002*Y\n\020eNDAWD_AdoWrnDsp\022\022\n\016eNDAWD_Un"
      "avail\020\000\022\016\n\neNDAWD_Off\020\001\022\r\n\teNDAWD_On\020\002\022\022"
      "\n\016eNDAWD_LastSts\020\003*C\n\020eNDAWR_AdoWrnReq\022\020"
      "\n\014eNDAWR_NoReq\020\000\022\016\n\neNDAWR_Off\020\001\022\r\n\teNDA"
      "WR_On\020\002*>\n\014eNDDC_DspCmd\022\021\n\reNDDC_Unavail"
      "\020\000\022\r\n\teNDDC_Off\020\001\022\014\n\010eNDDC_On\020\002*\265\001\n\016eNDD"
      "S_DstcnSts\022\021\n\reNDDS_Unknown\020\000\022\021\n\reNDDS_N"
      "oDstcn\020\001\022\022\n\016eNDDS_LowDstcn\020\002\022\022\n\016eNDDS_Mi"
      "dDstcn\020\003\022\023\n\017eNDDS_HighDstcn\020\004\022\024\n\020eNDDS_5"
      "_Reserved\020\005\022\024\n\020eNDDS_6_Reserved\020\006\022\024\n\020eND"
      "DS_7_Reserved\020\007*\267\001\n\014eNDFL_FtgLvl\022\021\n\reNDF"
      "L_Unknown\020\000\022\022\n\016eNDFL_NoDrowsy\020\001\022\023\n\017eNDFL"
      "_LowDrowsy\020\002\022\023\n\017eNDFL_MidDrowsy\020\003\022\024\n\020eND"
      "FL_HighDrowsy\020\004\022\024\n\020eNDFL_5_Reserved\020\005\022\024\n"
      "\020eNDFL_6_Reserved\020\006\022\024\n\020eNDFL_7_Reserved\020"
      "\007*\360\002\n\reNDGR_GazeRgn\022\021\n\reNDGR_Unknown\020\000\022\021"
      "\n\reNDGR_DrvrWin\020\001\022\023\n\017eNDGR_CoDrvrWin\020\002\022\022"
      "\n\016eNDGR_LRMirror\020\003\022\022\n\016eNDGR_RRMirror\020\004\022\016"
      "\n\neNDGR_LWin\020\005\022\016\n\neNDGR_RWin\020\006\022\022\n\016eNDGR_"
      "CRMirror\020\007\022\023\n\017eNDGR_SpdClustr\020\010\022\020\n\014eNDGR"
      "_HeadUp\020\t\022\022\n\016eNDGR_NaviDisp\020\n\022\023\n\017eNDGR_M"
      "idClustr\020\013\022\021\n\reNDGR_StrgWhl\020\014\022\023\n\017eNDGR_L"
      "SeatFoot\020\r\022\023\n\017eNDGR_RSeatFoot\020\016\022\021\n\reNDGR"
      "_LDrFoot\020\017\022\021\n\reNDGR_RDrFoot\020\020\022\025\n\021eNDGR_1"
      "1_Reserved\020\021*Y\n\020eNDHWD_HapWrnDsp\022\022\n\016eNDH"
      "WD_Unavail\020\000\022\016\n\neNDHWD_Off\020\001\022\r\n\teNDHWD_O"
      "n\020\002\022\022\n\016eNDHWD_LastSts\020\003*C\n\020eNDHWR_HapWrn"
      "Req\022\020\n\014eNDHWR_NoReq\020\000\022\016\n\neNDHWR_Off\020\001\022\r\n"
      "\teNDHWR_On\020\002*H\n\023eNDLC_DircnLampCtrl\022\020\n\014N"
      "DLC_ReqNONE\020\000\022\017\n\013NDLC_ReqOFF\020\001\022\016\n\nNDLC_R"
      "eqON\020\002*B\n\reNDP_DrvrPrst\022\020\n\014eNDP_Unknown\020"
      "\000\022\020\n\014eNDP_NotPrst\020\001\022\r\n\teNDP_Prst\020\002*;\n\013eN"
      "DSR_SwReq\022\017\n\013eNDSR_NoReq\020\000\022\r\n\teNDSR_Off\020"
      "\001\022\014\n\010eNDSR_On\020\002*\230\001\n\013eNDS_SysSts\022\014\n\010eNDS_"
      "Off\020\000\022\016\n\neNDS_Stdby\020\001\022\r\n\teNDS_Actv\020\002\022\017\n\013"
      "eNDS_CamBlk\020\003\022\025\n\021eNDS_SysTempUnavl\020\004\022\023\n\017"
      "eNDS_ServiceReq\020\005\022\014\n\010eNDS_Ini\020\006\022\021\n\reNDS_"
      "Reserved\020\007*C\n\020eNDVLR_VbnLvlReq\022\020\n\014eNDVLR"
      "_NoReq\020\000\022\016\n\neNDVLR_Off\020\001\022\r\n\teNDVLR_On\020\002*"
      "E\n\014eNDWR_WrnReq\022\017\n\013eNDWR_NoReq\020\000\022\020\n\014eNDW"
      "R_FtgReq\020\001\022\022\n\016eNDWR_DstcnReq\020\002*\323\002\n\reNHDG"
      "_DiagSts\022\017\n\013eNHDG_NoErr\020\000\022\020\n\014eNHDG_EEPRO"
      "M\020\001\022\020\n\014eNHDG_ROMErr\020\002\022\020\n\014eNHDG_WDGErr\020\003\022"
      "\020\n\014eNHDG_CPUErr\020\004\022\022\n\016eNHDG_GuardErr\020\005\022\022\n"
      "\016eNHDG_SenseErr\020\006\022\031\n\025eNHDG_CPUDeftMatSho"
      "tg\020\007\022\026\n\022eNHDG_UnderVoltage\020\010\022\025\n\021eNHDG_Ov"
      "erVoltage\020\t\022\021\n\reNHDG_CodeErr\020\n\022\020\n\014eNHDG_"
      "SysErr\020\013\022\023\n\017eNHDG_C_Reserve\020\014\022\023\n\017eNHDG_D"
      "_Reserve\020\r\022\023\n\017eNHDG_E_Reserve\020\016\022\023\n\017eNHDG"
      "_F_Reserve\020\017*\364\002\n\reNHDS_DetnSts\022\021\n\reNHDS_"
      "Unknown\020\000\022\031\n\025eNHDS_NoVldContactDet\020\001\022\027\n\023"
      "eNHDS_VldContactDet\020\002\022\024\n\020eNHDS_3_Reserve"
      "d\020\003\022\024\n\020eNHDS_4_Reserved\020\004\022\024\n\020eNHDS_5_Res"
      "erved\020\005\022\024\n\020eNHDS_6_Reserved\020\006\022\024\n\020eNHDS_7"
      "_Reserved\020\007\022\024\n\020eNHDS_8_Reserved\020\010\022\024\n\020eNH"
      "DS_9_Reserved\020\t\022\024\n\020eNHDS_A_Reserved\020\n\022\024\n"
      "\020eNHDS_B_Reserved\020\013\022\024\n\020eNHDS_C_Reserved\020"
      "\014\022\024\n\020eNHDS_D_Reserved\020\r\022\024\n\020eNHDS_E_Reser"
      "ved\020\016\022\024\n\020eNHDS_F_Reserved\020\017*\232\001\n\014eNHSS_Sy"
      "sSts\022\r\n\teNHSS_Avl\020\000\022\r\n\teNHSS_Ini\020\001\022\r\n\teN"
      "HSS_Flt\020\002\022\r\n\teNHSS_OFF\020\003\022\017\n\013eNHSS_NtCal\020"
      "\004\022\023\n\017eNHSS_5_Reserve\020\005\022\023\n\017eNHSS_6_Reserv"
      "e\020\006\022\023\n\017eNHSS_7_Reserve\020\007*\233\001\n\014eNHTZ_TchSt"
      "s\022\021\n\reNHTZ_NoHdDet\020\000\022\017\n\013eNHTZ_HdDet\020\001\022\023\n"
      "\017eNHTZ_2_Reserve\020\002\022\023\n\017eNHTZ_3_Reserve\020\003\022"
      "\023\n\017eNHTZ_4_Reserve\020\004\022\023\n\017eNHTZ_5_Reserve\020"
      "\005\022\023\n\017eNHTZ_6_Reserve\020\006*c\n\013eNIOR_IonRd\022\021\n"
      "\reNIOR_Unavail\020\000\022\016\n\neNIOR_OnRd\020\001\022\026\n\022eNIO"
      "R_OffRdDrivRgn\020\002\022\031\n\025eNIOR_OffRdNonDrivRg"
      "n\020\003*\270\002\n\017eNNI_NavNewIcon\022\017\n\013NNI_Unknown\020\000"
      "\022\014\n\010NNI_Left\020\001\022\r\n\tNNI_Right\020\002\022\021\n\rNNI_Lef"
      "tFront\020\003\022\022\n\016NNI_RightFront\020\004\022\020\n\014NNI_Left"
      "Rear\020\005\022\021\n\rNNI_RightRear\020\006\022\023\n\017NNI_Left_U_"
      "Turn\020\007\022\024\n\020NNI_Right_U_Turn\020\010\022\022\n\016NNI_GoSt"
      "raight\020\t\022\032\n\026NNI_RoundaboutEntrance\020\n\022\026\n\022"
      "NNI_RoundaboutExit\020\013\022\023\n\017NNI_ServiceArea\020"
      "\014\022\023\n\017NNI_TollStation\020\r\022\016\n\nNNI_Tunnel\020\016*\314"
      "\001\n\020eNOPSS_NOPSysSts\022\016\n\neNOPSS_OFF\020\000\022\022\n\016e"
      "NOPSS_Passive\020\001\022\020\n\014eNOPSS_Stdby\020\002\022\021\n\reNO"
      "PSS_HOActv\020\003\022\021\n\reNOPSS_HFActv\020\004\022\024\n\020eNOPS"
      "S_Wait4Drvr\020\005\022\017\n\013eNOPSS_Ovrd\020\006\022\016\n\neNOPSS"
      "_TOR\020\007\022\023\n\017eNOPSS_Prohibit\020\010\022\020\n\014eNOPSS_Fa"
      "ult\020\t*\256\002\n\021eNPSS_PilotSysSts\022\r\n\tPilot_OFF"
      "\020\000\022\021\n\rPilot_Passive\020\001\022\017\n\013Pilot_Stdby\020\002\022\025"
      "\n\021Pilot_LonCtrlOnly\020\003\022\020\n\014Pilot_HOActv\020\004\022"
      "\017\n\013Pilot_HFRec\020\005\022\020\n\014Pilot_HFActv\020\006\022\023\n\017Pi"
      "lot_Wait4Drvr\020\007\022\021\n\rPilot_ALCActv\020\010\022\023\n\017Pi"
      "lot_LonOvrdHO\020\t\022\023\n\017Pilot_LatOvrdHO\020\n\022\024\n\020"
      "Pilot_BothOvrdHO\020\013\022\r\n\tPilot_TOR\020\014\022\017\n\013Pil"
      "ot_Fault\020\r\022\022\n\016Pilot_Prohibit\020\016*U\n\014eNRC_N"
      "RCDSts\022\020\n\014NRC_Inactive\020\000\022\016\n\nNRC_Active\020\001"
      "\022\020\n\014NRC_Semi_APA\020\002\022\021\n\rNRC_Fully_APA\020\003*B\n"
      "\020eNRLC_ReqLneChng\022\r\n\tNRLC_None\020\000\022\016\n\nNRLC"
      "_LftLC\020\001\022\017\n\013NRLC_RghtLC\020\002*D\n\016eNSFD_Spfng"
      "Det\022\021\n\reNSFD_Unknown\020\000\022\020\n\014eNSFD_NotDet\020\001"
      "\022\r\n\teNSFD_Det\020\002*\267\001\n\023eNSHWASS_SHWASysSts\022"
      "\020\n\014eNSHWASS_OFF\020\000\022\024\n\020eNSHWASS_Passive\020\001\022"
      "\022\n\016eNSHWASS_Stdby\020\002\022\021\n\reNSHWASS_Actv\020\003\022\021"
      "\n\reNSHWASS_Ovrd\020\004\022\020\n\014eNSHWASS_TOR\020\005\022\025\n\021e"
      "NSHWASS_SafeStop\020\006\022\025\n\021eNSHWASS_Prohibit\020"
      "\007*K\n\025eNSLS_NavSpdLmtValSts\022\016\n\nNSLS_Fault"
      "\020\000\022\021\n\rNSLS_Inactive\020\001\022\017\n\013NSLS_Active\020\002*e"
      "\n\022eNSLT_NavSpdLmtTyp\022\024\n\020NSLT_NotSpecific"
      "\020\000\022\030\n\024NSLT_CameraDetection\020\001\022\037\n\033NSLT_Int"
      "ervalSpeedDetection\020\002*F\n\026eNSLU_NavSpdLmt"
      "ValUnit\022\020\n\014NSLU_Unknown\020\000\022\014\n\010NSLU_mph\020\001\022"
      "\014\n\010NSLU_kph\020\002*\367\001\n\022ePCLS_DngrPedClass\022\031\n\025"
      "PCLS_ObjectUndermined\020\000\022\014\n\010PCLS_Car\020\001\022\023\n"
      "\017PCLS_MotorCycle\020\002\022\016\n\nPCLS_Truck\020\003\022\023\n\017PC"
      "LS_Pedestrain\020\004\022\020\n\014PCLS_Bicycle\020\t\022\034\n\030PCL"
      "S_VehicleUnidentified\020\n\022\022\n\016PCLS_Reserved"
      "5\020\005\022\022\n\016PCLS_Reserved6\020\006\022\022\n\016PCLS_Reserved"
      "7\020\007\022\022\n\016PCLS_Reserved8\020\010*\206\001\n\026ePCS_PtCustS"
      "etngDspCmd\022\030\n\024PCS_Function_Disable\020\000\022\021\n\r"
      "PCS_Super_ECO\020\001\022\013\n\007PCS_ECO\020\002\022\016\n\nPCS_Norm"
      "al\020\003\022\r\n\tPCS_Sport\020\004\022\023\n\017PCS_Super_Sport\020\005"
      "*\235\001\n\rePRS_PrflResp\022\r\n\tPRS_NoReq\020\000\022\022\n\016PRS"
      "_ReqHonored\020\001\022\027\n\023PRS_LostArbitration\020\002\022\034"
      "\n\030PRS_CtrlNotAllowedForErr\020\003\022\033\n\027PRS_PreC"
      "ondNotSatisfied\020\004\022\025\n\021PRS_ReqRcvdNoFalt\020\005"
      "*|\n\023ePSNR_DngrPedFusSrc\022\027\n\023PSNR_SingleTr"
      "acklet\020\000\022\032\n\026PSNR_MultipleTracklets\020\001\022\023\n\017"
      "PSNR_VisionOnly\020\002\022\033\n\027PSNR_TrackletsAndVi"
      "sion\020\003*7\n\rePSW_AEBPedSw\022\r\n\tPSW_NoReq\020\000\022\013"
      "\n\007PSW_Off\020\001\022\n\n\006PSW_On\020\002*\221\001\n\020ePTRK_DngrPe"
      "dSts\022\020\n\014PTRK_Invalid\020\000\022\017\n\013PTRK_Merged\020\001\022"
      "\014\n\010PTRK_New\020\002\022\023\n\017PTRK_NewCoasted\020\003\022\023\n\017PT"
      "RK_NewUpdated\020\004\022\020\n\014PTRK_Updated\020\005\022\020\n\014PTR"
      "K_Coasted\020\006*E\n\nePWR_PwrMd\022\013\n\007PWR_Off\020\000\022\013"
      "\n\007PWR_ACC\020\001\022\013\n\007PWR_Run\020\002\022\020\n\014PWR_CrankReq"
      "\020\003*\210\001\n\017eRCR_RdrCalPrgs\022\r\n\tRCR_NoReq\020\000\022\022\n"
      "\016RCR_CalbStated\020\001\022\022\n\016RCR_CalbinProg\020\002\022\023\n"
      "\017RCR_CalbFnshSuc\020\003\022\027\n\023RCR_CalbFnshNeedAd"
      "j\020\004\022\020\n\014RCR_CalbFail\020\005*\244\001\n\022eRDAS_RDASysSt"
      "aELK\022\022\n\016RDAS_Reserved0\020\000\022\022\n\016RDAS_Reserve"
      "d1\020\001\022\022\n\016RDAS_Reserved2\020\002\022\027\n\023RDAS_SensorB"
      "lockage\020\003\022\021\n\rRDAS_Disabled\020\004\022\020\n\014RDAS_Ena"
      "bled\020\005\022\024\n\020RDAS_SystemError\020\006*B\n\023eROST_RD"
      "ASysObjStry\022\023\n\017ROST_Stationary\020\000\022\026\n\022ROST"
      "_NotStationary\020\001*S\n\021eROS_RDASysObjSts\022\020\n"
      "\014ROS_NoObject\020\000\022\013\n\007ROS_New\020\001\022\016\n\nROS_Matu"
      "re\020\002\022\017\n\013ROS_Coasted\020\003*t\n\022eROZ_RDASysObjZ"
      "one\022\020\n\014ROZ_NoObject\020\000\022\027\n\023ROZ_ObjectInBSW"
      "Zone\020\001\022\027\n\023ROZ_ObjectInCVWZone\020\002\022\032\n\026ROZ_O"
      "bjectInSharedZone\020\003*\316\001\n\022eRPLvl_ReplanLev"
      "el\022$\n eRPLvl_ReplanLevel_RPLvl_Disable\020\000"
      "\022!\n\035eRPLvl_ReplanLevel_RPLvl_Init\020\001\022#\n\037e"
      "RPLvl_ReplanLevel_RPLvl_Replan\020\002\022#\n\037eRPL"
      "vl_ReplanLevel_RPLvl_Normal\020\003\022%\n!eRPLvl_"
      "ReplanLevel_RPLvl_KeepTraj\020\004*b\n\020eRPL_ReP"
      "lanLevel\022\017\n\013RPL_Disable\020\000\022\014\n\010RPL_Init\020\001\022"
      "\016\n\nRPL_RePlan\020\002\022\016\n\nRPL_Normal\020\003\022\017\n\013RPL_K"
      "eepTrj\020\004*S\n\reRS_RampState\022\013\n\007RS_None\020\000\022\n"
      "\n\006RS_OFF\020\001\022\t\n\005RS_ON\020\002\022\r\n\tRS_RampUp\020\003\022\017\n\013"
      "RS_RampDown\020\004*[\n\020eSAC_StrSnsrCali\022\017\n\013SAC"
      "_Unknow1\020\000\022\021\n\rSAC_Estimated\020\001\022\022\n\016SAC_Cal"
      "ibrated\020\002\022\017\n\013SAC_Unknow2\020\003*D\n\reSAM_SpdAs"
      "tMd\022\013\n\007SAM_Off\020\000\022\014\n\010SAM_Slif\020\001\022\013\n\007SAM_Ms"
      "a\020\002\022\013\n\007SAM_Isa\020\003*\220\001\n\016eSAS_SpdAstSys\022\013\n\007S"
      "AS_Off\020\000\022\016\n\nSAS_ActLmt\020\001\022\017\n\013SAS_Standby\020"
      "\002\022\032\n\026SAS_EntryCondIncorrect\020\003\022\021\n\rSAS_Ove"
      "rSpeed\020\004\022\r\n\tSAS_Fault\020\005\022\022\n\016SAS_ActPassiv"
      "e\020\006*)\n\013eSLR_Sdlstl\022\r\n\tSLR_NoReq\020\000\022\013\n\007SLR"
      "_Req\020\001*[\n\017eSMS_StrgModSet\022\023\n\017SMS_FuncDis"
      "able\020\000\022\020\n\014SMS_ComftMod\020\001\022\017\n\013SMS_NormMod\020"
      "\002\022\020\n\014SMS_SportMod\020\003*W\n\017eSTVL_SnstvtLvl\022\024"
      "\n\020STVL_Unavailable\020\000\022\014\n\010STVL_Low\020\001\022\021\n\rST"
      "VL_Standard\020\002\022\r\n\tSTVL_High\020\003*8\n\016eSWR_Swi"
      "tchReq\022\r\n\tSWR_NoReq\020\000\022\013\n\007SWR_Off\020\001\022\n\n\006SW"
      "R_On\020\002*A\n\reTCSM_TCSMode\022\014\n\010TCSM_Off\020\000\022\017\n"
      "\013TCSM_Normal\020\001\022\021\n\rTCSM_Off_Road\020\002*B\n\014eTC"
      "SS_TCSSts\022\021\n\rTCSS_Inactive\020\000\022\017\n\013TCSS_Act"
      "ive\020\001\022\016\n\nTCSS_Fault\020\002*L\n\017eTDIR_TrShftDir"
      "\022\021\n\rTDIR_No_Shift\020\000\022\021\n\rTDIR_Up_Shift\020\001\022\023"
      "\n\017TDIR_Down_Shift\020\002*\331\002\n\014eTGR_TrmGear\022\025\n\021"
      "TGR_Not_Supported\020\000\022\022\n\016TGR_First_Gear\020\001\022"
      "\023\n\017TGR_Second_Gear\020\002\022\022\n\016TGR_Third_Gear\020\003"
      "\022\023\n\017TGR_Fourth_Gear\020\004\022\022\n\016TGR_Fifth_Gear\020"
      "\005\022\022\n\016TGR_Sixth_Gear\020\006\022\024\n\020TGR_Seventh_Gea"
      "r\020\007\022\023\n\017TGR_Eighth_Gear\020\010\022\024\n\020TGR_Neutral_"
      "Gear\020\r\022\025\n\021TGR_Rerverse_Gear\020\016\022\021\n\rTGR_Par"
      "k_Gear\020\017\022\021\n\rTGR_Reserved9\020\t\022\022\n\016TGR_Reser"
      "ved10\020\n\022\022\n\016TGR_Reserved11\020\013\022\022\n\016TGR_Reser"
      "ved12\020\014*8\n\016eTIR_TJAICAReq\022\r\n\tTIR_NoReq\020\000"
      "\022\013\n\007TIR_Off\020\001\022\n\n\006TIR_On\020\002*\304\001\n\021eTJACM_TJA"
      "CtrlMod\022\023\n\017TJACM_Disenable\020\000\022\026\n\022TJACM_Ve"
      "hFolManned\020\001\022\030\n\024TJACM_VehFolUnmanned\020\002\022\030"
      "\n\024TJACM_MergeFolManned\020\003\022\032\n\026TJACM_MergeF"
      "olUnmanned\020\004\022\027\n\023TJACM_PathFolManned\020\005\022\031\n"
      "\025TJACM_PathFolUnmanned\020\006*\276\001\n\022eNPCM_Pilot"
      "CtrlMod\022\022\n\016NPCM_Disenable\020\000\022\025\n\021NPCM_VehF"
      "olManned\020\001\022\027\n\023NPCM_VehFolUnmanned\020\002\022\027\n\023N"
      "PCM_MergeFolManned\020\003\022\031\n\025NPCM_MergeFolUnm"
      "anned\020\004\022\026\n\022NPCM_PathFolManned\020\005\022\030\n\024NPCM_"
      "PathFolUnmanned\020\006*\304\001\n\021eNOPCM_NOPCtrlMod\022"
      "\023\n\017NOPCM_Disenable\020\000\022\026\n\022NOPCM_VehFolMann"
      "ed\020\001\022\030\n\024NOPCM_VehFolUnmanned\020\002\022\030\n\024NOPCM_"
      "MergeFolManned\020\003\022\032\n\026NOPCM_MergeFolUnmann"
      "ed\020\004\022\027\n\023NOPCM_PathFolManned\020\005\022\031\n\025NOPCM_P"
      "athFolUnmanned\020\006*g\n\017eTJADS_TJADftSw\022\020\n\014T"
      "JADS_Dft_ON\020\000\022\021\n\rTJADS_Dft_OFF\020\001\022\033\n\027TJAD"
      "S_Dft_LstIgnCyclSts\020\002\022\022\n\016TJADS_Reversed\020"
      "\003*\205\001\n\016eTJAS_TJAState\022\014\n\010TJAS_OFF\020\000\022\020\n\014TJ"
      "AS_STANDBY\020\001\022\017\n\013TJAS_ACTIVE\020\002\022\021\n\rTJAS_OV"
      "ERRIDE\020\003\022\030\n\024TJAS_FAIL_TmpUnavabl\020\004\022\025\n\021TJ"
      "AS_FAIL_ServReq\020\005*\217\003\n\017eTLP_ShftLvrPos\022\026\n"
      "\022TLP_Between_Ranges\020\000\022\022\n\016TLP_Park_Range\020"
      "\001\022\025\n\021TLP_Reverse_Range\020\002\022\025\n\021TLP_Neutral_"
      "Range\020\003\022\027\n\023TLP_Forward_Range_A\020\004\022\027\n\023TLP_"
      "Forward_Range_B\020\005\022\027\n\023TLP_Forward_Range_C"
      "\020\006\022\027\n\023TLP_Forward_Range_D\020\007\022\027\n\023TLP_Forwa"
      "rd_Range_E\020\010\022\027\n\023TLP_Forward_Range_F\020\t\022\027\n"
      "\023TLP_Forward_Range_G\020\n\022\027\n\023TLP_Forward_Ra"
      "nge_H\020\013\022\036\n\032TLP_Lever_Position_Unknown\020\017\022"
      "\022\n\016TLP_Reserved12\020\014\022\022\n\016TLP_Reserved13\020\r\022"
      "\022\n\016TLP_Reserved14\020\016*O\n\reTMD_TCMTapMd\022\r\n\t"
      "TMD_NoAct\020\000\022\025\n\021TMD_DrvSftCtrlAct\020\001\022\030\n\024TM"
      "D_ElecRgeSelectAct\020\002*\262\001\n\017eTRP_TrShftPtrn"
      "\022\026\n\022TRP_DftSftPttrnAct\020\000\022\024\n\020TRP_SftPttrn"
      "1Act\020\001\022\024\n\020TRP_SftPttrn2Act\020\002\022\024\n\020TRP_SftP"
      "ttrn3Act\020\003\022\024\n\020TRP_SftPttrn4Act\020\004\022\030\n\024TRP_"
      "PTNonPrtPttrnAct\020\005\022\025\n\021TRP_PTPrtPttrnAct\020"
      "\006*1\n\reTRQR_TorqReq\022\016\n\nTRQR_NoReq\020\000\022\020\n\014TR"
      "QR_TorqReq\020\001*R\n\021eTSS_TgtSptSrcSts\022\r\n\tTSS"
      "_Undef\020\000\022\013\n\007TSS_Cam\020\001\022\022\n\016TSS_Navigation\020"
      "\002\022\r\n\tTSS_Fault\020\003*7\n\reUSR_UDWSwReq\022\r\n\tUSR"
      "_NoReq\020\000\022\013\n\007USR_Off\020\001\022\n\n\006USR_On\020\002*f\n\020eUW"
      "R_UDWWrnngReq\022\r\n\tUWR_NoReq\020\000\022\025\n\021UWR_Wrnn"
      "gLvl1_Low\020\001\022\025\n\021UWR_WrnngLvl2_Mid\020\002\022\025\n\021UW"
      "R_WrnngLvl3_Hgh\020\003*/\n\reVLD_ValidSts\022\r\n\tVL"
      "D_Valid\020\000\022\017\n\013VLD_Invalid\020\001*D\n\reVSEM_VSEM"
      "ode\022\014\n\010VSEM_Off\020\000\022\017\n\013VSEM_Normal\020\001\022\024\n\020VS"
      "EM_Competitive\020\002*c\n\014eVSES_VSESts\022\016\n\nVSES"
      "_InAct\020\000\022\014\n\010VSES_Act\020\001\022\016\n\nVSES_Fault\020\002\022\022"
      "\n\016VSES_WarmingUp\020\003\022\021\n\rVSES_NotReady\020\004*s\n"
      "\017eVSLR_VsulznReq\022\016\n\nVSLR_NoDsp\020\000\022\021\n\rVSLR"
      "_LinTrack\020\001\022\025\n\021VSLR_Intervention\020\002\022\020\n\014VS"
      "LR_Warning\020\003\022\024\n\020VSLR_IntervWrnng\020\004*M\n\016eV"
      "SL_StdStlSts\022\026\n\022VSL_Not_Standstill\020\000\022\022\n\016"
      "VSL_Standstill\020\001\022\017\n\013VSL_Invalid\020\002*7\n\reVS"
      "W_AEBVehSw\022\r\n\tVSW_NoReq\020\000\022\013\n\007VSW_Off\020\001\022\n"
      "\n\006VSW_On\020\002*]\n\021eVS_VehicleSeries\022\014\n\010VEH_N"
      "one\020\000\022\020\n\014VEH_AS21_iGS\020\001\022\014\n\010VEH_EP21\020\002\022\014\n"
      "\010VEH_IP31\020\003\022\014\n\010VEH_IP32\020\004*p\n\017eWPR_FrtWip"
      "erSw\022\023\n\017WPR_Wippers_Off\020\000\022\034\n\030WPR_Wippers"
      "_Intermittent\020\001\022\024\n\020WPR_Wippers_Slow\020\002\022\024\n"
      "\020WPR_Wippers_Fast\020\003*;\n\016eWPS_BrkPreSts\022\025\n"
      "\021WPS_ExistBrkForce\020\000\022\022\n\016WPS_NoBrkForce\020\001"
      "*^\n\017eWRD_WhlRotDirc\022\017\n\013WRD_Unknown\020\000\022\017\n\013"
      "WRD_Forward\020\001\022\020\n\014WRD_Backward\020\002\022\027\n\023WRD_I"
      "nitial_Invalid\020\003*8\n\020E_ACCAccReqSts_t\022\022\n\016"
      "eACCAccelNoReq\020\000\022\020\n\014eACCAccelReq\020\001*\260\001\n\023E"
      "_ACCESPECMReqSts_t\022\021\n\reACCReqActive\020\000\022\023\n"
      "\017eACCHighESPActv\020\001\022\020\n\014eACCHighIdle\020\002\022\023\n\017"
      "eACCHighECMActv\020\003\022\022\n\016eACCLowESPActv\020\004\022\017\n"
      "\013eACCLowIdle\020\005\022\022\n\016eACCLowECMActv\020\006\022\021\n\reA"
      "CCReqInactv\020\007*B\n\rE_ACCOAFSts_t\022\016\n\neACCOA"
      "FOFF\020\000\022\020\n\014eACCOAFStdby\020\001\022\017\n\013eACCOAFActv\020"
      "\002*\356\002\n\rE_ACCReqSts_t\022\021\n\reACCReqStsOff\020\000\022\025"
      "\n\021eACCReqStsStandby\020\001\022\024\n\020eACCReqStsActiv"
      "e\020\002\022\034\n\030eACCReqStsActiveOverride\020\003\022\025\n\021eAC"
      "CReqStsBrkOnly\020\004\022\025\n\021eStandStillActive\020\005\022"
      "\023\n\017eStandStillWait\020\006\022\016\n\neCruiseCCC\020\007\022\016\n\n"
      "eCruiseACC\020\010\022\027\n\023eCruiseACCEmergency\020\t\022\031\n"
      "\025eCruiseACCApproaching\020\n\022\023\n\017eCruiseACCCu"
      "rve\020\013\022\026\n\022eACCReqStsInActive\020\014\022\023\n\017eACCReq"
      "StsSleep\020\r\022\021\n\reACCRevsFault\020\016\022\023\n\017eACCIRR"
      "evsFault\020\017*0\n\rE_ARBReqSts_t\022\017\n\013eARBStand"
      "By\020\000\022\016\n\neARBActive\020\001*\\\n\016E_FCWWrngSts_t\022\016"
      "\n\neFWrnNoReq\020\000\022\r\n\teFWrnLvl1\020\001\022\r\n\teFWrnLv"
      "l2\020\002\022\016\n\neFWrnLvl13\020\003\022\014\n\010eFWrnOff\020\004*j\n\016E_"
      "JerkLvlReq_t\022\016\n\neJerkNoReq\020\000\022\r\n\teJerkLvl"
      "1\020\001\022\r\n\teJerkLvl2\020\002\022\r\n\teJerkLvl3\020\003\022\r\n\teJe"
      "rkWait\020\004\022\014\n\010eJerkOff\020\005*G\n\017eTRPM_TrajPlnM"
      "d\022\016\n\nTRPM_OffMd\020\000\022\020\n\014TRPM_CmfrtMd\020\001\022\022\n\016T"
      "RPM_EmrgncyMd\020\002*i\n\020eTLS_TrgtLaneSts\022\026\n\022T"
      "LS_TgtKeepingLane\020\000\022\035\n\031TLS_TgtChangingLa"
      "neToLeft\020\001\022\036\n\032TLS_TgtChangingLaneToRight"
      "\020\002*S\n\025eTSQ_TrgtSelectQualty\022\022\n\016TSQ_Short"
      "Range\020\000\022\023\n\017TSQ_MediumRange\020\001\022\021\n\rTSQ_Long"
      "Range\020\002*[\n\013eOS_ObjSide\022\013\n\007OS_Rear\020\000\022\014\n\010O"
      "S_Front\020\001\022\020\n\014OS_RightSide\020\002\022\017\n\013OS_LeftSi"
      "de\020\003\022\016\n\nOS_Unknown\020\004*[\n\021eOIT_ObjIndcrTur"
      "n\022\020\n\014OIT_NoIndcrn\020\000\022\020\n\014OIT_LeftTurn\020\001\022\021\n"
      "\rOIT_RightTurn\020\002\022\017\n\013OIT_Unknown\020\003*<\n\020eOL"
      "S_ObjLightSts\022\017\n\013OLS_Unknown\020\000\022\013\n\007OLS_Of"
      "f\020\001\022\n\n\006OLS_On\020\002*x\n\020eSDS_SnsrDataSts\022\r\n\tS"
      "DS_Invld\020\000\022\014\n\010SDS_Fusn\020\001\022\013\n\007SDS_New\020\002\022\017\n"
      "\013SDS_PredNew\020\003\022\016\n\nSDS_UpdNew\020\004\022\013\n\007SDS_Up"
      "d\020\005\022\014\n\010SDS_Pred\020\006*\250\001\n\013eOR_ObjRebl\022\017\n\013OR_"
      "NotRelbl\020\000\022\023\n\017OR_SoonNotRelbl\020\001\022\021\n\rOR_Co"
      "astRelbl\020\002\022\017\n\013OR_LowRelbl\020\003\022\022\n\016OR_Higher"
      "Relbl\020\004\022\023\n\017OR_HighestRelbl\020\005\022\024\n\020OR_BrkSp"
      "prtRelbl\020\006\022\020\n\014OR_BrkgRelbl\020\007*\224\002\n\tClassTy"
      "pe\022\026\n\022ClsType_SOLID_LINE\020\000\022\025\n\021ClsType_DA"
      "SH_LINE\020\001\022\033\n\027ClsType_SHORT_DASH_LINE\020\002\022\035"
      "\n\031ClsType_SOLID_DOUBLE_LINE\020\003\022\034\n\030ClsType"
      "_DASH_DOUBLE_LINE\020\004\022!\n\035ClsType_LEFT_SOLI"
      "D_RIGHT_DASH\020\005\022!\n\035ClsType_LEFT_DASH_RIGH"
      "T_SOLID\020\006\022\023\n\017ClsType_BARRIER\020\007\022\020\n\014ClsTyp"
      "e_CURB\020\010\022\021\n\rClsType_OTHER\020\t*\217\002\n\tColorTyp"
      "e\022\023\n\017ColorType_WHITE\020\000\022\024\n\020ColorType_YELL"
      "OW\020\001\022\024\n\020ColorType_ORANGE\020\002\022\022\n\016ColorType_"
      "BLUE\020\003\022\024\n\020ColorType_GEREEN\020\004\022\022\n\016ColorTyp"
      "e_GRAY\020\005\022%\n!ColorType_LEFT_WHITE_RIGHT_Y"
      "ELLOW\020\006\022%\n!ColorType_LEFT_YELLOW_RIGHT_W"
      "HITE\020\007\022 \n\034ColorType_YELLOW_GRAY_FUSION\020\010"
      "\022\023\n\017ColorType_OTHER\020\t*\333\001\n\007ObsType\022\016\n\nOT_"
      "UNKNOWN\020\000\022\030\n\024OT_UNKNOWN_UNMOVABLE\020\001\022\021\n\rO"
      "T_PEDESTRIAN\020\002\022\016\n\nOT_BICYCLE\020\003\022\n\n\006OT_CAR"
      "\020\004\022\014\n\010OT_TRUCK\020\005\022\n\n\006OT_BUS\020\006\022\021\n\rOT_MOTOR"
      "CYCLE\020\007\022\017\n\013OT_TRICYCLE\020\010\022\013\n\007OT_CONE\020\t\022\n\n"
      "\006OT_BAN\020\n\022\016\n\nOT_STOPBAR\020\013\022\020\n\014OT_SPEEDHUM"
      "P\020\014*g\n\017MaintenanceType\022\023\n\017MtT_New_Create"
      "d\020\000\022\017\n\013MtT_Coasted\020\001\022\r\n\tMtT_Merge\020\002\022\017\n\013M"
      "tT_Tracked\020\003\022\016\n\nMtT_Others\020\004*\315\001\n\nMotionT"
      "ype\022\016\n\nMT_UNKNOWN\020\000\022\"\n\036MT_MOVING_EGODIRE"
      "CTION_DRIVING\020\001\022\"\n\036MT_MOVING_EGODIRECTIO"
      "N_STOPPED\020\002\022$\n MT_MOVING_EGODIRECTION_RE"
      "VERSING\020\003\022\026\n\022MT_MOVING_ONCOMING\020\004\022\026\n\022MT_"
      "MOVING_CROSSING\020\005\022\021\n\rMT_STATIONARY\020\006*\332\001\n"
      "\021MotionHistoryType\022\017\n\013MHT_UNKNOWN\020\000\022#\n\037M"
      "HH_MOVING_EGODIRECTION_DRIVING\020\001\022#\n\037MHH_"
      "MOVING_EGODIRECTION_STOPPED\020\002\022%\n!MHH_MOV"
      "ING_EGODIRECTION_REVERSING\020\003\022\027\n\023MHH_MOVI"
      "NG_ONCOMING\020\004\022\027\n\023MHH_MOVING_CROSSING\020\005\022\021"
      "\n\rMHH_STATIONAR\020\006*G\n\010SideType\022\014\n\010ST_FRON"
      "T\020\000\022\013\n\007ST_REAR\020\001\022\020\n\014ST_RIGHTSIDE\020\002\022\016\n\nST"
      "_LEFTSID\020\003*|\n\017eMS_MotionState\022\022\n\016Normal_"
      "Driving\020\000\022\024\n\020LowSpeed_Driving\020\001\022\027\n\023LowSp"
      "eed2StandStill\020\002\022\026\n\022StandStill2Driving\020\003"
      "\022\016\n\nStandStill\020\004*u\n\016eILCS_ILCState\022\014\n\010IL"
      "CS_OFF\020\000\022\020\n\014ILCS_STANDBY\020\001\022\020\n\014ILCS_PASSI"
      "VE\020\002\022\017\n\013ILCS_ACTIVE\020\003\022\021\n\rILCS_OVERRIDE\020\004"
      "\022\r\n\tILCS_FAIL\020\005*`\n\021eIDC_ILCDodgClass\022\013\n\007"
      "IDC_Off\020\000\022\016\n\nIDC_LftVeh\020\001\022\017\n\013IDC_RghtVeh"
      "\020\002\022\r\n\tIDC_LftRE\020\003\022\016\n\nIDC_RghtRE\020\004b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 54201);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ads_com.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ads_5fcom_2eproto
namespace ads_common {
const ::google::protobuf::EnumDescriptor* eNTRC_TrgtRdCatgr_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[0];
}
bool eNTRC_TrgtRdCatgr_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTRP_TrgtRdRltvPos_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[1];
}
bool eTRP_TrgtRdRltvPos_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDST_DtlSpltTyp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[2];
}
bool eDST_DtlSpltTyp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDMT_DtlMrgTyp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[3];
}
bool eDMT_DtlMrgTyp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLOT_LinearObjectType_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[4];
}
bool eLOT_LinearObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 15:
    case 255:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNES_EHRStat_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[5];
}
bool eNES_EHRStat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNVS_NavSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[6];
}
bool eNVS_NavSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTRT_TrgtRmpTyp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[7];
}
bool eTRT_TrgtRmpTyp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDADS_DrvrActOnDircnSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[8];
}
bool eNDADS_DrvrActOnDircnSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNLCR_LneChngRec_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[9];
}
bool eNLCR_LneChngRec_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eADI_AirBagDplIvn_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[10];
}
bool eADI_AirBagDplIvn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eAEBFunType_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[11];
}
bool eAEBFunType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eAEBPDS_AEBPedDftSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[12];
}
bool eAEBPDS_AEBPedDftSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eAEBVCtrlSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[13];
}
bool eAEBVCtrlSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eAFDS_AEBFCWDftSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[14];
}
bool eAFDS_AEBFCWDftSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eAF_ActiveFunction_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[15];
}
bool eAF_ActiveFunction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eAHR_AdoHptcReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[16];
}
bool eAHR_AdoHptcReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eAHWDS_AudHptcWrnngDftSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[17];
}
bool eAHWDS_AudHptcWrnngDftSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eAHWR_AdoHptcWrnngReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[18];
}
bool eAHWR_AdoHptcWrnngReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eALCS_ALCState_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[19];
}
bool eALCS_ALCState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eAPA_ApaSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[20];
}
bool eAPA_ApaSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eAVH_AutoHoldSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[21];
}
bool eAVH_AutoHoldSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eBDT_BrkDiscTm_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[22];
}
bool eBDT_BrkDiscTm_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eBHAS_BrkHillAstSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[23];
}
bool eBHAS_BrkHillAstSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eBOS_BntOpen_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[24];
}
bool eBOS_BntOpen_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eBPL_BrkPdlApl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[25];
}
bool eBPL_BrkPdlApl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eBSDW_BSDWarningSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[26];
}
bool eBSDW_BSDWarningSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCCR_ACCCancelReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[27];
}
bool eCCR_ACCCancelReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCDL_ACCDistLvl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[28];
}
bool eCDL_ACCDistLvl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCDR_ACCDeclReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[29];
}
bool eCDR_ACCDeclReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCFS_CamrFltSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[30];
}
bool eCFS_CamrFltSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCGR_ACCGoReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[31];
}
bool eCGR_ACCGoReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCLC_ChLkaCtrlSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[32];
}
bool eCLC_ChLkaCtrlSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCLS_ACCObjClass_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[33];
}
bool eCLS_ACCObjClass_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCMD_HMIDspCMD_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[34];
}
bool eCMD_HMIDspCMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCMR_ACCMsg_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[35];
}
bool eCMR_ACCMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCMV_ACCObjMvSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[36];
}
bool eCMV_ACCObjMvSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCPR_PTCruzResp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[37];
}
bool eCPR_PTCruzResp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCSNR_ACCObjSnsr_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[38];
}
bool eCSNR_ACCObjSnsr_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCSRP_SCSReqRsp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[39];
}
bool eCSRP_SCSReqRsp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCST_ACCSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[40];
}
bool eCST_ACCSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCSW_CCSwIntg_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[41];
}
bool eCSW_CCSwIntg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCTRK_ACCObjTrackSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[42];
}
bool eCTRK_ACCObjTrackSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eCTR_ACCTorqReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[43];
}
bool eCTR_ACCTorqReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDCLS_DngrObjClass_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[44];
}
bool eDCLS_DngrObjClass_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDCM_DesCtrlMod_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[45];
}
bool eDCM_DesCtrlMod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDLS_DircnIndLamp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[46];
}
bool eDLS_DircnIndLamp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDMD_DrvMd_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[47];
}
bool eDMD_DrvMd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDMS_DspMeasSys_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[48];
}
bool eDMS_DspMeasSys_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDMV_DngrObjMvSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[49];
}
bool eDMV_DngrObjMvSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDOS_DoorOpenSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[50];
}
bool eDOS_DoorOpenSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDSL_DrvrSetLvl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[51];
}
bool eDSL_DrvrSetLvl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDSNR_DngrObjSnsr_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[52];
}
bool eDSNR_DngrObjSnsr_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eDTRK_DngrObjTrackSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[53];
}
bool eDTRK_DngrObjTrackSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eEDR_AEBDclReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[54];
}
bool eEDR_AEBDclReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eEHL_AEBHBALvl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[55];
}
bool eEHL_AEBHBALvl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eEJR_FCWJrkLvl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[56];
}
bool eEJR_FCWJrkLvl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eELKDS_ELKDftSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[57];
}
bool eELKDS_ELKDftSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eEMS_AEBMsg_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[58];
}
bool eEMS_AEBMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eENS_EngSpdSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[59];
}
bool eENS_EngSpdSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eEPBF_EPBFlrSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[60];
}
bool eEPBF_EPBFlrSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eEPB_AppcnSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[61];
}
bool eEPB_AppcnSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eEP_AEBPedSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[62];
}
bool eEP_AEBPedSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eERS_AEBDclResp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[63];
}
bool eERS_AEBDclResp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eESL_FCWSnstLvl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[64];
}
bool eESL_FCWSnstLvl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eESS_EnASSSta_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[65];
}
bool eESS_EnASSSta_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eES_AEBSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[66];
}
bool eES_AEBSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eETRF_EnToqRducnFlr_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[67];
}
bool eETRF_EnToqRducnFlr_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eEWS_FCWSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[68];
}
bool eEWS_FCWSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eFCD_FCWCnfdn_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[69];
}
bool eFCD_FCWCnfdn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eFCWCtrlSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[70];
}
bool eFCWCtrlSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eFLTS_FaultState_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[71];
}
bool eFLTS_FaultState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eFLT_SysFltSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[72];
}
bool eFLT_SysFltSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eFSR_SnstvLvl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[73];
}
bool eFSR_SnstvLvl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eHDC_HDCSysSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[74];
}
bool eHDC_HDCSysSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eHOD_HandsOffDet_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[75];
}
bool eHOD_HandsOffDet_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eHOS_HandsOnStates_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[76];
}
bool eHOS_HandsOnStates_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eHRS_HBAResp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[77];
}
bool eHRS_HBAResp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eJRS_JerkResp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[78];
}
bool eJRS_JerkResp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLACS_LatCtrlSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[79];
}
bool eLACS_LatCtrlSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLCF_LaneCnfdn_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[80];
}
bool eLCF_LaneCnfdn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLCMD_LSSHMIDspCMD_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[81];
}
bool eLCMD_LSSHMIDspCMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLCR_LaneColor_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[82];
}
bool eLCR_LaneColor_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLDPS_LDPState_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[83];
}
bool eLDPS_LDPState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLDWCM_LDWCtrlMod_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[84];
}
bool eLDWCM_LDWCtrlMod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLDWS_LDWState_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[85];
}
bool eLDWS_LDWState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLKACM_LKACtrlMod_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[86];
}
bool eLKACM_LKACtrlMod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLKAS_LKAState_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[87];
}
bool eLKAS_LKAState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLKSDS_LKSDftSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[88];
}
bool eLKSDS_LKSDftSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLLR_LkaLdwSwReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[89];
}
bool eLLR_LkaLdwSwReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLMC_LaneMrkrColor_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[90];
}
bool eLMC_LaneMrkrColor_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLMT_LaneMrkrTyp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[91];
}
bool eLMT_LaneMrkrTyp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLOS_LdSpcOpen_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[92];
}
bool eLOS_LdSpcOpen_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLSDS_SnstvtLvlDftSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[93];
}
bool eLSDS_SnstvtLvlDftSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLSLR_SnstvtLvlReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[94];
}
bool eLSLR_SnstvtLvlReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eLTP_LaneType_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[95];
}
bool eLTP_LaneType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNCRT_NavCrntRoadTyp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[96];
}
bool eNCRT_NavCrntRoadTyp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDAB_AbnormBehvor_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[97];
}
bool eNDAB_AbnormBehvor_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDAR_AudReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[98];
}
bool eNDAR_AudReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDAWD_AdoWrnDsp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[99];
}
bool eNDAWD_AdoWrnDsp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDAWR_AdoWrnReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[100];
}
bool eNDAWR_AdoWrnReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDDC_DspCmd_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[101];
}
bool eNDDC_DspCmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDDS_DstcnSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[102];
}
bool eNDDS_DstcnSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDFL_FtgLvl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[103];
}
bool eNDFL_FtgLvl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDGR_GazeRgn_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[104];
}
bool eNDGR_GazeRgn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDHWD_HapWrnDsp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[105];
}
bool eNDHWD_HapWrnDsp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDHWR_HapWrnReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[106];
}
bool eNDHWR_HapWrnReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDLC_DircnLampCtrl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[107];
}
bool eNDLC_DircnLampCtrl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDP_DrvrPrst_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[108];
}
bool eNDP_DrvrPrst_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDSR_SwReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[109];
}
bool eNDSR_SwReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDS_SysSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[110];
}
bool eNDS_SysSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDVLR_VbnLvlReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[111];
}
bool eNDVLR_VbnLvlReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNDWR_WrnReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[112];
}
bool eNDWR_WrnReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNHDG_DiagSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[113];
}
bool eNHDG_DiagSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNHDS_DetnSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[114];
}
bool eNHDS_DetnSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNHSS_SysSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[115];
}
bool eNHSS_SysSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNHTZ_TchSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[116];
}
bool eNHTZ_TchSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNIOR_IonRd_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[117];
}
bool eNIOR_IonRd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNNI_NavNewIcon_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[118];
}
bool eNNI_NavNewIcon_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNOPSS_NOPSysSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[119];
}
bool eNOPSS_NOPSysSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNPSS_PilotSysSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[120];
}
bool eNPSS_PilotSysSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNRC_NRCDSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[121];
}
bool eNRC_NRCDSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNRLC_ReqLneChng_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[122];
}
bool eNRLC_ReqLneChng_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNSFD_SpfngDet_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[123];
}
bool eNSFD_SpfngDet_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNSHWASS_SHWASysSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[124];
}
bool eNSHWASS_SHWASysSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNSLS_NavSpdLmtValSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[125];
}
bool eNSLS_NavSpdLmtValSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNSLT_NavSpdLmtTyp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[126];
}
bool eNSLT_NavSpdLmtTyp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNSLU_NavSpdLmtValUnit_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[127];
}
bool eNSLU_NavSpdLmtValUnit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ePCLS_DngrPedClass_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[128];
}
bool ePCLS_DngrPedClass_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ePCS_PtCustSetngDspCmd_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[129];
}
bool ePCS_PtCustSetngDspCmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ePRS_PrflResp_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[130];
}
bool ePRS_PrflResp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ePSNR_DngrPedFusSrc_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[131];
}
bool ePSNR_DngrPedFusSrc_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ePSW_AEBPedSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[132];
}
bool ePSW_AEBPedSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ePTRK_DngrPedSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[133];
}
bool ePTRK_DngrPedSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ePWR_PwrMd_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[134];
}
bool ePWR_PwrMd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eRCR_RdrCalPrgs_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[135];
}
bool eRCR_RdrCalPrgs_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eRDAS_RDASysStaELK_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[136];
}
bool eRDAS_RDASysStaELK_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eROST_RDASysObjStry_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[137];
}
bool eROST_RDASysObjStry_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eROS_RDASysObjSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[138];
}
bool eROS_RDASysObjSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eROZ_RDASysObjZone_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[139];
}
bool eROZ_RDASysObjZone_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eRPLvl_ReplanLevel_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[140];
}
bool eRPLvl_ReplanLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eRPL_RePlanLevel_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[141];
}
bool eRPL_RePlanLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eRS_RampState_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[142];
}
bool eRS_RampState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eSAC_StrSnsrCali_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[143];
}
bool eSAC_StrSnsrCali_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eSAM_SpdAstMd_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[144];
}
bool eSAM_SpdAstMd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eSAS_SpdAstSys_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[145];
}
bool eSAS_SpdAstSys_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eSLR_Sdlstl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[146];
}
bool eSLR_Sdlstl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eSMS_StrgModSet_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[147];
}
bool eSMS_StrgModSet_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eSTVL_SnstvtLvl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[148];
}
bool eSTVL_SnstvtLvl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eSWR_SwitchReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[149];
}
bool eSWR_SwitchReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTCSM_TCSMode_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[150];
}
bool eTCSM_TCSMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTCSS_TCSSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[151];
}
bool eTCSS_TCSSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTDIR_TrShftDir_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[152];
}
bool eTDIR_TrShftDir_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTGR_TrmGear_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[153];
}
bool eTGR_TrmGear_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTIR_TJAICAReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[154];
}
bool eTIR_TJAICAReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTJACM_TJACtrlMod_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[155];
}
bool eTJACM_TJACtrlMod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNPCM_PilotCtrlMod_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[156];
}
bool eNPCM_PilotCtrlMod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eNOPCM_NOPCtrlMod_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[157];
}
bool eNOPCM_NOPCtrlMod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTJADS_TJADftSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[158];
}
bool eTJADS_TJADftSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTJAS_TJAState_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[159];
}
bool eTJAS_TJAState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTLP_ShftLvrPos_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[160];
}
bool eTLP_ShftLvrPos_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTMD_TCMTapMd_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[161];
}
bool eTMD_TCMTapMd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTRP_TrShftPtrn_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[162];
}
bool eTRP_TrShftPtrn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTRQR_TorqReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[163];
}
bool eTRQR_TorqReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTSS_TgtSptSrcSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[164];
}
bool eTSS_TgtSptSrcSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eUSR_UDWSwReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[165];
}
bool eUSR_UDWSwReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eUWR_UDWWrnngReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[166];
}
bool eUWR_UDWWrnngReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eVLD_ValidSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[167];
}
bool eVLD_ValidSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eVSEM_VSEMode_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[168];
}
bool eVSEM_VSEMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eVSES_VSESts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[169];
}
bool eVSES_VSESts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eVSLR_VsulznReq_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[170];
}
bool eVSLR_VsulznReq_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eVSL_StdStlSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[171];
}
bool eVSL_StdStlSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eVSW_AEBVehSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[172];
}
bool eVSW_AEBVehSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eVS_VehicleSeries_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[173];
}
bool eVS_VehicleSeries_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eWPR_FrtWiperSw_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[174];
}
bool eWPR_FrtWiperSw_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eWPS_BrkPreSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[175];
}
bool eWPS_BrkPreSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eWRD_WhlRotDirc_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[176];
}
bool eWRD_WhlRotDirc_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_ACCAccReqSts_t_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[177];
}
bool E_ACCAccReqSts_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_ACCESPECMReqSts_t_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[178];
}
bool E_ACCESPECMReqSts_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_ACCOAFSts_t_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[179];
}
bool E_ACCOAFSts_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_ACCReqSts_t_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[180];
}
bool E_ACCReqSts_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_ARBReqSts_t_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[181];
}
bool E_ARBReqSts_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_FCWWrngSts_t_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[182];
}
bool E_FCWWrngSts_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_JerkLvlReq_t_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[183];
}
bool E_JerkLvlReq_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTRPM_TrajPlnMd_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[184];
}
bool eTRPM_TrajPlnMd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTLS_TrgtLaneSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[185];
}
bool eTLS_TrgtLaneSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eTSQ_TrgtSelectQualty_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[186];
}
bool eTSQ_TrgtSelectQualty_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eOS_ObjSide_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[187];
}
bool eOS_ObjSide_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eOIT_ObjIndcrTurn_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[188];
}
bool eOIT_ObjIndcrTurn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eOLS_ObjLightSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[189];
}
bool eOLS_ObjLightSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eSDS_SnsrDataSts_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[190];
}
bool eSDS_SnsrDataSts_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eOR_ObjRebl_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[191];
}
bool eOR_ObjRebl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClassType_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[192];
}
bool ClassType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ColorType_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[193];
}
bool ColorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ObsType_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[194];
}
bool ObsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MaintenanceType_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[195];
}
bool MaintenanceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MotionType_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[196];
}
bool MotionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MotionHistoryType_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[197];
}
bool MotionHistoryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SideType_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[198];
}
bool SideType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eMS_MotionState_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[199];
}
bool eMS_MotionState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eILCS_ILCState_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[200];
}
bool eILCS_ILCState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eIDC_ILCDodgClass_descriptor() {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ads_5fcom_2eproto::file_level_enum_descriptors[201];
}
bool eIDC_ILCDodgClass_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void B1_LaneLineInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B1_LaneLineInfo::kLLIDLineLatPosA0SgFieldNumber;
const int B1_LaneLineInfo::kLLIAngRLineHdAngA1SgFieldNumber;
const int B1_LaneLineInfo::kLLICvLineCrvA2SgFieldNumber;
const int B1_LaneLineInfo::kLLICvrLineCrvRtA3SgFieldNumber;
const int B1_LaneLineInfo::kLLIDLineRngStartSgFieldNumber;
const int B1_LaneLineInfo::kLLIDLineRngEndSgFieldNumber;
const int B1_LaneLineInfo::kLLIStatLineQltyCnfdELCFFieldNumber;
const int B1_LaneLineInfo::kLLIStatLineColorELCRFieldNumber;
const int B1_LaneLineInfo::kLLIStatLineTypeELTPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B1_LaneLineInfo::B1_LaneLineInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B1_LaneLineInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B1_LaneLineInfo)
}
B1_LaneLineInfo::B1_LaneLineInfo(const B1_LaneLineInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lli_d_linelatposa0_sg_, &from.lli_d_linelatposa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&lli_stat_linetype_eltp_) -
    reinterpret_cast<char*>(&lli_d_linelatposa0_sg_)) + sizeof(lli_stat_linetype_eltp_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B1_LaneLineInfo)
}

void B1_LaneLineInfo::SharedCtor() {
  ::memset(&lli_d_linelatposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lli_stat_linetype_eltp_) -
      reinterpret_cast<char*>(&lli_d_linelatposa0_sg_)) + sizeof(lli_stat_linetype_eltp_));
}

B1_LaneLineInfo::~B1_LaneLineInfo() {
  // @@protoc_insertion_point(destructor:ads_common.B1_LaneLineInfo)
  SharedDtor();
}

void B1_LaneLineInfo::SharedDtor() {
}

void B1_LaneLineInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B1_LaneLineInfo::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B1_LaneLineInfo& B1_LaneLineInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B1_LaneLineInfo.base);
  return *internal_default_instance();
}


void B1_LaneLineInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B1_LaneLineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lli_d_linelatposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lli_stat_linetype_eltp_) -
      reinterpret_cast<char*>(&lli_d_linelatposa0_sg_)) + sizeof(lli_stat_linetype_eltp_));
  _internal_metadata_.Clear();
}

bool B1_LaneLineInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B1_LaneLineInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float LLI_d_LineLatPosA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lli_d_linelatposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LLI_angR_LineHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lli_angr_linehdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LLI_cv_LineCrvA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lli_cv_linecrva2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LLI_cvr_LineCrvRtA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lli_cvr_linecrvrta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LLI_d_LineRngStart_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lli_d_linerngstart_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LLI_d_LineRngEnd_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lli_d_linerngend_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn LLI_stat_LineQltyCnfd_eLCF = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lli_stat_lineqltycnfd_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor LLI_stat_LineColor_eLCR = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lli_stat_linecolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLTP_LaneType LLI_stat_LineType_eLTP = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lli_stat_linetype_eltp(static_cast< ::ads_common::eLTP_LaneType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B1_LaneLineInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B1_LaneLineInfo)
  return false;
#undef DO_
}

void B1_LaneLineInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B1_LaneLineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float LLI_d_LineLatPosA0_sg = 1;
  if (this->lli_d_linelatposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->lli_d_linelatposa0_sg(), output);
  }

  // float LLI_angR_LineHdAngA1_sg = 2;
  if (this->lli_angr_linehdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->lli_angr_linehdanga1_sg(), output);
  }

  // float LLI_cv_LineCrvA2_sg = 3;
  if (this->lli_cv_linecrva2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->lli_cv_linecrva2_sg(), output);
  }

  // float LLI_cvr_LineCrvRtA3_sg = 4;
  if (this->lli_cvr_linecrvrta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->lli_cvr_linecrvrta3_sg(), output);
  }

  // float LLI_d_LineRngStart_sg = 5;
  if (this->lli_d_linerngstart_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->lli_d_linerngstart_sg(), output);
  }

  // float LLI_d_LineRngEnd_sg = 6;
  if (this->lli_d_linerngend_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->lli_d_linerngend_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn LLI_stat_LineQltyCnfd_eLCF = 7;
  if (this->lli_stat_lineqltycnfd_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->lli_stat_lineqltycnfd_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor LLI_stat_LineColor_eLCR = 8;
  if (this->lli_stat_linecolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->lli_stat_linecolor_elcr(), output);
  }

  // .ads_common.eLTP_LaneType LLI_stat_LineType_eLTP = 9;
  if (this->lli_stat_linetype_eltp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->lli_stat_linetype_eltp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B1_LaneLineInfo)
}

::google::protobuf::uint8* B1_LaneLineInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B1_LaneLineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float LLI_d_LineLatPosA0_sg = 1;
  if (this->lli_d_linelatposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->lli_d_linelatposa0_sg(), target);
  }

  // float LLI_angR_LineHdAngA1_sg = 2;
  if (this->lli_angr_linehdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->lli_angr_linehdanga1_sg(), target);
  }

  // float LLI_cv_LineCrvA2_sg = 3;
  if (this->lli_cv_linecrva2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->lli_cv_linecrva2_sg(), target);
  }

  // float LLI_cvr_LineCrvRtA3_sg = 4;
  if (this->lli_cvr_linecrvrta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->lli_cvr_linecrvrta3_sg(), target);
  }

  // float LLI_d_LineRngStart_sg = 5;
  if (this->lli_d_linerngstart_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->lli_d_linerngstart_sg(), target);
  }

  // float LLI_d_LineRngEnd_sg = 6;
  if (this->lli_d_linerngend_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->lli_d_linerngend_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn LLI_stat_LineQltyCnfd_eLCF = 7;
  if (this->lli_stat_lineqltycnfd_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->lli_stat_lineqltycnfd_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor LLI_stat_LineColor_eLCR = 8;
  if (this->lli_stat_linecolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->lli_stat_linecolor_elcr(), target);
  }

  // .ads_common.eLTP_LaneType LLI_stat_LineType_eLTP = 9;
  if (this->lli_stat_linetype_eltp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->lli_stat_linetype_eltp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B1_LaneLineInfo)
  return target;
}

size_t B1_LaneLineInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B1_LaneLineInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float LLI_d_LineLatPosA0_sg = 1;
  if (this->lli_d_linelatposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float LLI_angR_LineHdAngA1_sg = 2;
  if (this->lli_angr_linehdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float LLI_cv_LineCrvA2_sg = 3;
  if (this->lli_cv_linecrva2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float LLI_cvr_LineCrvRtA3_sg = 4;
  if (this->lli_cvr_linecrvrta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // float LLI_d_LineRngStart_sg = 5;
  if (this->lli_d_linerngstart_sg() != 0) {
    total_size += 1 + 4;
  }

  // float LLI_d_LineRngEnd_sg = 6;
  if (this->lli_d_linerngend_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn LLI_stat_LineQltyCnfd_eLCF = 7;
  if (this->lli_stat_lineqltycnfd_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lli_stat_lineqltycnfd_elcf());
  }

  // .ads_common.eLCR_LaneColor LLI_stat_LineColor_eLCR = 8;
  if (this->lli_stat_linecolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lli_stat_linecolor_elcr());
  }

  // .ads_common.eLTP_LaneType LLI_stat_LineType_eLTP = 9;
  if (this->lli_stat_linetype_eltp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lli_stat_linetype_eltp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B1_LaneLineInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B1_LaneLineInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const B1_LaneLineInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B1_LaneLineInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B1_LaneLineInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B1_LaneLineInfo)
    MergeFrom(*source);
  }
}

void B1_LaneLineInfo::MergeFrom(const B1_LaneLineInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B1_LaneLineInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lli_d_linelatposa0_sg() != 0) {
    set_lli_d_linelatposa0_sg(from.lli_d_linelatposa0_sg());
  }
  if (from.lli_angr_linehdanga1_sg() != 0) {
    set_lli_angr_linehdanga1_sg(from.lli_angr_linehdanga1_sg());
  }
  if (from.lli_cv_linecrva2_sg() != 0) {
    set_lli_cv_linecrva2_sg(from.lli_cv_linecrva2_sg());
  }
  if (from.lli_cvr_linecrvrta3_sg() != 0) {
    set_lli_cvr_linecrvrta3_sg(from.lli_cvr_linecrvrta3_sg());
  }
  if (from.lli_d_linerngstart_sg() != 0) {
    set_lli_d_linerngstart_sg(from.lli_d_linerngstart_sg());
  }
  if (from.lli_d_linerngend_sg() != 0) {
    set_lli_d_linerngend_sg(from.lli_d_linerngend_sg());
  }
  if (from.lli_stat_lineqltycnfd_elcf() != 0) {
    set_lli_stat_lineqltycnfd_elcf(from.lli_stat_lineqltycnfd_elcf());
  }
  if (from.lli_stat_linecolor_elcr() != 0) {
    set_lli_stat_linecolor_elcr(from.lli_stat_linecolor_elcr());
  }
  if (from.lli_stat_linetype_eltp() != 0) {
    set_lli_stat_linetype_eltp(from.lli_stat_linetype_eltp());
  }
}

void B1_LaneLineInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B1_LaneLineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B1_LaneLineInfo::CopyFrom(const B1_LaneLineInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B1_LaneLineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B1_LaneLineInfo::IsInitialized() const {
  return true;
}

void B1_LaneLineInfo::Swap(B1_LaneLineInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B1_LaneLineInfo::InternalSwap(B1_LaneLineInfo* other) {
  using std::swap;
  swap(lli_d_linelatposa0_sg_, other->lli_d_linelatposa0_sg_);
  swap(lli_angr_linehdanga1_sg_, other->lli_angr_linehdanga1_sg_);
  swap(lli_cv_linecrva2_sg_, other->lli_cv_linecrva2_sg_);
  swap(lli_cvr_linecrvrta3_sg_, other->lli_cvr_linecrvrta3_sg_);
  swap(lli_d_linerngstart_sg_, other->lli_d_linerngstart_sg_);
  swap(lli_d_linerngend_sg_, other->lli_d_linerngend_sg_);
  swap(lli_stat_lineqltycnfd_elcf_, other->lli_stat_lineqltycnfd_elcf_);
  swap(lli_stat_linecolor_elcr_, other->lli_stat_linecolor_elcr_);
  swap(lli_stat_linetype_eltp_, other->lli_stat_linetype_eltp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B1_LaneLineInfo::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B1_RefLineInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B1_RefLineInfo::kRLIDLineLatPosA0SgFieldNumber;
const int B1_RefLineInfo::kRLIAngRLineHdAngA1SgFieldNumber;
const int B1_RefLineInfo::kRLICvLineCrvA2SgFieldNumber;
const int B1_RefLineInfo::kRLICvrLineCrvRtA3SgFieldNumber;
const int B1_RefLineInfo::kRLIVSpdLmtValSgFieldNumber;
const int B1_RefLineInfo::kRLIDLineRngStartSgFieldNumber;
const int B1_RefLineInfo::kRLIDLineRngEndSgFieldNumber;
const int B1_RefLineInfo::kRLIStatLineQltyCnfdELCFFieldNumber;
const int B1_RefLineInfo::kRLIStatLineColorELCRFieldNumber;
const int B1_RefLineInfo::kRLIStatLineTypeELTPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B1_RefLineInfo::B1_RefLineInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B1_RefLineInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B1_RefLineInfo)
}
B1_RefLineInfo::B1_RefLineInfo(const B1_RefLineInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rli_d_linelatposa0_sg_, &from.rli_d_linelatposa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&rli_stat_linetype_eltp_) -
    reinterpret_cast<char*>(&rli_d_linelatposa0_sg_)) + sizeof(rli_stat_linetype_eltp_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B1_RefLineInfo)
}

void B1_RefLineInfo::SharedCtor() {
  ::memset(&rli_d_linelatposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rli_stat_linetype_eltp_) -
      reinterpret_cast<char*>(&rli_d_linelatposa0_sg_)) + sizeof(rli_stat_linetype_eltp_));
}

B1_RefLineInfo::~B1_RefLineInfo() {
  // @@protoc_insertion_point(destructor:ads_common.B1_RefLineInfo)
  SharedDtor();
}

void B1_RefLineInfo::SharedDtor() {
}

void B1_RefLineInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B1_RefLineInfo::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B1_RefLineInfo& B1_RefLineInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B1_RefLineInfo.base);
  return *internal_default_instance();
}


void B1_RefLineInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B1_RefLineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rli_d_linelatposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rli_stat_linetype_eltp_) -
      reinterpret_cast<char*>(&rli_d_linelatposa0_sg_)) + sizeof(rli_stat_linetype_eltp_));
  _internal_metadata_.Clear();
}

bool B1_RefLineInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B1_RefLineInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float RLI_d_LineLatPosA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rli_d_linelatposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float RLI_angR_LineHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rli_angr_linehdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float RLI_cv_LineCrvA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rli_cv_linecrva2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float RLI_cvr_LineCrvRtA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rli_cvr_linecrvrta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float RLI_V_SpdLmtVal_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rli_v_spdlmtval_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float RLI_d_LineRngStart_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rli_d_linerngstart_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float RLI_d_LineRngEnd_sg = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rli_d_linerngend_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn RLI_stat_LineQltyCnfd_eLCF = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rli_stat_lineqltycnfd_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor RLI_stat_LineColor_eLCR = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rli_stat_linecolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLTP_LaneType RLI_stat_LineType_eLTP = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rli_stat_linetype_eltp(static_cast< ::ads_common::eLTP_LaneType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B1_RefLineInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B1_RefLineInfo)
  return false;
#undef DO_
}

void B1_RefLineInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B1_RefLineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float RLI_d_LineLatPosA0_sg = 1;
  if (this->rli_d_linelatposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->rli_d_linelatposa0_sg(), output);
  }

  // float RLI_angR_LineHdAngA1_sg = 2;
  if (this->rli_angr_linehdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->rli_angr_linehdanga1_sg(), output);
  }

  // float RLI_cv_LineCrvA2_sg = 3;
  if (this->rli_cv_linecrva2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->rli_cv_linecrva2_sg(), output);
  }

  // float RLI_cvr_LineCrvRtA3_sg = 4;
  if (this->rli_cvr_linecrvrta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rli_cvr_linecrvrta3_sg(), output);
  }

  // float RLI_V_SpdLmtVal_sg = 5;
  if (this->rli_v_spdlmtval_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rli_v_spdlmtval_sg(), output);
  }

  // float RLI_d_LineRngStart_sg = 6;
  if (this->rli_d_linerngstart_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->rli_d_linerngstart_sg(), output);
  }

  // float RLI_d_LineRngEnd_sg = 7;
  if (this->rli_d_linerngend_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->rli_d_linerngend_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn RLI_stat_LineQltyCnfd_eLCF = 8;
  if (this->rli_stat_lineqltycnfd_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->rli_stat_lineqltycnfd_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor RLI_stat_LineColor_eLCR = 9;
  if (this->rli_stat_linecolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->rli_stat_linecolor_elcr(), output);
  }

  // .ads_common.eLTP_LaneType RLI_stat_LineType_eLTP = 10;
  if (this->rli_stat_linetype_eltp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->rli_stat_linetype_eltp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B1_RefLineInfo)
}

::google::protobuf::uint8* B1_RefLineInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B1_RefLineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float RLI_d_LineLatPosA0_sg = 1;
  if (this->rli_d_linelatposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->rli_d_linelatposa0_sg(), target);
  }

  // float RLI_angR_LineHdAngA1_sg = 2;
  if (this->rli_angr_linehdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->rli_angr_linehdanga1_sg(), target);
  }

  // float RLI_cv_LineCrvA2_sg = 3;
  if (this->rli_cv_linecrva2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->rli_cv_linecrva2_sg(), target);
  }

  // float RLI_cvr_LineCrvRtA3_sg = 4;
  if (this->rli_cvr_linecrvrta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rli_cvr_linecrvrta3_sg(), target);
  }

  // float RLI_V_SpdLmtVal_sg = 5;
  if (this->rli_v_spdlmtval_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rli_v_spdlmtval_sg(), target);
  }

  // float RLI_d_LineRngStart_sg = 6;
  if (this->rli_d_linerngstart_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->rli_d_linerngstart_sg(), target);
  }

  // float RLI_d_LineRngEnd_sg = 7;
  if (this->rli_d_linerngend_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->rli_d_linerngend_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn RLI_stat_LineQltyCnfd_eLCF = 8;
  if (this->rli_stat_lineqltycnfd_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->rli_stat_lineqltycnfd_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor RLI_stat_LineColor_eLCR = 9;
  if (this->rli_stat_linecolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->rli_stat_linecolor_elcr(), target);
  }

  // .ads_common.eLTP_LaneType RLI_stat_LineType_eLTP = 10;
  if (this->rli_stat_linetype_eltp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->rli_stat_linetype_eltp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B1_RefLineInfo)
  return target;
}

size_t B1_RefLineInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B1_RefLineInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float RLI_d_LineLatPosA0_sg = 1;
  if (this->rli_d_linelatposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float RLI_angR_LineHdAngA1_sg = 2;
  if (this->rli_angr_linehdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float RLI_cv_LineCrvA2_sg = 3;
  if (this->rli_cv_linecrva2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float RLI_cvr_LineCrvRtA3_sg = 4;
  if (this->rli_cvr_linecrvrta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // float RLI_V_SpdLmtVal_sg = 5;
  if (this->rli_v_spdlmtval_sg() != 0) {
    total_size += 1 + 4;
  }

  // float RLI_d_LineRngStart_sg = 6;
  if (this->rli_d_linerngstart_sg() != 0) {
    total_size += 1 + 4;
  }

  // float RLI_d_LineRngEnd_sg = 7;
  if (this->rli_d_linerngend_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn RLI_stat_LineQltyCnfd_eLCF = 8;
  if (this->rli_stat_lineqltycnfd_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rli_stat_lineqltycnfd_elcf());
  }

  // .ads_common.eLCR_LaneColor RLI_stat_LineColor_eLCR = 9;
  if (this->rli_stat_linecolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rli_stat_linecolor_elcr());
  }

  // .ads_common.eLTP_LaneType RLI_stat_LineType_eLTP = 10;
  if (this->rli_stat_linetype_eltp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rli_stat_linetype_eltp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B1_RefLineInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B1_RefLineInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const B1_RefLineInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B1_RefLineInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B1_RefLineInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B1_RefLineInfo)
    MergeFrom(*source);
  }
}

void B1_RefLineInfo::MergeFrom(const B1_RefLineInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B1_RefLineInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rli_d_linelatposa0_sg() != 0) {
    set_rli_d_linelatposa0_sg(from.rli_d_linelatposa0_sg());
  }
  if (from.rli_angr_linehdanga1_sg() != 0) {
    set_rli_angr_linehdanga1_sg(from.rli_angr_linehdanga1_sg());
  }
  if (from.rli_cv_linecrva2_sg() != 0) {
    set_rli_cv_linecrva2_sg(from.rli_cv_linecrva2_sg());
  }
  if (from.rli_cvr_linecrvrta3_sg() != 0) {
    set_rli_cvr_linecrvrta3_sg(from.rli_cvr_linecrvrta3_sg());
  }
  if (from.rli_v_spdlmtval_sg() != 0) {
    set_rli_v_spdlmtval_sg(from.rli_v_spdlmtval_sg());
  }
  if (from.rli_d_linerngstart_sg() != 0) {
    set_rli_d_linerngstart_sg(from.rli_d_linerngstart_sg());
  }
  if (from.rli_d_linerngend_sg() != 0) {
    set_rli_d_linerngend_sg(from.rli_d_linerngend_sg());
  }
  if (from.rli_stat_lineqltycnfd_elcf() != 0) {
    set_rli_stat_lineqltycnfd_elcf(from.rli_stat_lineqltycnfd_elcf());
  }
  if (from.rli_stat_linecolor_elcr() != 0) {
    set_rli_stat_linecolor_elcr(from.rli_stat_linecolor_elcr());
  }
  if (from.rli_stat_linetype_eltp() != 0) {
    set_rli_stat_linetype_eltp(from.rli_stat_linetype_eltp());
  }
}

void B1_RefLineInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B1_RefLineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B1_RefLineInfo::CopyFrom(const B1_RefLineInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B1_RefLineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B1_RefLineInfo::IsInitialized() const {
  return true;
}

void B1_RefLineInfo::Swap(B1_RefLineInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B1_RefLineInfo::InternalSwap(B1_RefLineInfo* other) {
  using std::swap;
  swap(rli_d_linelatposa0_sg_, other->rli_d_linelatposa0_sg_);
  swap(rli_angr_linehdanga1_sg_, other->rli_angr_linehdanga1_sg_);
  swap(rli_cv_linecrva2_sg_, other->rli_cv_linecrva2_sg_);
  swap(rli_cvr_linecrvrta3_sg_, other->rli_cvr_linecrvrta3_sg_);
  swap(rli_v_spdlmtval_sg_, other->rli_v_spdlmtval_sg_);
  swap(rli_d_linerngstart_sg_, other->rli_d_linerngstart_sg_);
  swap(rli_d_linerngend_sg_, other->rli_d_linerngend_sg_);
  swap(rli_stat_lineqltycnfd_elcf_, other->rli_stat_lineqltycnfd_elcf_);
  swap(rli_stat_linecolor_elcr_, other->rli_stat_linecolor_elcr_);
  swap(rli_stat_linetype_eltp_, other->rli_stat_linetype_eltp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B1_RefLineInfo::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HafLonTrajParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HafLonTrajParam::kA0FieldNumber;
const int HafLonTrajParam::kA1FieldNumber;
const int HafLonTrajParam::kA2FieldNumber;
const int HafLonTrajParam::kA3FieldNumber;
const int HafLonTrajParam::kA4FieldNumber;
const int HafLonTrajParam::kA5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HafLonTrajParam::HafLonTrajParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_HafLonTrajParam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.HafLonTrajParam)
}
HafLonTrajParam::HafLonTrajParam(const HafLonTrajParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&a0_, &from.a0_,
    static_cast<size_t>(reinterpret_cast<char*>(&a5_) -
    reinterpret_cast<char*>(&a0_)) + sizeof(a5_));
  // @@protoc_insertion_point(copy_constructor:ads_common.HafLonTrajParam)
}

void HafLonTrajParam::SharedCtor() {
  ::memset(&a0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a5_) -
      reinterpret_cast<char*>(&a0_)) + sizeof(a5_));
}

HafLonTrajParam::~HafLonTrajParam() {
  // @@protoc_insertion_point(destructor:ads_common.HafLonTrajParam)
  SharedDtor();
}

void HafLonTrajParam::SharedDtor() {
}

void HafLonTrajParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HafLonTrajParam::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HafLonTrajParam& HafLonTrajParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_HafLonTrajParam.base);
  return *internal_default_instance();
}


void HafLonTrajParam::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.HafLonTrajParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&a0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a5_) -
      reinterpret_cast<char*>(&a0_)) + sizeof(a5_));
  _internal_metadata_.Clear();
}

bool HafLonTrajParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.HafLonTrajParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float A0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float A1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float A2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float A3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float A4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float A5 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.HafLonTrajParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.HafLonTrajParam)
  return false;
#undef DO_
}

void HafLonTrajParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.HafLonTrajParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float A0 = 1;
  if (this->a0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->a0(), output);
  }

  // float A1 = 2;
  if (this->a1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->a1(), output);
  }

  // float A2 = 3;
  if (this->a2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->a2(), output);
  }

  // float A3 = 4;
  if (this->a3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->a3(), output);
  }

  // float A4 = 5;
  if (this->a4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->a4(), output);
  }

  // float A5 = 6;
  if (this->a5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->a5(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.HafLonTrajParam)
}

::google::protobuf::uint8* HafLonTrajParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.HafLonTrajParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float A0 = 1;
  if (this->a0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->a0(), target);
  }

  // float A1 = 2;
  if (this->a1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->a1(), target);
  }

  // float A2 = 3;
  if (this->a2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->a2(), target);
  }

  // float A3 = 4;
  if (this->a3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->a3(), target);
  }

  // float A4 = 5;
  if (this->a4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->a4(), target);
  }

  // float A5 = 6;
  if (this->a5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->a5(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.HafLonTrajParam)
  return target;
}

size_t HafLonTrajParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.HafLonTrajParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float A0 = 1;
  if (this->a0() != 0) {
    total_size += 1 + 4;
  }

  // float A1 = 2;
  if (this->a1() != 0) {
    total_size += 1 + 4;
  }

  // float A2 = 3;
  if (this->a2() != 0) {
    total_size += 1 + 4;
  }

  // float A3 = 4;
  if (this->a3() != 0) {
    total_size += 1 + 4;
  }

  // float A4 = 5;
  if (this->a4() != 0) {
    total_size += 1 + 4;
  }

  // float A5 = 6;
  if (this->a5() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HafLonTrajParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.HafLonTrajParam)
  GOOGLE_DCHECK_NE(&from, this);
  const HafLonTrajParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HafLonTrajParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.HafLonTrajParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.HafLonTrajParam)
    MergeFrom(*source);
  }
}

void HafLonTrajParam::MergeFrom(const HafLonTrajParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.HafLonTrajParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.a0() != 0) {
    set_a0(from.a0());
  }
  if (from.a1() != 0) {
    set_a1(from.a1());
  }
  if (from.a2() != 0) {
    set_a2(from.a2());
  }
  if (from.a3() != 0) {
    set_a3(from.a3());
  }
  if (from.a4() != 0) {
    set_a4(from.a4());
  }
  if (from.a5() != 0) {
    set_a5(from.a5());
  }
}

void HafLonTrajParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.HafLonTrajParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HafLonTrajParam::CopyFrom(const HafLonTrajParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.HafLonTrajParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HafLonTrajParam::IsInitialized() const {
  return true;
}

void HafLonTrajParam::Swap(HafLonTrajParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HafLonTrajParam::InternalSwap(HafLonTrajParam* other) {
  using std::swap;
  swap(a0_, other->a0_);
  swap(a1_, other->a1_);
  swap(a2_, other->a2_);
  swap(a3_, other->a3_);
  swap(a4_, other->a4_);
  swap(a5_, other->a5_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HafLonTrajParam::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCObjVldLv2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCObjVldLv2::kACCIsACC01VldLv2BlFieldNumber;
const int B_ACCObjVldLv2::kACCIsACC02VldLv2BlFieldNumber;
const int B_ACCObjVldLv2::kACCIsACC03VldLv2BlFieldNumber;
const int B_ACCObjVldLv2::kACCIsACC04VldLv2BlFieldNumber;
const int B_ACCObjVldLv2::kACCIsACC05VldLv2BlFieldNumber;
const int B_ACCObjVldLv2::kACCIsACC06VldLv2BlFieldNumber;
const int B_ACCObjVldLv2::kACCIsACCStn01VldLv2BlFieldNumber;
const int B_ACCObjVldLv2::kACCIsACCStn02VldLv2BlFieldNumber;
const int B_ACCObjVldLv2::kACCIsACCStn03VldLv2BlFieldNumber;
const int B_ACCObjVldLv2::kACCIsACCStn04VldLv2BlFieldNumber;
const int B_ACCObjVldLv2::kACCIsACCStn05VldLv2BlFieldNumber;
const int B_ACCObjVldLv2::kACCIsACCStn06VldLv2BlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCObjVldLv2::B_ACCObjVldLv2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCObjVldLv2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCObjVldLv2)
}
B_ACCObjVldLv2::B_ACCObjVldLv2(const B_ACCObjVldLv2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&acc_is_acc01vldlv2_bl_, &from.acc_is_acc01vldlv2_bl_,
    static_cast<size_t>(reinterpret_cast<char*>(&acc_is_accstn06vldlv2_bl_) -
    reinterpret_cast<char*>(&acc_is_acc01vldlv2_bl_)) + sizeof(acc_is_accstn06vldlv2_bl_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCObjVldLv2)
}

void B_ACCObjVldLv2::SharedCtor() {
  ::memset(&acc_is_acc01vldlv2_bl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acc_is_accstn06vldlv2_bl_) -
      reinterpret_cast<char*>(&acc_is_acc01vldlv2_bl_)) + sizeof(acc_is_accstn06vldlv2_bl_));
}

B_ACCObjVldLv2::~B_ACCObjVldLv2() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCObjVldLv2)
  SharedDtor();
}

void B_ACCObjVldLv2::SharedDtor() {
}

void B_ACCObjVldLv2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCObjVldLv2::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCObjVldLv2& B_ACCObjVldLv2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCObjVldLv2.base);
  return *internal_default_instance();
}


void B_ACCObjVldLv2::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCObjVldLv2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&acc_is_acc01vldlv2_bl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acc_is_accstn06vldlv2_bl_) -
      reinterpret_cast<char*>(&acc_is_acc01vldlv2_bl_)) + sizeof(acc_is_accstn06vldlv2_bl_));
  _internal_metadata_.Clear();
}

bool B_ACCObjVldLv2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCObjVldLv2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool ACC_is_ACC01VldLv2_bl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_acc01vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_ACC02VldLv2_bl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_acc02vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_ACC03VldLv2_bl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_acc03vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_ACC04VldLv2_bl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_acc04vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_ACC05VldLv2_bl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_acc05vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_ACC06VldLv2_bl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_acc06vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_ACCStn01VldLv2_bl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_accstn01vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_ACCStn02VldLv2_bl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_accstn02vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_ACCStn03VldLv2_bl = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_accstn03vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_ACCStn04VldLv2_bl = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_accstn04vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_ACCStn05VldLv2_bl = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_accstn05vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_ACCStn06VldLv2_bl = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_accstn06vldlv2_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCObjVldLv2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCObjVldLv2)
  return false;
#undef DO_
}

void B_ACCObjVldLv2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCObjVldLv2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ACC_is_ACC01VldLv2_bl = 1;
  if (this->acc_is_acc01vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->acc_is_acc01vldlv2_bl(), output);
  }

  // bool ACC_is_ACC02VldLv2_bl = 2;
  if (this->acc_is_acc02vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->acc_is_acc02vldlv2_bl(), output);
  }

  // bool ACC_is_ACC03VldLv2_bl = 3;
  if (this->acc_is_acc03vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->acc_is_acc03vldlv2_bl(), output);
  }

  // bool ACC_is_ACC04VldLv2_bl = 4;
  if (this->acc_is_acc04vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->acc_is_acc04vldlv2_bl(), output);
  }

  // bool ACC_is_ACC05VldLv2_bl = 5;
  if (this->acc_is_acc05vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->acc_is_acc05vldlv2_bl(), output);
  }

  // bool ACC_is_ACC06VldLv2_bl = 6;
  if (this->acc_is_acc06vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->acc_is_acc06vldlv2_bl(), output);
  }

  // bool ACC_is_ACCStn01VldLv2_bl = 7;
  if (this->acc_is_accstn01vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->acc_is_accstn01vldlv2_bl(), output);
  }

  // bool ACC_is_ACCStn02VldLv2_bl = 8;
  if (this->acc_is_accstn02vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->acc_is_accstn02vldlv2_bl(), output);
  }

  // bool ACC_is_ACCStn03VldLv2_bl = 9;
  if (this->acc_is_accstn03vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->acc_is_accstn03vldlv2_bl(), output);
  }

  // bool ACC_is_ACCStn04VldLv2_bl = 10;
  if (this->acc_is_accstn04vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->acc_is_accstn04vldlv2_bl(), output);
  }

  // bool ACC_is_ACCStn05VldLv2_bl = 11;
  if (this->acc_is_accstn05vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->acc_is_accstn05vldlv2_bl(), output);
  }

  // bool ACC_is_ACCStn06VldLv2_bl = 12;
  if (this->acc_is_accstn06vldlv2_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->acc_is_accstn06vldlv2_bl(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCObjVldLv2)
}

::google::protobuf::uint8* B_ACCObjVldLv2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCObjVldLv2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ACC_is_ACC01VldLv2_bl = 1;
  if (this->acc_is_acc01vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->acc_is_acc01vldlv2_bl(), target);
  }

  // bool ACC_is_ACC02VldLv2_bl = 2;
  if (this->acc_is_acc02vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->acc_is_acc02vldlv2_bl(), target);
  }

  // bool ACC_is_ACC03VldLv2_bl = 3;
  if (this->acc_is_acc03vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->acc_is_acc03vldlv2_bl(), target);
  }

  // bool ACC_is_ACC04VldLv2_bl = 4;
  if (this->acc_is_acc04vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->acc_is_acc04vldlv2_bl(), target);
  }

  // bool ACC_is_ACC05VldLv2_bl = 5;
  if (this->acc_is_acc05vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->acc_is_acc05vldlv2_bl(), target);
  }

  // bool ACC_is_ACC06VldLv2_bl = 6;
  if (this->acc_is_acc06vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->acc_is_acc06vldlv2_bl(), target);
  }

  // bool ACC_is_ACCStn01VldLv2_bl = 7;
  if (this->acc_is_accstn01vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->acc_is_accstn01vldlv2_bl(), target);
  }

  // bool ACC_is_ACCStn02VldLv2_bl = 8;
  if (this->acc_is_accstn02vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->acc_is_accstn02vldlv2_bl(), target);
  }

  // bool ACC_is_ACCStn03VldLv2_bl = 9;
  if (this->acc_is_accstn03vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->acc_is_accstn03vldlv2_bl(), target);
  }

  // bool ACC_is_ACCStn04VldLv2_bl = 10;
  if (this->acc_is_accstn04vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->acc_is_accstn04vldlv2_bl(), target);
  }

  // bool ACC_is_ACCStn05VldLv2_bl = 11;
  if (this->acc_is_accstn05vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->acc_is_accstn05vldlv2_bl(), target);
  }

  // bool ACC_is_ACCStn06VldLv2_bl = 12;
  if (this->acc_is_accstn06vldlv2_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->acc_is_accstn06vldlv2_bl(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCObjVldLv2)
  return target;
}

size_t B_ACCObjVldLv2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCObjVldLv2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool ACC_is_ACC01VldLv2_bl = 1;
  if (this->acc_is_acc01vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_ACC02VldLv2_bl = 2;
  if (this->acc_is_acc02vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_ACC03VldLv2_bl = 3;
  if (this->acc_is_acc03vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_ACC04VldLv2_bl = 4;
  if (this->acc_is_acc04vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_ACC05VldLv2_bl = 5;
  if (this->acc_is_acc05vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_ACC06VldLv2_bl = 6;
  if (this->acc_is_acc06vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_ACCStn01VldLv2_bl = 7;
  if (this->acc_is_accstn01vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_ACCStn02VldLv2_bl = 8;
  if (this->acc_is_accstn02vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_ACCStn03VldLv2_bl = 9;
  if (this->acc_is_accstn03vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_ACCStn04VldLv2_bl = 10;
  if (this->acc_is_accstn04vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_ACCStn05VldLv2_bl = 11;
  if (this->acc_is_accstn05vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_ACCStn06VldLv2_bl = 12;
  if (this->acc_is_accstn06vldlv2_bl() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCObjVldLv2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCObjVldLv2)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCObjVldLv2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCObjVldLv2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCObjVldLv2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCObjVldLv2)
    MergeFrom(*source);
  }
}

void B_ACCObjVldLv2::MergeFrom(const B_ACCObjVldLv2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCObjVldLv2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.acc_is_acc01vldlv2_bl() != 0) {
    set_acc_is_acc01vldlv2_bl(from.acc_is_acc01vldlv2_bl());
  }
  if (from.acc_is_acc02vldlv2_bl() != 0) {
    set_acc_is_acc02vldlv2_bl(from.acc_is_acc02vldlv2_bl());
  }
  if (from.acc_is_acc03vldlv2_bl() != 0) {
    set_acc_is_acc03vldlv2_bl(from.acc_is_acc03vldlv2_bl());
  }
  if (from.acc_is_acc04vldlv2_bl() != 0) {
    set_acc_is_acc04vldlv2_bl(from.acc_is_acc04vldlv2_bl());
  }
  if (from.acc_is_acc05vldlv2_bl() != 0) {
    set_acc_is_acc05vldlv2_bl(from.acc_is_acc05vldlv2_bl());
  }
  if (from.acc_is_acc06vldlv2_bl() != 0) {
    set_acc_is_acc06vldlv2_bl(from.acc_is_acc06vldlv2_bl());
  }
  if (from.acc_is_accstn01vldlv2_bl() != 0) {
    set_acc_is_accstn01vldlv2_bl(from.acc_is_accstn01vldlv2_bl());
  }
  if (from.acc_is_accstn02vldlv2_bl() != 0) {
    set_acc_is_accstn02vldlv2_bl(from.acc_is_accstn02vldlv2_bl());
  }
  if (from.acc_is_accstn03vldlv2_bl() != 0) {
    set_acc_is_accstn03vldlv2_bl(from.acc_is_accstn03vldlv2_bl());
  }
  if (from.acc_is_accstn04vldlv2_bl() != 0) {
    set_acc_is_accstn04vldlv2_bl(from.acc_is_accstn04vldlv2_bl());
  }
  if (from.acc_is_accstn05vldlv2_bl() != 0) {
    set_acc_is_accstn05vldlv2_bl(from.acc_is_accstn05vldlv2_bl());
  }
  if (from.acc_is_accstn06vldlv2_bl() != 0) {
    set_acc_is_accstn06vldlv2_bl(from.acc_is_accstn06vldlv2_bl());
  }
}

void B_ACCObjVldLv2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCObjVldLv2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCObjVldLv2::CopyFrom(const B_ACCObjVldLv2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCObjVldLv2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCObjVldLv2::IsInitialized() const {
  return true;
}

void B_ACCObjVldLv2::Swap(B_ACCObjVldLv2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCObjVldLv2::InternalSwap(B_ACCObjVldLv2* other) {
  using std::swap;
  swap(acc_is_acc01vldlv2_bl_, other->acc_is_acc01vldlv2_bl_);
  swap(acc_is_acc02vldlv2_bl_, other->acc_is_acc02vldlv2_bl_);
  swap(acc_is_acc03vldlv2_bl_, other->acc_is_acc03vldlv2_bl_);
  swap(acc_is_acc04vldlv2_bl_, other->acc_is_acc04vldlv2_bl_);
  swap(acc_is_acc05vldlv2_bl_, other->acc_is_acc05vldlv2_bl_);
  swap(acc_is_acc06vldlv2_bl_, other->acc_is_acc06vldlv2_bl_);
  swap(acc_is_accstn01vldlv2_bl_, other->acc_is_accstn01vldlv2_bl_);
  swap(acc_is_accstn02vldlv2_bl_, other->acc_is_accstn02vldlv2_bl_);
  swap(acc_is_accstn03vldlv2_bl_, other->acc_is_accstn03vldlv2_bl_);
  swap(acc_is_accstn04vldlv2_bl_, other->acc_is_accstn04vldlv2_bl_);
  swap(acc_is_accstn05vldlv2_bl_, other->acc_is_accstn05vldlv2_bl_);
  swap(acc_is_accstn06vldlv2_bl_, other->acc_is_accstn06vldlv2_bl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCObjVldLv2::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCObj03_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCObj03_st::kDAINIndxACC03IDU32FieldNumber;
const int B_ACCObj03_st::kDAINVACC03LongtSpdSgFieldNumber;
const int B_ACCObj03_st::kDAINVACC03LatSpdSgFieldNumber;
const int B_ACCObj03_st::kDAINDACC03LongtDistSgFieldNumber;
const int B_ACCObj03_st::kDAINDACC03LatDistSgFieldNumber;
const int B_ACCObj03_st::kDAINStatACC03SnsrECSNRFieldNumber;
const int B_ACCObj03_st::kDAINStatACC03TrkECTRKFieldNumber;
const int B_ACCObj03_st::kDAINStatACC03MvStsECMVFieldNumber;
const int B_ACCObj03_st::kDAINAACC03LongtAccSgFieldNumber;
const int B_ACCObj03_st::kDAINAACC03LatAccSgFieldNumber;
const int B_ACCObj03_st::kDAINStatACC03ClassECLSFieldNumber;
const int B_ACCObj03_st::kDAINDACC03WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCObj03_st::B_ACCObj03_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCObj03_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCObj03_st)
}
B_ACCObj03_st::B_ACCObj03_st(const B_ACCObj03_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_acc03id_u32_, &from.da_in_indx_acc03id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_acc03width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_acc03id_u32_)) + sizeof(da_in_d_acc03width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCObj03_st)
}

void B_ACCObj03_st::SharedCtor() {
  ::memset(&da_in_indx_acc03id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc03width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc03id_u32_)) + sizeof(da_in_d_acc03width_sg_));
}

B_ACCObj03_st::~B_ACCObj03_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCObj03_st)
  SharedDtor();
}

void B_ACCObj03_st::SharedDtor() {
}

void B_ACCObj03_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCObj03_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCObj03_st& B_ACCObj03_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCObj03_st.base);
  return *internal_default_instance();
}


void B_ACCObj03_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCObj03_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_acc03id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc03width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc03id_u32_)) + sizeof(da_in_d_acc03width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCObj03_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCObj03_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACC03ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_acc03id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC03LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc03longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC03LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc03latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC03LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc03longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC03LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc03latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC03Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc03snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC03Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc03trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC03MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc03mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC03LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc03longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC03LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc03latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC03Class_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc03class_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC03Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc03width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCObj03_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCObj03_st)
  return false;
#undef DO_
}

void B_ACCObj03_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCObj03_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC03ID_u32 = 1;
  if (this->da_in_indx_acc03id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_acc03id_u32(), output);
  }

  // float DA_IN_v_ACC03LongtSpd_sg = 2;
  if (this->da_in_v_acc03longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_acc03longtspd_sg(), output);
  }

  // float DA_IN_v_ACC03LatSpd_sg = 3;
  if (this->da_in_v_acc03latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_acc03latspd_sg(), output);
  }

  // float DA_IN_d_ACC03LongtDist_sg = 4;
  if (this->da_in_d_acc03longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_acc03longtdist_sg(), output);
  }

  // float DA_IN_d_ACC03LatDist_sg = 5;
  if (this->da_in_d_acc03latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_acc03latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC03Snsr_eCSNR = 6;
  if (this->da_in_stat_acc03snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_acc03snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC03Trk_eCTRK = 7;
  if (this->da_in_stat_acc03trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_acc03trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC03MvSts_eCMV = 8;
  if (this->da_in_stat_acc03mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_acc03mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACC03LongtAcc_sg = 9;
  if (this->da_in_a_acc03longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_acc03longtacc_sg(), output);
  }

  // float DA_IN_a_ACC03LatAcc_sg = 10;
  if (this->da_in_a_acc03latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_acc03latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC03Class_eCLS = 11;
  if (this->da_in_stat_acc03class_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_acc03class_ecls(), output);
  }

  // float DA_IN_d_ACC03Width_sg = 12;
  if (this->da_in_d_acc03width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_acc03width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCObj03_st)
}

::google::protobuf::uint8* B_ACCObj03_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCObj03_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC03ID_u32 = 1;
  if (this->da_in_indx_acc03id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_acc03id_u32(), target);
  }

  // float DA_IN_v_ACC03LongtSpd_sg = 2;
  if (this->da_in_v_acc03longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_acc03longtspd_sg(), target);
  }

  // float DA_IN_v_ACC03LatSpd_sg = 3;
  if (this->da_in_v_acc03latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_acc03latspd_sg(), target);
  }

  // float DA_IN_d_ACC03LongtDist_sg = 4;
  if (this->da_in_d_acc03longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_acc03longtdist_sg(), target);
  }

  // float DA_IN_d_ACC03LatDist_sg = 5;
  if (this->da_in_d_acc03latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_acc03latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC03Snsr_eCSNR = 6;
  if (this->da_in_stat_acc03snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_acc03snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC03Trk_eCTRK = 7;
  if (this->da_in_stat_acc03trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_acc03trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC03MvSts_eCMV = 8;
  if (this->da_in_stat_acc03mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_acc03mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACC03LongtAcc_sg = 9;
  if (this->da_in_a_acc03longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_acc03longtacc_sg(), target);
  }

  // float DA_IN_a_ACC03LatAcc_sg = 10;
  if (this->da_in_a_acc03latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_acc03latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC03Class_eCLS = 11;
  if (this->da_in_stat_acc03class_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_acc03class_ecls(), target);
  }

  // float DA_IN_d_ACC03Width_sg = 12;
  if (this->da_in_d_acc03width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_acc03width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCObj03_st)
  return target;
}

size_t B_ACCObj03_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCObj03_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACC03ID_u32 = 1;
  if (this->da_in_indx_acc03id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_acc03id_u32());
  }

  // float DA_IN_v_ACC03LongtSpd_sg = 2;
  if (this->da_in_v_acc03longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACC03LatSpd_sg = 3;
  if (this->da_in_v_acc03latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC03LongtDist_sg = 4;
  if (this->da_in_d_acc03longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC03LatDist_sg = 5;
  if (this->da_in_d_acc03latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC03Snsr_eCSNR = 6;
  if (this->da_in_stat_acc03snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc03snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC03Trk_eCTRK = 7;
  if (this->da_in_stat_acc03trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc03trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC03MvSts_eCMV = 8;
  if (this->da_in_stat_acc03mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc03mvsts_ecmv());
  }

  // float DA_IN_a_ACC03LongtAcc_sg = 9;
  if (this->da_in_a_acc03longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACC03LatAcc_sg = 10;
  if (this->da_in_a_acc03latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC03Class_eCLS = 11;
  if (this->da_in_stat_acc03class_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc03class_ecls());
  }

  // float DA_IN_d_ACC03Width_sg = 12;
  if (this->da_in_d_acc03width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCObj03_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCObj03_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCObj03_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCObj03_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCObj03_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCObj03_st)
    MergeFrom(*source);
  }
}

void B_ACCObj03_st::MergeFrom(const B_ACCObj03_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCObj03_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_acc03id_u32() != 0) {
    set_da_in_indx_acc03id_u32(from.da_in_indx_acc03id_u32());
  }
  if (from.da_in_v_acc03longtspd_sg() != 0) {
    set_da_in_v_acc03longtspd_sg(from.da_in_v_acc03longtspd_sg());
  }
  if (from.da_in_v_acc03latspd_sg() != 0) {
    set_da_in_v_acc03latspd_sg(from.da_in_v_acc03latspd_sg());
  }
  if (from.da_in_d_acc03longtdist_sg() != 0) {
    set_da_in_d_acc03longtdist_sg(from.da_in_d_acc03longtdist_sg());
  }
  if (from.da_in_d_acc03latdist_sg() != 0) {
    set_da_in_d_acc03latdist_sg(from.da_in_d_acc03latdist_sg());
  }
  if (from.da_in_stat_acc03snsr_ecsnr() != 0) {
    set_da_in_stat_acc03snsr_ecsnr(from.da_in_stat_acc03snsr_ecsnr());
  }
  if (from.da_in_stat_acc03trk_ectrk() != 0) {
    set_da_in_stat_acc03trk_ectrk(from.da_in_stat_acc03trk_ectrk());
  }
  if (from.da_in_stat_acc03mvsts_ecmv() != 0) {
    set_da_in_stat_acc03mvsts_ecmv(from.da_in_stat_acc03mvsts_ecmv());
  }
  if (from.da_in_a_acc03longtacc_sg() != 0) {
    set_da_in_a_acc03longtacc_sg(from.da_in_a_acc03longtacc_sg());
  }
  if (from.da_in_a_acc03latacc_sg() != 0) {
    set_da_in_a_acc03latacc_sg(from.da_in_a_acc03latacc_sg());
  }
  if (from.da_in_stat_acc03class_ecls() != 0) {
    set_da_in_stat_acc03class_ecls(from.da_in_stat_acc03class_ecls());
  }
  if (from.da_in_d_acc03width_sg() != 0) {
    set_da_in_d_acc03width_sg(from.da_in_d_acc03width_sg());
  }
}

void B_ACCObj03_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCObj03_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCObj03_st::CopyFrom(const B_ACCObj03_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCObj03_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCObj03_st::IsInitialized() const {
  return true;
}

void B_ACCObj03_st::Swap(B_ACCObj03_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCObj03_st::InternalSwap(B_ACCObj03_st* other) {
  using std::swap;
  swap(da_in_indx_acc03id_u32_, other->da_in_indx_acc03id_u32_);
  swap(da_in_v_acc03longtspd_sg_, other->da_in_v_acc03longtspd_sg_);
  swap(da_in_v_acc03latspd_sg_, other->da_in_v_acc03latspd_sg_);
  swap(da_in_d_acc03longtdist_sg_, other->da_in_d_acc03longtdist_sg_);
  swap(da_in_d_acc03latdist_sg_, other->da_in_d_acc03latdist_sg_);
  swap(da_in_stat_acc03snsr_ecsnr_, other->da_in_stat_acc03snsr_ecsnr_);
  swap(da_in_stat_acc03trk_ectrk_, other->da_in_stat_acc03trk_ectrk_);
  swap(da_in_stat_acc03mvsts_ecmv_, other->da_in_stat_acc03mvsts_ecmv_);
  swap(da_in_a_acc03longtacc_sg_, other->da_in_a_acc03longtacc_sg_);
  swap(da_in_a_acc03latacc_sg_, other->da_in_a_acc03latacc_sg_);
  swap(da_in_stat_acc03class_ecls_, other->da_in_stat_acc03class_ecls_);
  swap(da_in_d_acc03width_sg_, other->da_in_d_acc03width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCObj03_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCObj04_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCObj04_st::kDAINIndxACC04IDU32FieldNumber;
const int B_ACCObj04_st::kDAINVACC04LongtSpdSgFieldNumber;
const int B_ACCObj04_st::kDAINVACC04LatSpdSgFieldNumber;
const int B_ACCObj04_st::kDAINDACC04LongtDistSgFieldNumber;
const int B_ACCObj04_st::kDAINDACC04LatDistSgFieldNumber;
const int B_ACCObj04_st::kDAINStatACC04SnsrECSNRFieldNumber;
const int B_ACCObj04_st::kDAINStatACC04TrkECTRKFieldNumber;
const int B_ACCObj04_st::kDAINStatACC04MvStsECMVFieldNumber;
const int B_ACCObj04_st::kDAINAACC04LongtAccSgFieldNumber;
const int B_ACCObj04_st::kDAINAACC04LatAccSgFieldNumber;
const int B_ACCObj04_st::kDAINStatACC04ClassECLSFieldNumber;
const int B_ACCObj04_st::kDAINDACC04WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCObj04_st::B_ACCObj04_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCObj04_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCObj04_st)
}
B_ACCObj04_st::B_ACCObj04_st(const B_ACCObj04_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_acc04id_u32_, &from.da_in_indx_acc04id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_acc04width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_acc04id_u32_)) + sizeof(da_in_d_acc04width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCObj04_st)
}

void B_ACCObj04_st::SharedCtor() {
  ::memset(&da_in_indx_acc04id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc04width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc04id_u32_)) + sizeof(da_in_d_acc04width_sg_));
}

B_ACCObj04_st::~B_ACCObj04_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCObj04_st)
  SharedDtor();
}

void B_ACCObj04_st::SharedDtor() {
}

void B_ACCObj04_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCObj04_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCObj04_st& B_ACCObj04_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCObj04_st.base);
  return *internal_default_instance();
}


void B_ACCObj04_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCObj04_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_acc04id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc04width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc04id_u32_)) + sizeof(da_in_d_acc04width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCObj04_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCObj04_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACC04ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_acc04id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC04LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc04longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC04LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc04latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC04LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc04longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC04LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc04latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC04Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc04snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC04Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc04trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC04MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc04mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC04LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc04longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC04LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc04latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC04Class_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc04class_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC04Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc04width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCObj04_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCObj04_st)
  return false;
#undef DO_
}

void B_ACCObj04_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCObj04_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC04ID_u32 = 1;
  if (this->da_in_indx_acc04id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_acc04id_u32(), output);
  }

  // float DA_IN_v_ACC04LongtSpd_sg = 2;
  if (this->da_in_v_acc04longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_acc04longtspd_sg(), output);
  }

  // float DA_IN_v_ACC04LatSpd_sg = 3;
  if (this->da_in_v_acc04latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_acc04latspd_sg(), output);
  }

  // float DA_IN_d_ACC04LongtDist_sg = 4;
  if (this->da_in_d_acc04longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_acc04longtdist_sg(), output);
  }

  // float DA_IN_d_ACC04LatDist_sg = 5;
  if (this->da_in_d_acc04latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_acc04latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC04Snsr_eCSNR = 6;
  if (this->da_in_stat_acc04snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_acc04snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC04Trk_eCTRK = 7;
  if (this->da_in_stat_acc04trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_acc04trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC04MvSts_eCMV = 8;
  if (this->da_in_stat_acc04mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_acc04mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACC04LongtAcc_sg = 9;
  if (this->da_in_a_acc04longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_acc04longtacc_sg(), output);
  }

  // float DA_IN_a_ACC04LatAcc_sg = 10;
  if (this->da_in_a_acc04latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_acc04latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC04Class_eCLS = 11;
  if (this->da_in_stat_acc04class_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_acc04class_ecls(), output);
  }

  // float DA_IN_d_ACC04Width_sg = 12;
  if (this->da_in_d_acc04width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_acc04width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCObj04_st)
}

::google::protobuf::uint8* B_ACCObj04_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCObj04_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC04ID_u32 = 1;
  if (this->da_in_indx_acc04id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_acc04id_u32(), target);
  }

  // float DA_IN_v_ACC04LongtSpd_sg = 2;
  if (this->da_in_v_acc04longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_acc04longtspd_sg(), target);
  }

  // float DA_IN_v_ACC04LatSpd_sg = 3;
  if (this->da_in_v_acc04latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_acc04latspd_sg(), target);
  }

  // float DA_IN_d_ACC04LongtDist_sg = 4;
  if (this->da_in_d_acc04longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_acc04longtdist_sg(), target);
  }

  // float DA_IN_d_ACC04LatDist_sg = 5;
  if (this->da_in_d_acc04latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_acc04latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC04Snsr_eCSNR = 6;
  if (this->da_in_stat_acc04snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_acc04snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC04Trk_eCTRK = 7;
  if (this->da_in_stat_acc04trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_acc04trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC04MvSts_eCMV = 8;
  if (this->da_in_stat_acc04mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_acc04mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACC04LongtAcc_sg = 9;
  if (this->da_in_a_acc04longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_acc04longtacc_sg(), target);
  }

  // float DA_IN_a_ACC04LatAcc_sg = 10;
  if (this->da_in_a_acc04latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_acc04latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC04Class_eCLS = 11;
  if (this->da_in_stat_acc04class_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_acc04class_ecls(), target);
  }

  // float DA_IN_d_ACC04Width_sg = 12;
  if (this->da_in_d_acc04width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_acc04width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCObj04_st)
  return target;
}

size_t B_ACCObj04_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCObj04_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACC04ID_u32 = 1;
  if (this->da_in_indx_acc04id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_acc04id_u32());
  }

  // float DA_IN_v_ACC04LongtSpd_sg = 2;
  if (this->da_in_v_acc04longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACC04LatSpd_sg = 3;
  if (this->da_in_v_acc04latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC04LongtDist_sg = 4;
  if (this->da_in_d_acc04longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC04LatDist_sg = 5;
  if (this->da_in_d_acc04latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC04Snsr_eCSNR = 6;
  if (this->da_in_stat_acc04snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc04snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC04Trk_eCTRK = 7;
  if (this->da_in_stat_acc04trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc04trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC04MvSts_eCMV = 8;
  if (this->da_in_stat_acc04mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc04mvsts_ecmv());
  }

  // float DA_IN_a_ACC04LongtAcc_sg = 9;
  if (this->da_in_a_acc04longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACC04LatAcc_sg = 10;
  if (this->da_in_a_acc04latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC04Class_eCLS = 11;
  if (this->da_in_stat_acc04class_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc04class_ecls());
  }

  // float DA_IN_d_ACC04Width_sg = 12;
  if (this->da_in_d_acc04width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCObj04_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCObj04_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCObj04_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCObj04_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCObj04_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCObj04_st)
    MergeFrom(*source);
  }
}

void B_ACCObj04_st::MergeFrom(const B_ACCObj04_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCObj04_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_acc04id_u32() != 0) {
    set_da_in_indx_acc04id_u32(from.da_in_indx_acc04id_u32());
  }
  if (from.da_in_v_acc04longtspd_sg() != 0) {
    set_da_in_v_acc04longtspd_sg(from.da_in_v_acc04longtspd_sg());
  }
  if (from.da_in_v_acc04latspd_sg() != 0) {
    set_da_in_v_acc04latspd_sg(from.da_in_v_acc04latspd_sg());
  }
  if (from.da_in_d_acc04longtdist_sg() != 0) {
    set_da_in_d_acc04longtdist_sg(from.da_in_d_acc04longtdist_sg());
  }
  if (from.da_in_d_acc04latdist_sg() != 0) {
    set_da_in_d_acc04latdist_sg(from.da_in_d_acc04latdist_sg());
  }
  if (from.da_in_stat_acc04snsr_ecsnr() != 0) {
    set_da_in_stat_acc04snsr_ecsnr(from.da_in_stat_acc04snsr_ecsnr());
  }
  if (from.da_in_stat_acc04trk_ectrk() != 0) {
    set_da_in_stat_acc04trk_ectrk(from.da_in_stat_acc04trk_ectrk());
  }
  if (from.da_in_stat_acc04mvsts_ecmv() != 0) {
    set_da_in_stat_acc04mvsts_ecmv(from.da_in_stat_acc04mvsts_ecmv());
  }
  if (from.da_in_a_acc04longtacc_sg() != 0) {
    set_da_in_a_acc04longtacc_sg(from.da_in_a_acc04longtacc_sg());
  }
  if (from.da_in_a_acc04latacc_sg() != 0) {
    set_da_in_a_acc04latacc_sg(from.da_in_a_acc04latacc_sg());
  }
  if (from.da_in_stat_acc04class_ecls() != 0) {
    set_da_in_stat_acc04class_ecls(from.da_in_stat_acc04class_ecls());
  }
  if (from.da_in_d_acc04width_sg() != 0) {
    set_da_in_d_acc04width_sg(from.da_in_d_acc04width_sg());
  }
}

void B_ACCObj04_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCObj04_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCObj04_st::CopyFrom(const B_ACCObj04_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCObj04_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCObj04_st::IsInitialized() const {
  return true;
}

void B_ACCObj04_st::Swap(B_ACCObj04_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCObj04_st::InternalSwap(B_ACCObj04_st* other) {
  using std::swap;
  swap(da_in_indx_acc04id_u32_, other->da_in_indx_acc04id_u32_);
  swap(da_in_v_acc04longtspd_sg_, other->da_in_v_acc04longtspd_sg_);
  swap(da_in_v_acc04latspd_sg_, other->da_in_v_acc04latspd_sg_);
  swap(da_in_d_acc04longtdist_sg_, other->da_in_d_acc04longtdist_sg_);
  swap(da_in_d_acc04latdist_sg_, other->da_in_d_acc04latdist_sg_);
  swap(da_in_stat_acc04snsr_ecsnr_, other->da_in_stat_acc04snsr_ecsnr_);
  swap(da_in_stat_acc04trk_ectrk_, other->da_in_stat_acc04trk_ectrk_);
  swap(da_in_stat_acc04mvsts_ecmv_, other->da_in_stat_acc04mvsts_ecmv_);
  swap(da_in_a_acc04longtacc_sg_, other->da_in_a_acc04longtacc_sg_);
  swap(da_in_a_acc04latacc_sg_, other->da_in_a_acc04latacc_sg_);
  swap(da_in_stat_acc04class_ecls_, other->da_in_stat_acc04class_ecls_);
  swap(da_in_d_acc04width_sg_, other->da_in_d_acc04width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCObj04_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCStnObj03_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCStnObj03_st::kDAINIndxACCStn03IDU32FieldNumber;
const int B_ACCStnObj03_st::kDAINVACCStn03LongtSpdSgFieldNumber;
const int B_ACCStnObj03_st::kDAINVACCStn03LatSpdSgFieldNumber;
const int B_ACCStnObj03_st::kDAINDACCStn03LongtDistSgFieldNumber;
const int B_ACCStnObj03_st::kDAINDACCStn03LatDistSgFieldNumber;
const int B_ACCStnObj03_st::kDAINStatACCStn03SnsrECSNRFieldNumber;
const int B_ACCStnObj03_st::kDAINStatACCStn03TrkECTRKFieldNumber;
const int B_ACCStnObj03_st::kDAINStatACCStn03MvStsECMVFieldNumber;
const int B_ACCStnObj03_st::kDAINAACCStn03LongtAccSgFieldNumber;
const int B_ACCStnObj03_st::kDAINAACCStn03LatAccSgFieldNumber;
const int B_ACCStnObj03_st::kDAINStatACCStn03ClsECLSFieldNumber;
const int B_ACCStnObj03_st::kDAINDACCStn03WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCStnObj03_st::B_ACCStnObj03_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj03_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCStnObj03_st)
}
B_ACCStnObj03_st::B_ACCStnObj03_st(const B_ACCStnObj03_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_accstn03id_u32_, &from.da_in_indx_accstn03id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_accstn03width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_accstn03id_u32_)) + sizeof(da_in_d_accstn03width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCStnObj03_st)
}

void B_ACCStnObj03_st::SharedCtor() {
  ::memset(&da_in_indx_accstn03id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn03width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn03id_u32_)) + sizeof(da_in_d_accstn03width_sg_));
}

B_ACCStnObj03_st::~B_ACCStnObj03_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCStnObj03_st)
  SharedDtor();
}

void B_ACCStnObj03_st::SharedDtor() {
}

void B_ACCStnObj03_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCStnObj03_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCStnObj03_st& B_ACCStnObj03_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj03_st.base);
  return *internal_default_instance();
}


void B_ACCStnObj03_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCStnObj03_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_accstn03id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn03width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn03id_u32_)) + sizeof(da_in_d_accstn03width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCStnObj03_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCStnObj03_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACCStn03ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_accstn03id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn03LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn03longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn03LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn03latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn03LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn03longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn03LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn03latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn03Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn03snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn03Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn03trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn03MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn03mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn03LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn03longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn03LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn03latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn03Cls_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn03cls_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn03Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn03width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCStnObj03_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCStnObj03_st)
  return false;
#undef DO_
}

void B_ACCStnObj03_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCStnObj03_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn03ID_u32 = 1;
  if (this->da_in_indx_accstn03id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_accstn03id_u32(), output);
  }

  // float DA_IN_v_ACCStn03LongtSpd_sg = 2;
  if (this->da_in_v_accstn03longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_accstn03longtspd_sg(), output);
  }

  // float DA_IN_v_ACCStn03LatSpd_sg = 3;
  if (this->da_in_v_accstn03latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_accstn03latspd_sg(), output);
  }

  // float DA_IN_d_ACCStn03LongtDist_sg = 4;
  if (this->da_in_d_accstn03longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_accstn03longtdist_sg(), output);
  }

  // float DA_IN_d_ACCStn03LatDist_sg = 5;
  if (this->da_in_d_accstn03latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_accstn03latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn03Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn03snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_accstn03snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn03Trk_eCTRK = 7;
  if (this->da_in_stat_accstn03trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_accstn03trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn03MvSts_eCMV = 8;
  if (this->da_in_stat_accstn03mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_accstn03mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACCStn03LongtAcc_sg = 9;
  if (this->da_in_a_accstn03longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_accstn03longtacc_sg(), output);
  }

  // float DA_IN_a_ACCStn03LatAcc_sg = 10;
  if (this->da_in_a_accstn03latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_accstn03latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn03Cls_eCLS = 11;
  if (this->da_in_stat_accstn03cls_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_accstn03cls_ecls(), output);
  }

  // float DA_IN_d_ACCStn03Width_sg = 12;
  if (this->da_in_d_accstn03width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_accstn03width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCStnObj03_st)
}

::google::protobuf::uint8* B_ACCStnObj03_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCStnObj03_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn03ID_u32 = 1;
  if (this->da_in_indx_accstn03id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_accstn03id_u32(), target);
  }

  // float DA_IN_v_ACCStn03LongtSpd_sg = 2;
  if (this->da_in_v_accstn03longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_accstn03longtspd_sg(), target);
  }

  // float DA_IN_v_ACCStn03LatSpd_sg = 3;
  if (this->da_in_v_accstn03latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_accstn03latspd_sg(), target);
  }

  // float DA_IN_d_ACCStn03LongtDist_sg = 4;
  if (this->da_in_d_accstn03longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_accstn03longtdist_sg(), target);
  }

  // float DA_IN_d_ACCStn03LatDist_sg = 5;
  if (this->da_in_d_accstn03latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_accstn03latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn03Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn03snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_accstn03snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn03Trk_eCTRK = 7;
  if (this->da_in_stat_accstn03trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_accstn03trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn03MvSts_eCMV = 8;
  if (this->da_in_stat_accstn03mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_accstn03mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACCStn03LongtAcc_sg = 9;
  if (this->da_in_a_accstn03longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_accstn03longtacc_sg(), target);
  }

  // float DA_IN_a_ACCStn03LatAcc_sg = 10;
  if (this->da_in_a_accstn03latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_accstn03latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn03Cls_eCLS = 11;
  if (this->da_in_stat_accstn03cls_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_accstn03cls_ecls(), target);
  }

  // float DA_IN_d_ACCStn03Width_sg = 12;
  if (this->da_in_d_accstn03width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_accstn03width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCStnObj03_st)
  return target;
}

size_t B_ACCStnObj03_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCStnObj03_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACCStn03ID_u32 = 1;
  if (this->da_in_indx_accstn03id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_accstn03id_u32());
  }

  // float DA_IN_v_ACCStn03LongtSpd_sg = 2;
  if (this->da_in_v_accstn03longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACCStn03LatSpd_sg = 3;
  if (this->da_in_v_accstn03latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn03LongtDist_sg = 4;
  if (this->da_in_d_accstn03longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn03LatDist_sg = 5;
  if (this->da_in_d_accstn03latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn03Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn03snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn03snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn03Trk_eCTRK = 7;
  if (this->da_in_stat_accstn03trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn03trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn03MvSts_eCMV = 8;
  if (this->da_in_stat_accstn03mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn03mvsts_ecmv());
  }

  // float DA_IN_a_ACCStn03LongtAcc_sg = 9;
  if (this->da_in_a_accstn03longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACCStn03LatAcc_sg = 10;
  if (this->da_in_a_accstn03latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn03Cls_eCLS = 11;
  if (this->da_in_stat_accstn03cls_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn03cls_ecls());
  }

  // float DA_IN_d_ACCStn03Width_sg = 12;
  if (this->da_in_d_accstn03width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCStnObj03_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCStnObj03_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCStnObj03_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCStnObj03_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCStnObj03_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCStnObj03_st)
    MergeFrom(*source);
  }
}

void B_ACCStnObj03_st::MergeFrom(const B_ACCStnObj03_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCStnObj03_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_accstn03id_u32() != 0) {
    set_da_in_indx_accstn03id_u32(from.da_in_indx_accstn03id_u32());
  }
  if (from.da_in_v_accstn03longtspd_sg() != 0) {
    set_da_in_v_accstn03longtspd_sg(from.da_in_v_accstn03longtspd_sg());
  }
  if (from.da_in_v_accstn03latspd_sg() != 0) {
    set_da_in_v_accstn03latspd_sg(from.da_in_v_accstn03latspd_sg());
  }
  if (from.da_in_d_accstn03longtdist_sg() != 0) {
    set_da_in_d_accstn03longtdist_sg(from.da_in_d_accstn03longtdist_sg());
  }
  if (from.da_in_d_accstn03latdist_sg() != 0) {
    set_da_in_d_accstn03latdist_sg(from.da_in_d_accstn03latdist_sg());
  }
  if (from.da_in_stat_accstn03snsr_ecsnr() != 0) {
    set_da_in_stat_accstn03snsr_ecsnr(from.da_in_stat_accstn03snsr_ecsnr());
  }
  if (from.da_in_stat_accstn03trk_ectrk() != 0) {
    set_da_in_stat_accstn03trk_ectrk(from.da_in_stat_accstn03trk_ectrk());
  }
  if (from.da_in_stat_accstn03mvsts_ecmv() != 0) {
    set_da_in_stat_accstn03mvsts_ecmv(from.da_in_stat_accstn03mvsts_ecmv());
  }
  if (from.da_in_a_accstn03longtacc_sg() != 0) {
    set_da_in_a_accstn03longtacc_sg(from.da_in_a_accstn03longtacc_sg());
  }
  if (from.da_in_a_accstn03latacc_sg() != 0) {
    set_da_in_a_accstn03latacc_sg(from.da_in_a_accstn03latacc_sg());
  }
  if (from.da_in_stat_accstn03cls_ecls() != 0) {
    set_da_in_stat_accstn03cls_ecls(from.da_in_stat_accstn03cls_ecls());
  }
  if (from.da_in_d_accstn03width_sg() != 0) {
    set_da_in_d_accstn03width_sg(from.da_in_d_accstn03width_sg());
  }
}

void B_ACCStnObj03_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCStnObj03_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCStnObj03_st::CopyFrom(const B_ACCStnObj03_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCStnObj03_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCStnObj03_st::IsInitialized() const {
  return true;
}

void B_ACCStnObj03_st::Swap(B_ACCStnObj03_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCStnObj03_st::InternalSwap(B_ACCStnObj03_st* other) {
  using std::swap;
  swap(da_in_indx_accstn03id_u32_, other->da_in_indx_accstn03id_u32_);
  swap(da_in_v_accstn03longtspd_sg_, other->da_in_v_accstn03longtspd_sg_);
  swap(da_in_v_accstn03latspd_sg_, other->da_in_v_accstn03latspd_sg_);
  swap(da_in_d_accstn03longtdist_sg_, other->da_in_d_accstn03longtdist_sg_);
  swap(da_in_d_accstn03latdist_sg_, other->da_in_d_accstn03latdist_sg_);
  swap(da_in_stat_accstn03snsr_ecsnr_, other->da_in_stat_accstn03snsr_ecsnr_);
  swap(da_in_stat_accstn03trk_ectrk_, other->da_in_stat_accstn03trk_ectrk_);
  swap(da_in_stat_accstn03mvsts_ecmv_, other->da_in_stat_accstn03mvsts_ecmv_);
  swap(da_in_a_accstn03longtacc_sg_, other->da_in_a_accstn03longtacc_sg_);
  swap(da_in_a_accstn03latacc_sg_, other->da_in_a_accstn03latacc_sg_);
  swap(da_in_stat_accstn03cls_ecls_, other->da_in_stat_accstn03cls_ecls_);
  swap(da_in_d_accstn03width_sg_, other->da_in_d_accstn03width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCStnObj03_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCStnObj04_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCStnObj04_st::kDAINIndxACCStn04IDU32FieldNumber;
const int B_ACCStnObj04_st::kDAINVACCStn04LongtSpdSgFieldNumber;
const int B_ACCStnObj04_st::kDAINVACCStn04LatSpdSgFieldNumber;
const int B_ACCStnObj04_st::kDAINDACCStn04LongtDistSgFieldNumber;
const int B_ACCStnObj04_st::kDAINDACCStn04LatDistSgFieldNumber;
const int B_ACCStnObj04_st::kDAINStatACCStn04SnsrECSNRFieldNumber;
const int B_ACCStnObj04_st::kDAINStatACCStn04TrkECTRKFieldNumber;
const int B_ACCStnObj04_st::kDAINStatACCStn04MvStsECMVFieldNumber;
const int B_ACCStnObj04_st::kDAINAACCStn04LongtAccSgFieldNumber;
const int B_ACCStnObj04_st::kDAINAACCStn04LatAccSgFieldNumber;
const int B_ACCStnObj04_st::kDAINStatACCStn04ClsECLSFieldNumber;
const int B_ACCStnObj04_st::kDAINDACCStn04WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCStnObj04_st::B_ACCStnObj04_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj04_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCStnObj04_st)
}
B_ACCStnObj04_st::B_ACCStnObj04_st(const B_ACCStnObj04_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_accstn04id_u32_, &from.da_in_indx_accstn04id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_accstn04width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_accstn04id_u32_)) + sizeof(da_in_d_accstn04width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCStnObj04_st)
}

void B_ACCStnObj04_st::SharedCtor() {
  ::memset(&da_in_indx_accstn04id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn04width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn04id_u32_)) + sizeof(da_in_d_accstn04width_sg_));
}

B_ACCStnObj04_st::~B_ACCStnObj04_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCStnObj04_st)
  SharedDtor();
}

void B_ACCStnObj04_st::SharedDtor() {
}

void B_ACCStnObj04_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCStnObj04_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCStnObj04_st& B_ACCStnObj04_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj04_st.base);
  return *internal_default_instance();
}


void B_ACCStnObj04_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCStnObj04_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_accstn04id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn04width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn04id_u32_)) + sizeof(da_in_d_accstn04width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCStnObj04_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCStnObj04_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACCStn04ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_accstn04id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn04LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn04longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn04LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn04latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn04LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn04longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn04LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn04latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn04Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn04snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn04Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn04trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn04MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn04mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn04LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn04longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn04LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn04latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn04Cls_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn04cls_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn04Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn04width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCStnObj04_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCStnObj04_st)
  return false;
#undef DO_
}

void B_ACCStnObj04_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCStnObj04_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn04ID_u32 = 1;
  if (this->da_in_indx_accstn04id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_accstn04id_u32(), output);
  }

  // float DA_IN_v_ACCStn04LongtSpd_sg = 2;
  if (this->da_in_v_accstn04longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_accstn04longtspd_sg(), output);
  }

  // float DA_IN_v_ACCStn04LatSpd_sg = 3;
  if (this->da_in_v_accstn04latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_accstn04latspd_sg(), output);
  }

  // float DA_IN_d_ACCStn04LongtDist_sg = 4;
  if (this->da_in_d_accstn04longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_accstn04longtdist_sg(), output);
  }

  // float DA_IN_d_ACCStn04LatDist_sg = 5;
  if (this->da_in_d_accstn04latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_accstn04latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn04Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn04snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_accstn04snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn04Trk_eCTRK = 7;
  if (this->da_in_stat_accstn04trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_accstn04trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn04MvSts_eCMV = 8;
  if (this->da_in_stat_accstn04mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_accstn04mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACCStn04LongtAcc_sg = 9;
  if (this->da_in_a_accstn04longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_accstn04longtacc_sg(), output);
  }

  // float DA_IN_a_ACCStn04LatAcc_sg = 10;
  if (this->da_in_a_accstn04latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_accstn04latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn04Cls_eCLS = 11;
  if (this->da_in_stat_accstn04cls_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_accstn04cls_ecls(), output);
  }

  // float DA_IN_d_ACCStn04Width_sg = 12;
  if (this->da_in_d_accstn04width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_accstn04width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCStnObj04_st)
}

::google::protobuf::uint8* B_ACCStnObj04_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCStnObj04_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn04ID_u32 = 1;
  if (this->da_in_indx_accstn04id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_accstn04id_u32(), target);
  }

  // float DA_IN_v_ACCStn04LongtSpd_sg = 2;
  if (this->da_in_v_accstn04longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_accstn04longtspd_sg(), target);
  }

  // float DA_IN_v_ACCStn04LatSpd_sg = 3;
  if (this->da_in_v_accstn04latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_accstn04latspd_sg(), target);
  }

  // float DA_IN_d_ACCStn04LongtDist_sg = 4;
  if (this->da_in_d_accstn04longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_accstn04longtdist_sg(), target);
  }

  // float DA_IN_d_ACCStn04LatDist_sg = 5;
  if (this->da_in_d_accstn04latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_accstn04latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn04Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn04snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_accstn04snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn04Trk_eCTRK = 7;
  if (this->da_in_stat_accstn04trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_accstn04trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn04MvSts_eCMV = 8;
  if (this->da_in_stat_accstn04mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_accstn04mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACCStn04LongtAcc_sg = 9;
  if (this->da_in_a_accstn04longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_accstn04longtacc_sg(), target);
  }

  // float DA_IN_a_ACCStn04LatAcc_sg = 10;
  if (this->da_in_a_accstn04latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_accstn04latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn04Cls_eCLS = 11;
  if (this->da_in_stat_accstn04cls_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_accstn04cls_ecls(), target);
  }

  // float DA_IN_d_ACCStn04Width_sg = 12;
  if (this->da_in_d_accstn04width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_accstn04width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCStnObj04_st)
  return target;
}

size_t B_ACCStnObj04_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCStnObj04_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACCStn04ID_u32 = 1;
  if (this->da_in_indx_accstn04id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_accstn04id_u32());
  }

  // float DA_IN_v_ACCStn04LongtSpd_sg = 2;
  if (this->da_in_v_accstn04longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACCStn04LatSpd_sg = 3;
  if (this->da_in_v_accstn04latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn04LongtDist_sg = 4;
  if (this->da_in_d_accstn04longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn04LatDist_sg = 5;
  if (this->da_in_d_accstn04latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn04Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn04snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn04snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn04Trk_eCTRK = 7;
  if (this->da_in_stat_accstn04trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn04trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn04MvSts_eCMV = 8;
  if (this->da_in_stat_accstn04mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn04mvsts_ecmv());
  }

  // float DA_IN_a_ACCStn04LongtAcc_sg = 9;
  if (this->da_in_a_accstn04longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACCStn04LatAcc_sg = 10;
  if (this->da_in_a_accstn04latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn04Cls_eCLS = 11;
  if (this->da_in_stat_accstn04cls_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn04cls_ecls());
  }

  // float DA_IN_d_ACCStn04Width_sg = 12;
  if (this->da_in_d_accstn04width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCStnObj04_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCStnObj04_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCStnObj04_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCStnObj04_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCStnObj04_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCStnObj04_st)
    MergeFrom(*source);
  }
}

void B_ACCStnObj04_st::MergeFrom(const B_ACCStnObj04_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCStnObj04_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_accstn04id_u32() != 0) {
    set_da_in_indx_accstn04id_u32(from.da_in_indx_accstn04id_u32());
  }
  if (from.da_in_v_accstn04longtspd_sg() != 0) {
    set_da_in_v_accstn04longtspd_sg(from.da_in_v_accstn04longtspd_sg());
  }
  if (from.da_in_v_accstn04latspd_sg() != 0) {
    set_da_in_v_accstn04latspd_sg(from.da_in_v_accstn04latspd_sg());
  }
  if (from.da_in_d_accstn04longtdist_sg() != 0) {
    set_da_in_d_accstn04longtdist_sg(from.da_in_d_accstn04longtdist_sg());
  }
  if (from.da_in_d_accstn04latdist_sg() != 0) {
    set_da_in_d_accstn04latdist_sg(from.da_in_d_accstn04latdist_sg());
  }
  if (from.da_in_stat_accstn04snsr_ecsnr() != 0) {
    set_da_in_stat_accstn04snsr_ecsnr(from.da_in_stat_accstn04snsr_ecsnr());
  }
  if (from.da_in_stat_accstn04trk_ectrk() != 0) {
    set_da_in_stat_accstn04trk_ectrk(from.da_in_stat_accstn04trk_ectrk());
  }
  if (from.da_in_stat_accstn04mvsts_ecmv() != 0) {
    set_da_in_stat_accstn04mvsts_ecmv(from.da_in_stat_accstn04mvsts_ecmv());
  }
  if (from.da_in_a_accstn04longtacc_sg() != 0) {
    set_da_in_a_accstn04longtacc_sg(from.da_in_a_accstn04longtacc_sg());
  }
  if (from.da_in_a_accstn04latacc_sg() != 0) {
    set_da_in_a_accstn04latacc_sg(from.da_in_a_accstn04latacc_sg());
  }
  if (from.da_in_stat_accstn04cls_ecls() != 0) {
    set_da_in_stat_accstn04cls_ecls(from.da_in_stat_accstn04cls_ecls());
  }
  if (from.da_in_d_accstn04width_sg() != 0) {
    set_da_in_d_accstn04width_sg(from.da_in_d_accstn04width_sg());
  }
}

void B_ACCStnObj04_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCStnObj04_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCStnObj04_st::CopyFrom(const B_ACCStnObj04_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCStnObj04_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCStnObj04_st::IsInitialized() const {
  return true;
}

void B_ACCStnObj04_st::Swap(B_ACCStnObj04_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCStnObj04_st::InternalSwap(B_ACCStnObj04_st* other) {
  using std::swap;
  swap(da_in_indx_accstn04id_u32_, other->da_in_indx_accstn04id_u32_);
  swap(da_in_v_accstn04longtspd_sg_, other->da_in_v_accstn04longtspd_sg_);
  swap(da_in_v_accstn04latspd_sg_, other->da_in_v_accstn04latspd_sg_);
  swap(da_in_d_accstn04longtdist_sg_, other->da_in_d_accstn04longtdist_sg_);
  swap(da_in_d_accstn04latdist_sg_, other->da_in_d_accstn04latdist_sg_);
  swap(da_in_stat_accstn04snsr_ecsnr_, other->da_in_stat_accstn04snsr_ecsnr_);
  swap(da_in_stat_accstn04trk_ectrk_, other->da_in_stat_accstn04trk_ectrk_);
  swap(da_in_stat_accstn04mvsts_ecmv_, other->da_in_stat_accstn04mvsts_ecmv_);
  swap(da_in_a_accstn04longtacc_sg_, other->da_in_a_accstn04longtacc_sg_);
  swap(da_in_a_accstn04latacc_sg_, other->da_in_a_accstn04latacc_sg_);
  swap(da_in_stat_accstn04cls_ecls_, other->da_in_stat_accstn04cls_ecls_);
  swap(da_in_d_accstn04width_sg_, other->da_in_d_accstn04width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCStnObj04_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCObjVldRaw::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCObjVldRaw::kDFInIsACC01VldFlgRawBlFieldNumber;
const int B_ACCObjVldRaw::kDFInIsACC02VldFlgRawBlFieldNumber;
const int B_ACCObjVldRaw::kDFInIsACC03VldFlgRawBlFieldNumber;
const int B_ACCObjVldRaw::kDFInIsACC04VldFlgRawBlFieldNumber;
const int B_ACCObjVldRaw::kDFInIsACC05VldFlgRawBlFieldNumber;
const int B_ACCObjVldRaw::kDFInIsACC06VldFlgRawBlFieldNumber;
const int B_ACCObjVldRaw::kDFInIsACCStn01VldFlgRawBlFieldNumber;
const int B_ACCObjVldRaw::kDFInIsACCStn02VldFlgRawBlFieldNumber;
const int B_ACCObjVldRaw::kDFInIsACCStn03VldFlgRawBlFieldNumber;
const int B_ACCObjVldRaw::kDFInIsACCStn04VldFlgRawBlFieldNumber;
const int B_ACCObjVldRaw::kDFInIsACCStn05VldFlgRawBlFieldNumber;
const int B_ACCObjVldRaw::kDFInIsACCStn06VldFlgRawBlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCObjVldRaw::B_ACCObjVldRaw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCObjVldRaw.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCObjVldRaw)
}
B_ACCObjVldRaw::B_ACCObjVldRaw(const B_ACCObjVldRaw& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dfin_is_acc01vldflgraw_bl_, &from.dfin_is_acc01vldflgraw_bl_,
    static_cast<size_t>(reinterpret_cast<char*>(&dfin_is_accstn06vldflgraw_bl_) -
    reinterpret_cast<char*>(&dfin_is_acc01vldflgraw_bl_)) + sizeof(dfin_is_accstn06vldflgraw_bl_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCObjVldRaw)
}

void B_ACCObjVldRaw::SharedCtor() {
  ::memset(&dfin_is_acc01vldflgraw_bl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dfin_is_accstn06vldflgraw_bl_) -
      reinterpret_cast<char*>(&dfin_is_acc01vldflgraw_bl_)) + sizeof(dfin_is_accstn06vldflgraw_bl_));
}

B_ACCObjVldRaw::~B_ACCObjVldRaw() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCObjVldRaw)
  SharedDtor();
}

void B_ACCObjVldRaw::SharedDtor() {
}

void B_ACCObjVldRaw::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCObjVldRaw::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCObjVldRaw& B_ACCObjVldRaw::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCObjVldRaw.base);
  return *internal_default_instance();
}


void B_ACCObjVldRaw::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCObjVldRaw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dfin_is_acc01vldflgraw_bl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dfin_is_accstn06vldflgraw_bl_) -
      reinterpret_cast<char*>(&dfin_is_acc01vldflgraw_bl_)) + sizeof(dfin_is_accstn06vldflgraw_bl_));
  _internal_metadata_.Clear();
}

bool B_ACCObjVldRaw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCObjVldRaw)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool DFIn_is_ACC01VldFlgRaw_bl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_acc01vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DFIn_is_ACC02VldFlgRaw_bl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_acc02vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DFIn_is_ACC03VldFlgRaw_bl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_acc03vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DFIn_is_ACC04VldFlgRaw_bl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_acc04vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DFIn_is_ACC05VldFlgRaw_bl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_acc05vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DFIn_is_ACC06VldFlgRaw_bl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_acc06vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DFIn_is_ACCStn01VldFlgRaw_bl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_accstn01vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DFIn_is_ACCStn02VldFlgRaw_bl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_accstn02vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DFIn_is_ACCStn03VldFlgRaw_bl = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_accstn03vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DFIn_is_ACCStn04VldFlgRaw_bl = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_accstn04vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DFIn_is_ACCStn05VldFlgRaw_bl = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_accstn05vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DFIn_is_ACCStn06VldFlgRaw_bl = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dfin_is_accstn06vldflgraw_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCObjVldRaw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCObjVldRaw)
  return false;
#undef DO_
}

void B_ACCObjVldRaw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCObjVldRaw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool DFIn_is_ACC01VldFlgRaw_bl = 1;
  if (this->dfin_is_acc01vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->dfin_is_acc01vldflgraw_bl(), output);
  }

  // bool DFIn_is_ACC02VldFlgRaw_bl = 2;
  if (this->dfin_is_acc02vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->dfin_is_acc02vldflgraw_bl(), output);
  }

  // bool DFIn_is_ACC03VldFlgRaw_bl = 3;
  if (this->dfin_is_acc03vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->dfin_is_acc03vldflgraw_bl(), output);
  }

  // bool DFIn_is_ACC04VldFlgRaw_bl = 4;
  if (this->dfin_is_acc04vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->dfin_is_acc04vldflgraw_bl(), output);
  }

  // bool DFIn_is_ACC05VldFlgRaw_bl = 5;
  if (this->dfin_is_acc05vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->dfin_is_acc05vldflgraw_bl(), output);
  }

  // bool DFIn_is_ACC06VldFlgRaw_bl = 6;
  if (this->dfin_is_acc06vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->dfin_is_acc06vldflgraw_bl(), output);
  }

  // bool DFIn_is_ACCStn01VldFlgRaw_bl = 7;
  if (this->dfin_is_accstn01vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->dfin_is_accstn01vldflgraw_bl(), output);
  }

  // bool DFIn_is_ACCStn02VldFlgRaw_bl = 8;
  if (this->dfin_is_accstn02vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->dfin_is_accstn02vldflgraw_bl(), output);
  }

  // bool DFIn_is_ACCStn03VldFlgRaw_bl = 9;
  if (this->dfin_is_accstn03vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->dfin_is_accstn03vldflgraw_bl(), output);
  }

  // bool DFIn_is_ACCStn04VldFlgRaw_bl = 10;
  if (this->dfin_is_accstn04vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->dfin_is_accstn04vldflgraw_bl(), output);
  }

  // bool DFIn_is_ACCStn05VldFlgRaw_bl = 11;
  if (this->dfin_is_accstn05vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->dfin_is_accstn05vldflgraw_bl(), output);
  }

  // bool DFIn_is_ACCStn06VldFlgRaw_bl = 12;
  if (this->dfin_is_accstn06vldflgraw_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->dfin_is_accstn06vldflgraw_bl(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCObjVldRaw)
}

::google::protobuf::uint8* B_ACCObjVldRaw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCObjVldRaw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool DFIn_is_ACC01VldFlgRaw_bl = 1;
  if (this->dfin_is_acc01vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->dfin_is_acc01vldflgraw_bl(), target);
  }

  // bool DFIn_is_ACC02VldFlgRaw_bl = 2;
  if (this->dfin_is_acc02vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->dfin_is_acc02vldflgraw_bl(), target);
  }

  // bool DFIn_is_ACC03VldFlgRaw_bl = 3;
  if (this->dfin_is_acc03vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->dfin_is_acc03vldflgraw_bl(), target);
  }

  // bool DFIn_is_ACC04VldFlgRaw_bl = 4;
  if (this->dfin_is_acc04vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->dfin_is_acc04vldflgraw_bl(), target);
  }

  // bool DFIn_is_ACC05VldFlgRaw_bl = 5;
  if (this->dfin_is_acc05vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->dfin_is_acc05vldflgraw_bl(), target);
  }

  // bool DFIn_is_ACC06VldFlgRaw_bl = 6;
  if (this->dfin_is_acc06vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->dfin_is_acc06vldflgraw_bl(), target);
  }

  // bool DFIn_is_ACCStn01VldFlgRaw_bl = 7;
  if (this->dfin_is_accstn01vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->dfin_is_accstn01vldflgraw_bl(), target);
  }

  // bool DFIn_is_ACCStn02VldFlgRaw_bl = 8;
  if (this->dfin_is_accstn02vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->dfin_is_accstn02vldflgraw_bl(), target);
  }

  // bool DFIn_is_ACCStn03VldFlgRaw_bl = 9;
  if (this->dfin_is_accstn03vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->dfin_is_accstn03vldflgraw_bl(), target);
  }

  // bool DFIn_is_ACCStn04VldFlgRaw_bl = 10;
  if (this->dfin_is_accstn04vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->dfin_is_accstn04vldflgraw_bl(), target);
  }

  // bool DFIn_is_ACCStn05VldFlgRaw_bl = 11;
  if (this->dfin_is_accstn05vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->dfin_is_accstn05vldflgraw_bl(), target);
  }

  // bool DFIn_is_ACCStn06VldFlgRaw_bl = 12;
  if (this->dfin_is_accstn06vldflgraw_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->dfin_is_accstn06vldflgraw_bl(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCObjVldRaw)
  return target;
}

size_t B_ACCObjVldRaw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCObjVldRaw)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool DFIn_is_ACC01VldFlgRaw_bl = 1;
  if (this->dfin_is_acc01vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DFIn_is_ACC02VldFlgRaw_bl = 2;
  if (this->dfin_is_acc02vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DFIn_is_ACC03VldFlgRaw_bl = 3;
  if (this->dfin_is_acc03vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DFIn_is_ACC04VldFlgRaw_bl = 4;
  if (this->dfin_is_acc04vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DFIn_is_ACC05VldFlgRaw_bl = 5;
  if (this->dfin_is_acc05vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DFIn_is_ACC06VldFlgRaw_bl = 6;
  if (this->dfin_is_acc06vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DFIn_is_ACCStn01VldFlgRaw_bl = 7;
  if (this->dfin_is_accstn01vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DFIn_is_ACCStn02VldFlgRaw_bl = 8;
  if (this->dfin_is_accstn02vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DFIn_is_ACCStn03VldFlgRaw_bl = 9;
  if (this->dfin_is_accstn03vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DFIn_is_ACCStn04VldFlgRaw_bl = 10;
  if (this->dfin_is_accstn04vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DFIn_is_ACCStn05VldFlgRaw_bl = 11;
  if (this->dfin_is_accstn05vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DFIn_is_ACCStn06VldFlgRaw_bl = 12;
  if (this->dfin_is_accstn06vldflgraw_bl() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCObjVldRaw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCObjVldRaw)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCObjVldRaw* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCObjVldRaw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCObjVldRaw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCObjVldRaw)
    MergeFrom(*source);
  }
}

void B_ACCObjVldRaw::MergeFrom(const B_ACCObjVldRaw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCObjVldRaw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dfin_is_acc01vldflgraw_bl() != 0) {
    set_dfin_is_acc01vldflgraw_bl(from.dfin_is_acc01vldflgraw_bl());
  }
  if (from.dfin_is_acc02vldflgraw_bl() != 0) {
    set_dfin_is_acc02vldflgraw_bl(from.dfin_is_acc02vldflgraw_bl());
  }
  if (from.dfin_is_acc03vldflgraw_bl() != 0) {
    set_dfin_is_acc03vldflgraw_bl(from.dfin_is_acc03vldflgraw_bl());
  }
  if (from.dfin_is_acc04vldflgraw_bl() != 0) {
    set_dfin_is_acc04vldflgraw_bl(from.dfin_is_acc04vldflgraw_bl());
  }
  if (from.dfin_is_acc05vldflgraw_bl() != 0) {
    set_dfin_is_acc05vldflgraw_bl(from.dfin_is_acc05vldflgraw_bl());
  }
  if (from.dfin_is_acc06vldflgraw_bl() != 0) {
    set_dfin_is_acc06vldflgraw_bl(from.dfin_is_acc06vldflgraw_bl());
  }
  if (from.dfin_is_accstn01vldflgraw_bl() != 0) {
    set_dfin_is_accstn01vldflgraw_bl(from.dfin_is_accstn01vldflgraw_bl());
  }
  if (from.dfin_is_accstn02vldflgraw_bl() != 0) {
    set_dfin_is_accstn02vldflgraw_bl(from.dfin_is_accstn02vldflgraw_bl());
  }
  if (from.dfin_is_accstn03vldflgraw_bl() != 0) {
    set_dfin_is_accstn03vldflgraw_bl(from.dfin_is_accstn03vldflgraw_bl());
  }
  if (from.dfin_is_accstn04vldflgraw_bl() != 0) {
    set_dfin_is_accstn04vldflgraw_bl(from.dfin_is_accstn04vldflgraw_bl());
  }
  if (from.dfin_is_accstn05vldflgraw_bl() != 0) {
    set_dfin_is_accstn05vldflgraw_bl(from.dfin_is_accstn05vldflgraw_bl());
  }
  if (from.dfin_is_accstn06vldflgraw_bl() != 0) {
    set_dfin_is_accstn06vldflgraw_bl(from.dfin_is_accstn06vldflgraw_bl());
  }
}

void B_ACCObjVldRaw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCObjVldRaw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCObjVldRaw::CopyFrom(const B_ACCObjVldRaw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCObjVldRaw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCObjVldRaw::IsInitialized() const {
  return true;
}

void B_ACCObjVldRaw::Swap(B_ACCObjVldRaw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCObjVldRaw::InternalSwap(B_ACCObjVldRaw* other) {
  using std::swap;
  swap(dfin_is_acc01vldflgraw_bl_, other->dfin_is_acc01vldflgraw_bl_);
  swap(dfin_is_acc02vldflgraw_bl_, other->dfin_is_acc02vldflgraw_bl_);
  swap(dfin_is_acc03vldflgraw_bl_, other->dfin_is_acc03vldflgraw_bl_);
  swap(dfin_is_acc04vldflgraw_bl_, other->dfin_is_acc04vldflgraw_bl_);
  swap(dfin_is_acc05vldflgraw_bl_, other->dfin_is_acc05vldflgraw_bl_);
  swap(dfin_is_acc06vldflgraw_bl_, other->dfin_is_acc06vldflgraw_bl_);
  swap(dfin_is_accstn01vldflgraw_bl_, other->dfin_is_accstn01vldflgraw_bl_);
  swap(dfin_is_accstn02vldflgraw_bl_, other->dfin_is_accstn02vldflgraw_bl_);
  swap(dfin_is_accstn03vldflgraw_bl_, other->dfin_is_accstn03vldflgraw_bl_);
  swap(dfin_is_accstn04vldflgraw_bl_, other->dfin_is_accstn04vldflgraw_bl_);
  swap(dfin_is_accstn05vldflgraw_bl_, other->dfin_is_accstn05vldflgraw_bl_);
  swap(dfin_is_accstn06vldflgraw_bl_, other->dfin_is_accstn06vldflgraw_bl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCObjVldRaw::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_Inputs_VSP_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_Inputs_VSP_st::kDAINVSPDVehParWhlBaseSgFieldNumber;
const int B_Inputs_VSP_st::kDAINVSPKVehParStrRatioSgFieldNumber;
const int B_Inputs_VSP_st::kDAINVSPKVehParUStrGrdSgFieldNumber;
const int B_Inputs_VSP_st::kDAINVSPDVehParVehWidthSgFieldNumber;
const int B_Inputs_VSP_st::kDAINVSPDCamPosOffst2CentSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_Inputs_VSP_st::B_Inputs_VSP_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_Inputs_VSP_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_Inputs_VSP_st)
}
B_Inputs_VSP_st::B_Inputs_VSP_st(const B_Inputs_VSP_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_vsp_d_vehparwhlbase_sg_, &from.da_in_vsp_d_vehparwhlbase_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_vsp_d_camposoffst2cent_sg_) -
    reinterpret_cast<char*>(&da_in_vsp_d_vehparwhlbase_sg_)) + sizeof(da_in_vsp_d_camposoffst2cent_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_Inputs_VSP_st)
}

void B_Inputs_VSP_st::SharedCtor() {
  ::memset(&da_in_vsp_d_vehparwhlbase_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_vsp_d_camposoffst2cent_sg_) -
      reinterpret_cast<char*>(&da_in_vsp_d_vehparwhlbase_sg_)) + sizeof(da_in_vsp_d_camposoffst2cent_sg_));
}

B_Inputs_VSP_st::~B_Inputs_VSP_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_Inputs_VSP_st)
  SharedDtor();
}

void B_Inputs_VSP_st::SharedDtor() {
}

void B_Inputs_VSP_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_Inputs_VSP_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_Inputs_VSP_st& B_Inputs_VSP_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_Inputs_VSP_st.base);
  return *internal_default_instance();
}


void B_Inputs_VSP_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_Inputs_VSP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_vsp_d_vehparwhlbase_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_vsp_d_camposoffst2cent_sg_) -
      reinterpret_cast<char*>(&da_in_vsp_d_vehparwhlbase_sg_)) + sizeof(da_in_vsp_d_camposoffst2cent_sg_));
  _internal_metadata_.Clear();
}

bool B_Inputs_VSP_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_Inputs_VSP_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_VSP_d_VehParWhlBase_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vsp_d_vehparwhlbase_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VSP_K_VehParStrRatio_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vsp_k_vehparstrratio_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VSP_k_VehParUStrGrd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vsp_k_vehparustrgrd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VSP_d_VehParVehWidth_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vsp_d_vehparvehwidth_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VSP_d_CamPosOffst2Cent_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vsp_d_camposoffst2cent_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_Inputs_VSP_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_Inputs_VSP_st)
  return false;
#undef DO_
}

void B_Inputs_VSP_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_Inputs_VSP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_VSP_d_VehParWhlBase_sg = 1;
  if (this->da_in_vsp_d_vehparwhlbase_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_vsp_d_vehparwhlbase_sg(), output);
  }

  // float DA_IN_VSP_K_VehParStrRatio_sg = 2;
  if (this->da_in_vsp_k_vehparstrratio_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_vsp_k_vehparstrratio_sg(), output);
  }

  // float DA_IN_VSP_k_VehParUStrGrd_sg = 3;
  if (this->da_in_vsp_k_vehparustrgrd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_vsp_k_vehparustrgrd_sg(), output);
  }

  // float DA_IN_VSP_d_VehParVehWidth_sg = 4;
  if (this->da_in_vsp_d_vehparvehwidth_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_vsp_d_vehparvehwidth_sg(), output);
  }

  // float DA_IN_VSP_d_CamPosOffst2Cent_sg = 5;
  if (this->da_in_vsp_d_camposoffst2cent_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_vsp_d_camposoffst2cent_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_Inputs_VSP_st)
}

::google::protobuf::uint8* B_Inputs_VSP_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_Inputs_VSP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_VSP_d_VehParWhlBase_sg = 1;
  if (this->da_in_vsp_d_vehparwhlbase_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_vsp_d_vehparwhlbase_sg(), target);
  }

  // float DA_IN_VSP_K_VehParStrRatio_sg = 2;
  if (this->da_in_vsp_k_vehparstrratio_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_vsp_k_vehparstrratio_sg(), target);
  }

  // float DA_IN_VSP_k_VehParUStrGrd_sg = 3;
  if (this->da_in_vsp_k_vehparustrgrd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_vsp_k_vehparustrgrd_sg(), target);
  }

  // float DA_IN_VSP_d_VehParVehWidth_sg = 4;
  if (this->da_in_vsp_d_vehparvehwidth_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_vsp_d_vehparvehwidth_sg(), target);
  }

  // float DA_IN_VSP_d_CamPosOffst2Cent_sg = 5;
  if (this->da_in_vsp_d_camposoffst2cent_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_vsp_d_camposoffst2cent_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_Inputs_VSP_st)
  return target;
}

size_t B_Inputs_VSP_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_Inputs_VSP_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_VSP_d_VehParWhlBase_sg = 1;
  if (this->da_in_vsp_d_vehparwhlbase_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VSP_K_VehParStrRatio_sg = 2;
  if (this->da_in_vsp_k_vehparstrratio_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VSP_k_VehParUStrGrd_sg = 3;
  if (this->da_in_vsp_k_vehparustrgrd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VSP_d_VehParVehWidth_sg = 4;
  if (this->da_in_vsp_d_vehparvehwidth_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VSP_d_CamPosOffst2Cent_sg = 5;
  if (this->da_in_vsp_d_camposoffst2cent_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_Inputs_VSP_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_Inputs_VSP_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_Inputs_VSP_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_Inputs_VSP_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_Inputs_VSP_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_Inputs_VSP_st)
    MergeFrom(*source);
  }
}

void B_Inputs_VSP_st::MergeFrom(const B_Inputs_VSP_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_Inputs_VSP_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_vsp_d_vehparwhlbase_sg() != 0) {
    set_da_in_vsp_d_vehparwhlbase_sg(from.da_in_vsp_d_vehparwhlbase_sg());
  }
  if (from.da_in_vsp_k_vehparstrratio_sg() != 0) {
    set_da_in_vsp_k_vehparstrratio_sg(from.da_in_vsp_k_vehparstrratio_sg());
  }
  if (from.da_in_vsp_k_vehparustrgrd_sg() != 0) {
    set_da_in_vsp_k_vehparustrgrd_sg(from.da_in_vsp_k_vehparustrgrd_sg());
  }
  if (from.da_in_vsp_d_vehparvehwidth_sg() != 0) {
    set_da_in_vsp_d_vehparvehwidth_sg(from.da_in_vsp_d_vehparvehwidth_sg());
  }
  if (from.da_in_vsp_d_camposoffst2cent_sg() != 0) {
    set_da_in_vsp_d_camposoffst2cent_sg(from.da_in_vsp_d_camposoffst2cent_sg());
  }
}

void B_Inputs_VSP_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_Inputs_VSP_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_Inputs_VSP_st::CopyFrom(const B_Inputs_VSP_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_Inputs_VSP_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_Inputs_VSP_st::IsInitialized() const {
  return true;
}

void B_Inputs_VSP_st::Swap(B_Inputs_VSP_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_Inputs_VSP_st::InternalSwap(B_Inputs_VSP_st* other) {
  using std::swap;
  swap(da_in_vsp_d_vehparwhlbase_sg_, other->da_in_vsp_d_vehparwhlbase_sg_);
  swap(da_in_vsp_k_vehparstrratio_sg_, other->da_in_vsp_k_vehparstrratio_sg_);
  swap(da_in_vsp_k_vehparustrgrd_sg_, other->da_in_vsp_k_vehparustrgrd_sg_);
  swap(da_in_vsp_d_vehparvehwidth_sg_, other->da_in_vsp_d_vehparvehwidth_sg_);
  swap(da_in_vsp_d_camposoffst2cent_sg_, other->da_in_vsp_d_camposoffst2cent_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_Inputs_VSP_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_Inputs_VCP_st::InitAsDefaultInstance() {
  ::ads_common::_B_Inputs_VCP_st_default_instance_._instance.get_mutable()->da_in_vcp_b_stateest_ = const_cast< ::ads_common::VCP_B_StateEst*>(
      ::ads_common::VCP_B_StateEst::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_Inputs_VCP_st::kDAINVCPAngDStrgWhlAngSgFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPWDStrgWhlAngGrdSgFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPVVehSpdAvgDrnSgFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPTDrvrStrToqSgFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPYrVehYawRateSgFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPAVSELatAccSgFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPIsStrWhlAngValidBlFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPIsYawRtValidBlFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPIsLatAccValidBlFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPIsLgtAccValidBlFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPALgtAccSgFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPRhoCurvTrjEstSgFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPIsEgoVehStatcBlFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPTDrvrTorqEstiSgFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPStsDvrHndsOffDtcnEhosFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPIsDrvrTorqEstiFailBlFieldNumber;
const int B_Inputs_VCP_st::kDAINVCPBStateEstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_Inputs_VCP_st::B_Inputs_VCP_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_Inputs_VCP_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_Inputs_VCP_st)
}
B_Inputs_VCP_st::B_Inputs_VCP_st(const B_Inputs_VCP_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_da_in_vcp_b_stateest()) {
    da_in_vcp_b_stateest_ = new ::ads_common::VCP_B_StateEst(*from.da_in_vcp_b_stateest_);
  } else {
    da_in_vcp_b_stateest_ = NULL;
  }
  ::memcpy(&da_in_vcp_angd_strgwhlang_sg_, &from.da_in_vcp_angd_strgwhlang_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_vcp_sts_dvrhndsoffdtcn_ehos_) -
    reinterpret_cast<char*>(&da_in_vcp_angd_strgwhlang_sg_)) + sizeof(da_in_vcp_sts_dvrhndsoffdtcn_ehos_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_Inputs_VCP_st)
}

void B_Inputs_VCP_st::SharedCtor() {
  ::memset(&da_in_vcp_b_stateest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_vcp_sts_dvrhndsoffdtcn_ehos_) -
      reinterpret_cast<char*>(&da_in_vcp_b_stateest_)) + sizeof(da_in_vcp_sts_dvrhndsoffdtcn_ehos_));
}

B_Inputs_VCP_st::~B_Inputs_VCP_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_Inputs_VCP_st)
  SharedDtor();
}

void B_Inputs_VCP_st::SharedDtor() {
  if (this != internal_default_instance()) delete da_in_vcp_b_stateest_;
}

void B_Inputs_VCP_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_Inputs_VCP_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_Inputs_VCP_st& B_Inputs_VCP_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_Inputs_VCP_st.base);
  return *internal_default_instance();
}


void B_Inputs_VCP_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_Inputs_VCP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && da_in_vcp_b_stateest_ != NULL) {
    delete da_in_vcp_b_stateest_;
  }
  da_in_vcp_b_stateest_ = NULL;
  ::memset(&da_in_vcp_angd_strgwhlang_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_vcp_sts_dvrhndsoffdtcn_ehos_) -
      reinterpret_cast<char*>(&da_in_vcp_angd_strgwhlang_sg_)) + sizeof(da_in_vcp_sts_dvrhndsoffdtcn_ehos_));
  _internal_metadata_.Clear();
}

bool B_Inputs_VCP_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_Inputs_VCP_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_VCP_angD_StrgWhlAng_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vcp_angd_strgwhlang_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VCP_wD_StrgWhlAngGrd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vcp_wd_strgwhlanggrd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VCP_V_VehSpdAvgDrn_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vcp_v_vehspdavgdrn_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VCP_T_DrvrStrToq_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vcp_t_drvrstrtoq_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VCP_yr_VehYawRate_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vcp_yr_vehyawrate_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VCP_a_VSELatAcc_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vcp_a_vselatacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_VCP_is_strWhlAngValid_bl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_vcp_is_strwhlangvalid_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_VCP_is_YawRtValid_bl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_vcp_is_yawrtvalid_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_VCP_is_LatAccValid_bl = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_vcp_is_lataccvalid_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_VCP_is_LgtAccValid_bl = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_vcp_is_lgtaccvalid_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VCP_a_LgtAcc_sg = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vcp_a_lgtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VCP_rho_CurvTrjEst_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vcp_rho_curvtrjest_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_VCP_is_EgoVehStatc_bl = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_vcp_is_egovehstatc_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VCP_T_DrvrTorqEsti_sg = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vcp_t_drvrtorqesti_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eHOS_HandsOnStates DA_IN_VCP_sts_DvrHndsOffDtcn_Ehos = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_vcp_sts_dvrhndsoffdtcn_ehos(static_cast< ::ads_common::eHOS_HandsOnStates >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_VCP_is_DrvrTorqEstiFail_bl = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_vcp_is_drvrtorqestifail_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.VCP_B_StateEst DA_IN_VCP_B_StateEst = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_da_in_vcp_b_stateest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_Inputs_VCP_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_Inputs_VCP_st)
  return false;
#undef DO_
}

void B_Inputs_VCP_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_Inputs_VCP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_VCP_angD_StrgWhlAng_sg = 1;
  if (this->da_in_vcp_angd_strgwhlang_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_vcp_angd_strgwhlang_sg(), output);
  }

  // float DA_IN_VCP_wD_StrgWhlAngGrd_sg = 2;
  if (this->da_in_vcp_wd_strgwhlanggrd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_vcp_wd_strgwhlanggrd_sg(), output);
  }

  // float DA_IN_VCP_V_VehSpdAvgDrn_sg = 3;
  if (this->da_in_vcp_v_vehspdavgdrn_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_vcp_v_vehspdavgdrn_sg(), output);
  }

  // float DA_IN_VCP_T_DrvrStrToq_sg = 4;
  if (this->da_in_vcp_t_drvrstrtoq_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_vcp_t_drvrstrtoq_sg(), output);
  }

  // float DA_IN_VCP_yr_VehYawRate_sg = 5;
  if (this->da_in_vcp_yr_vehyawrate_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_vcp_yr_vehyawrate_sg(), output);
  }

  // float DA_IN_VCP_a_VSELatAcc_sg = 6;
  if (this->da_in_vcp_a_vselatacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_vcp_a_vselatacc_sg(), output);
  }

  // bool DA_IN_VCP_is_strWhlAngValid_bl = 7;
  if (this->da_in_vcp_is_strwhlangvalid_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->da_in_vcp_is_strwhlangvalid_bl(), output);
  }

  // bool DA_IN_VCP_is_YawRtValid_bl = 8;
  if (this->da_in_vcp_is_yawrtvalid_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->da_in_vcp_is_yawrtvalid_bl(), output);
  }

  // bool DA_IN_VCP_is_LatAccValid_bl = 9;
  if (this->da_in_vcp_is_lataccvalid_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->da_in_vcp_is_lataccvalid_bl(), output);
  }

  // bool DA_IN_VCP_is_LgtAccValid_bl = 10;
  if (this->da_in_vcp_is_lgtaccvalid_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->da_in_vcp_is_lgtaccvalid_bl(), output);
  }

  // float DA_IN_VCP_a_LgtAcc_sg = 11;
  if (this->da_in_vcp_a_lgtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->da_in_vcp_a_lgtacc_sg(), output);
  }

  // float DA_IN_VCP_rho_CurvTrjEst_sg = 12;
  if (this->da_in_vcp_rho_curvtrjest_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_vcp_rho_curvtrjest_sg(), output);
  }

  // bool DA_IN_VCP_is_EgoVehStatc_bl = 13;
  if (this->da_in_vcp_is_egovehstatc_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->da_in_vcp_is_egovehstatc_bl(), output);
  }

  // float DA_IN_VCP_T_DrvrTorqEsti_sg = 14;
  if (this->da_in_vcp_t_drvrtorqesti_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->da_in_vcp_t_drvrtorqesti_sg(), output);
  }

  // .ads_common.eHOS_HandsOnStates DA_IN_VCP_sts_DvrHndsOffDtcn_Ehos = 15;
  if (this->da_in_vcp_sts_dvrhndsoffdtcn_ehos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->da_in_vcp_sts_dvrhndsoffdtcn_ehos(), output);
  }

  // bool DA_IN_VCP_is_DrvrTorqEstiFail_bl = 16;
  if (this->da_in_vcp_is_drvrtorqestifail_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->da_in_vcp_is_drvrtorqestifail_bl(), output);
  }

  // .ads_common.VCP_B_StateEst DA_IN_VCP_B_StateEst = 17;
  if (this->has_da_in_vcp_b_stateest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_da_in_vcp_b_stateest(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_Inputs_VCP_st)
}

::google::protobuf::uint8* B_Inputs_VCP_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_Inputs_VCP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_VCP_angD_StrgWhlAng_sg = 1;
  if (this->da_in_vcp_angd_strgwhlang_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_vcp_angd_strgwhlang_sg(), target);
  }

  // float DA_IN_VCP_wD_StrgWhlAngGrd_sg = 2;
  if (this->da_in_vcp_wd_strgwhlanggrd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_vcp_wd_strgwhlanggrd_sg(), target);
  }

  // float DA_IN_VCP_V_VehSpdAvgDrn_sg = 3;
  if (this->da_in_vcp_v_vehspdavgdrn_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_vcp_v_vehspdavgdrn_sg(), target);
  }

  // float DA_IN_VCP_T_DrvrStrToq_sg = 4;
  if (this->da_in_vcp_t_drvrstrtoq_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_vcp_t_drvrstrtoq_sg(), target);
  }

  // float DA_IN_VCP_yr_VehYawRate_sg = 5;
  if (this->da_in_vcp_yr_vehyawrate_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_vcp_yr_vehyawrate_sg(), target);
  }

  // float DA_IN_VCP_a_VSELatAcc_sg = 6;
  if (this->da_in_vcp_a_vselatacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_vcp_a_vselatacc_sg(), target);
  }

  // bool DA_IN_VCP_is_strWhlAngValid_bl = 7;
  if (this->da_in_vcp_is_strwhlangvalid_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->da_in_vcp_is_strwhlangvalid_bl(), target);
  }

  // bool DA_IN_VCP_is_YawRtValid_bl = 8;
  if (this->da_in_vcp_is_yawrtvalid_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->da_in_vcp_is_yawrtvalid_bl(), target);
  }

  // bool DA_IN_VCP_is_LatAccValid_bl = 9;
  if (this->da_in_vcp_is_lataccvalid_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->da_in_vcp_is_lataccvalid_bl(), target);
  }

  // bool DA_IN_VCP_is_LgtAccValid_bl = 10;
  if (this->da_in_vcp_is_lgtaccvalid_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->da_in_vcp_is_lgtaccvalid_bl(), target);
  }

  // float DA_IN_VCP_a_LgtAcc_sg = 11;
  if (this->da_in_vcp_a_lgtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->da_in_vcp_a_lgtacc_sg(), target);
  }

  // float DA_IN_VCP_rho_CurvTrjEst_sg = 12;
  if (this->da_in_vcp_rho_curvtrjest_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_vcp_rho_curvtrjest_sg(), target);
  }

  // bool DA_IN_VCP_is_EgoVehStatc_bl = 13;
  if (this->da_in_vcp_is_egovehstatc_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->da_in_vcp_is_egovehstatc_bl(), target);
  }

  // float DA_IN_VCP_T_DrvrTorqEsti_sg = 14;
  if (this->da_in_vcp_t_drvrtorqesti_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->da_in_vcp_t_drvrtorqesti_sg(), target);
  }

  // .ads_common.eHOS_HandsOnStates DA_IN_VCP_sts_DvrHndsOffDtcn_Ehos = 15;
  if (this->da_in_vcp_sts_dvrhndsoffdtcn_ehos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->da_in_vcp_sts_dvrhndsoffdtcn_ehos(), target);
  }

  // bool DA_IN_VCP_is_DrvrTorqEstiFail_bl = 16;
  if (this->da_in_vcp_is_drvrtorqestifail_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->da_in_vcp_is_drvrtorqestifail_bl(), target);
  }

  // .ads_common.VCP_B_StateEst DA_IN_VCP_B_StateEst = 17;
  if (this->has_da_in_vcp_b_stateest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_da_in_vcp_b_stateest(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_Inputs_VCP_st)
  return target;
}

size_t B_Inputs_VCP_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_Inputs_VCP_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ads_common.VCP_B_StateEst DA_IN_VCP_B_StateEst = 17;
  if (this->has_da_in_vcp_b_stateest()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *da_in_vcp_b_stateest_);
  }

  // float DA_IN_VCP_angD_StrgWhlAng_sg = 1;
  if (this->da_in_vcp_angd_strgwhlang_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VCP_wD_StrgWhlAngGrd_sg = 2;
  if (this->da_in_vcp_wd_strgwhlanggrd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VCP_V_VehSpdAvgDrn_sg = 3;
  if (this->da_in_vcp_v_vehspdavgdrn_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VCP_T_DrvrStrToq_sg = 4;
  if (this->da_in_vcp_t_drvrstrtoq_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VCP_yr_VehYawRate_sg = 5;
  if (this->da_in_vcp_yr_vehyawrate_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VCP_a_VSELatAcc_sg = 6;
  if (this->da_in_vcp_a_vselatacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool DA_IN_VCP_is_strWhlAngValid_bl = 7;
  if (this->da_in_vcp_is_strwhlangvalid_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DA_IN_VCP_is_YawRtValid_bl = 8;
  if (this->da_in_vcp_is_yawrtvalid_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DA_IN_VCP_is_LatAccValid_bl = 9;
  if (this->da_in_vcp_is_lataccvalid_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DA_IN_VCP_is_LgtAccValid_bl = 10;
  if (this->da_in_vcp_is_lgtaccvalid_bl() != 0) {
    total_size += 1 + 1;
  }

  // float DA_IN_VCP_a_LgtAcc_sg = 11;
  if (this->da_in_vcp_a_lgtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VCP_rho_CurvTrjEst_sg = 12;
  if (this->da_in_vcp_rho_curvtrjest_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VCP_T_DrvrTorqEsti_sg = 14;
  if (this->da_in_vcp_t_drvrtorqesti_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool DA_IN_VCP_is_EgoVehStatc_bl = 13;
  if (this->da_in_vcp_is_egovehstatc_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DA_IN_VCP_is_DrvrTorqEstiFail_bl = 16;
  if (this->da_in_vcp_is_drvrtorqestifail_bl() != 0) {
    total_size += 2 + 1;
  }

  // .ads_common.eHOS_HandsOnStates DA_IN_VCP_sts_DvrHndsOffDtcn_Ehos = 15;
  if (this->da_in_vcp_sts_dvrhndsoffdtcn_ehos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_vcp_sts_dvrhndsoffdtcn_ehos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_Inputs_VCP_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_Inputs_VCP_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_Inputs_VCP_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_Inputs_VCP_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_Inputs_VCP_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_Inputs_VCP_st)
    MergeFrom(*source);
  }
}

void B_Inputs_VCP_st::MergeFrom(const B_Inputs_VCP_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_Inputs_VCP_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_da_in_vcp_b_stateest()) {
    mutable_da_in_vcp_b_stateest()->::ads_common::VCP_B_StateEst::MergeFrom(from.da_in_vcp_b_stateest());
  }
  if (from.da_in_vcp_angd_strgwhlang_sg() != 0) {
    set_da_in_vcp_angd_strgwhlang_sg(from.da_in_vcp_angd_strgwhlang_sg());
  }
  if (from.da_in_vcp_wd_strgwhlanggrd_sg() != 0) {
    set_da_in_vcp_wd_strgwhlanggrd_sg(from.da_in_vcp_wd_strgwhlanggrd_sg());
  }
  if (from.da_in_vcp_v_vehspdavgdrn_sg() != 0) {
    set_da_in_vcp_v_vehspdavgdrn_sg(from.da_in_vcp_v_vehspdavgdrn_sg());
  }
  if (from.da_in_vcp_t_drvrstrtoq_sg() != 0) {
    set_da_in_vcp_t_drvrstrtoq_sg(from.da_in_vcp_t_drvrstrtoq_sg());
  }
  if (from.da_in_vcp_yr_vehyawrate_sg() != 0) {
    set_da_in_vcp_yr_vehyawrate_sg(from.da_in_vcp_yr_vehyawrate_sg());
  }
  if (from.da_in_vcp_a_vselatacc_sg() != 0) {
    set_da_in_vcp_a_vselatacc_sg(from.da_in_vcp_a_vselatacc_sg());
  }
  if (from.da_in_vcp_is_strwhlangvalid_bl() != 0) {
    set_da_in_vcp_is_strwhlangvalid_bl(from.da_in_vcp_is_strwhlangvalid_bl());
  }
  if (from.da_in_vcp_is_yawrtvalid_bl() != 0) {
    set_da_in_vcp_is_yawrtvalid_bl(from.da_in_vcp_is_yawrtvalid_bl());
  }
  if (from.da_in_vcp_is_lataccvalid_bl() != 0) {
    set_da_in_vcp_is_lataccvalid_bl(from.da_in_vcp_is_lataccvalid_bl());
  }
  if (from.da_in_vcp_is_lgtaccvalid_bl() != 0) {
    set_da_in_vcp_is_lgtaccvalid_bl(from.da_in_vcp_is_lgtaccvalid_bl());
  }
  if (from.da_in_vcp_a_lgtacc_sg() != 0) {
    set_da_in_vcp_a_lgtacc_sg(from.da_in_vcp_a_lgtacc_sg());
  }
  if (from.da_in_vcp_rho_curvtrjest_sg() != 0) {
    set_da_in_vcp_rho_curvtrjest_sg(from.da_in_vcp_rho_curvtrjest_sg());
  }
  if (from.da_in_vcp_t_drvrtorqesti_sg() != 0) {
    set_da_in_vcp_t_drvrtorqesti_sg(from.da_in_vcp_t_drvrtorqesti_sg());
  }
  if (from.da_in_vcp_is_egovehstatc_bl() != 0) {
    set_da_in_vcp_is_egovehstatc_bl(from.da_in_vcp_is_egovehstatc_bl());
  }
  if (from.da_in_vcp_is_drvrtorqestifail_bl() != 0) {
    set_da_in_vcp_is_drvrtorqestifail_bl(from.da_in_vcp_is_drvrtorqestifail_bl());
  }
  if (from.da_in_vcp_sts_dvrhndsoffdtcn_ehos() != 0) {
    set_da_in_vcp_sts_dvrhndsoffdtcn_ehos(from.da_in_vcp_sts_dvrhndsoffdtcn_ehos());
  }
}

void B_Inputs_VCP_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_Inputs_VCP_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_Inputs_VCP_st::CopyFrom(const B_Inputs_VCP_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_Inputs_VCP_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_Inputs_VCP_st::IsInitialized() const {
  return true;
}

void B_Inputs_VCP_st::Swap(B_Inputs_VCP_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_Inputs_VCP_st::InternalSwap(B_Inputs_VCP_st* other) {
  using std::swap;
  swap(da_in_vcp_b_stateest_, other->da_in_vcp_b_stateest_);
  swap(da_in_vcp_angd_strgwhlang_sg_, other->da_in_vcp_angd_strgwhlang_sg_);
  swap(da_in_vcp_wd_strgwhlanggrd_sg_, other->da_in_vcp_wd_strgwhlanggrd_sg_);
  swap(da_in_vcp_v_vehspdavgdrn_sg_, other->da_in_vcp_v_vehspdavgdrn_sg_);
  swap(da_in_vcp_t_drvrstrtoq_sg_, other->da_in_vcp_t_drvrstrtoq_sg_);
  swap(da_in_vcp_yr_vehyawrate_sg_, other->da_in_vcp_yr_vehyawrate_sg_);
  swap(da_in_vcp_a_vselatacc_sg_, other->da_in_vcp_a_vselatacc_sg_);
  swap(da_in_vcp_is_strwhlangvalid_bl_, other->da_in_vcp_is_strwhlangvalid_bl_);
  swap(da_in_vcp_is_yawrtvalid_bl_, other->da_in_vcp_is_yawrtvalid_bl_);
  swap(da_in_vcp_is_lataccvalid_bl_, other->da_in_vcp_is_lataccvalid_bl_);
  swap(da_in_vcp_is_lgtaccvalid_bl_, other->da_in_vcp_is_lgtaccvalid_bl_);
  swap(da_in_vcp_a_lgtacc_sg_, other->da_in_vcp_a_lgtacc_sg_);
  swap(da_in_vcp_rho_curvtrjest_sg_, other->da_in_vcp_rho_curvtrjest_sg_);
  swap(da_in_vcp_t_drvrtorqesti_sg_, other->da_in_vcp_t_drvrtorqesti_sg_);
  swap(da_in_vcp_is_egovehstatc_bl_, other->da_in_vcp_is_egovehstatc_bl_);
  swap(da_in_vcp_is_drvrtorqestifail_bl_, other->da_in_vcp_is_drvrtorqestifail_bl_);
  swap(da_in_vcp_sts_dvrhndsoffdtcn_ehos_, other->da_in_vcp_sts_dvrhndsoffdtcn_ehos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_Inputs_VCP_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VCP_B_StateEst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VCP_B_StateEst::kVCPIsRoadBackAngValidBlFieldNumber;
const int VCP_B_StateEst::kVCPAngDRoadBankAngSgFieldNumber;
const int VCP_B_StateEst::kVCPV2VehParSquVchSgFieldNumber;
const int VCP_B_StateEst::kVCPKVehParStrStabFactKSgFieldNumber;
const int VCP_B_StateEst::kVCPKvUStrGrdKvSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VCP_B_StateEst::VCP_B_StateEst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_VCP_B_StateEst.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.VCP_B_StateEst)
}
VCP_B_StateEst::VCP_B_StateEst(const VCP_B_StateEst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vcp_is_roadbackangvalid_bl_, &from.vcp_is_roadbackangvalid_bl_,
    static_cast<size_t>(reinterpret_cast<char*>(&vcp_kv_ustrgrdkv_sg_) -
    reinterpret_cast<char*>(&vcp_is_roadbackangvalid_bl_)) + sizeof(vcp_kv_ustrgrdkv_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.VCP_B_StateEst)
}

void VCP_B_StateEst::SharedCtor() {
  ::memset(&vcp_is_roadbackangvalid_bl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vcp_kv_ustrgrdkv_sg_) -
      reinterpret_cast<char*>(&vcp_is_roadbackangvalid_bl_)) + sizeof(vcp_kv_ustrgrdkv_sg_));
}

VCP_B_StateEst::~VCP_B_StateEst() {
  // @@protoc_insertion_point(destructor:ads_common.VCP_B_StateEst)
  SharedDtor();
}

void VCP_B_StateEst::SharedDtor() {
}

void VCP_B_StateEst::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VCP_B_StateEst::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VCP_B_StateEst& VCP_B_StateEst::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_VCP_B_StateEst.base);
  return *internal_default_instance();
}


void VCP_B_StateEst::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.VCP_B_StateEst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vcp_is_roadbackangvalid_bl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vcp_kv_ustrgrdkv_sg_) -
      reinterpret_cast<char*>(&vcp_is_roadbackangvalid_bl_)) + sizeof(vcp_kv_ustrgrdkv_sg_));
  _internal_metadata_.Clear();
}

bool VCP_B_StateEst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.VCP_B_StateEst)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool VCP_is_RoadBackAngValid_bl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vcp_is_roadbackangvalid_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float VCP_angD_RoadBankAng_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vcp_angd_roadbankang_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float VCP_v2_VehParSquVch_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vcp_v2_vehparsquvch_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float VCP_k_VehParStrStabFactK_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vcp_k_vehparstrstabfactk_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float VCP_kv_UStrGrdKv_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vcp_kv_ustrgrdkv_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.VCP_B_StateEst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.VCP_B_StateEst)
  return false;
#undef DO_
}

void VCP_B_StateEst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.VCP_B_StateEst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool VCP_is_RoadBackAngValid_bl = 1;
  if (this->vcp_is_roadbackangvalid_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->vcp_is_roadbackangvalid_bl(), output);
  }

  // float VCP_angD_RoadBankAng_sg = 2;
  if (this->vcp_angd_roadbankang_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->vcp_angd_roadbankang_sg(), output);
  }

  // float VCP_v2_VehParSquVch_sg = 3;
  if (this->vcp_v2_vehparsquvch_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->vcp_v2_vehparsquvch_sg(), output);
  }

  // float VCP_k_VehParStrStabFactK_sg = 4;
  if (this->vcp_k_vehparstrstabfactk_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->vcp_k_vehparstrstabfactk_sg(), output);
  }

  // float VCP_kv_UStrGrdKv_sg = 5;
  if (this->vcp_kv_ustrgrdkv_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->vcp_kv_ustrgrdkv_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.VCP_B_StateEst)
}

::google::protobuf::uint8* VCP_B_StateEst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.VCP_B_StateEst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool VCP_is_RoadBackAngValid_bl = 1;
  if (this->vcp_is_roadbackangvalid_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->vcp_is_roadbackangvalid_bl(), target);
  }

  // float VCP_angD_RoadBankAng_sg = 2;
  if (this->vcp_angd_roadbankang_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->vcp_angd_roadbankang_sg(), target);
  }

  // float VCP_v2_VehParSquVch_sg = 3;
  if (this->vcp_v2_vehparsquvch_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->vcp_v2_vehparsquvch_sg(), target);
  }

  // float VCP_k_VehParStrStabFactK_sg = 4;
  if (this->vcp_k_vehparstrstabfactk_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->vcp_k_vehparstrstabfactk_sg(), target);
  }

  // float VCP_kv_UStrGrdKv_sg = 5;
  if (this->vcp_kv_ustrgrdkv_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->vcp_kv_ustrgrdkv_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.VCP_B_StateEst)
  return target;
}

size_t VCP_B_StateEst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.VCP_B_StateEst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool VCP_is_RoadBackAngValid_bl = 1;
  if (this->vcp_is_roadbackangvalid_bl() != 0) {
    total_size += 1 + 1;
  }

  // float VCP_angD_RoadBankAng_sg = 2;
  if (this->vcp_angd_roadbankang_sg() != 0) {
    total_size += 1 + 4;
  }

  // float VCP_v2_VehParSquVch_sg = 3;
  if (this->vcp_v2_vehparsquvch_sg() != 0) {
    total_size += 1 + 4;
  }

  // float VCP_k_VehParStrStabFactK_sg = 4;
  if (this->vcp_k_vehparstrstabfactk_sg() != 0) {
    total_size += 1 + 4;
  }

  // float VCP_kv_UStrGrdKv_sg = 5;
  if (this->vcp_kv_ustrgrdkv_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VCP_B_StateEst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.VCP_B_StateEst)
  GOOGLE_DCHECK_NE(&from, this);
  const VCP_B_StateEst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VCP_B_StateEst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.VCP_B_StateEst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.VCP_B_StateEst)
    MergeFrom(*source);
  }
}

void VCP_B_StateEst::MergeFrom(const VCP_B_StateEst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.VCP_B_StateEst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vcp_is_roadbackangvalid_bl() != 0) {
    set_vcp_is_roadbackangvalid_bl(from.vcp_is_roadbackangvalid_bl());
  }
  if (from.vcp_angd_roadbankang_sg() != 0) {
    set_vcp_angd_roadbankang_sg(from.vcp_angd_roadbankang_sg());
  }
  if (from.vcp_v2_vehparsquvch_sg() != 0) {
    set_vcp_v2_vehparsquvch_sg(from.vcp_v2_vehparsquvch_sg());
  }
  if (from.vcp_k_vehparstrstabfactk_sg() != 0) {
    set_vcp_k_vehparstrstabfactk_sg(from.vcp_k_vehparstrstabfactk_sg());
  }
  if (from.vcp_kv_ustrgrdkv_sg() != 0) {
    set_vcp_kv_ustrgrdkv_sg(from.vcp_kv_ustrgrdkv_sg());
  }
}

void VCP_B_StateEst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.VCP_B_StateEst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VCP_B_StateEst::CopyFrom(const VCP_B_StateEst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.VCP_B_StateEst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VCP_B_StateEst::IsInitialized() const {
  return true;
}

void VCP_B_StateEst::Swap(VCP_B_StateEst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VCP_B_StateEst::InternalSwap(VCP_B_StateEst* other) {
  using std::swap;
  swap(vcp_is_roadbackangvalid_bl_, other->vcp_is_roadbackangvalid_bl_);
  swap(vcp_angd_roadbankang_sg_, other->vcp_angd_roadbankang_sg_);
  swap(vcp_v2_vehparsquvch_sg_, other->vcp_v2_vehparsquvch_sg_);
  swap(vcp_k_vehparstrstabfactk_sg_, other->vcp_k_vehparstrstabfactk_sg_);
  swap(vcp_kv_ustrgrdkv_sg_, other->vcp_kv_ustrgrdkv_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VCP_B_StateEst::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_Inputs_VDP_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_Inputs_VDP_st::kDAINVDPIsLDircnIOBlFieldNumber;
const int B_Inputs_VDP_st::kDAINVDPIsRDircnIOBlFieldNumber;
const int B_Inputs_VDP_st::kDAINVDPIsEngRunActvBlFieldNumber;
const int B_Inputs_VDP_st::kDAINVDPAVSELongtAccelSgFieldNumber;
const int B_Inputs_VDP_st::kDAINVDPAEstdVSELongtAccelSgFieldNumber;
const int B_Inputs_VDP_st::kDAINVDPStsEgoVehSpdVEnFieldNumber;
const int B_Inputs_VDP_st::kDAINVDPEstdEgoVehSpdIPKU16FieldNumber;
const int B_Inputs_VDP_st::kDAINVDPIsVehRolBckBlFieldNumber;
const int B_Inputs_VDP_st::kDAINVDPVEgoAvgVehSpdSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_Inputs_VDP_st::B_Inputs_VDP_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_Inputs_VDP_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_Inputs_VDP_st)
}
B_Inputs_VDP_st::B_Inputs_VDP_st(const B_Inputs_VDP_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_vdp_is_ldircnio_bl_, &from.da_in_vdp_is_ldircnio_bl_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_vdp_v_egoavgvehspd_sg_) -
    reinterpret_cast<char*>(&da_in_vdp_is_ldircnio_bl_)) + sizeof(da_in_vdp_v_egoavgvehspd_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_Inputs_VDP_st)
}

void B_Inputs_VDP_st::SharedCtor() {
  ::memset(&da_in_vdp_is_ldircnio_bl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_vdp_v_egoavgvehspd_sg_) -
      reinterpret_cast<char*>(&da_in_vdp_is_ldircnio_bl_)) + sizeof(da_in_vdp_v_egoavgvehspd_sg_));
}

B_Inputs_VDP_st::~B_Inputs_VDP_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_Inputs_VDP_st)
  SharedDtor();
}

void B_Inputs_VDP_st::SharedDtor() {
}

void B_Inputs_VDP_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_Inputs_VDP_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_Inputs_VDP_st& B_Inputs_VDP_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_Inputs_VDP_st.base);
  return *internal_default_instance();
}


void B_Inputs_VDP_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_Inputs_VDP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_vdp_is_ldircnio_bl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_vdp_v_egoavgvehspd_sg_) -
      reinterpret_cast<char*>(&da_in_vdp_is_ldircnio_bl_)) + sizeof(da_in_vdp_v_egoavgvehspd_sg_));
  _internal_metadata_.Clear();
}

bool B_Inputs_VDP_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_Inputs_VDP_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool DA_IN_VDP_is_LDircnIO_bl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_vdp_is_ldircnio_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_VDP_is_RDircnIO_bl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_vdp_is_rdircnio_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_VDP_is_EngRunActv_bl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_vdp_is_engrunactv_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VDP_a_VSELongtAccel_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vdp_a_vselongtaccel_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VDP_a_EstdVSELongtAccel_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vdp_a_estdvselongtaccel_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eVLD_ValidSts DA_IN_VDP_sts_EgoVehSpdV_en = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_vdp_sts_egovehspdv_en(static_cast< ::ads_common::eVLD_ValidSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_VDPEstdEgoVehSpdIPK_u16 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_vdpestdegovehspdipk_u16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_VDP_is_VehRolBck_bl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_vdp_is_vehrolbck_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_VDP_v_EgoAvgVehSpd_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_vdp_v_egoavgvehspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_Inputs_VDP_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_Inputs_VDP_st)
  return false;
#undef DO_
}

void B_Inputs_VDP_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_Inputs_VDP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool DA_IN_VDP_is_LDircnIO_bl = 1;
  if (this->da_in_vdp_is_ldircnio_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->da_in_vdp_is_ldircnio_bl(), output);
  }

  // bool DA_IN_VDP_is_RDircnIO_bl = 2;
  if (this->da_in_vdp_is_rdircnio_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->da_in_vdp_is_rdircnio_bl(), output);
  }

  // bool DA_IN_VDP_is_EngRunActv_bl = 3;
  if (this->da_in_vdp_is_engrunactv_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->da_in_vdp_is_engrunactv_bl(), output);
  }

  // float DA_IN_VDP_a_VSELongtAccel_sg = 4;
  if (this->da_in_vdp_a_vselongtaccel_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_vdp_a_vselongtaccel_sg(), output);
  }

  // float DA_IN_VDP_a_EstdVSELongtAccel_sg = 5;
  if (this->da_in_vdp_a_estdvselongtaccel_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_vdp_a_estdvselongtaccel_sg(), output);
  }

  // .ads_common.eVLD_ValidSts DA_IN_VDP_sts_EgoVehSpdV_en = 6;
  if (this->da_in_vdp_sts_egovehspdv_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_vdp_sts_egovehspdv_en(), output);
  }

  // sint32 DA_IN_VDPEstdEgoVehSpdIPK_u16 = 7;
  if (this->da_in_vdpestdegovehspdipk_u16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->da_in_vdpestdegovehspdipk_u16(), output);
  }

  // bool DA_IN_VDP_is_VehRolBck_bl = 8;
  if (this->da_in_vdp_is_vehrolbck_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->da_in_vdp_is_vehrolbck_bl(), output);
  }

  // float DA_IN_VDP_v_EgoAvgVehSpd_sg = 9;
  if (this->da_in_vdp_v_egoavgvehspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_vdp_v_egoavgvehspd_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_Inputs_VDP_st)
}

::google::protobuf::uint8* B_Inputs_VDP_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_Inputs_VDP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool DA_IN_VDP_is_LDircnIO_bl = 1;
  if (this->da_in_vdp_is_ldircnio_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->da_in_vdp_is_ldircnio_bl(), target);
  }

  // bool DA_IN_VDP_is_RDircnIO_bl = 2;
  if (this->da_in_vdp_is_rdircnio_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->da_in_vdp_is_rdircnio_bl(), target);
  }

  // bool DA_IN_VDP_is_EngRunActv_bl = 3;
  if (this->da_in_vdp_is_engrunactv_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->da_in_vdp_is_engrunactv_bl(), target);
  }

  // float DA_IN_VDP_a_VSELongtAccel_sg = 4;
  if (this->da_in_vdp_a_vselongtaccel_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_vdp_a_vselongtaccel_sg(), target);
  }

  // float DA_IN_VDP_a_EstdVSELongtAccel_sg = 5;
  if (this->da_in_vdp_a_estdvselongtaccel_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_vdp_a_estdvselongtaccel_sg(), target);
  }

  // .ads_common.eVLD_ValidSts DA_IN_VDP_sts_EgoVehSpdV_en = 6;
  if (this->da_in_vdp_sts_egovehspdv_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_vdp_sts_egovehspdv_en(), target);
  }

  // sint32 DA_IN_VDPEstdEgoVehSpdIPK_u16 = 7;
  if (this->da_in_vdpestdegovehspdipk_u16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->da_in_vdpestdegovehspdipk_u16(), target);
  }

  // bool DA_IN_VDP_is_VehRolBck_bl = 8;
  if (this->da_in_vdp_is_vehrolbck_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->da_in_vdp_is_vehrolbck_bl(), target);
  }

  // float DA_IN_VDP_v_EgoAvgVehSpd_sg = 9;
  if (this->da_in_vdp_v_egoavgvehspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_vdp_v_egoavgvehspd_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_Inputs_VDP_st)
  return target;
}

size_t B_Inputs_VDP_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_Inputs_VDP_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool DA_IN_VDP_is_LDircnIO_bl = 1;
  if (this->da_in_vdp_is_ldircnio_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DA_IN_VDP_is_RDircnIO_bl = 2;
  if (this->da_in_vdp_is_rdircnio_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DA_IN_VDP_is_EngRunActv_bl = 3;
  if (this->da_in_vdp_is_engrunactv_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool DA_IN_VDP_is_VehRolBck_bl = 8;
  if (this->da_in_vdp_is_vehrolbck_bl() != 0) {
    total_size += 1 + 1;
  }

  // float DA_IN_VDP_a_VSELongtAccel_sg = 4;
  if (this->da_in_vdp_a_vselongtaccel_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_VDP_a_EstdVSELongtAccel_sg = 5;
  if (this->da_in_vdp_a_estdvselongtaccel_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eVLD_ValidSts DA_IN_VDP_sts_EgoVehSpdV_en = 6;
  if (this->da_in_vdp_sts_egovehspdv_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_vdp_sts_egovehspdv_en());
  }

  // sint32 DA_IN_VDPEstdEgoVehSpdIPK_u16 = 7;
  if (this->da_in_vdpestdegovehspdipk_u16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_vdpestdegovehspdipk_u16());
  }

  // float DA_IN_VDP_v_EgoAvgVehSpd_sg = 9;
  if (this->da_in_vdp_v_egoavgvehspd_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_Inputs_VDP_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_Inputs_VDP_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_Inputs_VDP_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_Inputs_VDP_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_Inputs_VDP_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_Inputs_VDP_st)
    MergeFrom(*source);
  }
}

void B_Inputs_VDP_st::MergeFrom(const B_Inputs_VDP_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_Inputs_VDP_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_vdp_is_ldircnio_bl() != 0) {
    set_da_in_vdp_is_ldircnio_bl(from.da_in_vdp_is_ldircnio_bl());
  }
  if (from.da_in_vdp_is_rdircnio_bl() != 0) {
    set_da_in_vdp_is_rdircnio_bl(from.da_in_vdp_is_rdircnio_bl());
  }
  if (from.da_in_vdp_is_engrunactv_bl() != 0) {
    set_da_in_vdp_is_engrunactv_bl(from.da_in_vdp_is_engrunactv_bl());
  }
  if (from.da_in_vdp_is_vehrolbck_bl() != 0) {
    set_da_in_vdp_is_vehrolbck_bl(from.da_in_vdp_is_vehrolbck_bl());
  }
  if (from.da_in_vdp_a_vselongtaccel_sg() != 0) {
    set_da_in_vdp_a_vselongtaccel_sg(from.da_in_vdp_a_vselongtaccel_sg());
  }
  if (from.da_in_vdp_a_estdvselongtaccel_sg() != 0) {
    set_da_in_vdp_a_estdvselongtaccel_sg(from.da_in_vdp_a_estdvselongtaccel_sg());
  }
  if (from.da_in_vdp_sts_egovehspdv_en() != 0) {
    set_da_in_vdp_sts_egovehspdv_en(from.da_in_vdp_sts_egovehspdv_en());
  }
  if (from.da_in_vdpestdegovehspdipk_u16() != 0) {
    set_da_in_vdpestdegovehspdipk_u16(from.da_in_vdpestdegovehspdipk_u16());
  }
  if (from.da_in_vdp_v_egoavgvehspd_sg() != 0) {
    set_da_in_vdp_v_egoavgvehspd_sg(from.da_in_vdp_v_egoavgvehspd_sg());
  }
}

void B_Inputs_VDP_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_Inputs_VDP_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_Inputs_VDP_st::CopyFrom(const B_Inputs_VDP_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_Inputs_VDP_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_Inputs_VDP_st::IsInitialized() const {
  return true;
}

void B_Inputs_VDP_st::Swap(B_Inputs_VDP_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_Inputs_VDP_st::InternalSwap(B_Inputs_VDP_st* other) {
  using std::swap;
  swap(da_in_vdp_is_ldircnio_bl_, other->da_in_vdp_is_ldircnio_bl_);
  swap(da_in_vdp_is_rdircnio_bl_, other->da_in_vdp_is_rdircnio_bl_);
  swap(da_in_vdp_is_engrunactv_bl_, other->da_in_vdp_is_engrunactv_bl_);
  swap(da_in_vdp_is_vehrolbck_bl_, other->da_in_vdp_is_vehrolbck_bl_);
  swap(da_in_vdp_a_vselongtaccel_sg_, other->da_in_vdp_a_vselongtaccel_sg_);
  swap(da_in_vdp_a_estdvselongtaccel_sg_, other->da_in_vdp_a_estdvselongtaccel_sg_);
  swap(da_in_vdp_sts_egovehspdv_en_, other->da_in_vdp_sts_egovehspdv_en_);
  swap(da_in_vdpestdegovehspdipk_u16_, other->da_in_vdpestdegovehspdipk_u16_);
  swap(da_in_vdp_v_egoavgvehspd_sg_, other->da_in_vdp_v_egoavgvehspd_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_Inputs_VDP_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ConfgDID_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ConfgDID_st::kDAINIndxFuncConfDIDU32FieldNumber;
const int B_ConfgDID_st::kDAINIndxSubFuncConfDIDU32FieldNumber;
const int B_ConfgDID_st::kDAINStatLDWLDPDftSwELKSDSFieldNumber;
const int B_ConfgDID_st::kDAINStatTJAICADftSwETJADSFieldNumber;
const int B_ConfgDID_st::kDAINStatLACStvtLvlDftSwELSDSFieldNumber;
const int B_ConfgDID_st::kDAINStatAudWrnngDftSwEAHWDSFieldNumber;
const int B_ConfgDID_st::kDAINStatHptcWrnngDftSwEAHWDSFieldNumber;
const int B_ConfgDID_st::kDAINStatAEBFCWDftSwEAFDSFieldNumber;
const int B_ConfgDID_st::kDAINStatAEBPDftSwEAEBPDSFieldNumber;
const int B_ConfgDID_st::kDAINStatFCWStvtLvlDftSwELSDSFieldNumber;
const int B_ConfgDID_st::kDAINStatELKDftSwEELKDSFieldNumber;
const int B_ConfgDID_st::kDAINIndxLstIgnCyclFuncStsU32FieldNumber;
const int B_ConfgDID_st::kDAINIndxReserveU8FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ConfgDID_st::B_ConfgDID_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ConfgDID_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ConfgDID_st)
}
B_ConfgDID_st::B_ConfgDID_st(const B_ConfgDID_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_funcconfdid_u32_, &from.da_in_indx_funcconfdid_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_indx_reserve_u8_) -
    reinterpret_cast<char*>(&da_in_indx_funcconfdid_u32_)) + sizeof(da_in_indx_reserve_u8_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ConfgDID_st)
}

void B_ConfgDID_st::SharedCtor() {
  ::memset(&da_in_indx_funcconfdid_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_indx_reserve_u8_) -
      reinterpret_cast<char*>(&da_in_indx_funcconfdid_u32_)) + sizeof(da_in_indx_reserve_u8_));
}

B_ConfgDID_st::~B_ConfgDID_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ConfgDID_st)
  SharedDtor();
}

void B_ConfgDID_st::SharedDtor() {
}

void B_ConfgDID_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ConfgDID_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ConfgDID_st& B_ConfgDID_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ConfgDID_st.base);
  return *internal_default_instance();
}


void B_ConfgDID_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ConfgDID_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_funcconfdid_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_indx_reserve_u8_) -
      reinterpret_cast<char*>(&da_in_indx_funcconfdid_u32_)) + sizeof(da_in_indx_reserve_u8_));
  _internal_metadata_.Clear();
}

bool B_ConfgDID_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ConfgDID_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_FuncConfDID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_funcconfdid_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_SubFuncConfDID_u32 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_subfuncconfdid_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLKSDS_LKSDftSw DA_IN_stat_LDWLDPDftSw_eLKSDS = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_ldwldpdftsw_elksds(static_cast< ::ads_common::eLKSDS_LKSDftSw >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eTJADS_TJADftSw DA_IN_stat_TJAICADftSw_eTJADS = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_tjaicadftsw_etjads(static_cast< ::ads_common::eTJADS_TJADftSw >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLSDS_SnstvtLvlDftSw DA_IN_stat_LACStvtLvlDftSw_eLSDS = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_lacstvtlvldftsw_elsds(static_cast< ::ads_common::eLSDS_SnstvtLvlDftSw >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eAHWDS_AudHptcWrnngDftSw DA_IN_stat_AudWrnngDftSw_eAHWDS = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_audwrnngdftsw_eahwds(static_cast< ::ads_common::eAHWDS_AudHptcWrnngDftSw >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eAHWDS_AudHptcWrnngDftSw DA_IN_stat_HptcWrnngDftSw_eAHWDS = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hptcwrnngdftsw_eahwds(static_cast< ::ads_common::eAHWDS_AudHptcWrnngDftSw >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eAFDS_AEBFCWDftSw DA_IN_stat_AEBFCWDftSw_eAFDS = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_aebfcwdftsw_eafds(static_cast< ::ads_common::eAFDS_AEBFCWDftSw >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eAEBPDS_AEBPedDftSw DA_IN_stat_AEBPDftSw_eAEBPDS = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_aebpdftsw_eaebpds(static_cast< ::ads_common::eAEBPDS_AEBPedDftSw >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLSDS_SnstvtLvlDftSw DA_IN_stat_FCWStvtLvlDftSw_eLSDS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_fcwstvtlvldftsw_elsds(static_cast< ::ads_common::eLSDS_SnstvtLvlDftSw >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eELKDS_ELKDftSw DA_IN_stat_ELKDftSw_eELKDS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_elkdftsw_eelkds(static_cast< ::ads_common::eELKDS_ELKDftSw >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_LstIgnCyclFuncSts_u32 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_lstigncyclfuncsts_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_reserve_u8 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_reserve_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ConfgDID_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ConfgDID_st)
  return false;
#undef DO_
}

void B_ConfgDID_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ConfgDID_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_FuncConfDID_u32 = 1;
  if (this->da_in_indx_funcconfdid_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_funcconfdid_u32(), output);
  }

  // sint32 DA_IN_indx_SubFuncConfDID_u32 = 2;
  if (this->da_in_indx_subfuncconfdid_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->da_in_indx_subfuncconfdid_u32(), output);
  }

  // .ads_common.eLKSDS_LKSDftSw DA_IN_stat_LDWLDPDftSw_eLKSDS = 3;
  if (this->da_in_stat_ldwldpdftsw_elksds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->da_in_stat_ldwldpdftsw_elksds(), output);
  }

  // .ads_common.eTJADS_TJADftSw DA_IN_stat_TJAICADftSw_eTJADS = 4;
  if (this->da_in_stat_tjaicadftsw_etjads() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->da_in_stat_tjaicadftsw_etjads(), output);
  }

  // .ads_common.eLSDS_SnstvtLvlDftSw DA_IN_stat_LACStvtLvlDftSw_eLSDS = 5;
  if (this->da_in_stat_lacstvtlvldftsw_elsds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->da_in_stat_lacstvtlvldftsw_elsds(), output);
  }

  // .ads_common.eAHWDS_AudHptcWrnngDftSw DA_IN_stat_AudWrnngDftSw_eAHWDS = 6;
  if (this->da_in_stat_audwrnngdftsw_eahwds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_audwrnngdftsw_eahwds(), output);
  }

  // .ads_common.eAHWDS_AudHptcWrnngDftSw DA_IN_stat_HptcWrnngDftSw_eAHWDS = 7;
  if (this->da_in_stat_hptcwrnngdftsw_eahwds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_hptcwrnngdftsw_eahwds(), output);
  }

  // .ads_common.eAFDS_AEBFCWDftSw DA_IN_stat_AEBFCWDftSw_eAFDS = 8;
  if (this->da_in_stat_aebfcwdftsw_eafds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_aebfcwdftsw_eafds(), output);
  }

  // .ads_common.eAEBPDS_AEBPedDftSw DA_IN_stat_AEBPDftSw_eAEBPDS = 9;
  if (this->da_in_stat_aebpdftsw_eaebpds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_aebpdftsw_eaebpds(), output);
  }

  // .ads_common.eLSDS_SnstvtLvlDftSw DA_IN_stat_FCWStvtLvlDftSw_eLSDS = 10;
  if (this->da_in_stat_fcwstvtlvldftsw_elsds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->da_in_stat_fcwstvtlvldftsw_elsds(), output);
  }

  // .ads_common.eELKDS_ELKDftSw DA_IN_stat_ELKDftSw_eELKDS = 11;
  if (this->da_in_stat_elkdftsw_eelkds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_elkdftsw_eelkds(), output);
  }

  // sint32 DA_IN_indx_LstIgnCyclFuncSts_u32 = 12;
  if (this->da_in_indx_lstigncyclfuncsts_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->da_in_indx_lstigncyclfuncsts_u32(), output);
  }

  // sint32 DA_IN_indx_reserve_u8 = 13;
  if (this->da_in_indx_reserve_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(13, this->da_in_indx_reserve_u8(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ConfgDID_st)
}

::google::protobuf::uint8* B_ConfgDID_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ConfgDID_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_FuncConfDID_u32 = 1;
  if (this->da_in_indx_funcconfdid_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_funcconfdid_u32(), target);
  }

  // sint32 DA_IN_indx_SubFuncConfDID_u32 = 2;
  if (this->da_in_indx_subfuncconfdid_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->da_in_indx_subfuncconfdid_u32(), target);
  }

  // .ads_common.eLKSDS_LKSDftSw DA_IN_stat_LDWLDPDftSw_eLKSDS = 3;
  if (this->da_in_stat_ldwldpdftsw_elksds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->da_in_stat_ldwldpdftsw_elksds(), target);
  }

  // .ads_common.eTJADS_TJADftSw DA_IN_stat_TJAICADftSw_eTJADS = 4;
  if (this->da_in_stat_tjaicadftsw_etjads() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->da_in_stat_tjaicadftsw_etjads(), target);
  }

  // .ads_common.eLSDS_SnstvtLvlDftSw DA_IN_stat_LACStvtLvlDftSw_eLSDS = 5;
  if (this->da_in_stat_lacstvtlvldftsw_elsds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->da_in_stat_lacstvtlvldftsw_elsds(), target);
  }

  // .ads_common.eAHWDS_AudHptcWrnngDftSw DA_IN_stat_AudWrnngDftSw_eAHWDS = 6;
  if (this->da_in_stat_audwrnngdftsw_eahwds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_audwrnngdftsw_eahwds(), target);
  }

  // .ads_common.eAHWDS_AudHptcWrnngDftSw DA_IN_stat_HptcWrnngDftSw_eAHWDS = 7;
  if (this->da_in_stat_hptcwrnngdftsw_eahwds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_hptcwrnngdftsw_eahwds(), target);
  }

  // .ads_common.eAFDS_AEBFCWDftSw DA_IN_stat_AEBFCWDftSw_eAFDS = 8;
  if (this->da_in_stat_aebfcwdftsw_eafds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_aebfcwdftsw_eafds(), target);
  }

  // .ads_common.eAEBPDS_AEBPedDftSw DA_IN_stat_AEBPDftSw_eAEBPDS = 9;
  if (this->da_in_stat_aebpdftsw_eaebpds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_aebpdftsw_eaebpds(), target);
  }

  // .ads_common.eLSDS_SnstvtLvlDftSw DA_IN_stat_FCWStvtLvlDftSw_eLSDS = 10;
  if (this->da_in_stat_fcwstvtlvldftsw_elsds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->da_in_stat_fcwstvtlvldftsw_elsds(), target);
  }

  // .ads_common.eELKDS_ELKDftSw DA_IN_stat_ELKDftSw_eELKDS = 11;
  if (this->da_in_stat_elkdftsw_eelkds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_elkdftsw_eelkds(), target);
  }

  // sint32 DA_IN_indx_LstIgnCyclFuncSts_u32 = 12;
  if (this->da_in_indx_lstigncyclfuncsts_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->da_in_indx_lstigncyclfuncsts_u32(), target);
  }

  // sint32 DA_IN_indx_reserve_u8 = 13;
  if (this->da_in_indx_reserve_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(13, this->da_in_indx_reserve_u8(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ConfgDID_st)
  return target;
}

size_t B_ConfgDID_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ConfgDID_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_FuncConfDID_u32 = 1;
  if (this->da_in_indx_funcconfdid_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_funcconfdid_u32());
  }

  // sint32 DA_IN_indx_SubFuncConfDID_u32 = 2;
  if (this->da_in_indx_subfuncconfdid_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_subfuncconfdid_u32());
  }

  // .ads_common.eLKSDS_LKSDftSw DA_IN_stat_LDWLDPDftSw_eLKSDS = 3;
  if (this->da_in_stat_ldwldpdftsw_elksds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_ldwldpdftsw_elksds());
  }

  // .ads_common.eTJADS_TJADftSw DA_IN_stat_TJAICADftSw_eTJADS = 4;
  if (this->da_in_stat_tjaicadftsw_etjads() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_tjaicadftsw_etjads());
  }

  // .ads_common.eLSDS_SnstvtLvlDftSw DA_IN_stat_LACStvtLvlDftSw_eLSDS = 5;
  if (this->da_in_stat_lacstvtlvldftsw_elsds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_lacstvtlvldftsw_elsds());
  }

  // .ads_common.eAHWDS_AudHptcWrnngDftSw DA_IN_stat_AudWrnngDftSw_eAHWDS = 6;
  if (this->da_in_stat_audwrnngdftsw_eahwds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_audwrnngdftsw_eahwds());
  }

  // .ads_common.eAHWDS_AudHptcWrnngDftSw DA_IN_stat_HptcWrnngDftSw_eAHWDS = 7;
  if (this->da_in_stat_hptcwrnngdftsw_eahwds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hptcwrnngdftsw_eahwds());
  }

  // .ads_common.eAFDS_AEBFCWDftSw DA_IN_stat_AEBFCWDftSw_eAFDS = 8;
  if (this->da_in_stat_aebfcwdftsw_eafds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_aebfcwdftsw_eafds());
  }

  // .ads_common.eAEBPDS_AEBPedDftSw DA_IN_stat_AEBPDftSw_eAEBPDS = 9;
  if (this->da_in_stat_aebpdftsw_eaebpds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_aebpdftsw_eaebpds());
  }

  // .ads_common.eLSDS_SnstvtLvlDftSw DA_IN_stat_FCWStvtLvlDftSw_eLSDS = 10;
  if (this->da_in_stat_fcwstvtlvldftsw_elsds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_fcwstvtlvldftsw_elsds());
  }

  // .ads_common.eELKDS_ELKDftSw DA_IN_stat_ELKDftSw_eELKDS = 11;
  if (this->da_in_stat_elkdftsw_eelkds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_elkdftsw_eelkds());
  }

  // sint32 DA_IN_indx_LstIgnCyclFuncSts_u32 = 12;
  if (this->da_in_indx_lstigncyclfuncsts_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_lstigncyclfuncsts_u32());
  }

  // sint32 DA_IN_indx_reserve_u8 = 13;
  if (this->da_in_indx_reserve_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_reserve_u8());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ConfgDID_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ConfgDID_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ConfgDID_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ConfgDID_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ConfgDID_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ConfgDID_st)
    MergeFrom(*source);
  }
}

void B_ConfgDID_st::MergeFrom(const B_ConfgDID_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ConfgDID_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_funcconfdid_u32() != 0) {
    set_da_in_indx_funcconfdid_u32(from.da_in_indx_funcconfdid_u32());
  }
  if (from.da_in_indx_subfuncconfdid_u32() != 0) {
    set_da_in_indx_subfuncconfdid_u32(from.da_in_indx_subfuncconfdid_u32());
  }
  if (from.da_in_stat_ldwldpdftsw_elksds() != 0) {
    set_da_in_stat_ldwldpdftsw_elksds(from.da_in_stat_ldwldpdftsw_elksds());
  }
  if (from.da_in_stat_tjaicadftsw_etjads() != 0) {
    set_da_in_stat_tjaicadftsw_etjads(from.da_in_stat_tjaicadftsw_etjads());
  }
  if (from.da_in_stat_lacstvtlvldftsw_elsds() != 0) {
    set_da_in_stat_lacstvtlvldftsw_elsds(from.da_in_stat_lacstvtlvldftsw_elsds());
  }
  if (from.da_in_stat_audwrnngdftsw_eahwds() != 0) {
    set_da_in_stat_audwrnngdftsw_eahwds(from.da_in_stat_audwrnngdftsw_eahwds());
  }
  if (from.da_in_stat_hptcwrnngdftsw_eahwds() != 0) {
    set_da_in_stat_hptcwrnngdftsw_eahwds(from.da_in_stat_hptcwrnngdftsw_eahwds());
  }
  if (from.da_in_stat_aebfcwdftsw_eafds() != 0) {
    set_da_in_stat_aebfcwdftsw_eafds(from.da_in_stat_aebfcwdftsw_eafds());
  }
  if (from.da_in_stat_aebpdftsw_eaebpds() != 0) {
    set_da_in_stat_aebpdftsw_eaebpds(from.da_in_stat_aebpdftsw_eaebpds());
  }
  if (from.da_in_stat_fcwstvtlvldftsw_elsds() != 0) {
    set_da_in_stat_fcwstvtlvldftsw_elsds(from.da_in_stat_fcwstvtlvldftsw_elsds());
  }
  if (from.da_in_stat_elkdftsw_eelkds() != 0) {
    set_da_in_stat_elkdftsw_eelkds(from.da_in_stat_elkdftsw_eelkds());
  }
  if (from.da_in_indx_lstigncyclfuncsts_u32() != 0) {
    set_da_in_indx_lstigncyclfuncsts_u32(from.da_in_indx_lstigncyclfuncsts_u32());
  }
  if (from.da_in_indx_reserve_u8() != 0) {
    set_da_in_indx_reserve_u8(from.da_in_indx_reserve_u8());
  }
}

void B_ConfgDID_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ConfgDID_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ConfgDID_st::CopyFrom(const B_ConfgDID_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ConfgDID_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ConfgDID_st::IsInitialized() const {
  return true;
}

void B_ConfgDID_st::Swap(B_ConfgDID_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ConfgDID_st::InternalSwap(B_ConfgDID_st* other) {
  using std::swap;
  swap(da_in_indx_funcconfdid_u32_, other->da_in_indx_funcconfdid_u32_);
  swap(da_in_indx_subfuncconfdid_u32_, other->da_in_indx_subfuncconfdid_u32_);
  swap(da_in_stat_ldwldpdftsw_elksds_, other->da_in_stat_ldwldpdftsw_elksds_);
  swap(da_in_stat_tjaicadftsw_etjads_, other->da_in_stat_tjaicadftsw_etjads_);
  swap(da_in_stat_lacstvtlvldftsw_elsds_, other->da_in_stat_lacstvtlvldftsw_elsds_);
  swap(da_in_stat_audwrnngdftsw_eahwds_, other->da_in_stat_audwrnngdftsw_eahwds_);
  swap(da_in_stat_hptcwrnngdftsw_eahwds_, other->da_in_stat_hptcwrnngdftsw_eahwds_);
  swap(da_in_stat_aebfcwdftsw_eafds_, other->da_in_stat_aebfcwdftsw_eafds_);
  swap(da_in_stat_aebpdftsw_eaebpds_, other->da_in_stat_aebpdftsw_eaebpds_);
  swap(da_in_stat_fcwstvtlvldftsw_elsds_, other->da_in_stat_fcwstvtlvldftsw_elsds_);
  swap(da_in_stat_elkdftsw_eelkds_, other->da_in_stat_elkdftsw_eelkds_);
  swap(da_in_indx_lstigncyclfuncsts_u32_, other->da_in_indx_lstigncyclfuncsts_u32_);
  swap(da_in_indx_reserve_u8_, other->da_in_indx_reserve_u8_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ConfgDID_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCobj01_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCobj01_st::kDAINIndxACC01IDU32FieldNumber;
const int B_ACCobj01_st::kDAINVACC01LongtSpdSgFieldNumber;
const int B_ACCobj01_st::kDAINVACC01LatSpdSgFieldNumber;
const int B_ACCobj01_st::kDAINDACC01LongtDistSgFieldNumber;
const int B_ACCobj01_st::kDAINDACC01LatDistSgFieldNumber;
const int B_ACCobj01_st::kDAINStatACC01SnsrECSNRFieldNumber;
const int B_ACCobj01_st::kDAINStatACC01TrkECTRKFieldNumber;
const int B_ACCobj01_st::kDAINStatACC01MvStsECMVFieldNumber;
const int B_ACCobj01_st::kDAINAACC01LongtAccSgFieldNumber;
const int B_ACCobj01_st::kDAINAACC01LatAccSgFieldNumber;
const int B_ACCobj01_st::kDAINStatACC01ClassECLSFieldNumber;
const int B_ACCobj01_st::kDAINDACC01WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCobj01_st::B_ACCobj01_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCobj01_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCobj01_st)
}
B_ACCobj01_st::B_ACCobj01_st(const B_ACCobj01_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_acc01id_u32_, &from.da_in_indx_acc01id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_acc01width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_acc01id_u32_)) + sizeof(da_in_d_acc01width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCobj01_st)
}

void B_ACCobj01_st::SharedCtor() {
  ::memset(&da_in_indx_acc01id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc01width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc01id_u32_)) + sizeof(da_in_d_acc01width_sg_));
}

B_ACCobj01_st::~B_ACCobj01_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCobj01_st)
  SharedDtor();
}

void B_ACCobj01_st::SharedDtor() {
}

void B_ACCobj01_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCobj01_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCobj01_st& B_ACCobj01_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCobj01_st.base);
  return *internal_default_instance();
}


void B_ACCobj01_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCobj01_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_acc01id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc01width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc01id_u32_)) + sizeof(da_in_d_acc01width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCobj01_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCobj01_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACC01ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_acc01id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC01LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc01longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC01LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc01latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC01LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc01longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC01LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc01latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC01Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc01snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC01Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc01trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC01MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc01mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC01LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc01longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC01LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc01latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC01Class_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc01class_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC01Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc01width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCobj01_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCobj01_st)
  return false;
#undef DO_
}

void B_ACCobj01_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCobj01_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC01ID_u32 = 1;
  if (this->da_in_indx_acc01id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_acc01id_u32(), output);
  }

  // float DA_IN_v_ACC01LongtSpd_sg = 2;
  if (this->da_in_v_acc01longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_acc01longtspd_sg(), output);
  }

  // float DA_IN_v_ACC01LatSpd_sg = 3;
  if (this->da_in_v_acc01latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_acc01latspd_sg(), output);
  }

  // float DA_IN_d_ACC01LongtDist_sg = 4;
  if (this->da_in_d_acc01longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_acc01longtdist_sg(), output);
  }

  // float DA_IN_d_ACC01LatDist_sg = 5;
  if (this->da_in_d_acc01latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_acc01latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC01Snsr_eCSNR = 6;
  if (this->da_in_stat_acc01snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_acc01snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC01Trk_eCTRK = 7;
  if (this->da_in_stat_acc01trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_acc01trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC01MvSts_eCMV = 8;
  if (this->da_in_stat_acc01mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_acc01mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACC01LongtAcc_sg = 9;
  if (this->da_in_a_acc01longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_acc01longtacc_sg(), output);
  }

  // float DA_IN_a_ACC01LatAcc_sg = 10;
  if (this->da_in_a_acc01latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_acc01latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC01Class_eCLS = 11;
  if (this->da_in_stat_acc01class_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_acc01class_ecls(), output);
  }

  // float DA_IN_d_ACC01Width_sg = 12;
  if (this->da_in_d_acc01width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_acc01width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCobj01_st)
}

::google::protobuf::uint8* B_ACCobj01_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCobj01_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC01ID_u32 = 1;
  if (this->da_in_indx_acc01id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_acc01id_u32(), target);
  }

  // float DA_IN_v_ACC01LongtSpd_sg = 2;
  if (this->da_in_v_acc01longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_acc01longtspd_sg(), target);
  }

  // float DA_IN_v_ACC01LatSpd_sg = 3;
  if (this->da_in_v_acc01latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_acc01latspd_sg(), target);
  }

  // float DA_IN_d_ACC01LongtDist_sg = 4;
  if (this->da_in_d_acc01longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_acc01longtdist_sg(), target);
  }

  // float DA_IN_d_ACC01LatDist_sg = 5;
  if (this->da_in_d_acc01latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_acc01latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC01Snsr_eCSNR = 6;
  if (this->da_in_stat_acc01snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_acc01snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC01Trk_eCTRK = 7;
  if (this->da_in_stat_acc01trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_acc01trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC01MvSts_eCMV = 8;
  if (this->da_in_stat_acc01mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_acc01mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACC01LongtAcc_sg = 9;
  if (this->da_in_a_acc01longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_acc01longtacc_sg(), target);
  }

  // float DA_IN_a_ACC01LatAcc_sg = 10;
  if (this->da_in_a_acc01latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_acc01latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC01Class_eCLS = 11;
  if (this->da_in_stat_acc01class_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_acc01class_ecls(), target);
  }

  // float DA_IN_d_ACC01Width_sg = 12;
  if (this->da_in_d_acc01width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_acc01width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCobj01_st)
  return target;
}

size_t B_ACCobj01_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCobj01_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACC01ID_u32 = 1;
  if (this->da_in_indx_acc01id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_acc01id_u32());
  }

  // float DA_IN_v_ACC01LongtSpd_sg = 2;
  if (this->da_in_v_acc01longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACC01LatSpd_sg = 3;
  if (this->da_in_v_acc01latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC01LongtDist_sg = 4;
  if (this->da_in_d_acc01longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC01LatDist_sg = 5;
  if (this->da_in_d_acc01latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC01Snsr_eCSNR = 6;
  if (this->da_in_stat_acc01snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc01snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC01Trk_eCTRK = 7;
  if (this->da_in_stat_acc01trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc01trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC01MvSts_eCMV = 8;
  if (this->da_in_stat_acc01mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc01mvsts_ecmv());
  }

  // float DA_IN_a_ACC01LongtAcc_sg = 9;
  if (this->da_in_a_acc01longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACC01LatAcc_sg = 10;
  if (this->da_in_a_acc01latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC01Class_eCLS = 11;
  if (this->da_in_stat_acc01class_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc01class_ecls());
  }

  // float DA_IN_d_ACC01Width_sg = 12;
  if (this->da_in_d_acc01width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCobj01_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCobj01_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCobj01_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCobj01_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCobj01_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCobj01_st)
    MergeFrom(*source);
  }
}

void B_ACCobj01_st::MergeFrom(const B_ACCobj01_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCobj01_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_acc01id_u32() != 0) {
    set_da_in_indx_acc01id_u32(from.da_in_indx_acc01id_u32());
  }
  if (from.da_in_v_acc01longtspd_sg() != 0) {
    set_da_in_v_acc01longtspd_sg(from.da_in_v_acc01longtspd_sg());
  }
  if (from.da_in_v_acc01latspd_sg() != 0) {
    set_da_in_v_acc01latspd_sg(from.da_in_v_acc01latspd_sg());
  }
  if (from.da_in_d_acc01longtdist_sg() != 0) {
    set_da_in_d_acc01longtdist_sg(from.da_in_d_acc01longtdist_sg());
  }
  if (from.da_in_d_acc01latdist_sg() != 0) {
    set_da_in_d_acc01latdist_sg(from.da_in_d_acc01latdist_sg());
  }
  if (from.da_in_stat_acc01snsr_ecsnr() != 0) {
    set_da_in_stat_acc01snsr_ecsnr(from.da_in_stat_acc01snsr_ecsnr());
  }
  if (from.da_in_stat_acc01trk_ectrk() != 0) {
    set_da_in_stat_acc01trk_ectrk(from.da_in_stat_acc01trk_ectrk());
  }
  if (from.da_in_stat_acc01mvsts_ecmv() != 0) {
    set_da_in_stat_acc01mvsts_ecmv(from.da_in_stat_acc01mvsts_ecmv());
  }
  if (from.da_in_a_acc01longtacc_sg() != 0) {
    set_da_in_a_acc01longtacc_sg(from.da_in_a_acc01longtacc_sg());
  }
  if (from.da_in_a_acc01latacc_sg() != 0) {
    set_da_in_a_acc01latacc_sg(from.da_in_a_acc01latacc_sg());
  }
  if (from.da_in_stat_acc01class_ecls() != 0) {
    set_da_in_stat_acc01class_ecls(from.da_in_stat_acc01class_ecls());
  }
  if (from.da_in_d_acc01width_sg() != 0) {
    set_da_in_d_acc01width_sg(from.da_in_d_acc01width_sg());
  }
}

void B_ACCobj01_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCobj01_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCobj01_st::CopyFrom(const B_ACCobj01_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCobj01_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCobj01_st::IsInitialized() const {
  return true;
}

void B_ACCobj01_st::Swap(B_ACCobj01_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCobj01_st::InternalSwap(B_ACCobj01_st* other) {
  using std::swap;
  swap(da_in_indx_acc01id_u32_, other->da_in_indx_acc01id_u32_);
  swap(da_in_v_acc01longtspd_sg_, other->da_in_v_acc01longtspd_sg_);
  swap(da_in_v_acc01latspd_sg_, other->da_in_v_acc01latspd_sg_);
  swap(da_in_d_acc01longtdist_sg_, other->da_in_d_acc01longtdist_sg_);
  swap(da_in_d_acc01latdist_sg_, other->da_in_d_acc01latdist_sg_);
  swap(da_in_stat_acc01snsr_ecsnr_, other->da_in_stat_acc01snsr_ecsnr_);
  swap(da_in_stat_acc01trk_ectrk_, other->da_in_stat_acc01trk_ectrk_);
  swap(da_in_stat_acc01mvsts_ecmv_, other->da_in_stat_acc01mvsts_ecmv_);
  swap(da_in_a_acc01longtacc_sg_, other->da_in_a_acc01longtacc_sg_);
  swap(da_in_a_acc01latacc_sg_, other->da_in_a_acc01latacc_sg_);
  swap(da_in_stat_acc01class_ecls_, other->da_in_stat_acc01class_ecls_);
  swap(da_in_d_acc01width_sg_, other->da_in_d_acc01width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCobj01_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCobj02_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCobj02_st::kDAINIndxACC02IDU32FieldNumber;
const int B_ACCobj02_st::kDAINVACC02LongtSpdSgFieldNumber;
const int B_ACCobj02_st::kDAINVACC02LatSpdSgFieldNumber;
const int B_ACCobj02_st::kDAINDACC02LongtDistSgFieldNumber;
const int B_ACCobj02_st::kDAINDACC02LatDistSgFieldNumber;
const int B_ACCobj02_st::kDAINStatACC02SnsrECSNRFieldNumber;
const int B_ACCobj02_st::kDAINStatACC02TrkECTRKFieldNumber;
const int B_ACCobj02_st::kDAINStatACC02MvStsECMVFieldNumber;
const int B_ACCobj02_st::kDAINAACC02LongtAccSgFieldNumber;
const int B_ACCobj02_st::kDAINAACC02LatAccSgFieldNumber;
const int B_ACCobj02_st::kDAINStatACC02ClassECLSFieldNumber;
const int B_ACCobj02_st::kDAINDACC02WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCobj02_st::B_ACCobj02_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCobj02_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCobj02_st)
}
B_ACCobj02_st::B_ACCobj02_st(const B_ACCobj02_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_acc02id_u32_, &from.da_in_indx_acc02id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_acc02width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_acc02id_u32_)) + sizeof(da_in_d_acc02width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCobj02_st)
}

void B_ACCobj02_st::SharedCtor() {
  ::memset(&da_in_indx_acc02id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc02width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc02id_u32_)) + sizeof(da_in_d_acc02width_sg_));
}

B_ACCobj02_st::~B_ACCobj02_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCobj02_st)
  SharedDtor();
}

void B_ACCobj02_st::SharedDtor() {
}

void B_ACCobj02_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCobj02_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCobj02_st& B_ACCobj02_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCobj02_st.base);
  return *internal_default_instance();
}


void B_ACCobj02_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCobj02_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_acc02id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc02width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc02id_u32_)) + sizeof(da_in_d_acc02width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCobj02_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCobj02_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACC02ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_acc02id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC02LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc02longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC02LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc02latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC02LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc02longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC02LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc02latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC02Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc02snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC02Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc02trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC02MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc02mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC02LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc02longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC02LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc02latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC02Class_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc02class_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC02Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc02width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCobj02_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCobj02_st)
  return false;
#undef DO_
}

void B_ACCobj02_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCobj02_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC02ID_u32 = 1;
  if (this->da_in_indx_acc02id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_acc02id_u32(), output);
  }

  // float DA_IN_v_ACC02LongtSpd_sg = 2;
  if (this->da_in_v_acc02longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_acc02longtspd_sg(), output);
  }

  // float DA_IN_v_ACC02LatSpd_sg = 3;
  if (this->da_in_v_acc02latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_acc02latspd_sg(), output);
  }

  // float DA_IN_d_ACC02LongtDist_sg = 4;
  if (this->da_in_d_acc02longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_acc02longtdist_sg(), output);
  }

  // float DA_IN_d_ACC02LatDist_sg = 5;
  if (this->da_in_d_acc02latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_acc02latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC02Snsr_eCSNR = 6;
  if (this->da_in_stat_acc02snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_acc02snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC02Trk_eCTRK = 7;
  if (this->da_in_stat_acc02trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_acc02trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC02MvSts_eCMV = 8;
  if (this->da_in_stat_acc02mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_acc02mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACC02LongtAcc_sg = 9;
  if (this->da_in_a_acc02longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_acc02longtacc_sg(), output);
  }

  // float DA_IN_a_ACC02LatAcc_sg = 10;
  if (this->da_in_a_acc02latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_acc02latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC02Class_eCLS = 11;
  if (this->da_in_stat_acc02class_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_acc02class_ecls(), output);
  }

  // float DA_IN_d_ACC02Width_sg = 12;
  if (this->da_in_d_acc02width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_acc02width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCobj02_st)
}

::google::protobuf::uint8* B_ACCobj02_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCobj02_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC02ID_u32 = 1;
  if (this->da_in_indx_acc02id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_acc02id_u32(), target);
  }

  // float DA_IN_v_ACC02LongtSpd_sg = 2;
  if (this->da_in_v_acc02longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_acc02longtspd_sg(), target);
  }

  // float DA_IN_v_ACC02LatSpd_sg = 3;
  if (this->da_in_v_acc02latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_acc02latspd_sg(), target);
  }

  // float DA_IN_d_ACC02LongtDist_sg = 4;
  if (this->da_in_d_acc02longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_acc02longtdist_sg(), target);
  }

  // float DA_IN_d_ACC02LatDist_sg = 5;
  if (this->da_in_d_acc02latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_acc02latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC02Snsr_eCSNR = 6;
  if (this->da_in_stat_acc02snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_acc02snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC02Trk_eCTRK = 7;
  if (this->da_in_stat_acc02trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_acc02trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC02MvSts_eCMV = 8;
  if (this->da_in_stat_acc02mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_acc02mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACC02LongtAcc_sg = 9;
  if (this->da_in_a_acc02longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_acc02longtacc_sg(), target);
  }

  // float DA_IN_a_ACC02LatAcc_sg = 10;
  if (this->da_in_a_acc02latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_acc02latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC02Class_eCLS = 11;
  if (this->da_in_stat_acc02class_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_acc02class_ecls(), target);
  }

  // float DA_IN_d_ACC02Width_sg = 12;
  if (this->da_in_d_acc02width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_acc02width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCobj02_st)
  return target;
}

size_t B_ACCobj02_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCobj02_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACC02ID_u32 = 1;
  if (this->da_in_indx_acc02id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_acc02id_u32());
  }

  // float DA_IN_v_ACC02LongtSpd_sg = 2;
  if (this->da_in_v_acc02longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACC02LatSpd_sg = 3;
  if (this->da_in_v_acc02latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC02LongtDist_sg = 4;
  if (this->da_in_d_acc02longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC02LatDist_sg = 5;
  if (this->da_in_d_acc02latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC02Snsr_eCSNR = 6;
  if (this->da_in_stat_acc02snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc02snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC02Trk_eCTRK = 7;
  if (this->da_in_stat_acc02trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc02trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC02MvSts_eCMV = 8;
  if (this->da_in_stat_acc02mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc02mvsts_ecmv());
  }

  // float DA_IN_a_ACC02LongtAcc_sg = 9;
  if (this->da_in_a_acc02longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACC02LatAcc_sg = 10;
  if (this->da_in_a_acc02latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC02Class_eCLS = 11;
  if (this->da_in_stat_acc02class_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc02class_ecls());
  }

  // float DA_IN_d_ACC02Width_sg = 12;
  if (this->da_in_d_acc02width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCobj02_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCobj02_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCobj02_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCobj02_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCobj02_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCobj02_st)
    MergeFrom(*source);
  }
}

void B_ACCobj02_st::MergeFrom(const B_ACCobj02_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCobj02_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_acc02id_u32() != 0) {
    set_da_in_indx_acc02id_u32(from.da_in_indx_acc02id_u32());
  }
  if (from.da_in_v_acc02longtspd_sg() != 0) {
    set_da_in_v_acc02longtspd_sg(from.da_in_v_acc02longtspd_sg());
  }
  if (from.da_in_v_acc02latspd_sg() != 0) {
    set_da_in_v_acc02latspd_sg(from.da_in_v_acc02latspd_sg());
  }
  if (from.da_in_d_acc02longtdist_sg() != 0) {
    set_da_in_d_acc02longtdist_sg(from.da_in_d_acc02longtdist_sg());
  }
  if (from.da_in_d_acc02latdist_sg() != 0) {
    set_da_in_d_acc02latdist_sg(from.da_in_d_acc02latdist_sg());
  }
  if (from.da_in_stat_acc02snsr_ecsnr() != 0) {
    set_da_in_stat_acc02snsr_ecsnr(from.da_in_stat_acc02snsr_ecsnr());
  }
  if (from.da_in_stat_acc02trk_ectrk() != 0) {
    set_da_in_stat_acc02trk_ectrk(from.da_in_stat_acc02trk_ectrk());
  }
  if (from.da_in_stat_acc02mvsts_ecmv() != 0) {
    set_da_in_stat_acc02mvsts_ecmv(from.da_in_stat_acc02mvsts_ecmv());
  }
  if (from.da_in_a_acc02longtacc_sg() != 0) {
    set_da_in_a_acc02longtacc_sg(from.da_in_a_acc02longtacc_sg());
  }
  if (from.da_in_a_acc02latacc_sg() != 0) {
    set_da_in_a_acc02latacc_sg(from.da_in_a_acc02latacc_sg());
  }
  if (from.da_in_stat_acc02class_ecls() != 0) {
    set_da_in_stat_acc02class_ecls(from.da_in_stat_acc02class_ecls());
  }
  if (from.da_in_d_acc02width_sg() != 0) {
    set_da_in_d_acc02width_sg(from.da_in_d_acc02width_sg());
  }
}

void B_ACCobj02_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCobj02_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCobj02_st::CopyFrom(const B_ACCobj02_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCobj02_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCobj02_st::IsInitialized() const {
  return true;
}

void B_ACCobj02_st::Swap(B_ACCobj02_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCobj02_st::InternalSwap(B_ACCobj02_st* other) {
  using std::swap;
  swap(da_in_indx_acc02id_u32_, other->da_in_indx_acc02id_u32_);
  swap(da_in_v_acc02longtspd_sg_, other->da_in_v_acc02longtspd_sg_);
  swap(da_in_v_acc02latspd_sg_, other->da_in_v_acc02latspd_sg_);
  swap(da_in_d_acc02longtdist_sg_, other->da_in_d_acc02longtdist_sg_);
  swap(da_in_d_acc02latdist_sg_, other->da_in_d_acc02latdist_sg_);
  swap(da_in_stat_acc02snsr_ecsnr_, other->da_in_stat_acc02snsr_ecsnr_);
  swap(da_in_stat_acc02trk_ectrk_, other->da_in_stat_acc02trk_ectrk_);
  swap(da_in_stat_acc02mvsts_ecmv_, other->da_in_stat_acc02mvsts_ecmv_);
  swap(da_in_a_acc02longtacc_sg_, other->da_in_a_acc02longtacc_sg_);
  swap(da_in_a_acc02latacc_sg_, other->da_in_a_acc02latacc_sg_);
  swap(da_in_stat_acc02class_ecls_, other->da_in_stat_acc02class_ecls_);
  swap(da_in_d_acc02width_sg_, other->da_in_d_acc02width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCobj02_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCobj05_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCobj05_st::kDAINIndxACC05IDU32FieldNumber;
const int B_ACCobj05_st::kDAINVACC05LongtSpdSgFieldNumber;
const int B_ACCobj05_st::kDAINVACC05LatSpdSgFieldNumber;
const int B_ACCobj05_st::kDAINDACC05LongtDistSgFieldNumber;
const int B_ACCobj05_st::kDAINDACC05LatDistSgFieldNumber;
const int B_ACCobj05_st::kDAINStatACC05SnsrECSNRFieldNumber;
const int B_ACCobj05_st::kDAINStatACC05TrkECTRKFieldNumber;
const int B_ACCobj05_st::kDAINStatACC05MvStsECMVFieldNumber;
const int B_ACCobj05_st::kDAINAACC05LongtAccSgFieldNumber;
const int B_ACCobj05_st::kDAINAACC05LatAccSgFieldNumber;
const int B_ACCobj05_st::kDAINStatACC05ClassECLSFieldNumber;
const int B_ACCobj05_st::kDAINDACC05WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCobj05_st::B_ACCobj05_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCobj05_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCobj05_st)
}
B_ACCobj05_st::B_ACCobj05_st(const B_ACCobj05_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_acc05id_u32_, &from.da_in_indx_acc05id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_acc05width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_acc05id_u32_)) + sizeof(da_in_d_acc05width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCobj05_st)
}

void B_ACCobj05_st::SharedCtor() {
  ::memset(&da_in_indx_acc05id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc05width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc05id_u32_)) + sizeof(da_in_d_acc05width_sg_));
}

B_ACCobj05_st::~B_ACCobj05_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCobj05_st)
  SharedDtor();
}

void B_ACCobj05_st::SharedDtor() {
}

void B_ACCobj05_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCobj05_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCobj05_st& B_ACCobj05_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCobj05_st.base);
  return *internal_default_instance();
}


void B_ACCobj05_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCobj05_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_acc05id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc05width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc05id_u32_)) + sizeof(da_in_d_acc05width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCobj05_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCobj05_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACC05ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_acc05id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC05LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc05longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC05LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc05latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC05LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc05longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC05LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc05latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC05Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc05snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC05Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc05trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC05MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc05mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC05LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc05longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC05LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc05latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC05Class_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc05class_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC05Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc05width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCobj05_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCobj05_st)
  return false;
#undef DO_
}

void B_ACCobj05_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCobj05_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC05ID_u32 = 1;
  if (this->da_in_indx_acc05id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_acc05id_u32(), output);
  }

  // float DA_IN_v_ACC05LongtSpd_sg = 2;
  if (this->da_in_v_acc05longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_acc05longtspd_sg(), output);
  }

  // float DA_IN_v_ACC05LatSpd_sg = 3;
  if (this->da_in_v_acc05latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_acc05latspd_sg(), output);
  }

  // float DA_IN_d_ACC05LongtDist_sg = 4;
  if (this->da_in_d_acc05longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_acc05longtdist_sg(), output);
  }

  // float DA_IN_d_ACC05LatDist_sg = 5;
  if (this->da_in_d_acc05latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_acc05latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC05Snsr_eCSNR = 6;
  if (this->da_in_stat_acc05snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_acc05snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC05Trk_eCTRK = 7;
  if (this->da_in_stat_acc05trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_acc05trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC05MvSts_eCMV = 8;
  if (this->da_in_stat_acc05mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_acc05mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACC05LongtAcc_sg = 9;
  if (this->da_in_a_acc05longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_acc05longtacc_sg(), output);
  }

  // float DA_IN_a_ACC05LatAcc_sg = 10;
  if (this->da_in_a_acc05latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_acc05latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC05Class_eCLS = 11;
  if (this->da_in_stat_acc05class_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_acc05class_ecls(), output);
  }

  // float DA_IN_d_ACC05Width_sg = 12;
  if (this->da_in_d_acc05width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_acc05width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCobj05_st)
}

::google::protobuf::uint8* B_ACCobj05_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCobj05_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC05ID_u32 = 1;
  if (this->da_in_indx_acc05id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_acc05id_u32(), target);
  }

  // float DA_IN_v_ACC05LongtSpd_sg = 2;
  if (this->da_in_v_acc05longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_acc05longtspd_sg(), target);
  }

  // float DA_IN_v_ACC05LatSpd_sg = 3;
  if (this->da_in_v_acc05latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_acc05latspd_sg(), target);
  }

  // float DA_IN_d_ACC05LongtDist_sg = 4;
  if (this->da_in_d_acc05longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_acc05longtdist_sg(), target);
  }

  // float DA_IN_d_ACC05LatDist_sg = 5;
  if (this->da_in_d_acc05latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_acc05latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC05Snsr_eCSNR = 6;
  if (this->da_in_stat_acc05snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_acc05snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC05Trk_eCTRK = 7;
  if (this->da_in_stat_acc05trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_acc05trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC05MvSts_eCMV = 8;
  if (this->da_in_stat_acc05mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_acc05mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACC05LongtAcc_sg = 9;
  if (this->da_in_a_acc05longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_acc05longtacc_sg(), target);
  }

  // float DA_IN_a_ACC05LatAcc_sg = 10;
  if (this->da_in_a_acc05latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_acc05latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC05Class_eCLS = 11;
  if (this->da_in_stat_acc05class_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_acc05class_ecls(), target);
  }

  // float DA_IN_d_ACC05Width_sg = 12;
  if (this->da_in_d_acc05width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_acc05width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCobj05_st)
  return target;
}

size_t B_ACCobj05_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCobj05_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACC05ID_u32 = 1;
  if (this->da_in_indx_acc05id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_acc05id_u32());
  }

  // float DA_IN_v_ACC05LongtSpd_sg = 2;
  if (this->da_in_v_acc05longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACC05LatSpd_sg = 3;
  if (this->da_in_v_acc05latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC05LongtDist_sg = 4;
  if (this->da_in_d_acc05longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC05LatDist_sg = 5;
  if (this->da_in_d_acc05latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC05Snsr_eCSNR = 6;
  if (this->da_in_stat_acc05snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc05snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC05Trk_eCTRK = 7;
  if (this->da_in_stat_acc05trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc05trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC05MvSts_eCMV = 8;
  if (this->da_in_stat_acc05mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc05mvsts_ecmv());
  }

  // float DA_IN_a_ACC05LongtAcc_sg = 9;
  if (this->da_in_a_acc05longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACC05LatAcc_sg = 10;
  if (this->da_in_a_acc05latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC05Class_eCLS = 11;
  if (this->da_in_stat_acc05class_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc05class_ecls());
  }

  // float DA_IN_d_ACC05Width_sg = 12;
  if (this->da_in_d_acc05width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCobj05_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCobj05_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCobj05_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCobj05_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCobj05_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCobj05_st)
    MergeFrom(*source);
  }
}

void B_ACCobj05_st::MergeFrom(const B_ACCobj05_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCobj05_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_acc05id_u32() != 0) {
    set_da_in_indx_acc05id_u32(from.da_in_indx_acc05id_u32());
  }
  if (from.da_in_v_acc05longtspd_sg() != 0) {
    set_da_in_v_acc05longtspd_sg(from.da_in_v_acc05longtspd_sg());
  }
  if (from.da_in_v_acc05latspd_sg() != 0) {
    set_da_in_v_acc05latspd_sg(from.da_in_v_acc05latspd_sg());
  }
  if (from.da_in_d_acc05longtdist_sg() != 0) {
    set_da_in_d_acc05longtdist_sg(from.da_in_d_acc05longtdist_sg());
  }
  if (from.da_in_d_acc05latdist_sg() != 0) {
    set_da_in_d_acc05latdist_sg(from.da_in_d_acc05latdist_sg());
  }
  if (from.da_in_stat_acc05snsr_ecsnr() != 0) {
    set_da_in_stat_acc05snsr_ecsnr(from.da_in_stat_acc05snsr_ecsnr());
  }
  if (from.da_in_stat_acc05trk_ectrk() != 0) {
    set_da_in_stat_acc05trk_ectrk(from.da_in_stat_acc05trk_ectrk());
  }
  if (from.da_in_stat_acc05mvsts_ecmv() != 0) {
    set_da_in_stat_acc05mvsts_ecmv(from.da_in_stat_acc05mvsts_ecmv());
  }
  if (from.da_in_a_acc05longtacc_sg() != 0) {
    set_da_in_a_acc05longtacc_sg(from.da_in_a_acc05longtacc_sg());
  }
  if (from.da_in_a_acc05latacc_sg() != 0) {
    set_da_in_a_acc05latacc_sg(from.da_in_a_acc05latacc_sg());
  }
  if (from.da_in_stat_acc05class_ecls() != 0) {
    set_da_in_stat_acc05class_ecls(from.da_in_stat_acc05class_ecls());
  }
  if (from.da_in_d_acc05width_sg() != 0) {
    set_da_in_d_acc05width_sg(from.da_in_d_acc05width_sg());
  }
}

void B_ACCobj05_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCobj05_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCobj05_st::CopyFrom(const B_ACCobj05_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCobj05_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCobj05_st::IsInitialized() const {
  return true;
}

void B_ACCobj05_st::Swap(B_ACCobj05_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCobj05_st::InternalSwap(B_ACCobj05_st* other) {
  using std::swap;
  swap(da_in_indx_acc05id_u32_, other->da_in_indx_acc05id_u32_);
  swap(da_in_v_acc05longtspd_sg_, other->da_in_v_acc05longtspd_sg_);
  swap(da_in_v_acc05latspd_sg_, other->da_in_v_acc05latspd_sg_);
  swap(da_in_d_acc05longtdist_sg_, other->da_in_d_acc05longtdist_sg_);
  swap(da_in_d_acc05latdist_sg_, other->da_in_d_acc05latdist_sg_);
  swap(da_in_stat_acc05snsr_ecsnr_, other->da_in_stat_acc05snsr_ecsnr_);
  swap(da_in_stat_acc05trk_ectrk_, other->da_in_stat_acc05trk_ectrk_);
  swap(da_in_stat_acc05mvsts_ecmv_, other->da_in_stat_acc05mvsts_ecmv_);
  swap(da_in_a_acc05longtacc_sg_, other->da_in_a_acc05longtacc_sg_);
  swap(da_in_a_acc05latacc_sg_, other->da_in_a_acc05latacc_sg_);
  swap(da_in_stat_acc05class_ecls_, other->da_in_stat_acc05class_ecls_);
  swap(da_in_d_acc05width_sg_, other->da_in_d_acc05width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCobj05_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCobj06_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCobj06_st::kDAINIndxACC06IDU32FieldNumber;
const int B_ACCobj06_st::kDAINVACC06LongtSpdSgFieldNumber;
const int B_ACCobj06_st::kDAINVACC06LatSpdSgFieldNumber;
const int B_ACCobj06_st::kDAINDACC06LongtDistSgFieldNumber;
const int B_ACCobj06_st::kDAINDACC06LatDistSgFieldNumber;
const int B_ACCobj06_st::kDAINStatACC06SnsrECSNRFieldNumber;
const int B_ACCobj06_st::kDAINStatACC06TrkECTRKFieldNumber;
const int B_ACCobj06_st::kDAINStatACC06MvStsECMVFieldNumber;
const int B_ACCobj06_st::kDAINAACC06LongtAccSgFieldNumber;
const int B_ACCobj06_st::kDAINAACC06LatAccSgFieldNumber;
const int B_ACCobj06_st::kDAINStatACC06ClassECLSFieldNumber;
const int B_ACCobj06_st::kDAINDACC06WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCobj06_st::B_ACCobj06_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCobj06_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCobj06_st)
}
B_ACCobj06_st::B_ACCobj06_st(const B_ACCobj06_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_acc06id_u32_, &from.da_in_indx_acc06id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_acc06width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_acc06id_u32_)) + sizeof(da_in_d_acc06width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCobj06_st)
}

void B_ACCobj06_st::SharedCtor() {
  ::memset(&da_in_indx_acc06id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc06width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc06id_u32_)) + sizeof(da_in_d_acc06width_sg_));
}

B_ACCobj06_st::~B_ACCobj06_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCobj06_st)
  SharedDtor();
}

void B_ACCobj06_st::SharedDtor() {
}

void B_ACCobj06_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCobj06_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCobj06_st& B_ACCobj06_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCobj06_st.base);
  return *internal_default_instance();
}


void B_ACCobj06_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCobj06_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_acc06id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_acc06width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_acc06id_u32_)) + sizeof(da_in_d_acc06width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCobj06_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCobj06_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACC06ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_acc06id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC06LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc06longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACC06LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_acc06latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC06LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc06longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC06LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc06latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC06Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc06snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC06Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc06trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC06MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc06mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC06LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc06longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACC06LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_acc06latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC06Class_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_acc06class_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACC06Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_acc06width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCobj06_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCobj06_st)
  return false;
#undef DO_
}

void B_ACCobj06_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCobj06_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC06ID_u32 = 1;
  if (this->da_in_indx_acc06id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_acc06id_u32(), output);
  }

  // float DA_IN_v_ACC06LongtSpd_sg = 2;
  if (this->da_in_v_acc06longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_acc06longtspd_sg(), output);
  }

  // float DA_IN_v_ACC06LatSpd_sg = 3;
  if (this->da_in_v_acc06latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_acc06latspd_sg(), output);
  }

  // float DA_IN_d_ACC06LongtDist_sg = 4;
  if (this->da_in_d_acc06longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_acc06longtdist_sg(), output);
  }

  // float DA_IN_d_ACC06LatDist_sg = 5;
  if (this->da_in_d_acc06latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_acc06latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC06Snsr_eCSNR = 6;
  if (this->da_in_stat_acc06snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_acc06snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC06Trk_eCTRK = 7;
  if (this->da_in_stat_acc06trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_acc06trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC06MvSts_eCMV = 8;
  if (this->da_in_stat_acc06mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_acc06mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACC06LongtAcc_sg = 9;
  if (this->da_in_a_acc06longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_acc06longtacc_sg(), output);
  }

  // float DA_IN_a_ACC06LatAcc_sg = 10;
  if (this->da_in_a_acc06latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_acc06latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC06Class_eCLS = 11;
  if (this->da_in_stat_acc06class_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_acc06class_ecls(), output);
  }

  // float DA_IN_d_ACC06Width_sg = 12;
  if (this->da_in_d_acc06width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_acc06width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCobj06_st)
}

::google::protobuf::uint8* B_ACCobj06_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCobj06_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACC06ID_u32 = 1;
  if (this->da_in_indx_acc06id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_acc06id_u32(), target);
  }

  // float DA_IN_v_ACC06LongtSpd_sg = 2;
  if (this->da_in_v_acc06longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_acc06longtspd_sg(), target);
  }

  // float DA_IN_v_ACC06LatSpd_sg = 3;
  if (this->da_in_v_acc06latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_acc06latspd_sg(), target);
  }

  // float DA_IN_d_ACC06LongtDist_sg = 4;
  if (this->da_in_d_acc06longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_acc06longtdist_sg(), target);
  }

  // float DA_IN_d_ACC06LatDist_sg = 5;
  if (this->da_in_d_acc06latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_acc06latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC06Snsr_eCSNR = 6;
  if (this->da_in_stat_acc06snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_acc06snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC06Trk_eCTRK = 7;
  if (this->da_in_stat_acc06trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_acc06trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC06MvSts_eCMV = 8;
  if (this->da_in_stat_acc06mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_acc06mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACC06LongtAcc_sg = 9;
  if (this->da_in_a_acc06longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_acc06longtacc_sg(), target);
  }

  // float DA_IN_a_ACC06LatAcc_sg = 10;
  if (this->da_in_a_acc06latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_acc06latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC06Class_eCLS = 11;
  if (this->da_in_stat_acc06class_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_acc06class_ecls(), target);
  }

  // float DA_IN_d_ACC06Width_sg = 12;
  if (this->da_in_d_acc06width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_acc06width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCobj06_st)
  return target;
}

size_t B_ACCobj06_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCobj06_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACC06ID_u32 = 1;
  if (this->da_in_indx_acc06id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_acc06id_u32());
  }

  // float DA_IN_v_ACC06LongtSpd_sg = 2;
  if (this->da_in_v_acc06longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACC06LatSpd_sg = 3;
  if (this->da_in_v_acc06latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC06LongtDist_sg = 4;
  if (this->da_in_d_acc06longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACC06LatDist_sg = 5;
  if (this->da_in_d_acc06latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACC06Snsr_eCSNR = 6;
  if (this->da_in_stat_acc06snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc06snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACC06Trk_eCTRK = 7;
  if (this->da_in_stat_acc06trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc06trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACC06MvSts_eCMV = 8;
  if (this->da_in_stat_acc06mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc06mvsts_ecmv());
  }

  // float DA_IN_a_ACC06LongtAcc_sg = 9;
  if (this->da_in_a_acc06longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACC06LatAcc_sg = 10;
  if (this->da_in_a_acc06latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACC06Class_eCLS = 11;
  if (this->da_in_stat_acc06class_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_acc06class_ecls());
  }

  // float DA_IN_d_ACC06Width_sg = 12;
  if (this->da_in_d_acc06width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCobj06_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCobj06_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCobj06_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCobj06_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCobj06_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCobj06_st)
    MergeFrom(*source);
  }
}

void B_ACCobj06_st::MergeFrom(const B_ACCobj06_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCobj06_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_acc06id_u32() != 0) {
    set_da_in_indx_acc06id_u32(from.da_in_indx_acc06id_u32());
  }
  if (from.da_in_v_acc06longtspd_sg() != 0) {
    set_da_in_v_acc06longtspd_sg(from.da_in_v_acc06longtspd_sg());
  }
  if (from.da_in_v_acc06latspd_sg() != 0) {
    set_da_in_v_acc06latspd_sg(from.da_in_v_acc06latspd_sg());
  }
  if (from.da_in_d_acc06longtdist_sg() != 0) {
    set_da_in_d_acc06longtdist_sg(from.da_in_d_acc06longtdist_sg());
  }
  if (from.da_in_d_acc06latdist_sg() != 0) {
    set_da_in_d_acc06latdist_sg(from.da_in_d_acc06latdist_sg());
  }
  if (from.da_in_stat_acc06snsr_ecsnr() != 0) {
    set_da_in_stat_acc06snsr_ecsnr(from.da_in_stat_acc06snsr_ecsnr());
  }
  if (from.da_in_stat_acc06trk_ectrk() != 0) {
    set_da_in_stat_acc06trk_ectrk(from.da_in_stat_acc06trk_ectrk());
  }
  if (from.da_in_stat_acc06mvsts_ecmv() != 0) {
    set_da_in_stat_acc06mvsts_ecmv(from.da_in_stat_acc06mvsts_ecmv());
  }
  if (from.da_in_a_acc06longtacc_sg() != 0) {
    set_da_in_a_acc06longtacc_sg(from.da_in_a_acc06longtacc_sg());
  }
  if (from.da_in_a_acc06latacc_sg() != 0) {
    set_da_in_a_acc06latacc_sg(from.da_in_a_acc06latacc_sg());
  }
  if (from.da_in_stat_acc06class_ecls() != 0) {
    set_da_in_stat_acc06class_ecls(from.da_in_stat_acc06class_ecls());
  }
  if (from.da_in_d_acc06width_sg() != 0) {
    set_da_in_d_acc06width_sg(from.da_in_d_acc06width_sg());
  }
}

void B_ACCobj06_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCobj06_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCobj06_st::CopyFrom(const B_ACCobj06_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCobj06_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCobj06_st::IsInitialized() const {
  return true;
}

void B_ACCobj06_st::Swap(B_ACCobj06_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCobj06_st::InternalSwap(B_ACCobj06_st* other) {
  using std::swap;
  swap(da_in_indx_acc06id_u32_, other->da_in_indx_acc06id_u32_);
  swap(da_in_v_acc06longtspd_sg_, other->da_in_v_acc06longtspd_sg_);
  swap(da_in_v_acc06latspd_sg_, other->da_in_v_acc06latspd_sg_);
  swap(da_in_d_acc06longtdist_sg_, other->da_in_d_acc06longtdist_sg_);
  swap(da_in_d_acc06latdist_sg_, other->da_in_d_acc06latdist_sg_);
  swap(da_in_stat_acc06snsr_ecsnr_, other->da_in_stat_acc06snsr_ecsnr_);
  swap(da_in_stat_acc06trk_ectrk_, other->da_in_stat_acc06trk_ectrk_);
  swap(da_in_stat_acc06mvsts_ecmv_, other->da_in_stat_acc06mvsts_ecmv_);
  swap(da_in_a_acc06longtacc_sg_, other->da_in_a_acc06longtacc_sg_);
  swap(da_in_a_acc06latacc_sg_, other->da_in_a_acc06latacc_sg_);
  swap(da_in_stat_acc06class_ecls_, other->da_in_stat_acc06class_ecls_);
  swap(da_in_d_acc06width_sg_, other->da_in_d_acc06width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCobj06_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCStnObj01_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCStnObj01_st::kDAINIndxACCStn01IDU32FieldNumber;
const int B_ACCStnObj01_st::kDAINVACCStn01LongtSpdSgFieldNumber;
const int B_ACCStnObj01_st::kDAINVACCStn01LatSpdSgFieldNumber;
const int B_ACCStnObj01_st::kDAINDACCStn01LongtDistSgFieldNumber;
const int B_ACCStnObj01_st::kDAINDACCStn01LatDistSgFieldNumber;
const int B_ACCStnObj01_st::kDAINStatACCStn01SnsrECSNRFieldNumber;
const int B_ACCStnObj01_st::kDAINStatACCStn01TrkECTRKFieldNumber;
const int B_ACCStnObj01_st::kDAINStatACCStn01MvStsECMVFieldNumber;
const int B_ACCStnObj01_st::kDAINAACCStn01LongtAccSgFieldNumber;
const int B_ACCStnObj01_st::kDAINAACCStn01LatAccSgFieldNumber;
const int B_ACCStnObj01_st::kDAINStatACCStn01ClsECLSFieldNumber;
const int B_ACCStnObj01_st::kDAINDACCStn01WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCStnObj01_st::B_ACCStnObj01_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj01_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCStnObj01_st)
}
B_ACCStnObj01_st::B_ACCStnObj01_st(const B_ACCStnObj01_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_accstn01id_u32_, &from.da_in_indx_accstn01id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_accstn01width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_accstn01id_u32_)) + sizeof(da_in_d_accstn01width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCStnObj01_st)
}

void B_ACCStnObj01_st::SharedCtor() {
  ::memset(&da_in_indx_accstn01id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn01width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn01id_u32_)) + sizeof(da_in_d_accstn01width_sg_));
}

B_ACCStnObj01_st::~B_ACCStnObj01_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCStnObj01_st)
  SharedDtor();
}

void B_ACCStnObj01_st::SharedDtor() {
}

void B_ACCStnObj01_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCStnObj01_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCStnObj01_st& B_ACCStnObj01_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj01_st.base);
  return *internal_default_instance();
}


void B_ACCStnObj01_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCStnObj01_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_accstn01id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn01width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn01id_u32_)) + sizeof(da_in_d_accstn01width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCStnObj01_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCStnObj01_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACCStn01ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_accstn01id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn01LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn01longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn01LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn01latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn01LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn01longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn01LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn01latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn01Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn01snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn01Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn01trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn01MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn01mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn01LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn01longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn01LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn01latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn01Cls_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn01cls_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn01Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn01width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCStnObj01_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCStnObj01_st)
  return false;
#undef DO_
}

void B_ACCStnObj01_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCStnObj01_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn01ID_u32 = 1;
  if (this->da_in_indx_accstn01id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_accstn01id_u32(), output);
  }

  // float DA_IN_v_ACCStn01LongtSpd_sg = 2;
  if (this->da_in_v_accstn01longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_accstn01longtspd_sg(), output);
  }

  // float DA_IN_v_ACCStn01LatSpd_sg = 3;
  if (this->da_in_v_accstn01latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_accstn01latspd_sg(), output);
  }

  // float DA_IN_d_ACCStn01LongtDist_sg = 4;
  if (this->da_in_d_accstn01longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_accstn01longtdist_sg(), output);
  }

  // float DA_IN_d_ACCStn01LatDist_sg = 5;
  if (this->da_in_d_accstn01latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_accstn01latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn01Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn01snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_accstn01snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn01Trk_eCTRK = 7;
  if (this->da_in_stat_accstn01trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_accstn01trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn01MvSts_eCMV = 8;
  if (this->da_in_stat_accstn01mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_accstn01mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACCStn01LongtAcc_sg = 9;
  if (this->da_in_a_accstn01longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_accstn01longtacc_sg(), output);
  }

  // float DA_IN_a_ACCStn01LatAcc_sg = 10;
  if (this->da_in_a_accstn01latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_accstn01latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn01Cls_eCLS = 11;
  if (this->da_in_stat_accstn01cls_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_accstn01cls_ecls(), output);
  }

  // float DA_IN_d_ACCStn01Width_sg = 12;
  if (this->da_in_d_accstn01width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_accstn01width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCStnObj01_st)
}

::google::protobuf::uint8* B_ACCStnObj01_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCStnObj01_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn01ID_u32 = 1;
  if (this->da_in_indx_accstn01id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_accstn01id_u32(), target);
  }

  // float DA_IN_v_ACCStn01LongtSpd_sg = 2;
  if (this->da_in_v_accstn01longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_accstn01longtspd_sg(), target);
  }

  // float DA_IN_v_ACCStn01LatSpd_sg = 3;
  if (this->da_in_v_accstn01latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_accstn01latspd_sg(), target);
  }

  // float DA_IN_d_ACCStn01LongtDist_sg = 4;
  if (this->da_in_d_accstn01longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_accstn01longtdist_sg(), target);
  }

  // float DA_IN_d_ACCStn01LatDist_sg = 5;
  if (this->da_in_d_accstn01latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_accstn01latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn01Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn01snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_accstn01snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn01Trk_eCTRK = 7;
  if (this->da_in_stat_accstn01trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_accstn01trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn01MvSts_eCMV = 8;
  if (this->da_in_stat_accstn01mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_accstn01mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACCStn01LongtAcc_sg = 9;
  if (this->da_in_a_accstn01longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_accstn01longtacc_sg(), target);
  }

  // float DA_IN_a_ACCStn01LatAcc_sg = 10;
  if (this->da_in_a_accstn01latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_accstn01latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn01Cls_eCLS = 11;
  if (this->da_in_stat_accstn01cls_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_accstn01cls_ecls(), target);
  }

  // float DA_IN_d_ACCStn01Width_sg = 12;
  if (this->da_in_d_accstn01width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_accstn01width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCStnObj01_st)
  return target;
}

size_t B_ACCStnObj01_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCStnObj01_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACCStn01ID_u32 = 1;
  if (this->da_in_indx_accstn01id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_accstn01id_u32());
  }

  // float DA_IN_v_ACCStn01LongtSpd_sg = 2;
  if (this->da_in_v_accstn01longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACCStn01LatSpd_sg = 3;
  if (this->da_in_v_accstn01latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn01LongtDist_sg = 4;
  if (this->da_in_d_accstn01longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn01LatDist_sg = 5;
  if (this->da_in_d_accstn01latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn01Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn01snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn01snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn01Trk_eCTRK = 7;
  if (this->da_in_stat_accstn01trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn01trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn01MvSts_eCMV = 8;
  if (this->da_in_stat_accstn01mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn01mvsts_ecmv());
  }

  // float DA_IN_a_ACCStn01LongtAcc_sg = 9;
  if (this->da_in_a_accstn01longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACCStn01LatAcc_sg = 10;
  if (this->da_in_a_accstn01latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn01Cls_eCLS = 11;
  if (this->da_in_stat_accstn01cls_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn01cls_ecls());
  }

  // float DA_IN_d_ACCStn01Width_sg = 12;
  if (this->da_in_d_accstn01width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCStnObj01_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCStnObj01_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCStnObj01_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCStnObj01_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCStnObj01_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCStnObj01_st)
    MergeFrom(*source);
  }
}

void B_ACCStnObj01_st::MergeFrom(const B_ACCStnObj01_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCStnObj01_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_accstn01id_u32() != 0) {
    set_da_in_indx_accstn01id_u32(from.da_in_indx_accstn01id_u32());
  }
  if (from.da_in_v_accstn01longtspd_sg() != 0) {
    set_da_in_v_accstn01longtspd_sg(from.da_in_v_accstn01longtspd_sg());
  }
  if (from.da_in_v_accstn01latspd_sg() != 0) {
    set_da_in_v_accstn01latspd_sg(from.da_in_v_accstn01latspd_sg());
  }
  if (from.da_in_d_accstn01longtdist_sg() != 0) {
    set_da_in_d_accstn01longtdist_sg(from.da_in_d_accstn01longtdist_sg());
  }
  if (from.da_in_d_accstn01latdist_sg() != 0) {
    set_da_in_d_accstn01latdist_sg(from.da_in_d_accstn01latdist_sg());
  }
  if (from.da_in_stat_accstn01snsr_ecsnr() != 0) {
    set_da_in_stat_accstn01snsr_ecsnr(from.da_in_stat_accstn01snsr_ecsnr());
  }
  if (from.da_in_stat_accstn01trk_ectrk() != 0) {
    set_da_in_stat_accstn01trk_ectrk(from.da_in_stat_accstn01trk_ectrk());
  }
  if (from.da_in_stat_accstn01mvsts_ecmv() != 0) {
    set_da_in_stat_accstn01mvsts_ecmv(from.da_in_stat_accstn01mvsts_ecmv());
  }
  if (from.da_in_a_accstn01longtacc_sg() != 0) {
    set_da_in_a_accstn01longtacc_sg(from.da_in_a_accstn01longtacc_sg());
  }
  if (from.da_in_a_accstn01latacc_sg() != 0) {
    set_da_in_a_accstn01latacc_sg(from.da_in_a_accstn01latacc_sg());
  }
  if (from.da_in_stat_accstn01cls_ecls() != 0) {
    set_da_in_stat_accstn01cls_ecls(from.da_in_stat_accstn01cls_ecls());
  }
  if (from.da_in_d_accstn01width_sg() != 0) {
    set_da_in_d_accstn01width_sg(from.da_in_d_accstn01width_sg());
  }
}

void B_ACCStnObj01_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCStnObj01_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCStnObj01_st::CopyFrom(const B_ACCStnObj01_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCStnObj01_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCStnObj01_st::IsInitialized() const {
  return true;
}

void B_ACCStnObj01_st::Swap(B_ACCStnObj01_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCStnObj01_st::InternalSwap(B_ACCStnObj01_st* other) {
  using std::swap;
  swap(da_in_indx_accstn01id_u32_, other->da_in_indx_accstn01id_u32_);
  swap(da_in_v_accstn01longtspd_sg_, other->da_in_v_accstn01longtspd_sg_);
  swap(da_in_v_accstn01latspd_sg_, other->da_in_v_accstn01latspd_sg_);
  swap(da_in_d_accstn01longtdist_sg_, other->da_in_d_accstn01longtdist_sg_);
  swap(da_in_d_accstn01latdist_sg_, other->da_in_d_accstn01latdist_sg_);
  swap(da_in_stat_accstn01snsr_ecsnr_, other->da_in_stat_accstn01snsr_ecsnr_);
  swap(da_in_stat_accstn01trk_ectrk_, other->da_in_stat_accstn01trk_ectrk_);
  swap(da_in_stat_accstn01mvsts_ecmv_, other->da_in_stat_accstn01mvsts_ecmv_);
  swap(da_in_a_accstn01longtacc_sg_, other->da_in_a_accstn01longtacc_sg_);
  swap(da_in_a_accstn01latacc_sg_, other->da_in_a_accstn01latacc_sg_);
  swap(da_in_stat_accstn01cls_ecls_, other->da_in_stat_accstn01cls_ecls_);
  swap(da_in_d_accstn01width_sg_, other->da_in_d_accstn01width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCStnObj01_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCStnObj02_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCStnObj02_st::kDAINIndxACCStn02IDU32FieldNumber;
const int B_ACCStnObj02_st::kDAINVACCStn02LongtSpdSgFieldNumber;
const int B_ACCStnObj02_st::kDAINVACCStn02LatSpdSgFieldNumber;
const int B_ACCStnObj02_st::kDAINDACCStn02LongtDistSgFieldNumber;
const int B_ACCStnObj02_st::kDAINDACCStn02LatDistSgFieldNumber;
const int B_ACCStnObj02_st::kDAINStatACCStn02SnsrECSNRFieldNumber;
const int B_ACCStnObj02_st::kDAINStatACCStn02TrkECTRKFieldNumber;
const int B_ACCStnObj02_st::kDAINStatACCStn02MvStsECMVFieldNumber;
const int B_ACCStnObj02_st::kDAINAACCStn02LongtAccSgFieldNumber;
const int B_ACCStnObj02_st::kDAINAACCStn02LatAccSgFieldNumber;
const int B_ACCStnObj02_st::kDAINStatACCStn02ClsECLSFieldNumber;
const int B_ACCStnObj02_st::kDAINDACCStn02WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCStnObj02_st::B_ACCStnObj02_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj02_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCStnObj02_st)
}
B_ACCStnObj02_st::B_ACCStnObj02_st(const B_ACCStnObj02_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_accstn02id_u32_, &from.da_in_indx_accstn02id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_accstn02width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_accstn02id_u32_)) + sizeof(da_in_d_accstn02width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCStnObj02_st)
}

void B_ACCStnObj02_st::SharedCtor() {
  ::memset(&da_in_indx_accstn02id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn02width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn02id_u32_)) + sizeof(da_in_d_accstn02width_sg_));
}

B_ACCStnObj02_st::~B_ACCStnObj02_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCStnObj02_st)
  SharedDtor();
}

void B_ACCStnObj02_st::SharedDtor() {
}

void B_ACCStnObj02_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCStnObj02_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCStnObj02_st& B_ACCStnObj02_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj02_st.base);
  return *internal_default_instance();
}


void B_ACCStnObj02_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCStnObj02_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_accstn02id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn02width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn02id_u32_)) + sizeof(da_in_d_accstn02width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCStnObj02_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCStnObj02_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACCStn02ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_accstn02id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn02LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn02longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn02LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn02latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn02LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn02longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn02LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn02latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn02Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn02snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn02Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn02trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn02MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn02mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn02LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn02longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn02LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn02latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn02Cls_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn02cls_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn02Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn02width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCStnObj02_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCStnObj02_st)
  return false;
#undef DO_
}

void B_ACCStnObj02_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCStnObj02_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn02ID_u32 = 1;
  if (this->da_in_indx_accstn02id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_accstn02id_u32(), output);
  }

  // float DA_IN_v_ACCStn02LongtSpd_sg = 2;
  if (this->da_in_v_accstn02longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_accstn02longtspd_sg(), output);
  }

  // float DA_IN_v_ACCStn02LatSpd_sg = 3;
  if (this->da_in_v_accstn02latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_accstn02latspd_sg(), output);
  }

  // float DA_IN_d_ACCStn02LongtDist_sg = 4;
  if (this->da_in_d_accstn02longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_accstn02longtdist_sg(), output);
  }

  // float DA_IN_d_ACCStn02LatDist_sg = 5;
  if (this->da_in_d_accstn02latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_accstn02latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn02Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn02snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_accstn02snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn02Trk_eCTRK = 7;
  if (this->da_in_stat_accstn02trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_accstn02trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn02MvSts_eCMV = 8;
  if (this->da_in_stat_accstn02mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_accstn02mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACCStn02LongtAcc_sg = 9;
  if (this->da_in_a_accstn02longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_accstn02longtacc_sg(), output);
  }

  // float DA_IN_a_ACCStn02LatAcc_sg = 10;
  if (this->da_in_a_accstn02latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_accstn02latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn02Cls_eCLS = 11;
  if (this->da_in_stat_accstn02cls_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_accstn02cls_ecls(), output);
  }

  // float DA_IN_d_ACCStn02Width_sg = 12;
  if (this->da_in_d_accstn02width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_accstn02width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCStnObj02_st)
}

::google::protobuf::uint8* B_ACCStnObj02_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCStnObj02_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn02ID_u32 = 1;
  if (this->da_in_indx_accstn02id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_accstn02id_u32(), target);
  }

  // float DA_IN_v_ACCStn02LongtSpd_sg = 2;
  if (this->da_in_v_accstn02longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_accstn02longtspd_sg(), target);
  }

  // float DA_IN_v_ACCStn02LatSpd_sg = 3;
  if (this->da_in_v_accstn02latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_accstn02latspd_sg(), target);
  }

  // float DA_IN_d_ACCStn02LongtDist_sg = 4;
  if (this->da_in_d_accstn02longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_accstn02longtdist_sg(), target);
  }

  // float DA_IN_d_ACCStn02LatDist_sg = 5;
  if (this->da_in_d_accstn02latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_accstn02latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn02Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn02snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_accstn02snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn02Trk_eCTRK = 7;
  if (this->da_in_stat_accstn02trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_accstn02trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn02MvSts_eCMV = 8;
  if (this->da_in_stat_accstn02mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_accstn02mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACCStn02LongtAcc_sg = 9;
  if (this->da_in_a_accstn02longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_accstn02longtacc_sg(), target);
  }

  // float DA_IN_a_ACCStn02LatAcc_sg = 10;
  if (this->da_in_a_accstn02latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_accstn02latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn02Cls_eCLS = 11;
  if (this->da_in_stat_accstn02cls_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_accstn02cls_ecls(), target);
  }

  // float DA_IN_d_ACCStn02Width_sg = 12;
  if (this->da_in_d_accstn02width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_accstn02width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCStnObj02_st)
  return target;
}

size_t B_ACCStnObj02_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCStnObj02_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACCStn02ID_u32 = 1;
  if (this->da_in_indx_accstn02id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_accstn02id_u32());
  }

  // float DA_IN_v_ACCStn02LongtSpd_sg = 2;
  if (this->da_in_v_accstn02longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACCStn02LatSpd_sg = 3;
  if (this->da_in_v_accstn02latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn02LongtDist_sg = 4;
  if (this->da_in_d_accstn02longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn02LatDist_sg = 5;
  if (this->da_in_d_accstn02latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn02Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn02snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn02snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn02Trk_eCTRK = 7;
  if (this->da_in_stat_accstn02trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn02trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn02MvSts_eCMV = 8;
  if (this->da_in_stat_accstn02mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn02mvsts_ecmv());
  }

  // float DA_IN_a_ACCStn02LongtAcc_sg = 9;
  if (this->da_in_a_accstn02longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACCStn02LatAcc_sg = 10;
  if (this->da_in_a_accstn02latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn02Cls_eCLS = 11;
  if (this->da_in_stat_accstn02cls_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn02cls_ecls());
  }

  // float DA_IN_d_ACCStn02Width_sg = 12;
  if (this->da_in_d_accstn02width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCStnObj02_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCStnObj02_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCStnObj02_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCStnObj02_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCStnObj02_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCStnObj02_st)
    MergeFrom(*source);
  }
}

void B_ACCStnObj02_st::MergeFrom(const B_ACCStnObj02_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCStnObj02_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_accstn02id_u32() != 0) {
    set_da_in_indx_accstn02id_u32(from.da_in_indx_accstn02id_u32());
  }
  if (from.da_in_v_accstn02longtspd_sg() != 0) {
    set_da_in_v_accstn02longtspd_sg(from.da_in_v_accstn02longtspd_sg());
  }
  if (from.da_in_v_accstn02latspd_sg() != 0) {
    set_da_in_v_accstn02latspd_sg(from.da_in_v_accstn02latspd_sg());
  }
  if (from.da_in_d_accstn02longtdist_sg() != 0) {
    set_da_in_d_accstn02longtdist_sg(from.da_in_d_accstn02longtdist_sg());
  }
  if (from.da_in_d_accstn02latdist_sg() != 0) {
    set_da_in_d_accstn02latdist_sg(from.da_in_d_accstn02latdist_sg());
  }
  if (from.da_in_stat_accstn02snsr_ecsnr() != 0) {
    set_da_in_stat_accstn02snsr_ecsnr(from.da_in_stat_accstn02snsr_ecsnr());
  }
  if (from.da_in_stat_accstn02trk_ectrk() != 0) {
    set_da_in_stat_accstn02trk_ectrk(from.da_in_stat_accstn02trk_ectrk());
  }
  if (from.da_in_stat_accstn02mvsts_ecmv() != 0) {
    set_da_in_stat_accstn02mvsts_ecmv(from.da_in_stat_accstn02mvsts_ecmv());
  }
  if (from.da_in_a_accstn02longtacc_sg() != 0) {
    set_da_in_a_accstn02longtacc_sg(from.da_in_a_accstn02longtacc_sg());
  }
  if (from.da_in_a_accstn02latacc_sg() != 0) {
    set_da_in_a_accstn02latacc_sg(from.da_in_a_accstn02latacc_sg());
  }
  if (from.da_in_stat_accstn02cls_ecls() != 0) {
    set_da_in_stat_accstn02cls_ecls(from.da_in_stat_accstn02cls_ecls());
  }
  if (from.da_in_d_accstn02width_sg() != 0) {
    set_da_in_d_accstn02width_sg(from.da_in_d_accstn02width_sg());
  }
}

void B_ACCStnObj02_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCStnObj02_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCStnObj02_st::CopyFrom(const B_ACCStnObj02_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCStnObj02_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCStnObj02_st::IsInitialized() const {
  return true;
}

void B_ACCStnObj02_st::Swap(B_ACCStnObj02_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCStnObj02_st::InternalSwap(B_ACCStnObj02_st* other) {
  using std::swap;
  swap(da_in_indx_accstn02id_u32_, other->da_in_indx_accstn02id_u32_);
  swap(da_in_v_accstn02longtspd_sg_, other->da_in_v_accstn02longtspd_sg_);
  swap(da_in_v_accstn02latspd_sg_, other->da_in_v_accstn02latspd_sg_);
  swap(da_in_d_accstn02longtdist_sg_, other->da_in_d_accstn02longtdist_sg_);
  swap(da_in_d_accstn02latdist_sg_, other->da_in_d_accstn02latdist_sg_);
  swap(da_in_stat_accstn02snsr_ecsnr_, other->da_in_stat_accstn02snsr_ecsnr_);
  swap(da_in_stat_accstn02trk_ectrk_, other->da_in_stat_accstn02trk_ectrk_);
  swap(da_in_stat_accstn02mvsts_ecmv_, other->da_in_stat_accstn02mvsts_ecmv_);
  swap(da_in_a_accstn02longtacc_sg_, other->da_in_a_accstn02longtacc_sg_);
  swap(da_in_a_accstn02latacc_sg_, other->da_in_a_accstn02latacc_sg_);
  swap(da_in_stat_accstn02cls_ecls_, other->da_in_stat_accstn02cls_ecls_);
  swap(da_in_d_accstn02width_sg_, other->da_in_d_accstn02width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCStnObj02_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCStnObj05_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCStnObj05_st::kDAINIndxACCStn05IDU32FieldNumber;
const int B_ACCStnObj05_st::kDAINVACCStn05LongtSpdSgFieldNumber;
const int B_ACCStnObj05_st::kDAINVACCStn05LatSpdSgFieldNumber;
const int B_ACCStnObj05_st::kDAINDACCStn05LongtDistSgFieldNumber;
const int B_ACCStnObj05_st::kDAINDACCStn05LatDistSgFieldNumber;
const int B_ACCStnObj05_st::kDAINStatACCStn05SnsrECSNRFieldNumber;
const int B_ACCStnObj05_st::kDAINStatACCStn05TrkECTRKFieldNumber;
const int B_ACCStnObj05_st::kDAINStatACCStn05MvStsECMVFieldNumber;
const int B_ACCStnObj05_st::kDAINAACCStn05LongtAccSgFieldNumber;
const int B_ACCStnObj05_st::kDAINAACCStn05LatAccSgFieldNumber;
const int B_ACCStnObj05_st::kDAINStatACCStn05ClsECLSFieldNumber;
const int B_ACCStnObj05_st::kDAINDACCStn05WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCStnObj05_st::B_ACCStnObj05_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj05_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCStnObj05_st)
}
B_ACCStnObj05_st::B_ACCStnObj05_st(const B_ACCStnObj05_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_accstn05id_u32_, &from.da_in_indx_accstn05id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_accstn05width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_accstn05id_u32_)) + sizeof(da_in_d_accstn05width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCStnObj05_st)
}

void B_ACCStnObj05_st::SharedCtor() {
  ::memset(&da_in_indx_accstn05id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn05width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn05id_u32_)) + sizeof(da_in_d_accstn05width_sg_));
}

B_ACCStnObj05_st::~B_ACCStnObj05_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCStnObj05_st)
  SharedDtor();
}

void B_ACCStnObj05_st::SharedDtor() {
}

void B_ACCStnObj05_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCStnObj05_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCStnObj05_st& B_ACCStnObj05_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj05_st.base);
  return *internal_default_instance();
}


void B_ACCStnObj05_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCStnObj05_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_accstn05id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn05width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn05id_u32_)) + sizeof(da_in_d_accstn05width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCStnObj05_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCStnObj05_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACCStn05ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_accstn05id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn05LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn05longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn05LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn05latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn05LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn05longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn05LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn05latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn05Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn05snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn05Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn05trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn05MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn05mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn05LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn05longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn05LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn05latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn05Cls_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn05cls_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn05Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn05width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCStnObj05_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCStnObj05_st)
  return false;
#undef DO_
}

void B_ACCStnObj05_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCStnObj05_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn05ID_u32 = 1;
  if (this->da_in_indx_accstn05id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_accstn05id_u32(), output);
  }

  // float DA_IN_v_ACCStn05LongtSpd_sg = 2;
  if (this->da_in_v_accstn05longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_accstn05longtspd_sg(), output);
  }

  // float DA_IN_v_ACCStn05LatSpd_sg = 3;
  if (this->da_in_v_accstn05latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_accstn05latspd_sg(), output);
  }

  // float DA_IN_d_ACCStn05LongtDist_sg = 4;
  if (this->da_in_d_accstn05longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_accstn05longtdist_sg(), output);
  }

  // float DA_IN_d_ACCStn05LatDist_sg = 5;
  if (this->da_in_d_accstn05latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_accstn05latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn05Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn05snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_accstn05snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn05Trk_eCTRK = 7;
  if (this->da_in_stat_accstn05trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_accstn05trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn05MvSts_eCMV = 8;
  if (this->da_in_stat_accstn05mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_accstn05mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACCStn05LongtAcc_sg = 9;
  if (this->da_in_a_accstn05longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_accstn05longtacc_sg(), output);
  }

  // float DA_IN_a_ACCStn05LatAcc_sg = 10;
  if (this->da_in_a_accstn05latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_accstn05latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn05Cls_eCLS = 11;
  if (this->da_in_stat_accstn05cls_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_accstn05cls_ecls(), output);
  }

  // float DA_IN_d_ACCStn05Width_sg = 12;
  if (this->da_in_d_accstn05width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_accstn05width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCStnObj05_st)
}

::google::protobuf::uint8* B_ACCStnObj05_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCStnObj05_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn05ID_u32 = 1;
  if (this->da_in_indx_accstn05id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_accstn05id_u32(), target);
  }

  // float DA_IN_v_ACCStn05LongtSpd_sg = 2;
  if (this->da_in_v_accstn05longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_accstn05longtspd_sg(), target);
  }

  // float DA_IN_v_ACCStn05LatSpd_sg = 3;
  if (this->da_in_v_accstn05latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_accstn05latspd_sg(), target);
  }

  // float DA_IN_d_ACCStn05LongtDist_sg = 4;
  if (this->da_in_d_accstn05longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_accstn05longtdist_sg(), target);
  }

  // float DA_IN_d_ACCStn05LatDist_sg = 5;
  if (this->da_in_d_accstn05latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_accstn05latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn05Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn05snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_accstn05snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn05Trk_eCTRK = 7;
  if (this->da_in_stat_accstn05trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_accstn05trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn05MvSts_eCMV = 8;
  if (this->da_in_stat_accstn05mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_accstn05mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACCStn05LongtAcc_sg = 9;
  if (this->da_in_a_accstn05longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_accstn05longtacc_sg(), target);
  }

  // float DA_IN_a_ACCStn05LatAcc_sg = 10;
  if (this->da_in_a_accstn05latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_accstn05latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn05Cls_eCLS = 11;
  if (this->da_in_stat_accstn05cls_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_accstn05cls_ecls(), target);
  }

  // float DA_IN_d_ACCStn05Width_sg = 12;
  if (this->da_in_d_accstn05width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_accstn05width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCStnObj05_st)
  return target;
}

size_t B_ACCStnObj05_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCStnObj05_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACCStn05ID_u32 = 1;
  if (this->da_in_indx_accstn05id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_accstn05id_u32());
  }

  // float DA_IN_v_ACCStn05LongtSpd_sg = 2;
  if (this->da_in_v_accstn05longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACCStn05LatSpd_sg = 3;
  if (this->da_in_v_accstn05latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn05LongtDist_sg = 4;
  if (this->da_in_d_accstn05longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn05LatDist_sg = 5;
  if (this->da_in_d_accstn05latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn05Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn05snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn05snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn05Trk_eCTRK = 7;
  if (this->da_in_stat_accstn05trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn05trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn05MvSts_eCMV = 8;
  if (this->da_in_stat_accstn05mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn05mvsts_ecmv());
  }

  // float DA_IN_a_ACCStn05LongtAcc_sg = 9;
  if (this->da_in_a_accstn05longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACCStn05LatAcc_sg = 10;
  if (this->da_in_a_accstn05latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn05Cls_eCLS = 11;
  if (this->da_in_stat_accstn05cls_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn05cls_ecls());
  }

  // float DA_IN_d_ACCStn05Width_sg = 12;
  if (this->da_in_d_accstn05width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCStnObj05_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCStnObj05_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCStnObj05_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCStnObj05_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCStnObj05_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCStnObj05_st)
    MergeFrom(*source);
  }
}

void B_ACCStnObj05_st::MergeFrom(const B_ACCStnObj05_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCStnObj05_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_accstn05id_u32() != 0) {
    set_da_in_indx_accstn05id_u32(from.da_in_indx_accstn05id_u32());
  }
  if (from.da_in_v_accstn05longtspd_sg() != 0) {
    set_da_in_v_accstn05longtspd_sg(from.da_in_v_accstn05longtspd_sg());
  }
  if (from.da_in_v_accstn05latspd_sg() != 0) {
    set_da_in_v_accstn05latspd_sg(from.da_in_v_accstn05latspd_sg());
  }
  if (from.da_in_d_accstn05longtdist_sg() != 0) {
    set_da_in_d_accstn05longtdist_sg(from.da_in_d_accstn05longtdist_sg());
  }
  if (from.da_in_d_accstn05latdist_sg() != 0) {
    set_da_in_d_accstn05latdist_sg(from.da_in_d_accstn05latdist_sg());
  }
  if (from.da_in_stat_accstn05snsr_ecsnr() != 0) {
    set_da_in_stat_accstn05snsr_ecsnr(from.da_in_stat_accstn05snsr_ecsnr());
  }
  if (from.da_in_stat_accstn05trk_ectrk() != 0) {
    set_da_in_stat_accstn05trk_ectrk(from.da_in_stat_accstn05trk_ectrk());
  }
  if (from.da_in_stat_accstn05mvsts_ecmv() != 0) {
    set_da_in_stat_accstn05mvsts_ecmv(from.da_in_stat_accstn05mvsts_ecmv());
  }
  if (from.da_in_a_accstn05longtacc_sg() != 0) {
    set_da_in_a_accstn05longtacc_sg(from.da_in_a_accstn05longtacc_sg());
  }
  if (from.da_in_a_accstn05latacc_sg() != 0) {
    set_da_in_a_accstn05latacc_sg(from.da_in_a_accstn05latacc_sg());
  }
  if (from.da_in_stat_accstn05cls_ecls() != 0) {
    set_da_in_stat_accstn05cls_ecls(from.da_in_stat_accstn05cls_ecls());
  }
  if (from.da_in_d_accstn05width_sg() != 0) {
    set_da_in_d_accstn05width_sg(from.da_in_d_accstn05width_sg());
  }
}

void B_ACCStnObj05_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCStnObj05_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCStnObj05_st::CopyFrom(const B_ACCStnObj05_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCStnObj05_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCStnObj05_st::IsInitialized() const {
  return true;
}

void B_ACCStnObj05_st::Swap(B_ACCStnObj05_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCStnObj05_st::InternalSwap(B_ACCStnObj05_st* other) {
  using std::swap;
  swap(da_in_indx_accstn05id_u32_, other->da_in_indx_accstn05id_u32_);
  swap(da_in_v_accstn05longtspd_sg_, other->da_in_v_accstn05longtspd_sg_);
  swap(da_in_v_accstn05latspd_sg_, other->da_in_v_accstn05latspd_sg_);
  swap(da_in_d_accstn05longtdist_sg_, other->da_in_d_accstn05longtdist_sg_);
  swap(da_in_d_accstn05latdist_sg_, other->da_in_d_accstn05latdist_sg_);
  swap(da_in_stat_accstn05snsr_ecsnr_, other->da_in_stat_accstn05snsr_ecsnr_);
  swap(da_in_stat_accstn05trk_ectrk_, other->da_in_stat_accstn05trk_ectrk_);
  swap(da_in_stat_accstn05mvsts_ecmv_, other->da_in_stat_accstn05mvsts_ecmv_);
  swap(da_in_a_accstn05longtacc_sg_, other->da_in_a_accstn05longtacc_sg_);
  swap(da_in_a_accstn05latacc_sg_, other->da_in_a_accstn05latacc_sg_);
  swap(da_in_stat_accstn05cls_ecls_, other->da_in_stat_accstn05cls_ecls_);
  swap(da_in_d_accstn05width_sg_, other->da_in_d_accstn05width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCStnObj05_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_ACCStnObj06_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_ACCStnObj06_st::kDAINIndxACCStn06IDU32FieldNumber;
const int B_ACCStnObj06_st::kDAINVACCStn06LongtSpdSgFieldNumber;
const int B_ACCStnObj06_st::kDAINVACCStn06LatSpdSgFieldNumber;
const int B_ACCStnObj06_st::kDAINDACCStn06LongtDistSgFieldNumber;
const int B_ACCStnObj06_st::kDAINDACCStn06LatDistSgFieldNumber;
const int B_ACCStnObj06_st::kDAINStatACCStn06SnsrECSNRFieldNumber;
const int B_ACCStnObj06_st::kDAINStatACCStn06TrkECTRKFieldNumber;
const int B_ACCStnObj06_st::kDAINStatACCStn06MvStsECMVFieldNumber;
const int B_ACCStnObj06_st::kDAINAACCStn06LongtAccSgFieldNumber;
const int B_ACCStnObj06_st::kDAINAACCStn06LatAccSgFieldNumber;
const int B_ACCStnObj06_st::kDAINStatACCStn06ClsECLSFieldNumber;
const int B_ACCStnObj06_st::kDAINDACCStn06WidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_ACCStnObj06_st::B_ACCStnObj06_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj06_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_ACCStnObj06_st)
}
B_ACCStnObj06_st::B_ACCStnObj06_st(const B_ACCStnObj06_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_accstn06id_u32_, &from.da_in_indx_accstn06id_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_accstn06width_sg_) -
    reinterpret_cast<char*>(&da_in_indx_accstn06id_u32_)) + sizeof(da_in_d_accstn06width_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_ACCStnObj06_st)
}

void B_ACCStnObj06_st::SharedCtor() {
  ::memset(&da_in_indx_accstn06id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn06width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn06id_u32_)) + sizeof(da_in_d_accstn06width_sg_));
}

B_ACCStnObj06_st::~B_ACCStnObj06_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_ACCStnObj06_st)
  SharedDtor();
}

void B_ACCStnObj06_st::SharedDtor() {
}

void B_ACCStnObj06_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_ACCStnObj06_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_ACCStnObj06_st& B_ACCStnObj06_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_ACCStnObj06_st.base);
  return *internal_default_instance();
}


void B_ACCStnObj06_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_ACCStnObj06_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_accstn06id_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_accstn06width_sg_) -
      reinterpret_cast<char*>(&da_in_indx_accstn06id_u32_)) + sizeof(da_in_d_accstn06width_sg_));
  _internal_metadata_.Clear();
}

bool B_ACCStnObj06_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_ACCStnObj06_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_ACCStn06ID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_accstn06id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn06LongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn06longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_ACCStn06LatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_accstn06latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn06LongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn06longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn06LatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn06latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn06Snsr_eCSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn06snsr_ecsnr(static_cast< ::ads_common::eCSNR_ACCObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn06Trk_eCTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn06trk_ectrk(static_cast< ::ads_common::eCTRK_ACCObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn06MvSts_eCMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn06mvsts_ecmv(static_cast< ::ads_common::eCMV_ACCObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn06LongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn06longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_ACCStn06LatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_accstn06latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn06Cls_eCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_accstn06cls_ecls(static_cast< ::ads_common::eCLS_ACCObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_ACCStn06Width_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_accstn06width_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_ACCStnObj06_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_ACCStnObj06_st)
  return false;
#undef DO_
}

void B_ACCStnObj06_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_ACCStnObj06_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn06ID_u32 = 1;
  if (this->da_in_indx_accstn06id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_accstn06id_u32(), output);
  }

  // float DA_IN_v_ACCStn06LongtSpd_sg = 2;
  if (this->da_in_v_accstn06longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_accstn06longtspd_sg(), output);
  }

  // float DA_IN_v_ACCStn06LatSpd_sg = 3;
  if (this->da_in_v_accstn06latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_accstn06latspd_sg(), output);
  }

  // float DA_IN_d_ACCStn06LongtDist_sg = 4;
  if (this->da_in_d_accstn06longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_accstn06longtdist_sg(), output);
  }

  // float DA_IN_d_ACCStn06LatDist_sg = 5;
  if (this->da_in_d_accstn06latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_accstn06latdist_sg(), output);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn06Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn06snsr_ecsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_accstn06snsr_ecsnr(), output);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn06Trk_eCTRK = 7;
  if (this->da_in_stat_accstn06trk_ectrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_accstn06trk_ectrk(), output);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn06MvSts_eCMV = 8;
  if (this->da_in_stat_accstn06mvsts_ecmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_accstn06mvsts_ecmv(), output);
  }

  // float DA_IN_a_ACCStn06LongtAcc_sg = 9;
  if (this->da_in_a_accstn06longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_accstn06longtacc_sg(), output);
  }

  // float DA_IN_a_ACCStn06LatAcc_sg = 10;
  if (this->da_in_a_accstn06latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_accstn06latacc_sg(), output);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn06Cls_eCLS = 11;
  if (this->da_in_stat_accstn06cls_ecls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_accstn06cls_ecls(), output);
  }

  // float DA_IN_d_ACCStn06Width_sg = 12;
  if (this->da_in_d_accstn06width_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_accstn06width_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_ACCStnObj06_st)
}

::google::protobuf::uint8* B_ACCStnObj06_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_ACCStnObj06_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_ACCStn06ID_u32 = 1;
  if (this->da_in_indx_accstn06id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_accstn06id_u32(), target);
  }

  // float DA_IN_v_ACCStn06LongtSpd_sg = 2;
  if (this->da_in_v_accstn06longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_accstn06longtspd_sg(), target);
  }

  // float DA_IN_v_ACCStn06LatSpd_sg = 3;
  if (this->da_in_v_accstn06latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_accstn06latspd_sg(), target);
  }

  // float DA_IN_d_ACCStn06LongtDist_sg = 4;
  if (this->da_in_d_accstn06longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_accstn06longtdist_sg(), target);
  }

  // float DA_IN_d_ACCStn06LatDist_sg = 5;
  if (this->da_in_d_accstn06latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_accstn06latdist_sg(), target);
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn06Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn06snsr_ecsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_accstn06snsr_ecsnr(), target);
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn06Trk_eCTRK = 7;
  if (this->da_in_stat_accstn06trk_ectrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_accstn06trk_ectrk(), target);
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn06MvSts_eCMV = 8;
  if (this->da_in_stat_accstn06mvsts_ecmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_accstn06mvsts_ecmv(), target);
  }

  // float DA_IN_a_ACCStn06LongtAcc_sg = 9;
  if (this->da_in_a_accstn06longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_accstn06longtacc_sg(), target);
  }

  // float DA_IN_a_ACCStn06LatAcc_sg = 10;
  if (this->da_in_a_accstn06latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_accstn06latacc_sg(), target);
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn06Cls_eCLS = 11;
  if (this->da_in_stat_accstn06cls_ecls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_accstn06cls_ecls(), target);
  }

  // float DA_IN_d_ACCStn06Width_sg = 12;
  if (this->da_in_d_accstn06width_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_accstn06width_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_ACCStnObj06_st)
  return target;
}

size_t B_ACCStnObj06_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_ACCStnObj06_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_ACCStn06ID_u32 = 1;
  if (this->da_in_indx_accstn06id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_accstn06id_u32());
  }

  // float DA_IN_v_ACCStn06LongtSpd_sg = 2;
  if (this->da_in_v_accstn06longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_ACCStn06LatSpd_sg = 3;
  if (this->da_in_v_accstn06latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn06LongtDist_sg = 4;
  if (this->da_in_d_accstn06longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_ACCStn06LatDist_sg = 5;
  if (this->da_in_d_accstn06latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCSNR_ACCObjSnsr DA_IN_stat_ACCStn06Snsr_eCSNR = 6;
  if (this->da_in_stat_accstn06snsr_ecsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn06snsr_ecsnr());
  }

  // .ads_common.eCTRK_ACCObjTrackSts DA_IN_stat_ACCStn06Trk_eCTRK = 7;
  if (this->da_in_stat_accstn06trk_ectrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn06trk_ectrk());
  }

  // .ads_common.eCMV_ACCObjMvSts DA_IN_stat_ACCStn06MvSts_eCMV = 8;
  if (this->da_in_stat_accstn06mvsts_ecmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn06mvsts_ecmv());
  }

  // float DA_IN_a_ACCStn06LongtAcc_sg = 9;
  if (this->da_in_a_accstn06longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_ACCStn06LatAcc_sg = 10;
  if (this->da_in_a_accstn06latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eCLS_ACCObjClass DA_IN_stat_ACCStn06Cls_eCLS = 11;
  if (this->da_in_stat_accstn06cls_ecls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_accstn06cls_ecls());
  }

  // float DA_IN_d_ACCStn06Width_sg = 12;
  if (this->da_in_d_accstn06width_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_ACCStnObj06_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_ACCStnObj06_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_ACCStnObj06_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_ACCStnObj06_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_ACCStnObj06_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_ACCStnObj06_st)
    MergeFrom(*source);
  }
}

void B_ACCStnObj06_st::MergeFrom(const B_ACCStnObj06_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_ACCStnObj06_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_accstn06id_u32() != 0) {
    set_da_in_indx_accstn06id_u32(from.da_in_indx_accstn06id_u32());
  }
  if (from.da_in_v_accstn06longtspd_sg() != 0) {
    set_da_in_v_accstn06longtspd_sg(from.da_in_v_accstn06longtspd_sg());
  }
  if (from.da_in_v_accstn06latspd_sg() != 0) {
    set_da_in_v_accstn06latspd_sg(from.da_in_v_accstn06latspd_sg());
  }
  if (from.da_in_d_accstn06longtdist_sg() != 0) {
    set_da_in_d_accstn06longtdist_sg(from.da_in_d_accstn06longtdist_sg());
  }
  if (from.da_in_d_accstn06latdist_sg() != 0) {
    set_da_in_d_accstn06latdist_sg(from.da_in_d_accstn06latdist_sg());
  }
  if (from.da_in_stat_accstn06snsr_ecsnr() != 0) {
    set_da_in_stat_accstn06snsr_ecsnr(from.da_in_stat_accstn06snsr_ecsnr());
  }
  if (from.da_in_stat_accstn06trk_ectrk() != 0) {
    set_da_in_stat_accstn06trk_ectrk(from.da_in_stat_accstn06trk_ectrk());
  }
  if (from.da_in_stat_accstn06mvsts_ecmv() != 0) {
    set_da_in_stat_accstn06mvsts_ecmv(from.da_in_stat_accstn06mvsts_ecmv());
  }
  if (from.da_in_a_accstn06longtacc_sg() != 0) {
    set_da_in_a_accstn06longtacc_sg(from.da_in_a_accstn06longtacc_sg());
  }
  if (from.da_in_a_accstn06latacc_sg() != 0) {
    set_da_in_a_accstn06latacc_sg(from.da_in_a_accstn06latacc_sg());
  }
  if (from.da_in_stat_accstn06cls_ecls() != 0) {
    set_da_in_stat_accstn06cls_ecls(from.da_in_stat_accstn06cls_ecls());
  }
  if (from.da_in_d_accstn06width_sg() != 0) {
    set_da_in_d_accstn06width_sg(from.da_in_d_accstn06width_sg());
  }
}

void B_ACCStnObj06_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_ACCStnObj06_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_ACCStnObj06_st::CopyFrom(const B_ACCStnObj06_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_ACCStnObj06_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_ACCStnObj06_st::IsInitialized() const {
  return true;
}

void B_ACCStnObj06_st::Swap(B_ACCStnObj06_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_ACCStnObj06_st::InternalSwap(B_ACCStnObj06_st* other) {
  using std::swap;
  swap(da_in_indx_accstn06id_u32_, other->da_in_indx_accstn06id_u32_);
  swap(da_in_v_accstn06longtspd_sg_, other->da_in_v_accstn06longtspd_sg_);
  swap(da_in_v_accstn06latspd_sg_, other->da_in_v_accstn06latspd_sg_);
  swap(da_in_d_accstn06longtdist_sg_, other->da_in_d_accstn06longtdist_sg_);
  swap(da_in_d_accstn06latdist_sg_, other->da_in_d_accstn06latdist_sg_);
  swap(da_in_stat_accstn06snsr_ecsnr_, other->da_in_stat_accstn06snsr_ecsnr_);
  swap(da_in_stat_accstn06trk_ectrk_, other->da_in_stat_accstn06trk_ectrk_);
  swap(da_in_stat_accstn06mvsts_ecmv_, other->da_in_stat_accstn06mvsts_ecmv_);
  swap(da_in_a_accstn06longtacc_sg_, other->da_in_a_accstn06longtacc_sg_);
  swap(da_in_a_accstn06latacc_sg_, other->da_in_a_accstn06latacc_sg_);
  swap(da_in_stat_accstn06cls_ecls_, other->da_in_stat_accstn06cls_ecls_);
  swap(da_in_d_accstn06width_sg_, other->da_in_d_accstn06width_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_ACCStnObj06_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_HostL_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_HostL_st::kDAINDHostLLnePosA0SgFieldNumber;
const int B_HostL_st::kDAINAngRHostLLneHdAngA1SgFieldNumber;
const int B_HostL_st::kDAINCvHostLLneCrvteA2SgFieldNumber;
const int B_HostL_st::kDAINCvrHostLLneCrvteRtA3SgFieldNumber;
const int B_HostL_st::kDAINIsHostLLneChgToLeftBlFieldNumber;
const int B_HostL_st::kDAINDHostLLneRngeSgFieldNumber;
const int B_HostL_st::kDAINStatHostLLneCnfdnELCFFieldNumber;
const int B_HostL_st::kDAINStatHostLLneColorELCRFieldNumber;
const int B_HostL_st::kDAINStatHostLLneTypeELTPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_HostL_st::B_HostL_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_HostL_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_HostL_st)
}
B_HostL_st::B_HostL_st(const B_HostL_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_hostllneposa0_sg_, &from.da_in_d_hostllneposa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_hostllnetype_eltp_) -
    reinterpret_cast<char*>(&da_in_d_hostllneposa0_sg_)) + sizeof(da_in_stat_hostllnetype_eltp_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_HostL_st)
}

void B_HostL_st::SharedCtor() {
  ::memset(&da_in_d_hostllneposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostllnetype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostllneposa0_sg_)) + sizeof(da_in_stat_hostllnetype_eltp_));
}

B_HostL_st::~B_HostL_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_HostL_st)
  SharedDtor();
}

void B_HostL_st::SharedDtor() {
}

void B_HostL_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_HostL_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_HostL_st& B_HostL_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_HostL_st.base);
  return *internal_default_instance();
}


void B_HostL_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_HostL_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_hostllneposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostllnetype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostllneposa0_sg_)) + sizeof(da_in_stat_hostllnetype_eltp_));
  _internal_metadata_.Clear();
}

bool B_HostL_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_HostL_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_HostLLnePosA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostllneposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_HostLLneHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_hostllnehdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_HostLLneCrvteA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_hostllnecrvtea2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_HostLLneCrvteRtA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_hostllnecrvterta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_is_HostLLneChgToLeft_bl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_is_hostllnechgtoleft_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_HostLLneRnge_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostllnernge_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLLneCnfdn_eLCF = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostllnecnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor DA_IN_stat_HostLLneColor_eLCR = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostllnecolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLTP_LaneType DA_IN_stat_HostLLneType_eLTP = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostllnetype_eltp(static_cast< ::ads_common::eLTP_LaneType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_HostL_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_HostL_st)
  return false;
#undef DO_
}

void B_HostL_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_HostL_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostLLnePosA0_sg = 1;
  if (this->da_in_d_hostllneposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_hostllneposa0_sg(), output);
  }

  // float DA_IN_angR_HostLLneHdAngA1_sg = 2;
  if (this->da_in_angr_hostllnehdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_hostllnehdanga1_sg(), output);
  }

  // float DA_IN_cv_HostLLneCrvteA2_sg = 3;
  if (this->da_in_cv_hostllnecrvtea2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_hostllnecrvtea2_sg(), output);
  }

  // float DA_IN_cvr_HostLLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostllnecrvterta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_hostllnecrvterta3_sg(), output);
  }

  // bool DA_IN_is_HostLLneChgToLeft_bl = 5;
  if (this->da_in_is_hostllnechgtoleft_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->da_in_is_hostllnechgtoleft_bl(), output);
  }

  // float DA_IN_d_HostLLneRnge_sg = 6;
  if (this->da_in_d_hostllnernge_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_d_hostllnernge_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLLneCnfdn_eLCF = 7;
  if (this->da_in_stat_hostllnecnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_hostllnecnfdn_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostLLneColor_eLCR = 8;
  if (this->da_in_stat_hostllnecolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_hostllnecolor_elcr(), output);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostLLneType_eLTP = 9;
  if (this->da_in_stat_hostllnetype_eltp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_hostllnetype_eltp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_HostL_st)
}

::google::protobuf::uint8* B_HostL_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_HostL_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostLLnePosA0_sg = 1;
  if (this->da_in_d_hostllneposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_hostllneposa0_sg(), target);
  }

  // float DA_IN_angR_HostLLneHdAngA1_sg = 2;
  if (this->da_in_angr_hostllnehdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_hostllnehdanga1_sg(), target);
  }

  // float DA_IN_cv_HostLLneCrvteA2_sg = 3;
  if (this->da_in_cv_hostllnecrvtea2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_hostllnecrvtea2_sg(), target);
  }

  // float DA_IN_cvr_HostLLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostllnecrvterta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_hostllnecrvterta3_sg(), target);
  }

  // bool DA_IN_is_HostLLneChgToLeft_bl = 5;
  if (this->da_in_is_hostllnechgtoleft_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->da_in_is_hostllnechgtoleft_bl(), target);
  }

  // float DA_IN_d_HostLLneRnge_sg = 6;
  if (this->da_in_d_hostllnernge_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_d_hostllnernge_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLLneCnfdn_eLCF = 7;
  if (this->da_in_stat_hostllnecnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_hostllnecnfdn_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostLLneColor_eLCR = 8;
  if (this->da_in_stat_hostllnecolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_hostllnecolor_elcr(), target);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostLLneType_eLTP = 9;
  if (this->da_in_stat_hostllnetype_eltp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_hostllnetype_eltp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_HostL_st)
  return target;
}

size_t B_HostL_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_HostL_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_HostLLnePosA0_sg = 1;
  if (this->da_in_d_hostllneposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_HostLLneHdAngA1_sg = 2;
  if (this->da_in_angr_hostllnehdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_HostLLneCrvteA2_sg = 3;
  if (this->da_in_cv_hostllnecrvtea2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_HostLLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostllnecrvterta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool DA_IN_is_HostLLneChgToLeft_bl = 5;
  if (this->da_in_is_hostllnechgtoleft_bl() != 0) {
    total_size += 1 + 1;
  }

  // float DA_IN_d_HostLLneRnge_sg = 6;
  if (this->da_in_d_hostllnernge_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLLneCnfdn_eLCF = 7;
  if (this->da_in_stat_hostllnecnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostllnecnfdn_elcf());
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostLLneColor_eLCR = 8;
  if (this->da_in_stat_hostllnecolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostllnecolor_elcr());
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostLLneType_eLTP = 9;
  if (this->da_in_stat_hostllnetype_eltp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostllnetype_eltp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_HostL_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_HostL_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_HostL_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_HostL_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_HostL_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_HostL_st)
    MergeFrom(*source);
  }
}

void B_HostL_st::MergeFrom(const B_HostL_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_HostL_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_hostllneposa0_sg() != 0) {
    set_da_in_d_hostllneposa0_sg(from.da_in_d_hostllneposa0_sg());
  }
  if (from.da_in_angr_hostllnehdanga1_sg() != 0) {
    set_da_in_angr_hostllnehdanga1_sg(from.da_in_angr_hostllnehdanga1_sg());
  }
  if (from.da_in_cv_hostllnecrvtea2_sg() != 0) {
    set_da_in_cv_hostllnecrvtea2_sg(from.da_in_cv_hostllnecrvtea2_sg());
  }
  if (from.da_in_cvr_hostllnecrvterta3_sg() != 0) {
    set_da_in_cvr_hostllnecrvterta3_sg(from.da_in_cvr_hostllnecrvterta3_sg());
  }
  if (from.da_in_is_hostllnechgtoleft_bl() != 0) {
    set_da_in_is_hostllnechgtoleft_bl(from.da_in_is_hostllnechgtoleft_bl());
  }
  if (from.da_in_d_hostllnernge_sg() != 0) {
    set_da_in_d_hostllnernge_sg(from.da_in_d_hostllnernge_sg());
  }
  if (from.da_in_stat_hostllnecnfdn_elcf() != 0) {
    set_da_in_stat_hostllnecnfdn_elcf(from.da_in_stat_hostllnecnfdn_elcf());
  }
  if (from.da_in_stat_hostllnecolor_elcr() != 0) {
    set_da_in_stat_hostllnecolor_elcr(from.da_in_stat_hostllnecolor_elcr());
  }
  if (from.da_in_stat_hostllnetype_eltp() != 0) {
    set_da_in_stat_hostllnetype_eltp(from.da_in_stat_hostllnetype_eltp());
  }
}

void B_HostL_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_HostL_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_HostL_st::CopyFrom(const B_HostL_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_HostL_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_HostL_st::IsInitialized() const {
  return true;
}

void B_HostL_st::Swap(B_HostL_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_HostL_st::InternalSwap(B_HostL_st* other) {
  using std::swap;
  swap(da_in_d_hostllneposa0_sg_, other->da_in_d_hostllneposa0_sg_);
  swap(da_in_angr_hostllnehdanga1_sg_, other->da_in_angr_hostllnehdanga1_sg_);
  swap(da_in_cv_hostllnecrvtea2_sg_, other->da_in_cv_hostllnecrvtea2_sg_);
  swap(da_in_cvr_hostllnecrvterta3_sg_, other->da_in_cvr_hostllnecrvterta3_sg_);
  swap(da_in_is_hostllnechgtoleft_bl_, other->da_in_is_hostllnechgtoleft_bl_);
  swap(da_in_d_hostllnernge_sg_, other->da_in_d_hostllnernge_sg_);
  swap(da_in_stat_hostllnecnfdn_elcf_, other->da_in_stat_hostllnecnfdn_elcf_);
  swap(da_in_stat_hostllnecolor_elcr_, other->da_in_stat_hostllnecolor_elcr_);
  swap(da_in_stat_hostllnetype_eltp_, other->da_in_stat_hostllnetype_eltp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_HostL_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_HostR_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_HostR_st::kDAINDHostRLnePosA0SgFieldNumber;
const int B_HostR_st::kDAINAngRHostRLneHdAngA1SgFieldNumber;
const int B_HostR_st::kDAINCvHostRLneCrvteA2SgFieldNumber;
const int B_HostR_st::kDAINCvrHostRLneCrvteRtA3SgFieldNumber;
const int B_HostR_st::kDAINIsHostRLneChgToRghtBlFieldNumber;
const int B_HostR_st::kDAINDHostRLneRngeSgFieldNumber;
const int B_HostR_st::kDAINStatHostRLneCnfdnELCFFieldNumber;
const int B_HostR_st::kDAINStatHostRLneColorELCRFieldNumber;
const int B_HostR_st::kDAINStatHostRLneTypeELTPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_HostR_st::B_HostR_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_HostR_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_HostR_st)
}
B_HostR_st::B_HostR_st(const B_HostR_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_hostrlneposa0_sg_, &from.da_in_d_hostrlneposa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_hostrlnetype_eltp_) -
    reinterpret_cast<char*>(&da_in_d_hostrlneposa0_sg_)) + sizeof(da_in_stat_hostrlnetype_eltp_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_HostR_st)
}

void B_HostR_st::SharedCtor() {
  ::memset(&da_in_d_hostrlneposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostrlnetype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostrlneposa0_sg_)) + sizeof(da_in_stat_hostrlnetype_eltp_));
}

B_HostR_st::~B_HostR_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_HostR_st)
  SharedDtor();
}

void B_HostR_st::SharedDtor() {
}

void B_HostR_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_HostR_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_HostR_st& B_HostR_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_HostR_st.base);
  return *internal_default_instance();
}


void B_HostR_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_HostR_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_hostrlneposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostrlnetype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostrlneposa0_sg_)) + sizeof(da_in_stat_hostrlnetype_eltp_));
  _internal_metadata_.Clear();
}

bool B_HostR_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_HostR_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_HostRLnePosA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostrlneposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_HostRLneHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_hostrlnehdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_HostRLneCrvteA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_hostrlnecrvtea2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_HostRLneCrvteRtA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_hostrlnecrvterta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_is_HostRLneChgToRght_bl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_is_hostrlnechgtorght_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_HostRLneRnge_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostrlnernge_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRLneCnfdn_eLCF = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostrlnecnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor DA_IN_stat_HostRLneColor_eLCR = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostrlnecolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLTP_LaneType DA_IN_stat_HostRLneType_eLTP = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostrlnetype_eltp(static_cast< ::ads_common::eLTP_LaneType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_HostR_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_HostR_st)
  return false;
#undef DO_
}

void B_HostR_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_HostR_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostRLnePosA0_sg = 1;
  if (this->da_in_d_hostrlneposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_hostrlneposa0_sg(), output);
  }

  // float DA_IN_angR_HostRLneHdAngA1_sg = 2;
  if (this->da_in_angr_hostrlnehdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_hostrlnehdanga1_sg(), output);
  }

  // float DA_IN_cv_HostRLneCrvteA2_sg = 3;
  if (this->da_in_cv_hostrlnecrvtea2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_hostrlnecrvtea2_sg(), output);
  }

  // float DA_IN_cvr_HostRLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostrlnecrvterta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_hostrlnecrvterta3_sg(), output);
  }

  // bool DA_IN_is_HostRLneChgToRght_bl = 5;
  if (this->da_in_is_hostrlnechgtorght_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->da_in_is_hostrlnechgtorght_bl(), output);
  }

  // float DA_IN_d_HostRLneRnge_sg = 6;
  if (this->da_in_d_hostrlnernge_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_d_hostrlnernge_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRLneCnfdn_eLCF = 7;
  if (this->da_in_stat_hostrlnecnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_hostrlnecnfdn_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostRLneColor_eLCR = 8;
  if (this->da_in_stat_hostrlnecolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_hostrlnecolor_elcr(), output);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostRLneType_eLTP = 9;
  if (this->da_in_stat_hostrlnetype_eltp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_hostrlnetype_eltp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_HostR_st)
}

::google::protobuf::uint8* B_HostR_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_HostR_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostRLnePosA0_sg = 1;
  if (this->da_in_d_hostrlneposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_hostrlneposa0_sg(), target);
  }

  // float DA_IN_angR_HostRLneHdAngA1_sg = 2;
  if (this->da_in_angr_hostrlnehdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_hostrlnehdanga1_sg(), target);
  }

  // float DA_IN_cv_HostRLneCrvteA2_sg = 3;
  if (this->da_in_cv_hostrlnecrvtea2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_hostrlnecrvtea2_sg(), target);
  }

  // float DA_IN_cvr_HostRLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostrlnecrvterta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_hostrlnecrvterta3_sg(), target);
  }

  // bool DA_IN_is_HostRLneChgToRght_bl = 5;
  if (this->da_in_is_hostrlnechgtorght_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->da_in_is_hostrlnechgtorght_bl(), target);
  }

  // float DA_IN_d_HostRLneRnge_sg = 6;
  if (this->da_in_d_hostrlnernge_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_d_hostrlnernge_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRLneCnfdn_eLCF = 7;
  if (this->da_in_stat_hostrlnecnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_hostrlnecnfdn_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostRLneColor_eLCR = 8;
  if (this->da_in_stat_hostrlnecolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_hostrlnecolor_elcr(), target);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostRLneType_eLTP = 9;
  if (this->da_in_stat_hostrlnetype_eltp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_hostrlnetype_eltp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_HostR_st)
  return target;
}

size_t B_HostR_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_HostR_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_HostRLnePosA0_sg = 1;
  if (this->da_in_d_hostrlneposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_HostRLneHdAngA1_sg = 2;
  if (this->da_in_angr_hostrlnehdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_HostRLneCrvteA2_sg = 3;
  if (this->da_in_cv_hostrlnecrvtea2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_HostRLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostrlnecrvterta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool DA_IN_is_HostRLneChgToRght_bl = 5;
  if (this->da_in_is_hostrlnechgtorght_bl() != 0) {
    total_size += 1 + 1;
  }

  // float DA_IN_d_HostRLneRnge_sg = 6;
  if (this->da_in_d_hostrlnernge_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRLneCnfdn_eLCF = 7;
  if (this->da_in_stat_hostrlnecnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostrlnecnfdn_elcf());
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostRLneColor_eLCR = 8;
  if (this->da_in_stat_hostrlnecolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostrlnecolor_elcr());
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostRLneType_eLTP = 9;
  if (this->da_in_stat_hostrlnetype_eltp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostrlnetype_eltp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_HostR_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_HostR_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_HostR_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_HostR_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_HostR_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_HostR_st)
    MergeFrom(*source);
  }
}

void B_HostR_st::MergeFrom(const B_HostR_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_HostR_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_hostrlneposa0_sg() != 0) {
    set_da_in_d_hostrlneposa0_sg(from.da_in_d_hostrlneposa0_sg());
  }
  if (from.da_in_angr_hostrlnehdanga1_sg() != 0) {
    set_da_in_angr_hostrlnehdanga1_sg(from.da_in_angr_hostrlnehdanga1_sg());
  }
  if (from.da_in_cv_hostrlnecrvtea2_sg() != 0) {
    set_da_in_cv_hostrlnecrvtea2_sg(from.da_in_cv_hostrlnecrvtea2_sg());
  }
  if (from.da_in_cvr_hostrlnecrvterta3_sg() != 0) {
    set_da_in_cvr_hostrlnecrvterta3_sg(from.da_in_cvr_hostrlnecrvterta3_sg());
  }
  if (from.da_in_is_hostrlnechgtorght_bl() != 0) {
    set_da_in_is_hostrlnechgtorght_bl(from.da_in_is_hostrlnechgtorght_bl());
  }
  if (from.da_in_d_hostrlnernge_sg() != 0) {
    set_da_in_d_hostrlnernge_sg(from.da_in_d_hostrlnernge_sg());
  }
  if (from.da_in_stat_hostrlnecnfdn_elcf() != 0) {
    set_da_in_stat_hostrlnecnfdn_elcf(from.da_in_stat_hostrlnecnfdn_elcf());
  }
  if (from.da_in_stat_hostrlnecolor_elcr() != 0) {
    set_da_in_stat_hostrlnecolor_elcr(from.da_in_stat_hostrlnecolor_elcr());
  }
  if (from.da_in_stat_hostrlnetype_eltp() != 0) {
    set_da_in_stat_hostrlnetype_eltp(from.da_in_stat_hostrlnetype_eltp());
  }
}

void B_HostR_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_HostR_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_HostR_st::CopyFrom(const B_HostR_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_HostR_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_HostR_st::IsInitialized() const {
  return true;
}

void B_HostR_st::Swap(B_HostR_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_HostR_st::InternalSwap(B_HostR_st* other) {
  using std::swap;
  swap(da_in_d_hostrlneposa0_sg_, other->da_in_d_hostrlneposa0_sg_);
  swap(da_in_angr_hostrlnehdanga1_sg_, other->da_in_angr_hostrlnehdanga1_sg_);
  swap(da_in_cv_hostrlnecrvtea2_sg_, other->da_in_cv_hostrlnecrvtea2_sg_);
  swap(da_in_cvr_hostrlnecrvterta3_sg_, other->da_in_cvr_hostrlnecrvterta3_sg_);
  swap(da_in_is_hostrlnechgtorght_bl_, other->da_in_is_hostrlnechgtorght_bl_);
  swap(da_in_d_hostrlnernge_sg_, other->da_in_d_hostrlnernge_sg_);
  swap(da_in_stat_hostrlnecnfdn_elcf_, other->da_in_stat_hostrlnecnfdn_elcf_);
  swap(da_in_stat_hostrlnecolor_elcr_, other->da_in_stat_hostrlnecolor_elcr_);
  swap(da_in_stat_hostrlnetype_eltp_, other->da_in_stat_hostrlnetype_eltp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_HostR_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_NextLL_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_NextLL_st::kDAINDNextLLLnePosA0SgFieldNumber;
const int B_NextLL_st::kDAINAngRNextLLLneHdAngA1SgFieldNumber;
const int B_NextLL_st::kDAINCvNextLLLneCrvteA2SgFieldNumber;
const int B_NextLL_st::kDAINCvrNextLLLneCrvteRtA3SgFieldNumber;
const int B_NextLL_st::kDAINDNextLLLneRngeSgFieldNumber;
const int B_NextLL_st::kDAINStatNextLLLneCnfdnELCFFieldNumber;
const int B_NextLL_st::kDAINStatNextLLLneColorELCRFieldNumber;
const int B_NextLL_st::kDAINStatNextLLLneTypeELTPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_NextLL_st::B_NextLL_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_NextLL_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_NextLL_st)
}
B_NextLL_st::B_NextLL_st(const B_NextLL_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_nextlllneposa0_sg_, &from.da_in_d_nextlllneposa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_nextlllnetype_eltp_) -
    reinterpret_cast<char*>(&da_in_d_nextlllneposa0_sg_)) + sizeof(da_in_stat_nextlllnetype_eltp_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_NextLL_st)
}

void B_NextLL_st::SharedCtor() {
  ::memset(&da_in_d_nextlllneposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_nextlllnetype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_nextlllneposa0_sg_)) + sizeof(da_in_stat_nextlllnetype_eltp_));
}

B_NextLL_st::~B_NextLL_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_NextLL_st)
  SharedDtor();
}

void B_NextLL_st::SharedDtor() {
}

void B_NextLL_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_NextLL_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_NextLL_st& B_NextLL_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_NextLL_st.base);
  return *internal_default_instance();
}


void B_NextLL_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_NextLL_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_nextlllneposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_nextlllnetype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_nextlllneposa0_sg_)) + sizeof(da_in_stat_nextlllnetype_eltp_));
  _internal_metadata_.Clear();
}

bool B_NextLL_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_NextLL_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_NextLLLnePosA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_nextlllneposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_NextLLLneHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_nextlllnehdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_NextLLLneCrvteA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_nextlllnecrvtea2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_NextLLLneCrvteRtA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_nextlllnecrvterta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_NextLLLneRnge_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_nextlllnernge_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_NextLLLneCnfdn_eLCF = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_nextlllnecnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor DA_IN_stat_NextLLLneColor_eLCR = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_nextlllnecolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLTP_LaneType DA_IN_stat_NextLLLneType_eLTP = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_nextlllnetype_eltp(static_cast< ::ads_common::eLTP_LaneType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_NextLL_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_NextLL_st)
  return false;
#undef DO_
}

void B_NextLL_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_NextLL_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_NextLLLnePosA0_sg = 1;
  if (this->da_in_d_nextlllneposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_nextlllneposa0_sg(), output);
  }

  // float DA_IN_angR_NextLLLneHdAngA1_sg = 2;
  if (this->da_in_angr_nextlllnehdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_nextlllnehdanga1_sg(), output);
  }

  // float DA_IN_cv_NextLLLneCrvteA2_sg = 3;
  if (this->da_in_cv_nextlllnecrvtea2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_nextlllnecrvtea2_sg(), output);
  }

  // float DA_IN_cvr_NextLLLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_nextlllnecrvterta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_nextlllnecrvterta3_sg(), output);
  }

  // float DA_IN_d_NextLLLneRnge_sg = 5;
  if (this->da_in_d_nextlllnernge_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_nextlllnernge_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_NextLLLneCnfdn_eLCF = 6;
  if (this->da_in_stat_nextlllnecnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_nextlllnecnfdn_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_NextLLLneColor_eLCR = 7;
  if (this->da_in_stat_nextlllnecolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_nextlllnecolor_elcr(), output);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_NextLLLneType_eLTP = 8;
  if (this->da_in_stat_nextlllnetype_eltp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_nextlllnetype_eltp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_NextLL_st)
}

::google::protobuf::uint8* B_NextLL_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_NextLL_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_NextLLLnePosA0_sg = 1;
  if (this->da_in_d_nextlllneposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_nextlllneposa0_sg(), target);
  }

  // float DA_IN_angR_NextLLLneHdAngA1_sg = 2;
  if (this->da_in_angr_nextlllnehdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_nextlllnehdanga1_sg(), target);
  }

  // float DA_IN_cv_NextLLLneCrvteA2_sg = 3;
  if (this->da_in_cv_nextlllnecrvtea2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_nextlllnecrvtea2_sg(), target);
  }

  // float DA_IN_cvr_NextLLLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_nextlllnecrvterta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_nextlllnecrvterta3_sg(), target);
  }

  // float DA_IN_d_NextLLLneRnge_sg = 5;
  if (this->da_in_d_nextlllnernge_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_nextlllnernge_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_NextLLLneCnfdn_eLCF = 6;
  if (this->da_in_stat_nextlllnecnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_nextlllnecnfdn_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_NextLLLneColor_eLCR = 7;
  if (this->da_in_stat_nextlllnecolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_nextlllnecolor_elcr(), target);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_NextLLLneType_eLTP = 8;
  if (this->da_in_stat_nextlllnetype_eltp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_nextlllnetype_eltp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_NextLL_st)
  return target;
}

size_t B_NextLL_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_NextLL_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_NextLLLnePosA0_sg = 1;
  if (this->da_in_d_nextlllneposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_NextLLLneHdAngA1_sg = 2;
  if (this->da_in_angr_nextlllnehdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_NextLLLneCrvteA2_sg = 3;
  if (this->da_in_cv_nextlllnecrvtea2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_NextLLLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_nextlllnecrvterta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_NextLLLneRnge_sg = 5;
  if (this->da_in_d_nextlllnernge_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_NextLLLneCnfdn_eLCF = 6;
  if (this->da_in_stat_nextlllnecnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_nextlllnecnfdn_elcf());
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_NextLLLneColor_eLCR = 7;
  if (this->da_in_stat_nextlllnecolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_nextlllnecolor_elcr());
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_NextLLLneType_eLTP = 8;
  if (this->da_in_stat_nextlllnetype_eltp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_nextlllnetype_eltp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_NextLL_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_NextLL_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_NextLL_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_NextLL_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_NextLL_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_NextLL_st)
    MergeFrom(*source);
  }
}

void B_NextLL_st::MergeFrom(const B_NextLL_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_NextLL_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_nextlllneposa0_sg() != 0) {
    set_da_in_d_nextlllneposa0_sg(from.da_in_d_nextlllneposa0_sg());
  }
  if (from.da_in_angr_nextlllnehdanga1_sg() != 0) {
    set_da_in_angr_nextlllnehdanga1_sg(from.da_in_angr_nextlllnehdanga1_sg());
  }
  if (from.da_in_cv_nextlllnecrvtea2_sg() != 0) {
    set_da_in_cv_nextlllnecrvtea2_sg(from.da_in_cv_nextlllnecrvtea2_sg());
  }
  if (from.da_in_cvr_nextlllnecrvterta3_sg() != 0) {
    set_da_in_cvr_nextlllnecrvterta3_sg(from.da_in_cvr_nextlllnecrvterta3_sg());
  }
  if (from.da_in_d_nextlllnernge_sg() != 0) {
    set_da_in_d_nextlllnernge_sg(from.da_in_d_nextlllnernge_sg());
  }
  if (from.da_in_stat_nextlllnecnfdn_elcf() != 0) {
    set_da_in_stat_nextlllnecnfdn_elcf(from.da_in_stat_nextlllnecnfdn_elcf());
  }
  if (from.da_in_stat_nextlllnecolor_elcr() != 0) {
    set_da_in_stat_nextlllnecolor_elcr(from.da_in_stat_nextlllnecolor_elcr());
  }
  if (from.da_in_stat_nextlllnetype_eltp() != 0) {
    set_da_in_stat_nextlllnetype_eltp(from.da_in_stat_nextlllnetype_eltp());
  }
}

void B_NextLL_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_NextLL_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_NextLL_st::CopyFrom(const B_NextLL_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_NextLL_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_NextLL_st::IsInitialized() const {
  return true;
}

void B_NextLL_st::Swap(B_NextLL_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_NextLL_st::InternalSwap(B_NextLL_st* other) {
  using std::swap;
  swap(da_in_d_nextlllneposa0_sg_, other->da_in_d_nextlllneposa0_sg_);
  swap(da_in_angr_nextlllnehdanga1_sg_, other->da_in_angr_nextlllnehdanga1_sg_);
  swap(da_in_cv_nextlllnecrvtea2_sg_, other->da_in_cv_nextlllnecrvtea2_sg_);
  swap(da_in_cvr_nextlllnecrvterta3_sg_, other->da_in_cvr_nextlllnecrvterta3_sg_);
  swap(da_in_d_nextlllnernge_sg_, other->da_in_d_nextlllnernge_sg_);
  swap(da_in_stat_nextlllnecnfdn_elcf_, other->da_in_stat_nextlllnecnfdn_elcf_);
  swap(da_in_stat_nextlllnecolor_elcr_, other->da_in_stat_nextlllnecolor_elcr_);
  swap(da_in_stat_nextlllnetype_eltp_, other->da_in_stat_nextlllnetype_eltp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_NextLL_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_NextRR_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_NextRR_st::kDAINDNextRRLnePosA0SgFieldNumber;
const int B_NextRR_st::kDAINAngRNextRRLneHdAngA1SgFieldNumber;
const int B_NextRR_st::kDAINCvNextRRLneCrvteA2SgFieldNumber;
const int B_NextRR_st::kDAINCvrNextRRLneCrvteRtA3SgFieldNumber;
const int B_NextRR_st::kDAINDNextRRLneRngeSgFieldNumber;
const int B_NextRR_st::kDAINStatNextRRLneCnfdnELCFFieldNumber;
const int B_NextRR_st::kDAINStatNextRRLneColorELCRFieldNumber;
const int B_NextRR_st::kDAINStatNextRRLneTypeELTPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_NextRR_st::B_NextRR_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_NextRR_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_NextRR_st)
}
B_NextRR_st::B_NextRR_st(const B_NextRR_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_nextrrlneposa0_sg_, &from.da_in_d_nextrrlneposa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_nextrrlnetype_eltp_) -
    reinterpret_cast<char*>(&da_in_d_nextrrlneposa0_sg_)) + sizeof(da_in_stat_nextrrlnetype_eltp_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_NextRR_st)
}

void B_NextRR_st::SharedCtor() {
  ::memset(&da_in_d_nextrrlneposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_nextrrlnetype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_nextrrlneposa0_sg_)) + sizeof(da_in_stat_nextrrlnetype_eltp_));
}

B_NextRR_st::~B_NextRR_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_NextRR_st)
  SharedDtor();
}

void B_NextRR_st::SharedDtor() {
}

void B_NextRR_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_NextRR_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_NextRR_st& B_NextRR_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_NextRR_st.base);
  return *internal_default_instance();
}


void B_NextRR_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_NextRR_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_nextrrlneposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_nextrrlnetype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_nextrrlneposa0_sg_)) + sizeof(da_in_stat_nextrrlnetype_eltp_));
  _internal_metadata_.Clear();
}

bool B_NextRR_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_NextRR_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_NextRRLnePosA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_nextrrlneposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_NextRRLneHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_nextrrlnehdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_NextRRLneCrvteA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_nextrrlnecrvtea2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_NextRRLneCrvteRtA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_nextrrlnecrvterta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_NextRRLneRnge_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_nextrrlnernge_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_NextRRLneCnfdn_eLCF = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_nextrrlnecnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor DA_IN_stat_NextRRLneColor_eLCR = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_nextrrlnecolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLTP_LaneType DA_IN_stat_NextRRLneType_eLTP = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_nextrrlnetype_eltp(static_cast< ::ads_common::eLTP_LaneType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_NextRR_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_NextRR_st)
  return false;
#undef DO_
}

void B_NextRR_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_NextRR_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_NextRRLnePosA0_sg = 1;
  if (this->da_in_d_nextrrlneposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_nextrrlneposa0_sg(), output);
  }

  // float DA_IN_angR_NextRRLneHdAngA1_sg = 2;
  if (this->da_in_angr_nextrrlnehdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_nextrrlnehdanga1_sg(), output);
  }

  // float DA_IN_cv_NextRRLneCrvteA2_sg = 3;
  if (this->da_in_cv_nextrrlnecrvtea2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_nextrrlnecrvtea2_sg(), output);
  }

  // float DA_IN_cvr_NextRRLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_nextrrlnecrvterta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_nextrrlnecrvterta3_sg(), output);
  }

  // float DA_IN_d_NextRRLneRnge_sg = 5;
  if (this->da_in_d_nextrrlnernge_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_nextrrlnernge_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_NextRRLneCnfdn_eLCF = 6;
  if (this->da_in_stat_nextrrlnecnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_nextrrlnecnfdn_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_NextRRLneColor_eLCR = 7;
  if (this->da_in_stat_nextrrlnecolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_nextrrlnecolor_elcr(), output);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_NextRRLneType_eLTP = 8;
  if (this->da_in_stat_nextrrlnetype_eltp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_nextrrlnetype_eltp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_NextRR_st)
}

::google::protobuf::uint8* B_NextRR_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_NextRR_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_NextRRLnePosA0_sg = 1;
  if (this->da_in_d_nextrrlneposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_nextrrlneposa0_sg(), target);
  }

  // float DA_IN_angR_NextRRLneHdAngA1_sg = 2;
  if (this->da_in_angr_nextrrlnehdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_nextrrlnehdanga1_sg(), target);
  }

  // float DA_IN_cv_NextRRLneCrvteA2_sg = 3;
  if (this->da_in_cv_nextrrlnecrvtea2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_nextrrlnecrvtea2_sg(), target);
  }

  // float DA_IN_cvr_NextRRLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_nextrrlnecrvterta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_nextrrlnecrvterta3_sg(), target);
  }

  // float DA_IN_d_NextRRLneRnge_sg = 5;
  if (this->da_in_d_nextrrlnernge_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_nextrrlnernge_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_NextRRLneCnfdn_eLCF = 6;
  if (this->da_in_stat_nextrrlnecnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_nextrrlnecnfdn_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_NextRRLneColor_eLCR = 7;
  if (this->da_in_stat_nextrrlnecolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_nextrrlnecolor_elcr(), target);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_NextRRLneType_eLTP = 8;
  if (this->da_in_stat_nextrrlnetype_eltp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_nextrrlnetype_eltp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_NextRR_st)
  return target;
}

size_t B_NextRR_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_NextRR_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_NextRRLnePosA0_sg = 1;
  if (this->da_in_d_nextrrlneposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_NextRRLneHdAngA1_sg = 2;
  if (this->da_in_angr_nextrrlnehdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_NextRRLneCrvteA2_sg = 3;
  if (this->da_in_cv_nextrrlnecrvtea2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_NextRRLneCrvteRtA3_sg = 4;
  if (this->da_in_cvr_nextrrlnecrvterta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_NextRRLneRnge_sg = 5;
  if (this->da_in_d_nextrrlnernge_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_NextRRLneCnfdn_eLCF = 6;
  if (this->da_in_stat_nextrrlnecnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_nextrrlnecnfdn_elcf());
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_NextRRLneColor_eLCR = 7;
  if (this->da_in_stat_nextrrlnecolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_nextrrlnecolor_elcr());
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_NextRRLneType_eLTP = 8;
  if (this->da_in_stat_nextrrlnetype_eltp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_nextrrlnetype_eltp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_NextRR_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_NextRR_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_NextRR_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_NextRR_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_NextRR_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_NextRR_st)
    MergeFrom(*source);
  }
}

void B_NextRR_st::MergeFrom(const B_NextRR_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_NextRR_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_nextrrlneposa0_sg() != 0) {
    set_da_in_d_nextrrlneposa0_sg(from.da_in_d_nextrrlneposa0_sg());
  }
  if (from.da_in_angr_nextrrlnehdanga1_sg() != 0) {
    set_da_in_angr_nextrrlnehdanga1_sg(from.da_in_angr_nextrrlnehdanga1_sg());
  }
  if (from.da_in_cv_nextrrlnecrvtea2_sg() != 0) {
    set_da_in_cv_nextrrlnecrvtea2_sg(from.da_in_cv_nextrrlnecrvtea2_sg());
  }
  if (from.da_in_cvr_nextrrlnecrvterta3_sg() != 0) {
    set_da_in_cvr_nextrrlnecrvterta3_sg(from.da_in_cvr_nextrrlnecrvterta3_sg());
  }
  if (from.da_in_d_nextrrlnernge_sg() != 0) {
    set_da_in_d_nextrrlnernge_sg(from.da_in_d_nextrrlnernge_sg());
  }
  if (from.da_in_stat_nextrrlnecnfdn_elcf() != 0) {
    set_da_in_stat_nextrrlnecnfdn_elcf(from.da_in_stat_nextrrlnecnfdn_elcf());
  }
  if (from.da_in_stat_nextrrlnecolor_elcr() != 0) {
    set_da_in_stat_nextrrlnecolor_elcr(from.da_in_stat_nextrrlnecolor_elcr());
  }
  if (from.da_in_stat_nextrrlnetype_eltp() != 0) {
    set_da_in_stat_nextrrlnetype_eltp(from.da_in_stat_nextrrlnetype_eltp());
  }
}

void B_NextRR_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_NextRR_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_NextRR_st::CopyFrom(const B_NextRR_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_NextRR_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_NextRR_st::IsInitialized() const {
  return true;
}

void B_NextRR_st::Swap(B_NextRR_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_NextRR_st::InternalSwap(B_NextRR_st* other) {
  using std::swap;
  swap(da_in_d_nextrrlneposa0_sg_, other->da_in_d_nextrrlneposa0_sg_);
  swap(da_in_angr_nextrrlnehdanga1_sg_, other->da_in_angr_nextrrlnehdanga1_sg_);
  swap(da_in_cv_nextrrlnecrvtea2_sg_, other->da_in_cv_nextrrlnecrvtea2_sg_);
  swap(da_in_cvr_nextrrlnecrvterta3_sg_, other->da_in_cvr_nextrrlnecrvterta3_sg_);
  swap(da_in_d_nextrrlnernge_sg_, other->da_in_d_nextrrlnernge_sg_);
  swap(da_in_stat_nextrrlnecnfdn_elcf_, other->da_in_stat_nextrrlnecnfdn_elcf_);
  swap(da_in_stat_nextrrlnecolor_elcr_, other->da_in_stat_nextrrlnecolor_elcr_);
  swap(da_in_stat_nextrrlnetype_eltp_, other->da_in_stat_nextrrlnetype_eltp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_NextRR_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrObj_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrObj_st::kDAINIndxDngrObjIDU32FieldNumber;
const int B_DngrObj_st::kDAINVDngrObjLongtSpdSgFieldNumber;
const int B_DngrObj_st::kDAINVDngrObjLatSpdSgFieldNumber;
const int B_DngrObj_st::kDAINDDngrObjLongtDistSgFieldNumber;
const int B_DngrObj_st::kDAINDDngrObjLatDistSgFieldNumber;
const int B_DngrObj_st::kDAINStatDngrObjSnsrEDSNRFieldNumber;
const int B_DngrObj_st::kDAINStatDngrObjTrkEDTRKFieldNumber;
const int B_DngrObj_st::kDAINStatDngrObjMvStsEDMVFieldNumber;
const int B_DngrObj_st::kDAINADngrObjLongtAccSgFieldNumber;
const int B_DngrObj_st::kDAINADngrObjLatAccSgFieldNumber;
const int B_DngrObj_st::kDAINStatDngrObjClassEDCLSFieldNumber;
const int B_DngrObj_st::kDAINDDngrObjWidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrObj_st::B_DngrObj_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrObj_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrObj_st)
}
B_DngrObj_st::B_DngrObj_st(const B_DngrObj_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_dngrobjid_u32_, &from.da_in_indx_dngrobjid_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_dngrobjwidth_sg_) -
    reinterpret_cast<char*>(&da_in_indx_dngrobjid_u32_)) + sizeof(da_in_d_dngrobjwidth_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrObj_st)
}

void B_DngrObj_st::SharedCtor() {
  ::memset(&da_in_indx_dngrobjid_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_dngrobjwidth_sg_) -
      reinterpret_cast<char*>(&da_in_indx_dngrobjid_u32_)) + sizeof(da_in_d_dngrobjwidth_sg_));
}

B_DngrObj_st::~B_DngrObj_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrObj_st)
  SharedDtor();
}

void B_DngrObj_st::SharedDtor() {
}

void B_DngrObj_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrObj_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrObj_st& B_DngrObj_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrObj_st.base);
  return *internal_default_instance();
}


void B_DngrObj_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrObj_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_dngrobjid_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_dngrobjwidth_sg_) -
      reinterpret_cast<char*>(&da_in_indx_dngrobjid_u32_)) + sizeof(da_in_d_dngrobjwidth_sg_));
  _internal_metadata_.Clear();
}

bool B_DngrObj_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrObj_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_DngrObjID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrobjid_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrObjLongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrobjlongtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrObjLatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrobjlatspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrObjLongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrobjlongtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrObjLatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrobjlatdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eDSNR_DngrObjSnsr DA_IN_stat_DngrObjSnsr_eDSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrobjsnsr_edsnr(static_cast< ::ads_common::eDSNR_DngrObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eDTRK_DngrObjTrackSts DA_IN_stat_DngrObjTrk_eDTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrobjtrk_edtrk(static_cast< ::ads_common::eDTRK_DngrObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eDMV_DngrObjMvSts DA_IN_stat_DngrObjMvSts_eDMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrobjmvsts_edmv(static_cast< ::ads_common::eDMV_DngrObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrObjLongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrobjlongtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrObjLatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrobjlatacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eDCLS_DngrObjClass DA_IN_stat_DngrObjClass_eDCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrobjclass_edcls(static_cast< ::ads_common::eDCLS_DngrObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrObjWidth_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrobjwidth_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrObj_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrObj_st)
  return false;
#undef DO_
}

void B_DngrObj_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrObj_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_DngrObjID_u32 = 1;
  if (this->da_in_indx_dngrobjid_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_dngrobjid_u32(), output);
  }

  // float DA_IN_v_DngrObjLongtSpd_sg = 2;
  if (this->da_in_v_dngrobjlongtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_dngrobjlongtspd_sg(), output);
  }

  // float DA_IN_v_DngrObjLatSpd_sg = 3;
  if (this->da_in_v_dngrobjlatspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrobjlatspd_sg(), output);
  }

  // float DA_IN_d_DngrObjLongtDist_sg = 4;
  if (this->da_in_d_dngrobjlongtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_dngrobjlongtdist_sg(), output);
  }

  // float DA_IN_d_DngrObjLatDist_sg = 5;
  if (this->da_in_d_dngrobjlatdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_dngrobjlatdist_sg(), output);
  }

  // .ads_common.eDSNR_DngrObjSnsr DA_IN_stat_DngrObjSnsr_eDSNR = 6;
  if (this->da_in_stat_dngrobjsnsr_edsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_dngrobjsnsr_edsnr(), output);
  }

  // .ads_common.eDTRK_DngrObjTrackSts DA_IN_stat_DngrObjTrk_eDTRK = 7;
  if (this->da_in_stat_dngrobjtrk_edtrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_dngrobjtrk_edtrk(), output);
  }

  // .ads_common.eDMV_DngrObjMvSts DA_IN_stat_DngrObjMvSts_eDMV = 8;
  if (this->da_in_stat_dngrobjmvsts_edmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_dngrobjmvsts_edmv(), output);
  }

  // float DA_IN_a_DngrObjLongtAcc_sg = 9;
  if (this->da_in_a_dngrobjlongtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_dngrobjlongtacc_sg(), output);
  }

  // float DA_IN_a_DngrObjLatAcc_sg = 10;
  if (this->da_in_a_dngrobjlatacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_dngrobjlatacc_sg(), output);
  }

  // .ads_common.eDCLS_DngrObjClass DA_IN_stat_DngrObjClass_eDCLS = 11;
  if (this->da_in_stat_dngrobjclass_edcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrobjclass_edcls(), output);
  }

  // float DA_IN_d_DngrObjWidth_sg = 12;
  if (this->da_in_d_dngrobjwidth_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_dngrobjwidth_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrObj_st)
}

::google::protobuf::uint8* B_DngrObj_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrObj_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_DngrObjID_u32 = 1;
  if (this->da_in_indx_dngrobjid_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_dngrobjid_u32(), target);
  }

  // float DA_IN_v_DngrObjLongtSpd_sg = 2;
  if (this->da_in_v_dngrobjlongtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_dngrobjlongtspd_sg(), target);
  }

  // float DA_IN_v_DngrObjLatSpd_sg = 3;
  if (this->da_in_v_dngrobjlatspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrobjlatspd_sg(), target);
  }

  // float DA_IN_d_DngrObjLongtDist_sg = 4;
  if (this->da_in_d_dngrobjlongtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_dngrobjlongtdist_sg(), target);
  }

  // float DA_IN_d_DngrObjLatDist_sg = 5;
  if (this->da_in_d_dngrobjlatdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_dngrobjlatdist_sg(), target);
  }

  // .ads_common.eDSNR_DngrObjSnsr DA_IN_stat_DngrObjSnsr_eDSNR = 6;
  if (this->da_in_stat_dngrobjsnsr_edsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_dngrobjsnsr_edsnr(), target);
  }

  // .ads_common.eDTRK_DngrObjTrackSts DA_IN_stat_DngrObjTrk_eDTRK = 7;
  if (this->da_in_stat_dngrobjtrk_edtrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_dngrobjtrk_edtrk(), target);
  }

  // .ads_common.eDMV_DngrObjMvSts DA_IN_stat_DngrObjMvSts_eDMV = 8;
  if (this->da_in_stat_dngrobjmvsts_edmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_dngrobjmvsts_edmv(), target);
  }

  // float DA_IN_a_DngrObjLongtAcc_sg = 9;
  if (this->da_in_a_dngrobjlongtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_dngrobjlongtacc_sg(), target);
  }

  // float DA_IN_a_DngrObjLatAcc_sg = 10;
  if (this->da_in_a_dngrobjlatacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_dngrobjlatacc_sg(), target);
  }

  // .ads_common.eDCLS_DngrObjClass DA_IN_stat_DngrObjClass_eDCLS = 11;
  if (this->da_in_stat_dngrobjclass_edcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrobjclass_edcls(), target);
  }

  // float DA_IN_d_DngrObjWidth_sg = 12;
  if (this->da_in_d_dngrobjwidth_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_dngrobjwidth_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrObj_st)
  return target;
}

size_t B_DngrObj_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrObj_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_DngrObjID_u32 = 1;
  if (this->da_in_indx_dngrobjid_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrobjid_u32());
  }

  // float DA_IN_v_DngrObjLongtSpd_sg = 2;
  if (this->da_in_v_dngrobjlongtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrObjLatSpd_sg = 3;
  if (this->da_in_v_dngrobjlatspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrObjLongtDist_sg = 4;
  if (this->da_in_d_dngrobjlongtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrObjLatDist_sg = 5;
  if (this->da_in_d_dngrobjlatdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eDSNR_DngrObjSnsr DA_IN_stat_DngrObjSnsr_eDSNR = 6;
  if (this->da_in_stat_dngrobjsnsr_edsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrobjsnsr_edsnr());
  }

  // .ads_common.eDTRK_DngrObjTrackSts DA_IN_stat_DngrObjTrk_eDTRK = 7;
  if (this->da_in_stat_dngrobjtrk_edtrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrobjtrk_edtrk());
  }

  // .ads_common.eDMV_DngrObjMvSts DA_IN_stat_DngrObjMvSts_eDMV = 8;
  if (this->da_in_stat_dngrobjmvsts_edmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrobjmvsts_edmv());
  }

  // float DA_IN_a_DngrObjLongtAcc_sg = 9;
  if (this->da_in_a_dngrobjlongtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrObjLatAcc_sg = 10;
  if (this->da_in_a_dngrobjlatacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eDCLS_DngrObjClass DA_IN_stat_DngrObjClass_eDCLS = 11;
  if (this->da_in_stat_dngrobjclass_edcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrobjclass_edcls());
  }

  // float DA_IN_d_DngrObjWidth_sg = 12;
  if (this->da_in_d_dngrobjwidth_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrObj_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrObj_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrObj_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrObj_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrObj_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrObj_st)
    MergeFrom(*source);
  }
}

void B_DngrObj_st::MergeFrom(const B_DngrObj_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrObj_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_dngrobjid_u32() != 0) {
    set_da_in_indx_dngrobjid_u32(from.da_in_indx_dngrobjid_u32());
  }
  if (from.da_in_v_dngrobjlongtspd_sg() != 0) {
    set_da_in_v_dngrobjlongtspd_sg(from.da_in_v_dngrobjlongtspd_sg());
  }
  if (from.da_in_v_dngrobjlatspd_sg() != 0) {
    set_da_in_v_dngrobjlatspd_sg(from.da_in_v_dngrobjlatspd_sg());
  }
  if (from.da_in_d_dngrobjlongtdist_sg() != 0) {
    set_da_in_d_dngrobjlongtdist_sg(from.da_in_d_dngrobjlongtdist_sg());
  }
  if (from.da_in_d_dngrobjlatdist_sg() != 0) {
    set_da_in_d_dngrobjlatdist_sg(from.da_in_d_dngrobjlatdist_sg());
  }
  if (from.da_in_stat_dngrobjsnsr_edsnr() != 0) {
    set_da_in_stat_dngrobjsnsr_edsnr(from.da_in_stat_dngrobjsnsr_edsnr());
  }
  if (from.da_in_stat_dngrobjtrk_edtrk() != 0) {
    set_da_in_stat_dngrobjtrk_edtrk(from.da_in_stat_dngrobjtrk_edtrk());
  }
  if (from.da_in_stat_dngrobjmvsts_edmv() != 0) {
    set_da_in_stat_dngrobjmvsts_edmv(from.da_in_stat_dngrobjmvsts_edmv());
  }
  if (from.da_in_a_dngrobjlongtacc_sg() != 0) {
    set_da_in_a_dngrobjlongtacc_sg(from.da_in_a_dngrobjlongtacc_sg());
  }
  if (from.da_in_a_dngrobjlatacc_sg() != 0) {
    set_da_in_a_dngrobjlatacc_sg(from.da_in_a_dngrobjlatacc_sg());
  }
  if (from.da_in_stat_dngrobjclass_edcls() != 0) {
    set_da_in_stat_dngrobjclass_edcls(from.da_in_stat_dngrobjclass_edcls());
  }
  if (from.da_in_d_dngrobjwidth_sg() != 0) {
    set_da_in_d_dngrobjwidth_sg(from.da_in_d_dngrobjwidth_sg());
  }
}

void B_DngrObj_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrObj_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrObj_st::CopyFrom(const B_DngrObj_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrObj_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrObj_st::IsInitialized() const {
  return true;
}

void B_DngrObj_st::Swap(B_DngrObj_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrObj_st::InternalSwap(B_DngrObj_st* other) {
  using std::swap;
  swap(da_in_indx_dngrobjid_u32_, other->da_in_indx_dngrobjid_u32_);
  swap(da_in_v_dngrobjlongtspd_sg_, other->da_in_v_dngrobjlongtspd_sg_);
  swap(da_in_v_dngrobjlatspd_sg_, other->da_in_v_dngrobjlatspd_sg_);
  swap(da_in_d_dngrobjlongtdist_sg_, other->da_in_d_dngrobjlongtdist_sg_);
  swap(da_in_d_dngrobjlatdist_sg_, other->da_in_d_dngrobjlatdist_sg_);
  swap(da_in_stat_dngrobjsnsr_edsnr_, other->da_in_stat_dngrobjsnsr_edsnr_);
  swap(da_in_stat_dngrobjtrk_edtrk_, other->da_in_stat_dngrobjtrk_edtrk_);
  swap(da_in_stat_dngrobjmvsts_edmv_, other->da_in_stat_dngrobjmvsts_edmv_);
  swap(da_in_a_dngrobjlongtacc_sg_, other->da_in_a_dngrobjlongtacc_sg_);
  swap(da_in_a_dngrobjlatacc_sg_, other->da_in_a_dngrobjlatacc_sg_);
  swap(da_in_stat_dngrobjclass_edcls_, other->da_in_stat_dngrobjclass_edcls_);
  swap(da_in_d_dngrobjwidth_sg_, other->da_in_d_dngrobjwidth_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrObj_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrStnObj_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrStnObj_st::kDAINIndxDngrStnObjIDU32FieldNumber;
const int B_DngrStnObj_st::kDAINVDngrStnObjLongtSpdSgFieldNumber;
const int B_DngrStnObj_st::kDAINVDngrStnObjLatSpdSgFieldNumber;
const int B_DngrStnObj_st::kDAINDDngrStnObjLongtDistSgFieldNumber;
const int B_DngrStnObj_st::kDAINDDngrStnObjLatDistSgFieldNumber;
const int B_DngrStnObj_st::kDAINStatDngrStnObjSnsrEDSNRFieldNumber;
const int B_DngrStnObj_st::kDAINStatDngrStnObjTrkEDTRKFieldNumber;
const int B_DngrStnObj_st::kDAINStatDngrStnObjMvStsEDMVFieldNumber;
const int B_DngrStnObj_st::kDAINADngrStnObjLongtAccSgFieldNumber;
const int B_DngrStnObj_st::kDAINADngrStnObjLatAccSgFieldNumber;
const int B_DngrStnObj_st::kDAINStatDngrStnObjClassEDCLSFieldNumber;
const int B_DngrStnObj_st::kDAINDDngrStnObjWidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrStnObj_st::B_DngrStnObj_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrStnObj_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrStnObj_st)
}
B_DngrStnObj_st::B_DngrStnObj_st(const B_DngrStnObj_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_indx_dngrstnobjid_u32_, &from.da_in_indx_dngrstnobjid_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_d_dngrstnobjwidth_sg_) -
    reinterpret_cast<char*>(&da_in_indx_dngrstnobjid_u32_)) + sizeof(da_in_d_dngrstnobjwidth_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrStnObj_st)
}

void B_DngrStnObj_st::SharedCtor() {
  ::memset(&da_in_indx_dngrstnobjid_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_dngrstnobjwidth_sg_) -
      reinterpret_cast<char*>(&da_in_indx_dngrstnobjid_u32_)) + sizeof(da_in_d_dngrstnobjwidth_sg_));
}

B_DngrStnObj_st::~B_DngrStnObj_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrStnObj_st)
  SharedDtor();
}

void B_DngrStnObj_st::SharedDtor() {
}

void B_DngrStnObj_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrStnObj_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrStnObj_st& B_DngrStnObj_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrStnObj_st.base);
  return *internal_default_instance();
}


void B_DngrStnObj_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrStnObj_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_indx_dngrstnobjid_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_d_dngrstnobjwidth_sg_) -
      reinterpret_cast<char*>(&da_in_indx_dngrstnobjid_u32_)) + sizeof(da_in_d_dngrstnobjwidth_sg_));
  _internal_metadata_.Clear();
}

bool B_DngrStnObj_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrStnObj_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 DA_IN_indx_DngrStnObjID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrstnobjid_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrStnObjLongtSpd_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrstnobjlongtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrStnObjLatSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrstnobjlatspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrStnObjLongtDist_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrstnobjlongtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrStnObjLatDist_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrstnobjlatdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eDSNR_DngrObjSnsr DA_IN_stat_DngrStnObjSnsr_eDSNR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrstnobjsnsr_edsnr(static_cast< ::ads_common::eDSNR_DngrObjSnsr >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eDTRK_DngrObjTrackSts DA_IN_stat_DngrStnObjTrk_eDTRK = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrstnobjtrk_edtrk(static_cast< ::ads_common::eDTRK_DngrObjTrackSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eDMV_DngrObjMvSts DA_IN_stat_DngrStnObjMvSts_eDMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrstnobjmvsts_edmv(static_cast< ::ads_common::eDMV_DngrObjMvSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrStnObjLongtAcc_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrstnobjlongtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrStnObjLatAcc_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrstnobjlatacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eDCLS_DngrObjClass DA_IN_stat_DngrStnObjClass_eDCLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrstnobjclass_edcls(static_cast< ::ads_common::eDCLS_DngrObjClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrStnObjWidth_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrstnobjwidth_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrStnObj_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrStnObj_st)
  return false;
#undef DO_
}

void B_DngrStnObj_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrStnObj_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_DngrStnObjID_u32 = 1;
  if (this->da_in_indx_dngrstnobjid_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->da_in_indx_dngrstnobjid_u32(), output);
  }

  // float DA_IN_v_DngrStnObjLongtSpd_sg = 2;
  if (this->da_in_v_dngrstnobjlongtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_v_dngrstnobjlongtspd_sg(), output);
  }

  // float DA_IN_v_DngrStnObjLatSpd_sg = 3;
  if (this->da_in_v_dngrstnobjlatspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrstnobjlatspd_sg(), output);
  }

  // float DA_IN_d_DngrStnObjLongtDist_sg = 4;
  if (this->da_in_d_dngrstnobjlongtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_d_dngrstnobjlongtdist_sg(), output);
  }

  // float DA_IN_d_DngrStnObjLatDist_sg = 5;
  if (this->da_in_d_dngrstnobjlatdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_dngrstnobjlatdist_sg(), output);
  }

  // .ads_common.eDSNR_DngrObjSnsr DA_IN_stat_DngrStnObjSnsr_eDSNR = 6;
  if (this->da_in_stat_dngrstnobjsnsr_edsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_dngrstnobjsnsr_edsnr(), output);
  }

  // .ads_common.eDTRK_DngrObjTrackSts DA_IN_stat_DngrStnObjTrk_eDTRK = 7;
  if (this->da_in_stat_dngrstnobjtrk_edtrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_dngrstnobjtrk_edtrk(), output);
  }

  // .ads_common.eDMV_DngrObjMvSts DA_IN_stat_DngrStnObjMvSts_eDMV = 8;
  if (this->da_in_stat_dngrstnobjmvsts_edmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_dngrstnobjmvsts_edmv(), output);
  }

  // float DA_IN_a_DngrStnObjLongtAcc_sg = 9;
  if (this->da_in_a_dngrstnobjlongtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->da_in_a_dngrstnobjlongtacc_sg(), output);
  }

  // float DA_IN_a_DngrStnObjLatAcc_sg = 10;
  if (this->da_in_a_dngrstnobjlatacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->da_in_a_dngrstnobjlatacc_sg(), output);
  }

  // .ads_common.eDCLS_DngrObjClass DA_IN_stat_DngrStnObjClass_eDCLS = 11;
  if (this->da_in_stat_dngrstnobjclass_edcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrstnobjclass_edcls(), output);
  }

  // float DA_IN_d_DngrStnObjWidth_sg = 12;
  if (this->da_in_d_dngrstnobjwidth_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->da_in_d_dngrstnobjwidth_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrStnObj_st)
}

::google::protobuf::uint8* B_DngrStnObj_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrStnObj_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 DA_IN_indx_DngrStnObjID_u32 = 1;
  if (this->da_in_indx_dngrstnobjid_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->da_in_indx_dngrstnobjid_u32(), target);
  }

  // float DA_IN_v_DngrStnObjLongtSpd_sg = 2;
  if (this->da_in_v_dngrstnobjlongtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_v_dngrstnobjlongtspd_sg(), target);
  }

  // float DA_IN_v_DngrStnObjLatSpd_sg = 3;
  if (this->da_in_v_dngrstnobjlatspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrstnobjlatspd_sg(), target);
  }

  // float DA_IN_d_DngrStnObjLongtDist_sg = 4;
  if (this->da_in_d_dngrstnobjlongtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_d_dngrstnobjlongtdist_sg(), target);
  }

  // float DA_IN_d_DngrStnObjLatDist_sg = 5;
  if (this->da_in_d_dngrstnobjlatdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_dngrstnobjlatdist_sg(), target);
  }

  // .ads_common.eDSNR_DngrObjSnsr DA_IN_stat_DngrStnObjSnsr_eDSNR = 6;
  if (this->da_in_stat_dngrstnobjsnsr_edsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_dngrstnobjsnsr_edsnr(), target);
  }

  // .ads_common.eDTRK_DngrObjTrackSts DA_IN_stat_DngrStnObjTrk_eDTRK = 7;
  if (this->da_in_stat_dngrstnobjtrk_edtrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_dngrstnobjtrk_edtrk(), target);
  }

  // .ads_common.eDMV_DngrObjMvSts DA_IN_stat_DngrStnObjMvSts_eDMV = 8;
  if (this->da_in_stat_dngrstnobjmvsts_edmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_dngrstnobjmvsts_edmv(), target);
  }

  // float DA_IN_a_DngrStnObjLongtAcc_sg = 9;
  if (this->da_in_a_dngrstnobjlongtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->da_in_a_dngrstnobjlongtacc_sg(), target);
  }

  // float DA_IN_a_DngrStnObjLatAcc_sg = 10;
  if (this->da_in_a_dngrstnobjlatacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->da_in_a_dngrstnobjlatacc_sg(), target);
  }

  // .ads_common.eDCLS_DngrObjClass DA_IN_stat_DngrStnObjClass_eDCLS = 11;
  if (this->da_in_stat_dngrstnobjclass_edcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrstnobjclass_edcls(), target);
  }

  // float DA_IN_d_DngrStnObjWidth_sg = 12;
  if (this->da_in_d_dngrstnobjwidth_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->da_in_d_dngrstnobjwidth_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrStnObj_st)
  return target;
}

size_t B_DngrStnObj_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrStnObj_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 DA_IN_indx_DngrStnObjID_u32 = 1;
  if (this->da_in_indx_dngrstnobjid_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrstnobjid_u32());
  }

  // float DA_IN_v_DngrStnObjLongtSpd_sg = 2;
  if (this->da_in_v_dngrstnobjlongtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrStnObjLatSpd_sg = 3;
  if (this->da_in_v_dngrstnobjlatspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrStnObjLongtDist_sg = 4;
  if (this->da_in_d_dngrstnobjlongtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrStnObjLatDist_sg = 5;
  if (this->da_in_d_dngrstnobjlatdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eDSNR_DngrObjSnsr DA_IN_stat_DngrStnObjSnsr_eDSNR = 6;
  if (this->da_in_stat_dngrstnobjsnsr_edsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrstnobjsnsr_edsnr());
  }

  // .ads_common.eDTRK_DngrObjTrackSts DA_IN_stat_DngrStnObjTrk_eDTRK = 7;
  if (this->da_in_stat_dngrstnobjtrk_edtrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrstnobjtrk_edtrk());
  }

  // .ads_common.eDMV_DngrObjMvSts DA_IN_stat_DngrStnObjMvSts_eDMV = 8;
  if (this->da_in_stat_dngrstnobjmvsts_edmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrstnobjmvsts_edmv());
  }

  // float DA_IN_a_DngrStnObjLongtAcc_sg = 9;
  if (this->da_in_a_dngrstnobjlongtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrStnObjLatAcc_sg = 10;
  if (this->da_in_a_dngrstnobjlatacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eDCLS_DngrObjClass DA_IN_stat_DngrStnObjClass_eDCLS = 11;
  if (this->da_in_stat_dngrstnobjclass_edcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrstnobjclass_edcls());
  }

  // float DA_IN_d_DngrStnObjWidth_sg = 12;
  if (this->da_in_d_dngrstnobjwidth_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrStnObj_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrStnObj_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrStnObj_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrStnObj_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrStnObj_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrStnObj_st)
    MergeFrom(*source);
  }
}

void B_DngrStnObj_st::MergeFrom(const B_DngrStnObj_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrStnObj_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_indx_dngrstnobjid_u32() != 0) {
    set_da_in_indx_dngrstnobjid_u32(from.da_in_indx_dngrstnobjid_u32());
  }
  if (from.da_in_v_dngrstnobjlongtspd_sg() != 0) {
    set_da_in_v_dngrstnobjlongtspd_sg(from.da_in_v_dngrstnobjlongtspd_sg());
  }
  if (from.da_in_v_dngrstnobjlatspd_sg() != 0) {
    set_da_in_v_dngrstnobjlatspd_sg(from.da_in_v_dngrstnobjlatspd_sg());
  }
  if (from.da_in_d_dngrstnobjlongtdist_sg() != 0) {
    set_da_in_d_dngrstnobjlongtdist_sg(from.da_in_d_dngrstnobjlongtdist_sg());
  }
  if (from.da_in_d_dngrstnobjlatdist_sg() != 0) {
    set_da_in_d_dngrstnobjlatdist_sg(from.da_in_d_dngrstnobjlatdist_sg());
  }
  if (from.da_in_stat_dngrstnobjsnsr_edsnr() != 0) {
    set_da_in_stat_dngrstnobjsnsr_edsnr(from.da_in_stat_dngrstnobjsnsr_edsnr());
  }
  if (from.da_in_stat_dngrstnobjtrk_edtrk() != 0) {
    set_da_in_stat_dngrstnobjtrk_edtrk(from.da_in_stat_dngrstnobjtrk_edtrk());
  }
  if (from.da_in_stat_dngrstnobjmvsts_edmv() != 0) {
    set_da_in_stat_dngrstnobjmvsts_edmv(from.da_in_stat_dngrstnobjmvsts_edmv());
  }
  if (from.da_in_a_dngrstnobjlongtacc_sg() != 0) {
    set_da_in_a_dngrstnobjlongtacc_sg(from.da_in_a_dngrstnobjlongtacc_sg());
  }
  if (from.da_in_a_dngrstnobjlatacc_sg() != 0) {
    set_da_in_a_dngrstnobjlatacc_sg(from.da_in_a_dngrstnobjlatacc_sg());
  }
  if (from.da_in_stat_dngrstnobjclass_edcls() != 0) {
    set_da_in_stat_dngrstnobjclass_edcls(from.da_in_stat_dngrstnobjclass_edcls());
  }
  if (from.da_in_d_dngrstnobjwidth_sg() != 0) {
    set_da_in_d_dngrstnobjwidth_sg(from.da_in_d_dngrstnobjwidth_sg());
  }
}

void B_DngrStnObj_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrStnObj_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrStnObj_st::CopyFrom(const B_DngrStnObj_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrStnObj_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrStnObj_st::IsInitialized() const {
  return true;
}

void B_DngrStnObj_st::Swap(B_DngrStnObj_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrStnObj_st::InternalSwap(B_DngrStnObj_st* other) {
  using std::swap;
  swap(da_in_indx_dngrstnobjid_u32_, other->da_in_indx_dngrstnobjid_u32_);
  swap(da_in_v_dngrstnobjlongtspd_sg_, other->da_in_v_dngrstnobjlongtspd_sg_);
  swap(da_in_v_dngrstnobjlatspd_sg_, other->da_in_v_dngrstnobjlatspd_sg_);
  swap(da_in_d_dngrstnobjlongtdist_sg_, other->da_in_d_dngrstnobjlongtdist_sg_);
  swap(da_in_d_dngrstnobjlatdist_sg_, other->da_in_d_dngrstnobjlatdist_sg_);
  swap(da_in_stat_dngrstnobjsnsr_edsnr_, other->da_in_stat_dngrstnobjsnsr_edsnr_);
  swap(da_in_stat_dngrstnobjtrk_edtrk_, other->da_in_stat_dngrstnobjtrk_edtrk_);
  swap(da_in_stat_dngrstnobjmvsts_edmv_, other->da_in_stat_dngrstnobjmvsts_edmv_);
  swap(da_in_a_dngrstnobjlongtacc_sg_, other->da_in_a_dngrstnobjlongtacc_sg_);
  swap(da_in_a_dngrstnobjlatacc_sg_, other->da_in_a_dngrstnobjlatacc_sg_);
  swap(da_in_stat_dngrstnobjclass_edcls_, other->da_in_stat_dngrstnobjclass_edcls_);
  swap(da_in_d_dngrstnobjwidth_sg_, other->da_in_d_dngrstnobjwidth_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrStnObj_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrPed01_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrPed01_st::kDAINDDngrPed01LongtDistSgFieldNumber;
const int B_DngrPed01_st::kDAINDDngrPed01LatDistSgFieldNumber;
const int B_DngrPed01_st::kDAINVDngrPed01LongtSpdSgFieldNumber;
const int B_DngrPed01_st::kDAINADngrPed01LongtAccSgFieldNumber;
const int B_DngrPed01_st::kDAINVDngrPed01LatSpdSgFieldNumber;
const int B_DngrPed01_st::kDAINADngrPed01LatAccSgFieldNumber;
const int B_DngrPed01_st::kDAINIndxDngrPed01IDU32FieldNumber;
const int B_DngrPed01_st::kDAINIndxDngrPed01AgeU16FieldNumber;
const int B_DngrPed01_st::kDAINStatDngrPed01StsEPTRKFieldNumber;
const int B_DngrPed01_st::kDAINStatDngrPed01ClassEPCLSFieldNumber;
const int B_DngrPed01_st::kDAINStatDngrPed01SrcEPSNRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrPed01_st::B_DngrPed01_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed01_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrPed01_st)
}
B_DngrPed01_st::B_DngrPed01_st(const B_DngrPed01_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_dngrped01longtdist_sg_, &from.da_in_d_dngrped01longtdist_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_dngrped01src_epsnr_) -
    reinterpret_cast<char*>(&da_in_d_dngrped01longtdist_sg_)) + sizeof(da_in_stat_dngrped01src_epsnr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrPed01_st)
}

void B_DngrPed01_st::SharedCtor() {
  ::memset(&da_in_d_dngrped01longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped01src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped01longtdist_sg_)) + sizeof(da_in_stat_dngrped01src_epsnr_));
}

B_DngrPed01_st::~B_DngrPed01_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrPed01_st)
  SharedDtor();
}

void B_DngrPed01_st::SharedDtor() {
}

void B_DngrPed01_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrPed01_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrPed01_st& B_DngrPed01_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed01_st.base);
  return *internal_default_instance();
}


void B_DngrPed01_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrPed01_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_dngrped01longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped01src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped01longtdist_sg_)) + sizeof(da_in_stat_dngrped01src_epsnr_));
  _internal_metadata_.Clear();
}

bool B_DngrPed01_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrPed01_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_DngrPed01LongtDist_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped01longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrPed01LatDist_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped01latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed01LongtSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped01longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed01LongtAcc_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped01longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed01LatSpd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped01latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed01LatAcc_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped01latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed01ID_u32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped01id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed01Age_u16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped01age_u16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed01Sts_ePTRK = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped01sts_eptrk(static_cast< ::ads_common::ePTRK_DngrPedSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed01Class_ePCLS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped01class_epcls(static_cast< ::ads_common::ePCLS_DngrPedClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed01Src_ePSNR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped01src_epsnr(static_cast< ::ads_common::ePSNR_DngrPedFusSrc >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrPed01_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrPed01_st)
  return false;
#undef DO_
}

void B_DngrPed01_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrPed01_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed01LongtDist_sg = 1;
  if (this->da_in_d_dngrped01longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_dngrped01longtdist_sg(), output);
  }

  // float DA_IN_d_DngrPed01LatDist_sg = 2;
  if (this->da_in_d_dngrped01latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_d_dngrped01latdist_sg(), output);
  }

  // float DA_IN_v_DngrPed01LongtSpd_sg = 3;
  if (this->da_in_v_dngrped01longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrped01longtspd_sg(), output);
  }

  // float DA_IN_a_DngrPed01LongtAcc_sg = 4;
  if (this->da_in_a_dngrped01longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_a_dngrped01longtacc_sg(), output);
  }

  // float DA_IN_v_DngrPed01LatSpd_sg = 5;
  if (this->da_in_v_dngrped01latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_v_dngrped01latspd_sg(), output);
  }

  // float DA_IN_a_DngrPed01LatAcc_sg = 6;
  if (this->da_in_a_dngrped01latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_a_dngrped01latacc_sg(), output);
  }

  // sint32 DA_IN_indx_DngrPed01ID_u32 = 7;
  if (this->da_in_indx_dngrped01id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->da_in_indx_dngrped01id_u32(), output);
  }

  // sint32 DA_IN_indx_DngrPed01Age_u16 = 8;
  if (this->da_in_indx_dngrped01age_u16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->da_in_indx_dngrped01age_u16(), output);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed01Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped01sts_eptrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_dngrped01sts_eptrk(), output);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed01Class_ePCLS = 10;
  if (this->da_in_stat_dngrped01class_epcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->da_in_stat_dngrped01class_epcls(), output);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed01Src_ePSNR = 11;
  if (this->da_in_stat_dngrped01src_epsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrped01src_epsnr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrPed01_st)
}

::google::protobuf::uint8* B_DngrPed01_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrPed01_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed01LongtDist_sg = 1;
  if (this->da_in_d_dngrped01longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_dngrped01longtdist_sg(), target);
  }

  // float DA_IN_d_DngrPed01LatDist_sg = 2;
  if (this->da_in_d_dngrped01latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_d_dngrped01latdist_sg(), target);
  }

  // float DA_IN_v_DngrPed01LongtSpd_sg = 3;
  if (this->da_in_v_dngrped01longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrped01longtspd_sg(), target);
  }

  // float DA_IN_a_DngrPed01LongtAcc_sg = 4;
  if (this->da_in_a_dngrped01longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_a_dngrped01longtacc_sg(), target);
  }

  // float DA_IN_v_DngrPed01LatSpd_sg = 5;
  if (this->da_in_v_dngrped01latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_v_dngrped01latspd_sg(), target);
  }

  // float DA_IN_a_DngrPed01LatAcc_sg = 6;
  if (this->da_in_a_dngrped01latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_a_dngrped01latacc_sg(), target);
  }

  // sint32 DA_IN_indx_DngrPed01ID_u32 = 7;
  if (this->da_in_indx_dngrped01id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->da_in_indx_dngrped01id_u32(), target);
  }

  // sint32 DA_IN_indx_DngrPed01Age_u16 = 8;
  if (this->da_in_indx_dngrped01age_u16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->da_in_indx_dngrped01age_u16(), target);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed01Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped01sts_eptrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_dngrped01sts_eptrk(), target);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed01Class_ePCLS = 10;
  if (this->da_in_stat_dngrped01class_epcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->da_in_stat_dngrped01class_epcls(), target);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed01Src_ePSNR = 11;
  if (this->da_in_stat_dngrped01src_epsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrped01src_epsnr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrPed01_st)
  return target;
}

size_t B_DngrPed01_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrPed01_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_DngrPed01LongtDist_sg = 1;
  if (this->da_in_d_dngrped01longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrPed01LatDist_sg = 2;
  if (this->da_in_d_dngrped01latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed01LongtSpd_sg = 3;
  if (this->da_in_v_dngrped01longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed01LongtAcc_sg = 4;
  if (this->da_in_a_dngrped01longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed01LatSpd_sg = 5;
  if (this->da_in_v_dngrped01latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed01LatAcc_sg = 6;
  if (this->da_in_a_dngrped01latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_DngrPed01ID_u32 = 7;
  if (this->da_in_indx_dngrped01id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped01id_u32());
  }

  // sint32 DA_IN_indx_DngrPed01Age_u16 = 8;
  if (this->da_in_indx_dngrped01age_u16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped01age_u16());
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed01Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped01sts_eptrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped01sts_eptrk());
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed01Class_ePCLS = 10;
  if (this->da_in_stat_dngrped01class_epcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped01class_epcls());
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed01Src_ePSNR = 11;
  if (this->da_in_stat_dngrped01src_epsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped01src_epsnr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrPed01_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrPed01_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrPed01_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrPed01_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrPed01_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrPed01_st)
    MergeFrom(*source);
  }
}

void B_DngrPed01_st::MergeFrom(const B_DngrPed01_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrPed01_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_dngrped01longtdist_sg() != 0) {
    set_da_in_d_dngrped01longtdist_sg(from.da_in_d_dngrped01longtdist_sg());
  }
  if (from.da_in_d_dngrped01latdist_sg() != 0) {
    set_da_in_d_dngrped01latdist_sg(from.da_in_d_dngrped01latdist_sg());
  }
  if (from.da_in_v_dngrped01longtspd_sg() != 0) {
    set_da_in_v_dngrped01longtspd_sg(from.da_in_v_dngrped01longtspd_sg());
  }
  if (from.da_in_a_dngrped01longtacc_sg() != 0) {
    set_da_in_a_dngrped01longtacc_sg(from.da_in_a_dngrped01longtacc_sg());
  }
  if (from.da_in_v_dngrped01latspd_sg() != 0) {
    set_da_in_v_dngrped01latspd_sg(from.da_in_v_dngrped01latspd_sg());
  }
  if (from.da_in_a_dngrped01latacc_sg() != 0) {
    set_da_in_a_dngrped01latacc_sg(from.da_in_a_dngrped01latacc_sg());
  }
  if (from.da_in_indx_dngrped01id_u32() != 0) {
    set_da_in_indx_dngrped01id_u32(from.da_in_indx_dngrped01id_u32());
  }
  if (from.da_in_indx_dngrped01age_u16() != 0) {
    set_da_in_indx_dngrped01age_u16(from.da_in_indx_dngrped01age_u16());
  }
  if (from.da_in_stat_dngrped01sts_eptrk() != 0) {
    set_da_in_stat_dngrped01sts_eptrk(from.da_in_stat_dngrped01sts_eptrk());
  }
  if (from.da_in_stat_dngrped01class_epcls() != 0) {
    set_da_in_stat_dngrped01class_epcls(from.da_in_stat_dngrped01class_epcls());
  }
  if (from.da_in_stat_dngrped01src_epsnr() != 0) {
    set_da_in_stat_dngrped01src_epsnr(from.da_in_stat_dngrped01src_epsnr());
  }
}

void B_DngrPed01_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrPed01_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrPed01_st::CopyFrom(const B_DngrPed01_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrPed01_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrPed01_st::IsInitialized() const {
  return true;
}

void B_DngrPed01_st::Swap(B_DngrPed01_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrPed01_st::InternalSwap(B_DngrPed01_st* other) {
  using std::swap;
  swap(da_in_d_dngrped01longtdist_sg_, other->da_in_d_dngrped01longtdist_sg_);
  swap(da_in_d_dngrped01latdist_sg_, other->da_in_d_dngrped01latdist_sg_);
  swap(da_in_v_dngrped01longtspd_sg_, other->da_in_v_dngrped01longtspd_sg_);
  swap(da_in_a_dngrped01longtacc_sg_, other->da_in_a_dngrped01longtacc_sg_);
  swap(da_in_v_dngrped01latspd_sg_, other->da_in_v_dngrped01latspd_sg_);
  swap(da_in_a_dngrped01latacc_sg_, other->da_in_a_dngrped01latacc_sg_);
  swap(da_in_indx_dngrped01id_u32_, other->da_in_indx_dngrped01id_u32_);
  swap(da_in_indx_dngrped01age_u16_, other->da_in_indx_dngrped01age_u16_);
  swap(da_in_stat_dngrped01sts_eptrk_, other->da_in_stat_dngrped01sts_eptrk_);
  swap(da_in_stat_dngrped01class_epcls_, other->da_in_stat_dngrped01class_epcls_);
  swap(da_in_stat_dngrped01src_epsnr_, other->da_in_stat_dngrped01src_epsnr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrPed01_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrPed02_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrPed02_st::kDAINDDngrPed02LongtDistSgFieldNumber;
const int B_DngrPed02_st::kDAINDDngrPed02LatDistSgFieldNumber;
const int B_DngrPed02_st::kDAINVDngrPed02LongtSpdSgFieldNumber;
const int B_DngrPed02_st::kDAINADngrPed02LongtAccSgFieldNumber;
const int B_DngrPed02_st::kDAINVDngrPed02LatSpdSgFieldNumber;
const int B_DngrPed02_st::kDAINADngrPed02LatAccSgFieldNumber;
const int B_DngrPed02_st::kDAINIndxDngrPed02IDU32FieldNumber;
const int B_DngrPed02_st::kDAINIndxDngrPed02AgeU16FieldNumber;
const int B_DngrPed02_st::kDAINStatDngrPed02StsEPTRKFieldNumber;
const int B_DngrPed02_st::kDAINStatDngrPed02ClassEPCLSFieldNumber;
const int B_DngrPed02_st::kDAINStatDngrPed02SrcEPSNRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrPed02_st::B_DngrPed02_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed02_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrPed02_st)
}
B_DngrPed02_st::B_DngrPed02_st(const B_DngrPed02_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_dngrped02longtdist_sg_, &from.da_in_d_dngrped02longtdist_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_dngrped02src_epsnr_) -
    reinterpret_cast<char*>(&da_in_d_dngrped02longtdist_sg_)) + sizeof(da_in_stat_dngrped02src_epsnr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrPed02_st)
}

void B_DngrPed02_st::SharedCtor() {
  ::memset(&da_in_d_dngrped02longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped02src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped02longtdist_sg_)) + sizeof(da_in_stat_dngrped02src_epsnr_));
}

B_DngrPed02_st::~B_DngrPed02_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrPed02_st)
  SharedDtor();
}

void B_DngrPed02_st::SharedDtor() {
}

void B_DngrPed02_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrPed02_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrPed02_st& B_DngrPed02_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed02_st.base);
  return *internal_default_instance();
}


void B_DngrPed02_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrPed02_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_dngrped02longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped02src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped02longtdist_sg_)) + sizeof(da_in_stat_dngrped02src_epsnr_));
  _internal_metadata_.Clear();
}

bool B_DngrPed02_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrPed02_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_DngrPed02LongtDist_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped02longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrPed02LatDist_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped02latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed02LongtSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped02longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed02LongtAcc_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped02longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed02LatSpd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped02latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed02LatAcc_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped02latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed02ID_u32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped02id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed02Age_u16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped02age_u16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed02Sts_ePTRK = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped02sts_eptrk(static_cast< ::ads_common::ePTRK_DngrPedSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed02Class_ePCLS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped02class_epcls(static_cast< ::ads_common::ePCLS_DngrPedClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed02Src_ePSNR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped02src_epsnr(static_cast< ::ads_common::ePSNR_DngrPedFusSrc >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrPed02_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrPed02_st)
  return false;
#undef DO_
}

void B_DngrPed02_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrPed02_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed02LongtDist_sg = 1;
  if (this->da_in_d_dngrped02longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_dngrped02longtdist_sg(), output);
  }

  // float DA_IN_d_DngrPed02LatDist_sg = 2;
  if (this->da_in_d_dngrped02latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_d_dngrped02latdist_sg(), output);
  }

  // float DA_IN_v_DngrPed02LongtSpd_sg = 3;
  if (this->da_in_v_dngrped02longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrped02longtspd_sg(), output);
  }

  // float DA_IN_a_DngrPed02LongtAcc_sg = 4;
  if (this->da_in_a_dngrped02longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_a_dngrped02longtacc_sg(), output);
  }

  // float DA_IN_v_DngrPed02LatSpd_sg = 5;
  if (this->da_in_v_dngrped02latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_v_dngrped02latspd_sg(), output);
  }

  // float DA_IN_a_DngrPed02LatAcc_sg = 6;
  if (this->da_in_a_dngrped02latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_a_dngrped02latacc_sg(), output);
  }

  // sint32 DA_IN_indx_DngrPed02ID_u32 = 7;
  if (this->da_in_indx_dngrped02id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->da_in_indx_dngrped02id_u32(), output);
  }

  // sint32 DA_IN_indx_DngrPed02Age_u16 = 8;
  if (this->da_in_indx_dngrped02age_u16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->da_in_indx_dngrped02age_u16(), output);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed02Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped02sts_eptrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_dngrped02sts_eptrk(), output);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed02Class_ePCLS = 10;
  if (this->da_in_stat_dngrped02class_epcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->da_in_stat_dngrped02class_epcls(), output);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed02Src_ePSNR = 11;
  if (this->da_in_stat_dngrped02src_epsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrped02src_epsnr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrPed02_st)
}

::google::protobuf::uint8* B_DngrPed02_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrPed02_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed02LongtDist_sg = 1;
  if (this->da_in_d_dngrped02longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_dngrped02longtdist_sg(), target);
  }

  // float DA_IN_d_DngrPed02LatDist_sg = 2;
  if (this->da_in_d_dngrped02latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_d_dngrped02latdist_sg(), target);
  }

  // float DA_IN_v_DngrPed02LongtSpd_sg = 3;
  if (this->da_in_v_dngrped02longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrped02longtspd_sg(), target);
  }

  // float DA_IN_a_DngrPed02LongtAcc_sg = 4;
  if (this->da_in_a_dngrped02longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_a_dngrped02longtacc_sg(), target);
  }

  // float DA_IN_v_DngrPed02LatSpd_sg = 5;
  if (this->da_in_v_dngrped02latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_v_dngrped02latspd_sg(), target);
  }

  // float DA_IN_a_DngrPed02LatAcc_sg = 6;
  if (this->da_in_a_dngrped02latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_a_dngrped02latacc_sg(), target);
  }

  // sint32 DA_IN_indx_DngrPed02ID_u32 = 7;
  if (this->da_in_indx_dngrped02id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->da_in_indx_dngrped02id_u32(), target);
  }

  // sint32 DA_IN_indx_DngrPed02Age_u16 = 8;
  if (this->da_in_indx_dngrped02age_u16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->da_in_indx_dngrped02age_u16(), target);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed02Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped02sts_eptrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_dngrped02sts_eptrk(), target);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed02Class_ePCLS = 10;
  if (this->da_in_stat_dngrped02class_epcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->da_in_stat_dngrped02class_epcls(), target);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed02Src_ePSNR = 11;
  if (this->da_in_stat_dngrped02src_epsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrped02src_epsnr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrPed02_st)
  return target;
}

size_t B_DngrPed02_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrPed02_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_DngrPed02LongtDist_sg = 1;
  if (this->da_in_d_dngrped02longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrPed02LatDist_sg = 2;
  if (this->da_in_d_dngrped02latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed02LongtSpd_sg = 3;
  if (this->da_in_v_dngrped02longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed02LongtAcc_sg = 4;
  if (this->da_in_a_dngrped02longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed02LatSpd_sg = 5;
  if (this->da_in_v_dngrped02latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed02LatAcc_sg = 6;
  if (this->da_in_a_dngrped02latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_DngrPed02ID_u32 = 7;
  if (this->da_in_indx_dngrped02id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped02id_u32());
  }

  // sint32 DA_IN_indx_DngrPed02Age_u16 = 8;
  if (this->da_in_indx_dngrped02age_u16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped02age_u16());
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed02Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped02sts_eptrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped02sts_eptrk());
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed02Class_ePCLS = 10;
  if (this->da_in_stat_dngrped02class_epcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped02class_epcls());
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed02Src_ePSNR = 11;
  if (this->da_in_stat_dngrped02src_epsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped02src_epsnr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrPed02_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrPed02_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrPed02_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrPed02_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrPed02_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrPed02_st)
    MergeFrom(*source);
  }
}

void B_DngrPed02_st::MergeFrom(const B_DngrPed02_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrPed02_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_dngrped02longtdist_sg() != 0) {
    set_da_in_d_dngrped02longtdist_sg(from.da_in_d_dngrped02longtdist_sg());
  }
  if (from.da_in_d_dngrped02latdist_sg() != 0) {
    set_da_in_d_dngrped02latdist_sg(from.da_in_d_dngrped02latdist_sg());
  }
  if (from.da_in_v_dngrped02longtspd_sg() != 0) {
    set_da_in_v_dngrped02longtspd_sg(from.da_in_v_dngrped02longtspd_sg());
  }
  if (from.da_in_a_dngrped02longtacc_sg() != 0) {
    set_da_in_a_dngrped02longtacc_sg(from.da_in_a_dngrped02longtacc_sg());
  }
  if (from.da_in_v_dngrped02latspd_sg() != 0) {
    set_da_in_v_dngrped02latspd_sg(from.da_in_v_dngrped02latspd_sg());
  }
  if (from.da_in_a_dngrped02latacc_sg() != 0) {
    set_da_in_a_dngrped02latacc_sg(from.da_in_a_dngrped02latacc_sg());
  }
  if (from.da_in_indx_dngrped02id_u32() != 0) {
    set_da_in_indx_dngrped02id_u32(from.da_in_indx_dngrped02id_u32());
  }
  if (from.da_in_indx_dngrped02age_u16() != 0) {
    set_da_in_indx_dngrped02age_u16(from.da_in_indx_dngrped02age_u16());
  }
  if (from.da_in_stat_dngrped02sts_eptrk() != 0) {
    set_da_in_stat_dngrped02sts_eptrk(from.da_in_stat_dngrped02sts_eptrk());
  }
  if (from.da_in_stat_dngrped02class_epcls() != 0) {
    set_da_in_stat_dngrped02class_epcls(from.da_in_stat_dngrped02class_epcls());
  }
  if (from.da_in_stat_dngrped02src_epsnr() != 0) {
    set_da_in_stat_dngrped02src_epsnr(from.da_in_stat_dngrped02src_epsnr());
  }
}

void B_DngrPed02_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrPed02_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrPed02_st::CopyFrom(const B_DngrPed02_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrPed02_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrPed02_st::IsInitialized() const {
  return true;
}

void B_DngrPed02_st::Swap(B_DngrPed02_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrPed02_st::InternalSwap(B_DngrPed02_st* other) {
  using std::swap;
  swap(da_in_d_dngrped02longtdist_sg_, other->da_in_d_dngrped02longtdist_sg_);
  swap(da_in_d_dngrped02latdist_sg_, other->da_in_d_dngrped02latdist_sg_);
  swap(da_in_v_dngrped02longtspd_sg_, other->da_in_v_dngrped02longtspd_sg_);
  swap(da_in_a_dngrped02longtacc_sg_, other->da_in_a_dngrped02longtacc_sg_);
  swap(da_in_v_dngrped02latspd_sg_, other->da_in_v_dngrped02latspd_sg_);
  swap(da_in_a_dngrped02latacc_sg_, other->da_in_a_dngrped02latacc_sg_);
  swap(da_in_indx_dngrped02id_u32_, other->da_in_indx_dngrped02id_u32_);
  swap(da_in_indx_dngrped02age_u16_, other->da_in_indx_dngrped02age_u16_);
  swap(da_in_stat_dngrped02sts_eptrk_, other->da_in_stat_dngrped02sts_eptrk_);
  swap(da_in_stat_dngrped02class_epcls_, other->da_in_stat_dngrped02class_epcls_);
  swap(da_in_stat_dngrped02src_epsnr_, other->da_in_stat_dngrped02src_epsnr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrPed02_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrPed03_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrPed03_st::kDAINDDngrPed03LongtDistSgFieldNumber;
const int B_DngrPed03_st::kDAINDDngrPed03LatDistSgFieldNumber;
const int B_DngrPed03_st::kDAINVDngrPed03LongtSpdSgFieldNumber;
const int B_DngrPed03_st::kDAINADngrPed03LongtAccSgFieldNumber;
const int B_DngrPed03_st::kDAINVDngrPed03LatSpdSgFieldNumber;
const int B_DngrPed03_st::kDAINADngrPed03LatAccSgFieldNumber;
const int B_DngrPed03_st::kDAINIndxDngrPed03IDU32FieldNumber;
const int B_DngrPed03_st::kDAINIndxDngrPed03AgeU16FieldNumber;
const int B_DngrPed03_st::kDAINStatDngrPed03StsEPTRKFieldNumber;
const int B_DngrPed03_st::kDAINStatDngrPed03ClassEPCLSFieldNumber;
const int B_DngrPed03_st::kDAINStatDngrPed03SrcEPSNRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrPed03_st::B_DngrPed03_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed03_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrPed03_st)
}
B_DngrPed03_st::B_DngrPed03_st(const B_DngrPed03_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_dngrped03longtdist_sg_, &from.da_in_d_dngrped03longtdist_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_dngrped03src_epsnr_) -
    reinterpret_cast<char*>(&da_in_d_dngrped03longtdist_sg_)) + sizeof(da_in_stat_dngrped03src_epsnr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrPed03_st)
}

void B_DngrPed03_st::SharedCtor() {
  ::memset(&da_in_d_dngrped03longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped03src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped03longtdist_sg_)) + sizeof(da_in_stat_dngrped03src_epsnr_));
}

B_DngrPed03_st::~B_DngrPed03_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrPed03_st)
  SharedDtor();
}

void B_DngrPed03_st::SharedDtor() {
}

void B_DngrPed03_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrPed03_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrPed03_st& B_DngrPed03_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed03_st.base);
  return *internal_default_instance();
}


void B_DngrPed03_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrPed03_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_dngrped03longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped03src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped03longtdist_sg_)) + sizeof(da_in_stat_dngrped03src_epsnr_));
  _internal_metadata_.Clear();
}

bool B_DngrPed03_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrPed03_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_DngrPed03LongtDist_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped03longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrPed03LatDist_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped03latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed03LongtSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped03longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed03LongtAcc_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped03longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed03LatSpd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped03latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed03LatAcc_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped03latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed03ID_u32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped03id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed03Age_u16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped03age_u16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed03Sts_ePTRK = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped03sts_eptrk(static_cast< ::ads_common::ePTRK_DngrPedSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed03Class_ePCLS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped03class_epcls(static_cast< ::ads_common::ePCLS_DngrPedClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed03Src_ePSNR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped03src_epsnr(static_cast< ::ads_common::ePSNR_DngrPedFusSrc >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrPed03_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrPed03_st)
  return false;
#undef DO_
}

void B_DngrPed03_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrPed03_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed03LongtDist_sg = 1;
  if (this->da_in_d_dngrped03longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_dngrped03longtdist_sg(), output);
  }

  // float DA_IN_d_DngrPed03LatDist_sg = 2;
  if (this->da_in_d_dngrped03latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_d_dngrped03latdist_sg(), output);
  }

  // float DA_IN_v_DngrPed03LongtSpd_sg = 3;
  if (this->da_in_v_dngrped03longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrped03longtspd_sg(), output);
  }

  // float DA_IN_a_DngrPed03LongtAcc_sg = 4;
  if (this->da_in_a_dngrped03longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_a_dngrped03longtacc_sg(), output);
  }

  // float DA_IN_v_DngrPed03LatSpd_sg = 5;
  if (this->da_in_v_dngrped03latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_v_dngrped03latspd_sg(), output);
  }

  // float DA_IN_a_DngrPed03LatAcc_sg = 6;
  if (this->da_in_a_dngrped03latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_a_dngrped03latacc_sg(), output);
  }

  // sint32 DA_IN_indx_DngrPed03ID_u32 = 7;
  if (this->da_in_indx_dngrped03id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->da_in_indx_dngrped03id_u32(), output);
  }

  // sint32 DA_IN_indx_DngrPed03Age_u16 = 8;
  if (this->da_in_indx_dngrped03age_u16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->da_in_indx_dngrped03age_u16(), output);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed03Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped03sts_eptrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_dngrped03sts_eptrk(), output);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed03Class_ePCLS = 10;
  if (this->da_in_stat_dngrped03class_epcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->da_in_stat_dngrped03class_epcls(), output);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed03Src_ePSNR = 11;
  if (this->da_in_stat_dngrped03src_epsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrped03src_epsnr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrPed03_st)
}

::google::protobuf::uint8* B_DngrPed03_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrPed03_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed03LongtDist_sg = 1;
  if (this->da_in_d_dngrped03longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_dngrped03longtdist_sg(), target);
  }

  // float DA_IN_d_DngrPed03LatDist_sg = 2;
  if (this->da_in_d_dngrped03latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_d_dngrped03latdist_sg(), target);
  }

  // float DA_IN_v_DngrPed03LongtSpd_sg = 3;
  if (this->da_in_v_dngrped03longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrped03longtspd_sg(), target);
  }

  // float DA_IN_a_DngrPed03LongtAcc_sg = 4;
  if (this->da_in_a_dngrped03longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_a_dngrped03longtacc_sg(), target);
  }

  // float DA_IN_v_DngrPed03LatSpd_sg = 5;
  if (this->da_in_v_dngrped03latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_v_dngrped03latspd_sg(), target);
  }

  // float DA_IN_a_DngrPed03LatAcc_sg = 6;
  if (this->da_in_a_dngrped03latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_a_dngrped03latacc_sg(), target);
  }

  // sint32 DA_IN_indx_DngrPed03ID_u32 = 7;
  if (this->da_in_indx_dngrped03id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->da_in_indx_dngrped03id_u32(), target);
  }

  // sint32 DA_IN_indx_DngrPed03Age_u16 = 8;
  if (this->da_in_indx_dngrped03age_u16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->da_in_indx_dngrped03age_u16(), target);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed03Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped03sts_eptrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_dngrped03sts_eptrk(), target);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed03Class_ePCLS = 10;
  if (this->da_in_stat_dngrped03class_epcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->da_in_stat_dngrped03class_epcls(), target);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed03Src_ePSNR = 11;
  if (this->da_in_stat_dngrped03src_epsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrped03src_epsnr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrPed03_st)
  return target;
}

size_t B_DngrPed03_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrPed03_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_DngrPed03LongtDist_sg = 1;
  if (this->da_in_d_dngrped03longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrPed03LatDist_sg = 2;
  if (this->da_in_d_dngrped03latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed03LongtSpd_sg = 3;
  if (this->da_in_v_dngrped03longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed03LongtAcc_sg = 4;
  if (this->da_in_a_dngrped03longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed03LatSpd_sg = 5;
  if (this->da_in_v_dngrped03latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed03LatAcc_sg = 6;
  if (this->da_in_a_dngrped03latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_DngrPed03ID_u32 = 7;
  if (this->da_in_indx_dngrped03id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped03id_u32());
  }

  // sint32 DA_IN_indx_DngrPed03Age_u16 = 8;
  if (this->da_in_indx_dngrped03age_u16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped03age_u16());
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed03Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped03sts_eptrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped03sts_eptrk());
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed03Class_ePCLS = 10;
  if (this->da_in_stat_dngrped03class_epcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped03class_epcls());
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed03Src_ePSNR = 11;
  if (this->da_in_stat_dngrped03src_epsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped03src_epsnr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrPed03_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrPed03_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrPed03_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrPed03_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrPed03_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrPed03_st)
    MergeFrom(*source);
  }
}

void B_DngrPed03_st::MergeFrom(const B_DngrPed03_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrPed03_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_dngrped03longtdist_sg() != 0) {
    set_da_in_d_dngrped03longtdist_sg(from.da_in_d_dngrped03longtdist_sg());
  }
  if (from.da_in_d_dngrped03latdist_sg() != 0) {
    set_da_in_d_dngrped03latdist_sg(from.da_in_d_dngrped03latdist_sg());
  }
  if (from.da_in_v_dngrped03longtspd_sg() != 0) {
    set_da_in_v_dngrped03longtspd_sg(from.da_in_v_dngrped03longtspd_sg());
  }
  if (from.da_in_a_dngrped03longtacc_sg() != 0) {
    set_da_in_a_dngrped03longtacc_sg(from.da_in_a_dngrped03longtacc_sg());
  }
  if (from.da_in_v_dngrped03latspd_sg() != 0) {
    set_da_in_v_dngrped03latspd_sg(from.da_in_v_dngrped03latspd_sg());
  }
  if (from.da_in_a_dngrped03latacc_sg() != 0) {
    set_da_in_a_dngrped03latacc_sg(from.da_in_a_dngrped03latacc_sg());
  }
  if (from.da_in_indx_dngrped03id_u32() != 0) {
    set_da_in_indx_dngrped03id_u32(from.da_in_indx_dngrped03id_u32());
  }
  if (from.da_in_indx_dngrped03age_u16() != 0) {
    set_da_in_indx_dngrped03age_u16(from.da_in_indx_dngrped03age_u16());
  }
  if (from.da_in_stat_dngrped03sts_eptrk() != 0) {
    set_da_in_stat_dngrped03sts_eptrk(from.da_in_stat_dngrped03sts_eptrk());
  }
  if (from.da_in_stat_dngrped03class_epcls() != 0) {
    set_da_in_stat_dngrped03class_epcls(from.da_in_stat_dngrped03class_epcls());
  }
  if (from.da_in_stat_dngrped03src_epsnr() != 0) {
    set_da_in_stat_dngrped03src_epsnr(from.da_in_stat_dngrped03src_epsnr());
  }
}

void B_DngrPed03_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrPed03_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrPed03_st::CopyFrom(const B_DngrPed03_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrPed03_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrPed03_st::IsInitialized() const {
  return true;
}

void B_DngrPed03_st::Swap(B_DngrPed03_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrPed03_st::InternalSwap(B_DngrPed03_st* other) {
  using std::swap;
  swap(da_in_d_dngrped03longtdist_sg_, other->da_in_d_dngrped03longtdist_sg_);
  swap(da_in_d_dngrped03latdist_sg_, other->da_in_d_dngrped03latdist_sg_);
  swap(da_in_v_dngrped03longtspd_sg_, other->da_in_v_dngrped03longtspd_sg_);
  swap(da_in_a_dngrped03longtacc_sg_, other->da_in_a_dngrped03longtacc_sg_);
  swap(da_in_v_dngrped03latspd_sg_, other->da_in_v_dngrped03latspd_sg_);
  swap(da_in_a_dngrped03latacc_sg_, other->da_in_a_dngrped03latacc_sg_);
  swap(da_in_indx_dngrped03id_u32_, other->da_in_indx_dngrped03id_u32_);
  swap(da_in_indx_dngrped03age_u16_, other->da_in_indx_dngrped03age_u16_);
  swap(da_in_stat_dngrped03sts_eptrk_, other->da_in_stat_dngrped03sts_eptrk_);
  swap(da_in_stat_dngrped03class_epcls_, other->da_in_stat_dngrped03class_epcls_);
  swap(da_in_stat_dngrped03src_epsnr_, other->da_in_stat_dngrped03src_epsnr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrPed03_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrPed04_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrPed04_st::kDAINDDngrPed04LongtDistSgFieldNumber;
const int B_DngrPed04_st::kDAINDDngrPed04LatDistSgFieldNumber;
const int B_DngrPed04_st::kDAINVDngrPed04LongtSpdSgFieldNumber;
const int B_DngrPed04_st::kDAINADngrPed04LongtAccSgFieldNumber;
const int B_DngrPed04_st::kDAINVDngrPed04LatSpdSgFieldNumber;
const int B_DngrPed04_st::kDAINADngrPed04LatAccSgFieldNumber;
const int B_DngrPed04_st::kDAINIndxDngrPed04IDU32FieldNumber;
const int B_DngrPed04_st::kDAINIndxDngrPed04AgeU16FieldNumber;
const int B_DngrPed04_st::kDAINStatDngrPed04StsEPTRKFieldNumber;
const int B_DngrPed04_st::kDAINStatDngrPed04ClassEPCLSFieldNumber;
const int B_DngrPed04_st::kDAINStatDngrPed04SrcEPSNRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrPed04_st::B_DngrPed04_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed04_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrPed04_st)
}
B_DngrPed04_st::B_DngrPed04_st(const B_DngrPed04_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_dngrped04longtdist_sg_, &from.da_in_d_dngrped04longtdist_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_dngrped04src_epsnr_) -
    reinterpret_cast<char*>(&da_in_d_dngrped04longtdist_sg_)) + sizeof(da_in_stat_dngrped04src_epsnr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrPed04_st)
}

void B_DngrPed04_st::SharedCtor() {
  ::memset(&da_in_d_dngrped04longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped04src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped04longtdist_sg_)) + sizeof(da_in_stat_dngrped04src_epsnr_));
}

B_DngrPed04_st::~B_DngrPed04_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrPed04_st)
  SharedDtor();
}

void B_DngrPed04_st::SharedDtor() {
}

void B_DngrPed04_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrPed04_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrPed04_st& B_DngrPed04_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed04_st.base);
  return *internal_default_instance();
}


void B_DngrPed04_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrPed04_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_dngrped04longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped04src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped04longtdist_sg_)) + sizeof(da_in_stat_dngrped04src_epsnr_));
  _internal_metadata_.Clear();
}

bool B_DngrPed04_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrPed04_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_DngrPed04LongtDist_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped04longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrPed04LatDist_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped04latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed04LongtSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped04longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed04LongtAcc_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped04longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed04LatSpd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped04latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed04LatAcc_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped04latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed04ID_u32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped04id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed04Age_u16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped04age_u16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed04Sts_ePTRK = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped04sts_eptrk(static_cast< ::ads_common::ePTRK_DngrPedSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed04Class_ePCLS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped04class_epcls(static_cast< ::ads_common::ePCLS_DngrPedClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed04Src_ePSNR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped04src_epsnr(static_cast< ::ads_common::ePSNR_DngrPedFusSrc >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrPed04_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrPed04_st)
  return false;
#undef DO_
}

void B_DngrPed04_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrPed04_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed04LongtDist_sg = 1;
  if (this->da_in_d_dngrped04longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_dngrped04longtdist_sg(), output);
  }

  // float DA_IN_d_DngrPed04LatDist_sg = 2;
  if (this->da_in_d_dngrped04latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_d_dngrped04latdist_sg(), output);
  }

  // float DA_IN_v_DngrPed04LongtSpd_sg = 3;
  if (this->da_in_v_dngrped04longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrped04longtspd_sg(), output);
  }

  // float DA_IN_a_DngrPed04LongtAcc_sg = 4;
  if (this->da_in_a_dngrped04longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_a_dngrped04longtacc_sg(), output);
  }

  // float DA_IN_v_DngrPed04LatSpd_sg = 5;
  if (this->da_in_v_dngrped04latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_v_dngrped04latspd_sg(), output);
  }

  // float DA_IN_a_DngrPed04LatAcc_sg = 6;
  if (this->da_in_a_dngrped04latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_a_dngrped04latacc_sg(), output);
  }

  // sint32 DA_IN_indx_DngrPed04ID_u32 = 7;
  if (this->da_in_indx_dngrped04id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->da_in_indx_dngrped04id_u32(), output);
  }

  // sint32 DA_IN_indx_DngrPed04Age_u16 = 8;
  if (this->da_in_indx_dngrped04age_u16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->da_in_indx_dngrped04age_u16(), output);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed04Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped04sts_eptrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_dngrped04sts_eptrk(), output);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed04Class_ePCLS = 10;
  if (this->da_in_stat_dngrped04class_epcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->da_in_stat_dngrped04class_epcls(), output);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed04Src_ePSNR = 11;
  if (this->da_in_stat_dngrped04src_epsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrped04src_epsnr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrPed04_st)
}

::google::protobuf::uint8* B_DngrPed04_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrPed04_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed04LongtDist_sg = 1;
  if (this->da_in_d_dngrped04longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_dngrped04longtdist_sg(), target);
  }

  // float DA_IN_d_DngrPed04LatDist_sg = 2;
  if (this->da_in_d_dngrped04latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_d_dngrped04latdist_sg(), target);
  }

  // float DA_IN_v_DngrPed04LongtSpd_sg = 3;
  if (this->da_in_v_dngrped04longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrped04longtspd_sg(), target);
  }

  // float DA_IN_a_DngrPed04LongtAcc_sg = 4;
  if (this->da_in_a_dngrped04longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_a_dngrped04longtacc_sg(), target);
  }

  // float DA_IN_v_DngrPed04LatSpd_sg = 5;
  if (this->da_in_v_dngrped04latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_v_dngrped04latspd_sg(), target);
  }

  // float DA_IN_a_DngrPed04LatAcc_sg = 6;
  if (this->da_in_a_dngrped04latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_a_dngrped04latacc_sg(), target);
  }

  // sint32 DA_IN_indx_DngrPed04ID_u32 = 7;
  if (this->da_in_indx_dngrped04id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->da_in_indx_dngrped04id_u32(), target);
  }

  // sint32 DA_IN_indx_DngrPed04Age_u16 = 8;
  if (this->da_in_indx_dngrped04age_u16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->da_in_indx_dngrped04age_u16(), target);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed04Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped04sts_eptrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_dngrped04sts_eptrk(), target);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed04Class_ePCLS = 10;
  if (this->da_in_stat_dngrped04class_epcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->da_in_stat_dngrped04class_epcls(), target);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed04Src_ePSNR = 11;
  if (this->da_in_stat_dngrped04src_epsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrped04src_epsnr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrPed04_st)
  return target;
}

size_t B_DngrPed04_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrPed04_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_DngrPed04LongtDist_sg = 1;
  if (this->da_in_d_dngrped04longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrPed04LatDist_sg = 2;
  if (this->da_in_d_dngrped04latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed04LongtSpd_sg = 3;
  if (this->da_in_v_dngrped04longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed04LongtAcc_sg = 4;
  if (this->da_in_a_dngrped04longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed04LatSpd_sg = 5;
  if (this->da_in_v_dngrped04latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed04LatAcc_sg = 6;
  if (this->da_in_a_dngrped04latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_DngrPed04ID_u32 = 7;
  if (this->da_in_indx_dngrped04id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped04id_u32());
  }

  // sint32 DA_IN_indx_DngrPed04Age_u16 = 8;
  if (this->da_in_indx_dngrped04age_u16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped04age_u16());
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed04Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped04sts_eptrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped04sts_eptrk());
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed04Class_ePCLS = 10;
  if (this->da_in_stat_dngrped04class_epcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped04class_epcls());
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed04Src_ePSNR = 11;
  if (this->da_in_stat_dngrped04src_epsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped04src_epsnr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrPed04_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrPed04_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrPed04_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrPed04_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrPed04_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrPed04_st)
    MergeFrom(*source);
  }
}

void B_DngrPed04_st::MergeFrom(const B_DngrPed04_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrPed04_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_dngrped04longtdist_sg() != 0) {
    set_da_in_d_dngrped04longtdist_sg(from.da_in_d_dngrped04longtdist_sg());
  }
  if (from.da_in_d_dngrped04latdist_sg() != 0) {
    set_da_in_d_dngrped04latdist_sg(from.da_in_d_dngrped04latdist_sg());
  }
  if (from.da_in_v_dngrped04longtspd_sg() != 0) {
    set_da_in_v_dngrped04longtspd_sg(from.da_in_v_dngrped04longtspd_sg());
  }
  if (from.da_in_a_dngrped04longtacc_sg() != 0) {
    set_da_in_a_dngrped04longtacc_sg(from.da_in_a_dngrped04longtacc_sg());
  }
  if (from.da_in_v_dngrped04latspd_sg() != 0) {
    set_da_in_v_dngrped04latspd_sg(from.da_in_v_dngrped04latspd_sg());
  }
  if (from.da_in_a_dngrped04latacc_sg() != 0) {
    set_da_in_a_dngrped04latacc_sg(from.da_in_a_dngrped04latacc_sg());
  }
  if (from.da_in_indx_dngrped04id_u32() != 0) {
    set_da_in_indx_dngrped04id_u32(from.da_in_indx_dngrped04id_u32());
  }
  if (from.da_in_indx_dngrped04age_u16() != 0) {
    set_da_in_indx_dngrped04age_u16(from.da_in_indx_dngrped04age_u16());
  }
  if (from.da_in_stat_dngrped04sts_eptrk() != 0) {
    set_da_in_stat_dngrped04sts_eptrk(from.da_in_stat_dngrped04sts_eptrk());
  }
  if (from.da_in_stat_dngrped04class_epcls() != 0) {
    set_da_in_stat_dngrped04class_epcls(from.da_in_stat_dngrped04class_epcls());
  }
  if (from.da_in_stat_dngrped04src_epsnr() != 0) {
    set_da_in_stat_dngrped04src_epsnr(from.da_in_stat_dngrped04src_epsnr());
  }
}

void B_DngrPed04_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrPed04_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrPed04_st::CopyFrom(const B_DngrPed04_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrPed04_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrPed04_st::IsInitialized() const {
  return true;
}

void B_DngrPed04_st::Swap(B_DngrPed04_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrPed04_st::InternalSwap(B_DngrPed04_st* other) {
  using std::swap;
  swap(da_in_d_dngrped04longtdist_sg_, other->da_in_d_dngrped04longtdist_sg_);
  swap(da_in_d_dngrped04latdist_sg_, other->da_in_d_dngrped04latdist_sg_);
  swap(da_in_v_dngrped04longtspd_sg_, other->da_in_v_dngrped04longtspd_sg_);
  swap(da_in_a_dngrped04longtacc_sg_, other->da_in_a_dngrped04longtacc_sg_);
  swap(da_in_v_dngrped04latspd_sg_, other->da_in_v_dngrped04latspd_sg_);
  swap(da_in_a_dngrped04latacc_sg_, other->da_in_a_dngrped04latacc_sg_);
  swap(da_in_indx_dngrped04id_u32_, other->da_in_indx_dngrped04id_u32_);
  swap(da_in_indx_dngrped04age_u16_, other->da_in_indx_dngrped04age_u16_);
  swap(da_in_stat_dngrped04sts_eptrk_, other->da_in_stat_dngrped04sts_eptrk_);
  swap(da_in_stat_dngrped04class_epcls_, other->da_in_stat_dngrped04class_epcls_);
  swap(da_in_stat_dngrped04src_epsnr_, other->da_in_stat_dngrped04src_epsnr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrPed04_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrPed05_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrPed05_st::kDAINDDngrPed05LongtDistSgFieldNumber;
const int B_DngrPed05_st::kDAINDDngrPed05LatDistSgFieldNumber;
const int B_DngrPed05_st::kDAINVDngrPed05LongtSpdSgFieldNumber;
const int B_DngrPed05_st::kDAINADngrPed05LongtAccSgFieldNumber;
const int B_DngrPed05_st::kDAINVDngrPed05LatSpdSgFieldNumber;
const int B_DngrPed05_st::kDAINADngrPed05LatAccSgFieldNumber;
const int B_DngrPed05_st::kDAINIndxDngrPed05IDU32FieldNumber;
const int B_DngrPed05_st::kDAINIndxDngrPed05AgeU16FieldNumber;
const int B_DngrPed05_st::kDAINStatDngrPed05StsEPTRKFieldNumber;
const int B_DngrPed05_st::kDAINStatDngrPed05ClassEPCLSFieldNumber;
const int B_DngrPed05_st::kDAINStatDngrPed05SrcEPSNRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrPed05_st::B_DngrPed05_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed05_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrPed05_st)
}
B_DngrPed05_st::B_DngrPed05_st(const B_DngrPed05_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_dngrped05longtdist_sg_, &from.da_in_d_dngrped05longtdist_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_dngrped05src_epsnr_) -
    reinterpret_cast<char*>(&da_in_d_dngrped05longtdist_sg_)) + sizeof(da_in_stat_dngrped05src_epsnr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrPed05_st)
}

void B_DngrPed05_st::SharedCtor() {
  ::memset(&da_in_d_dngrped05longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped05src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped05longtdist_sg_)) + sizeof(da_in_stat_dngrped05src_epsnr_));
}

B_DngrPed05_st::~B_DngrPed05_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrPed05_st)
  SharedDtor();
}

void B_DngrPed05_st::SharedDtor() {
}

void B_DngrPed05_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrPed05_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrPed05_st& B_DngrPed05_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed05_st.base);
  return *internal_default_instance();
}


void B_DngrPed05_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrPed05_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_dngrped05longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped05src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped05longtdist_sg_)) + sizeof(da_in_stat_dngrped05src_epsnr_));
  _internal_metadata_.Clear();
}

bool B_DngrPed05_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrPed05_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_DngrPed05LongtDist_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped05longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrPed05LatDist_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped05latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed05LongtSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped05longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed05LongtAcc_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped05longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed05LatSpd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped05latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed05LatAcc_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped05latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed05ID_u32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped05id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed05Age_u16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped05age_u16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed05Sts_ePTRK = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped05sts_eptrk(static_cast< ::ads_common::ePTRK_DngrPedSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed05Class_ePCLS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped05class_epcls(static_cast< ::ads_common::ePCLS_DngrPedClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed05Src_ePSNR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped05src_epsnr(static_cast< ::ads_common::ePSNR_DngrPedFusSrc >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrPed05_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrPed05_st)
  return false;
#undef DO_
}

void B_DngrPed05_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrPed05_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed05LongtDist_sg = 1;
  if (this->da_in_d_dngrped05longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_dngrped05longtdist_sg(), output);
  }

  // float DA_IN_d_DngrPed05LatDist_sg = 2;
  if (this->da_in_d_dngrped05latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_d_dngrped05latdist_sg(), output);
  }

  // float DA_IN_v_DngrPed05LongtSpd_sg = 3;
  if (this->da_in_v_dngrped05longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrped05longtspd_sg(), output);
  }

  // float DA_IN_a_DngrPed05LongtAcc_sg = 4;
  if (this->da_in_a_dngrped05longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_a_dngrped05longtacc_sg(), output);
  }

  // float DA_IN_v_DngrPed05LatSpd_sg = 5;
  if (this->da_in_v_dngrped05latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_v_dngrped05latspd_sg(), output);
  }

  // float DA_IN_a_DngrPed05LatAcc_sg = 6;
  if (this->da_in_a_dngrped05latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_a_dngrped05latacc_sg(), output);
  }

  // sint32 DA_IN_indx_DngrPed05ID_u32 = 7;
  if (this->da_in_indx_dngrped05id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->da_in_indx_dngrped05id_u32(), output);
  }

  // sint32 DA_IN_indx_DngrPed05Age_u16 = 8;
  if (this->da_in_indx_dngrped05age_u16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->da_in_indx_dngrped05age_u16(), output);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed05Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped05sts_eptrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_dngrped05sts_eptrk(), output);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed05Class_ePCLS = 10;
  if (this->da_in_stat_dngrped05class_epcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->da_in_stat_dngrped05class_epcls(), output);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed05Src_ePSNR = 11;
  if (this->da_in_stat_dngrped05src_epsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrped05src_epsnr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrPed05_st)
}

::google::protobuf::uint8* B_DngrPed05_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrPed05_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed05LongtDist_sg = 1;
  if (this->da_in_d_dngrped05longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_dngrped05longtdist_sg(), target);
  }

  // float DA_IN_d_DngrPed05LatDist_sg = 2;
  if (this->da_in_d_dngrped05latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_d_dngrped05latdist_sg(), target);
  }

  // float DA_IN_v_DngrPed05LongtSpd_sg = 3;
  if (this->da_in_v_dngrped05longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrped05longtspd_sg(), target);
  }

  // float DA_IN_a_DngrPed05LongtAcc_sg = 4;
  if (this->da_in_a_dngrped05longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_a_dngrped05longtacc_sg(), target);
  }

  // float DA_IN_v_DngrPed05LatSpd_sg = 5;
  if (this->da_in_v_dngrped05latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_v_dngrped05latspd_sg(), target);
  }

  // float DA_IN_a_DngrPed05LatAcc_sg = 6;
  if (this->da_in_a_dngrped05latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_a_dngrped05latacc_sg(), target);
  }

  // sint32 DA_IN_indx_DngrPed05ID_u32 = 7;
  if (this->da_in_indx_dngrped05id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->da_in_indx_dngrped05id_u32(), target);
  }

  // sint32 DA_IN_indx_DngrPed05Age_u16 = 8;
  if (this->da_in_indx_dngrped05age_u16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->da_in_indx_dngrped05age_u16(), target);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed05Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped05sts_eptrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_dngrped05sts_eptrk(), target);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed05Class_ePCLS = 10;
  if (this->da_in_stat_dngrped05class_epcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->da_in_stat_dngrped05class_epcls(), target);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed05Src_ePSNR = 11;
  if (this->da_in_stat_dngrped05src_epsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrped05src_epsnr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrPed05_st)
  return target;
}

size_t B_DngrPed05_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrPed05_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_DngrPed05LongtDist_sg = 1;
  if (this->da_in_d_dngrped05longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrPed05LatDist_sg = 2;
  if (this->da_in_d_dngrped05latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed05LongtSpd_sg = 3;
  if (this->da_in_v_dngrped05longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed05LongtAcc_sg = 4;
  if (this->da_in_a_dngrped05longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed05LatSpd_sg = 5;
  if (this->da_in_v_dngrped05latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed05LatAcc_sg = 6;
  if (this->da_in_a_dngrped05latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_DngrPed05ID_u32 = 7;
  if (this->da_in_indx_dngrped05id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped05id_u32());
  }

  // sint32 DA_IN_indx_DngrPed05Age_u16 = 8;
  if (this->da_in_indx_dngrped05age_u16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped05age_u16());
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed05Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped05sts_eptrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped05sts_eptrk());
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed05Class_ePCLS = 10;
  if (this->da_in_stat_dngrped05class_epcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped05class_epcls());
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed05Src_ePSNR = 11;
  if (this->da_in_stat_dngrped05src_epsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped05src_epsnr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrPed05_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrPed05_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrPed05_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrPed05_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrPed05_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrPed05_st)
    MergeFrom(*source);
  }
}

void B_DngrPed05_st::MergeFrom(const B_DngrPed05_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrPed05_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_dngrped05longtdist_sg() != 0) {
    set_da_in_d_dngrped05longtdist_sg(from.da_in_d_dngrped05longtdist_sg());
  }
  if (from.da_in_d_dngrped05latdist_sg() != 0) {
    set_da_in_d_dngrped05latdist_sg(from.da_in_d_dngrped05latdist_sg());
  }
  if (from.da_in_v_dngrped05longtspd_sg() != 0) {
    set_da_in_v_dngrped05longtspd_sg(from.da_in_v_dngrped05longtspd_sg());
  }
  if (from.da_in_a_dngrped05longtacc_sg() != 0) {
    set_da_in_a_dngrped05longtacc_sg(from.da_in_a_dngrped05longtacc_sg());
  }
  if (from.da_in_v_dngrped05latspd_sg() != 0) {
    set_da_in_v_dngrped05latspd_sg(from.da_in_v_dngrped05latspd_sg());
  }
  if (from.da_in_a_dngrped05latacc_sg() != 0) {
    set_da_in_a_dngrped05latacc_sg(from.da_in_a_dngrped05latacc_sg());
  }
  if (from.da_in_indx_dngrped05id_u32() != 0) {
    set_da_in_indx_dngrped05id_u32(from.da_in_indx_dngrped05id_u32());
  }
  if (from.da_in_indx_dngrped05age_u16() != 0) {
    set_da_in_indx_dngrped05age_u16(from.da_in_indx_dngrped05age_u16());
  }
  if (from.da_in_stat_dngrped05sts_eptrk() != 0) {
    set_da_in_stat_dngrped05sts_eptrk(from.da_in_stat_dngrped05sts_eptrk());
  }
  if (from.da_in_stat_dngrped05class_epcls() != 0) {
    set_da_in_stat_dngrped05class_epcls(from.da_in_stat_dngrped05class_epcls());
  }
  if (from.da_in_stat_dngrped05src_epsnr() != 0) {
    set_da_in_stat_dngrped05src_epsnr(from.da_in_stat_dngrped05src_epsnr());
  }
}

void B_DngrPed05_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrPed05_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrPed05_st::CopyFrom(const B_DngrPed05_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrPed05_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrPed05_st::IsInitialized() const {
  return true;
}

void B_DngrPed05_st::Swap(B_DngrPed05_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrPed05_st::InternalSwap(B_DngrPed05_st* other) {
  using std::swap;
  swap(da_in_d_dngrped05longtdist_sg_, other->da_in_d_dngrped05longtdist_sg_);
  swap(da_in_d_dngrped05latdist_sg_, other->da_in_d_dngrped05latdist_sg_);
  swap(da_in_v_dngrped05longtspd_sg_, other->da_in_v_dngrped05longtspd_sg_);
  swap(da_in_a_dngrped05longtacc_sg_, other->da_in_a_dngrped05longtacc_sg_);
  swap(da_in_v_dngrped05latspd_sg_, other->da_in_v_dngrped05latspd_sg_);
  swap(da_in_a_dngrped05latacc_sg_, other->da_in_a_dngrped05latacc_sg_);
  swap(da_in_indx_dngrped05id_u32_, other->da_in_indx_dngrped05id_u32_);
  swap(da_in_indx_dngrped05age_u16_, other->da_in_indx_dngrped05age_u16_);
  swap(da_in_stat_dngrped05sts_eptrk_, other->da_in_stat_dngrped05sts_eptrk_);
  swap(da_in_stat_dngrped05class_epcls_, other->da_in_stat_dngrped05class_epcls_);
  swap(da_in_stat_dngrped05src_epsnr_, other->da_in_stat_dngrped05src_epsnr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrPed05_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrPed06_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrPed06_st::kDAINDDngrPed06LongtDistSgFieldNumber;
const int B_DngrPed06_st::kDAINDDngrPed06LatDistSgFieldNumber;
const int B_DngrPed06_st::kDAINVDngrPed06LongtSpdSgFieldNumber;
const int B_DngrPed06_st::kDAINADngrPed06LongtAccSgFieldNumber;
const int B_DngrPed06_st::kDAINVDngrPed06LatSpdSgFieldNumber;
const int B_DngrPed06_st::kDAINADngrPed06LatAccSgFieldNumber;
const int B_DngrPed06_st::kDAINIndxDngrPed06IDU32FieldNumber;
const int B_DngrPed06_st::kDAINIndxDngrPed06AgeU16FieldNumber;
const int B_DngrPed06_st::kDAINStatDngrPed06StsEPTRKFieldNumber;
const int B_DngrPed06_st::kDAINStatDngrPed06ClassEPCLSFieldNumber;
const int B_DngrPed06_st::kDAINStatDngrPed06SrcEPSNRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrPed06_st::B_DngrPed06_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed06_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrPed06_st)
}
B_DngrPed06_st::B_DngrPed06_st(const B_DngrPed06_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_dngrped06longtdist_sg_, &from.da_in_d_dngrped06longtdist_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_dngrped06src_epsnr_) -
    reinterpret_cast<char*>(&da_in_d_dngrped06longtdist_sg_)) + sizeof(da_in_stat_dngrped06src_epsnr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrPed06_st)
}

void B_DngrPed06_st::SharedCtor() {
  ::memset(&da_in_d_dngrped06longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped06src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped06longtdist_sg_)) + sizeof(da_in_stat_dngrped06src_epsnr_));
}

B_DngrPed06_st::~B_DngrPed06_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrPed06_st)
  SharedDtor();
}

void B_DngrPed06_st::SharedDtor() {
}

void B_DngrPed06_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrPed06_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrPed06_st& B_DngrPed06_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed06_st.base);
  return *internal_default_instance();
}


void B_DngrPed06_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrPed06_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_dngrped06longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped06src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped06longtdist_sg_)) + sizeof(da_in_stat_dngrped06src_epsnr_));
  _internal_metadata_.Clear();
}

bool B_DngrPed06_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrPed06_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_DngrPed06LongtDist_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped06longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrPed06LatDist_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped06latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed06LongtSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped06longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed06LongtAcc_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped06longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed06LatSpd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped06latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed06LatAcc_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped06latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed06ID_u32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped06id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed06Age_u16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped06age_u16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed06Sts_ePTRK = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped06sts_eptrk(static_cast< ::ads_common::ePTRK_DngrPedSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed06Class_ePCLS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped06class_epcls(static_cast< ::ads_common::ePCLS_DngrPedClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed06Src_ePSNR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped06src_epsnr(static_cast< ::ads_common::ePSNR_DngrPedFusSrc >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrPed06_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrPed06_st)
  return false;
#undef DO_
}

void B_DngrPed06_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrPed06_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed06LongtDist_sg = 1;
  if (this->da_in_d_dngrped06longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_dngrped06longtdist_sg(), output);
  }

  // float DA_IN_d_DngrPed06LatDist_sg = 2;
  if (this->da_in_d_dngrped06latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_d_dngrped06latdist_sg(), output);
  }

  // float DA_IN_v_DngrPed06LongtSpd_sg = 3;
  if (this->da_in_v_dngrped06longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrped06longtspd_sg(), output);
  }

  // float DA_IN_a_DngrPed06LongtAcc_sg = 4;
  if (this->da_in_a_dngrped06longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_a_dngrped06longtacc_sg(), output);
  }

  // float DA_IN_v_DngrPed06LatSpd_sg = 5;
  if (this->da_in_v_dngrped06latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_v_dngrped06latspd_sg(), output);
  }

  // float DA_IN_a_DngrPed06LatAcc_sg = 6;
  if (this->da_in_a_dngrped06latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_a_dngrped06latacc_sg(), output);
  }

  // sint32 DA_IN_indx_DngrPed06ID_u32 = 7;
  if (this->da_in_indx_dngrped06id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->da_in_indx_dngrped06id_u32(), output);
  }

  // sint32 DA_IN_indx_DngrPed06Age_u16 = 8;
  if (this->da_in_indx_dngrped06age_u16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->da_in_indx_dngrped06age_u16(), output);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed06Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped06sts_eptrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_dngrped06sts_eptrk(), output);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed06Class_ePCLS = 10;
  if (this->da_in_stat_dngrped06class_epcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->da_in_stat_dngrped06class_epcls(), output);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed06Src_ePSNR = 11;
  if (this->da_in_stat_dngrped06src_epsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrped06src_epsnr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrPed06_st)
}

::google::protobuf::uint8* B_DngrPed06_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrPed06_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed06LongtDist_sg = 1;
  if (this->da_in_d_dngrped06longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_dngrped06longtdist_sg(), target);
  }

  // float DA_IN_d_DngrPed06LatDist_sg = 2;
  if (this->da_in_d_dngrped06latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_d_dngrped06latdist_sg(), target);
  }

  // float DA_IN_v_DngrPed06LongtSpd_sg = 3;
  if (this->da_in_v_dngrped06longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrped06longtspd_sg(), target);
  }

  // float DA_IN_a_DngrPed06LongtAcc_sg = 4;
  if (this->da_in_a_dngrped06longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_a_dngrped06longtacc_sg(), target);
  }

  // float DA_IN_v_DngrPed06LatSpd_sg = 5;
  if (this->da_in_v_dngrped06latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_v_dngrped06latspd_sg(), target);
  }

  // float DA_IN_a_DngrPed06LatAcc_sg = 6;
  if (this->da_in_a_dngrped06latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_a_dngrped06latacc_sg(), target);
  }

  // sint32 DA_IN_indx_DngrPed06ID_u32 = 7;
  if (this->da_in_indx_dngrped06id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->da_in_indx_dngrped06id_u32(), target);
  }

  // sint32 DA_IN_indx_DngrPed06Age_u16 = 8;
  if (this->da_in_indx_dngrped06age_u16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->da_in_indx_dngrped06age_u16(), target);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed06Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped06sts_eptrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_dngrped06sts_eptrk(), target);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed06Class_ePCLS = 10;
  if (this->da_in_stat_dngrped06class_epcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->da_in_stat_dngrped06class_epcls(), target);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed06Src_ePSNR = 11;
  if (this->da_in_stat_dngrped06src_epsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrped06src_epsnr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrPed06_st)
  return target;
}

size_t B_DngrPed06_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrPed06_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_DngrPed06LongtDist_sg = 1;
  if (this->da_in_d_dngrped06longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrPed06LatDist_sg = 2;
  if (this->da_in_d_dngrped06latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed06LongtSpd_sg = 3;
  if (this->da_in_v_dngrped06longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed06LongtAcc_sg = 4;
  if (this->da_in_a_dngrped06longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed06LatSpd_sg = 5;
  if (this->da_in_v_dngrped06latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed06LatAcc_sg = 6;
  if (this->da_in_a_dngrped06latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_DngrPed06ID_u32 = 7;
  if (this->da_in_indx_dngrped06id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped06id_u32());
  }

  // sint32 DA_IN_indx_DngrPed06Age_u16 = 8;
  if (this->da_in_indx_dngrped06age_u16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped06age_u16());
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed06Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped06sts_eptrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped06sts_eptrk());
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed06Class_ePCLS = 10;
  if (this->da_in_stat_dngrped06class_epcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped06class_epcls());
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed06Src_ePSNR = 11;
  if (this->da_in_stat_dngrped06src_epsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped06src_epsnr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrPed06_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrPed06_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrPed06_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrPed06_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrPed06_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrPed06_st)
    MergeFrom(*source);
  }
}

void B_DngrPed06_st::MergeFrom(const B_DngrPed06_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrPed06_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_dngrped06longtdist_sg() != 0) {
    set_da_in_d_dngrped06longtdist_sg(from.da_in_d_dngrped06longtdist_sg());
  }
  if (from.da_in_d_dngrped06latdist_sg() != 0) {
    set_da_in_d_dngrped06latdist_sg(from.da_in_d_dngrped06latdist_sg());
  }
  if (from.da_in_v_dngrped06longtspd_sg() != 0) {
    set_da_in_v_dngrped06longtspd_sg(from.da_in_v_dngrped06longtspd_sg());
  }
  if (from.da_in_a_dngrped06longtacc_sg() != 0) {
    set_da_in_a_dngrped06longtacc_sg(from.da_in_a_dngrped06longtacc_sg());
  }
  if (from.da_in_v_dngrped06latspd_sg() != 0) {
    set_da_in_v_dngrped06latspd_sg(from.da_in_v_dngrped06latspd_sg());
  }
  if (from.da_in_a_dngrped06latacc_sg() != 0) {
    set_da_in_a_dngrped06latacc_sg(from.da_in_a_dngrped06latacc_sg());
  }
  if (from.da_in_indx_dngrped06id_u32() != 0) {
    set_da_in_indx_dngrped06id_u32(from.da_in_indx_dngrped06id_u32());
  }
  if (from.da_in_indx_dngrped06age_u16() != 0) {
    set_da_in_indx_dngrped06age_u16(from.da_in_indx_dngrped06age_u16());
  }
  if (from.da_in_stat_dngrped06sts_eptrk() != 0) {
    set_da_in_stat_dngrped06sts_eptrk(from.da_in_stat_dngrped06sts_eptrk());
  }
  if (from.da_in_stat_dngrped06class_epcls() != 0) {
    set_da_in_stat_dngrped06class_epcls(from.da_in_stat_dngrped06class_epcls());
  }
  if (from.da_in_stat_dngrped06src_epsnr() != 0) {
    set_da_in_stat_dngrped06src_epsnr(from.da_in_stat_dngrped06src_epsnr());
  }
}

void B_DngrPed06_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrPed06_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrPed06_st::CopyFrom(const B_DngrPed06_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrPed06_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrPed06_st::IsInitialized() const {
  return true;
}

void B_DngrPed06_st::Swap(B_DngrPed06_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrPed06_st::InternalSwap(B_DngrPed06_st* other) {
  using std::swap;
  swap(da_in_d_dngrped06longtdist_sg_, other->da_in_d_dngrped06longtdist_sg_);
  swap(da_in_d_dngrped06latdist_sg_, other->da_in_d_dngrped06latdist_sg_);
  swap(da_in_v_dngrped06longtspd_sg_, other->da_in_v_dngrped06longtspd_sg_);
  swap(da_in_a_dngrped06longtacc_sg_, other->da_in_a_dngrped06longtacc_sg_);
  swap(da_in_v_dngrped06latspd_sg_, other->da_in_v_dngrped06latspd_sg_);
  swap(da_in_a_dngrped06latacc_sg_, other->da_in_a_dngrped06latacc_sg_);
  swap(da_in_indx_dngrped06id_u32_, other->da_in_indx_dngrped06id_u32_);
  swap(da_in_indx_dngrped06age_u16_, other->da_in_indx_dngrped06age_u16_);
  swap(da_in_stat_dngrped06sts_eptrk_, other->da_in_stat_dngrped06sts_eptrk_);
  swap(da_in_stat_dngrped06class_epcls_, other->da_in_stat_dngrped06class_epcls_);
  swap(da_in_stat_dngrped06src_epsnr_, other->da_in_stat_dngrped06src_epsnr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrPed06_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrPed07_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrPed07_st::kDAINDDngrPed07LongtDistSgFieldNumber;
const int B_DngrPed07_st::kDAINDDngrPed07LatDistSgFieldNumber;
const int B_DngrPed07_st::kDAINVDngrPed07LongtSpdSgFieldNumber;
const int B_DngrPed07_st::kDAINADngrPed07LongtAccSgFieldNumber;
const int B_DngrPed07_st::kDAINVDngrPed07LatSpdSgFieldNumber;
const int B_DngrPed07_st::kDAINADngrPed07LatAccSgFieldNumber;
const int B_DngrPed07_st::kDAINIndxDngrPed07IDU32FieldNumber;
const int B_DngrPed07_st::kDAINIndxDngrPed07AgeU16FieldNumber;
const int B_DngrPed07_st::kDAINStatDngrPed07StsEPTRKFieldNumber;
const int B_DngrPed07_st::kDAINStatDngrPed07ClassEPCLSFieldNumber;
const int B_DngrPed07_st::kDAINStatDngrPed07SrcEPSNRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrPed07_st::B_DngrPed07_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed07_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrPed07_st)
}
B_DngrPed07_st::B_DngrPed07_st(const B_DngrPed07_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_dngrped07longtdist_sg_, &from.da_in_d_dngrped07longtdist_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_dngrped07src_epsnr_) -
    reinterpret_cast<char*>(&da_in_d_dngrped07longtdist_sg_)) + sizeof(da_in_stat_dngrped07src_epsnr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrPed07_st)
}

void B_DngrPed07_st::SharedCtor() {
  ::memset(&da_in_d_dngrped07longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped07src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped07longtdist_sg_)) + sizeof(da_in_stat_dngrped07src_epsnr_));
}

B_DngrPed07_st::~B_DngrPed07_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrPed07_st)
  SharedDtor();
}

void B_DngrPed07_st::SharedDtor() {
}

void B_DngrPed07_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrPed07_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrPed07_st& B_DngrPed07_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed07_st.base);
  return *internal_default_instance();
}


void B_DngrPed07_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrPed07_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_dngrped07longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped07src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped07longtdist_sg_)) + sizeof(da_in_stat_dngrped07src_epsnr_));
  _internal_metadata_.Clear();
}

bool B_DngrPed07_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrPed07_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_DngrPed07LongtDist_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped07longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrPed07LatDist_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped07latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed07LongtSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped07longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed07LongtAcc_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped07longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed07LatSpd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped07latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed07LatAcc_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped07latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed07ID_u32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped07id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed07Age_u16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped07age_u16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed07Sts_ePTRK = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped07sts_eptrk(static_cast< ::ads_common::ePTRK_DngrPedSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed07Class_ePCLS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped07class_epcls(static_cast< ::ads_common::ePCLS_DngrPedClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed07Src_ePSNR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped07src_epsnr(static_cast< ::ads_common::ePSNR_DngrPedFusSrc >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrPed07_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrPed07_st)
  return false;
#undef DO_
}

void B_DngrPed07_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrPed07_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed07LongtDist_sg = 1;
  if (this->da_in_d_dngrped07longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_dngrped07longtdist_sg(), output);
  }

  // float DA_IN_d_DngrPed07LatDist_sg = 2;
  if (this->da_in_d_dngrped07latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_d_dngrped07latdist_sg(), output);
  }

  // float DA_IN_v_DngrPed07LongtSpd_sg = 3;
  if (this->da_in_v_dngrped07longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrped07longtspd_sg(), output);
  }

  // float DA_IN_a_DngrPed07LongtAcc_sg = 4;
  if (this->da_in_a_dngrped07longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_a_dngrped07longtacc_sg(), output);
  }

  // float DA_IN_v_DngrPed07LatSpd_sg = 5;
  if (this->da_in_v_dngrped07latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_v_dngrped07latspd_sg(), output);
  }

  // float DA_IN_a_DngrPed07LatAcc_sg = 6;
  if (this->da_in_a_dngrped07latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_a_dngrped07latacc_sg(), output);
  }

  // sint32 DA_IN_indx_DngrPed07ID_u32 = 7;
  if (this->da_in_indx_dngrped07id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->da_in_indx_dngrped07id_u32(), output);
  }

  // sint32 DA_IN_indx_DngrPed07Age_u16 = 8;
  if (this->da_in_indx_dngrped07age_u16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->da_in_indx_dngrped07age_u16(), output);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed07Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped07sts_eptrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_dngrped07sts_eptrk(), output);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed07Class_ePCLS = 10;
  if (this->da_in_stat_dngrped07class_epcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->da_in_stat_dngrped07class_epcls(), output);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed07Src_ePSNR = 11;
  if (this->da_in_stat_dngrped07src_epsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrped07src_epsnr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrPed07_st)
}

::google::protobuf::uint8* B_DngrPed07_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrPed07_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed07LongtDist_sg = 1;
  if (this->da_in_d_dngrped07longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_dngrped07longtdist_sg(), target);
  }

  // float DA_IN_d_DngrPed07LatDist_sg = 2;
  if (this->da_in_d_dngrped07latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_d_dngrped07latdist_sg(), target);
  }

  // float DA_IN_v_DngrPed07LongtSpd_sg = 3;
  if (this->da_in_v_dngrped07longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrped07longtspd_sg(), target);
  }

  // float DA_IN_a_DngrPed07LongtAcc_sg = 4;
  if (this->da_in_a_dngrped07longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_a_dngrped07longtacc_sg(), target);
  }

  // float DA_IN_v_DngrPed07LatSpd_sg = 5;
  if (this->da_in_v_dngrped07latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_v_dngrped07latspd_sg(), target);
  }

  // float DA_IN_a_DngrPed07LatAcc_sg = 6;
  if (this->da_in_a_dngrped07latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_a_dngrped07latacc_sg(), target);
  }

  // sint32 DA_IN_indx_DngrPed07ID_u32 = 7;
  if (this->da_in_indx_dngrped07id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->da_in_indx_dngrped07id_u32(), target);
  }

  // sint32 DA_IN_indx_DngrPed07Age_u16 = 8;
  if (this->da_in_indx_dngrped07age_u16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->da_in_indx_dngrped07age_u16(), target);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed07Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped07sts_eptrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_dngrped07sts_eptrk(), target);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed07Class_ePCLS = 10;
  if (this->da_in_stat_dngrped07class_epcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->da_in_stat_dngrped07class_epcls(), target);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed07Src_ePSNR = 11;
  if (this->da_in_stat_dngrped07src_epsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrped07src_epsnr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrPed07_st)
  return target;
}

size_t B_DngrPed07_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrPed07_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_DngrPed07LongtDist_sg = 1;
  if (this->da_in_d_dngrped07longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrPed07LatDist_sg = 2;
  if (this->da_in_d_dngrped07latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed07LongtSpd_sg = 3;
  if (this->da_in_v_dngrped07longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed07LongtAcc_sg = 4;
  if (this->da_in_a_dngrped07longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed07LatSpd_sg = 5;
  if (this->da_in_v_dngrped07latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed07LatAcc_sg = 6;
  if (this->da_in_a_dngrped07latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_DngrPed07ID_u32 = 7;
  if (this->da_in_indx_dngrped07id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped07id_u32());
  }

  // sint32 DA_IN_indx_DngrPed07Age_u16 = 8;
  if (this->da_in_indx_dngrped07age_u16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped07age_u16());
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed07Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped07sts_eptrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped07sts_eptrk());
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed07Class_ePCLS = 10;
  if (this->da_in_stat_dngrped07class_epcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped07class_epcls());
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed07Src_ePSNR = 11;
  if (this->da_in_stat_dngrped07src_epsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped07src_epsnr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrPed07_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrPed07_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrPed07_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrPed07_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrPed07_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrPed07_st)
    MergeFrom(*source);
  }
}

void B_DngrPed07_st::MergeFrom(const B_DngrPed07_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrPed07_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_dngrped07longtdist_sg() != 0) {
    set_da_in_d_dngrped07longtdist_sg(from.da_in_d_dngrped07longtdist_sg());
  }
  if (from.da_in_d_dngrped07latdist_sg() != 0) {
    set_da_in_d_dngrped07latdist_sg(from.da_in_d_dngrped07latdist_sg());
  }
  if (from.da_in_v_dngrped07longtspd_sg() != 0) {
    set_da_in_v_dngrped07longtspd_sg(from.da_in_v_dngrped07longtspd_sg());
  }
  if (from.da_in_a_dngrped07longtacc_sg() != 0) {
    set_da_in_a_dngrped07longtacc_sg(from.da_in_a_dngrped07longtacc_sg());
  }
  if (from.da_in_v_dngrped07latspd_sg() != 0) {
    set_da_in_v_dngrped07latspd_sg(from.da_in_v_dngrped07latspd_sg());
  }
  if (from.da_in_a_dngrped07latacc_sg() != 0) {
    set_da_in_a_dngrped07latacc_sg(from.da_in_a_dngrped07latacc_sg());
  }
  if (from.da_in_indx_dngrped07id_u32() != 0) {
    set_da_in_indx_dngrped07id_u32(from.da_in_indx_dngrped07id_u32());
  }
  if (from.da_in_indx_dngrped07age_u16() != 0) {
    set_da_in_indx_dngrped07age_u16(from.da_in_indx_dngrped07age_u16());
  }
  if (from.da_in_stat_dngrped07sts_eptrk() != 0) {
    set_da_in_stat_dngrped07sts_eptrk(from.da_in_stat_dngrped07sts_eptrk());
  }
  if (from.da_in_stat_dngrped07class_epcls() != 0) {
    set_da_in_stat_dngrped07class_epcls(from.da_in_stat_dngrped07class_epcls());
  }
  if (from.da_in_stat_dngrped07src_epsnr() != 0) {
    set_da_in_stat_dngrped07src_epsnr(from.da_in_stat_dngrped07src_epsnr());
  }
}

void B_DngrPed07_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrPed07_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrPed07_st::CopyFrom(const B_DngrPed07_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrPed07_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrPed07_st::IsInitialized() const {
  return true;
}

void B_DngrPed07_st::Swap(B_DngrPed07_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrPed07_st::InternalSwap(B_DngrPed07_st* other) {
  using std::swap;
  swap(da_in_d_dngrped07longtdist_sg_, other->da_in_d_dngrped07longtdist_sg_);
  swap(da_in_d_dngrped07latdist_sg_, other->da_in_d_dngrped07latdist_sg_);
  swap(da_in_v_dngrped07longtspd_sg_, other->da_in_v_dngrped07longtspd_sg_);
  swap(da_in_a_dngrped07longtacc_sg_, other->da_in_a_dngrped07longtacc_sg_);
  swap(da_in_v_dngrped07latspd_sg_, other->da_in_v_dngrped07latspd_sg_);
  swap(da_in_a_dngrped07latacc_sg_, other->da_in_a_dngrped07latacc_sg_);
  swap(da_in_indx_dngrped07id_u32_, other->da_in_indx_dngrped07id_u32_);
  swap(da_in_indx_dngrped07age_u16_, other->da_in_indx_dngrped07age_u16_);
  swap(da_in_stat_dngrped07sts_eptrk_, other->da_in_stat_dngrped07sts_eptrk_);
  swap(da_in_stat_dngrped07class_epcls_, other->da_in_stat_dngrped07class_epcls_);
  swap(da_in_stat_dngrped07src_epsnr_, other->da_in_stat_dngrped07src_epsnr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrPed07_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrPed08_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrPed08_st::kDAINDDngrPed08LongtDistSgFieldNumber;
const int B_DngrPed08_st::kDAINDDngrPed08LatDistSgFieldNumber;
const int B_DngrPed08_st::kDAINVDngrPed08LongtSpdSgFieldNumber;
const int B_DngrPed08_st::kDAINADngrPed08LongtAccSgFieldNumber;
const int B_DngrPed08_st::kDAINVDngrPed08LatSpdSgFieldNumber;
const int B_DngrPed08_st::kDAINADngrPed08LatAccSgFieldNumber;
const int B_DngrPed08_st::kDAINIndxDngrPed08IDU32FieldNumber;
const int B_DngrPed08_st::kDAINIndxDngrPed08AgeU16FieldNumber;
const int B_DngrPed08_st::kDAINStatDngrPed08StsEPTRKFieldNumber;
const int B_DngrPed08_st::kDAINStatDngrPed08ClassEPCLSFieldNumber;
const int B_DngrPed08_st::kDAINStatDngrPed08SrcEPSNRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrPed08_st::B_DngrPed08_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed08_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrPed08_st)
}
B_DngrPed08_st::B_DngrPed08_st(const B_DngrPed08_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_dngrped08longtdist_sg_, &from.da_in_d_dngrped08longtdist_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_dngrped08src_epsnr_) -
    reinterpret_cast<char*>(&da_in_d_dngrped08longtdist_sg_)) + sizeof(da_in_stat_dngrped08src_epsnr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrPed08_st)
}

void B_DngrPed08_st::SharedCtor() {
  ::memset(&da_in_d_dngrped08longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped08src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped08longtdist_sg_)) + sizeof(da_in_stat_dngrped08src_epsnr_));
}

B_DngrPed08_st::~B_DngrPed08_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrPed08_st)
  SharedDtor();
}

void B_DngrPed08_st::SharedDtor() {
}

void B_DngrPed08_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrPed08_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrPed08_st& B_DngrPed08_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed08_st.base);
  return *internal_default_instance();
}


void B_DngrPed08_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrPed08_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_dngrped08longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped08src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped08longtdist_sg_)) + sizeof(da_in_stat_dngrped08src_epsnr_));
  _internal_metadata_.Clear();
}

bool B_DngrPed08_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrPed08_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_DngrPed08LongtDist_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped08longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrPed08LatDist_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped08latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed08LongtSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped08longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed08LongtAcc_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped08longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed08LatSpd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped08latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed08LatAcc_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped08latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed08ID_u32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped08id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed08Age_u16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped08age_u16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed08Sts_ePTRK = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped08sts_eptrk(static_cast< ::ads_common::ePTRK_DngrPedSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed08Class_ePCLS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped08class_epcls(static_cast< ::ads_common::ePCLS_DngrPedClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed08Src_ePSNR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped08src_epsnr(static_cast< ::ads_common::ePSNR_DngrPedFusSrc >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrPed08_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrPed08_st)
  return false;
#undef DO_
}

void B_DngrPed08_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrPed08_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed08LongtDist_sg = 1;
  if (this->da_in_d_dngrped08longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_dngrped08longtdist_sg(), output);
  }

  // float DA_IN_d_DngrPed08LatDist_sg = 2;
  if (this->da_in_d_dngrped08latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_d_dngrped08latdist_sg(), output);
  }

  // float DA_IN_v_DngrPed08LongtSpd_sg = 3;
  if (this->da_in_v_dngrped08longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrped08longtspd_sg(), output);
  }

  // float DA_IN_a_DngrPed08LongtAcc_sg = 4;
  if (this->da_in_a_dngrped08longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_a_dngrped08longtacc_sg(), output);
  }

  // float DA_IN_v_DngrPed08LatSpd_sg = 5;
  if (this->da_in_v_dngrped08latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_v_dngrped08latspd_sg(), output);
  }

  // float DA_IN_a_DngrPed08LatAcc_sg = 6;
  if (this->da_in_a_dngrped08latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_a_dngrped08latacc_sg(), output);
  }

  // sint32 DA_IN_indx_DngrPed08ID_u32 = 7;
  if (this->da_in_indx_dngrped08id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->da_in_indx_dngrped08id_u32(), output);
  }

  // sint32 DA_IN_indx_DngrPed08Age_u16 = 8;
  if (this->da_in_indx_dngrped08age_u16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->da_in_indx_dngrped08age_u16(), output);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed08Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped08sts_eptrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_dngrped08sts_eptrk(), output);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed08Class_ePCLS = 10;
  if (this->da_in_stat_dngrped08class_epcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->da_in_stat_dngrped08class_epcls(), output);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed08Src_ePSNR = 11;
  if (this->da_in_stat_dngrped08src_epsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrped08src_epsnr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrPed08_st)
}

::google::protobuf::uint8* B_DngrPed08_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrPed08_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed08LongtDist_sg = 1;
  if (this->da_in_d_dngrped08longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_dngrped08longtdist_sg(), target);
  }

  // float DA_IN_d_DngrPed08LatDist_sg = 2;
  if (this->da_in_d_dngrped08latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_d_dngrped08latdist_sg(), target);
  }

  // float DA_IN_v_DngrPed08LongtSpd_sg = 3;
  if (this->da_in_v_dngrped08longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrped08longtspd_sg(), target);
  }

  // float DA_IN_a_DngrPed08LongtAcc_sg = 4;
  if (this->da_in_a_dngrped08longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_a_dngrped08longtacc_sg(), target);
  }

  // float DA_IN_v_DngrPed08LatSpd_sg = 5;
  if (this->da_in_v_dngrped08latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_v_dngrped08latspd_sg(), target);
  }

  // float DA_IN_a_DngrPed08LatAcc_sg = 6;
  if (this->da_in_a_dngrped08latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_a_dngrped08latacc_sg(), target);
  }

  // sint32 DA_IN_indx_DngrPed08ID_u32 = 7;
  if (this->da_in_indx_dngrped08id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->da_in_indx_dngrped08id_u32(), target);
  }

  // sint32 DA_IN_indx_DngrPed08Age_u16 = 8;
  if (this->da_in_indx_dngrped08age_u16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->da_in_indx_dngrped08age_u16(), target);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed08Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped08sts_eptrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_dngrped08sts_eptrk(), target);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed08Class_ePCLS = 10;
  if (this->da_in_stat_dngrped08class_epcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->da_in_stat_dngrped08class_epcls(), target);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed08Src_ePSNR = 11;
  if (this->da_in_stat_dngrped08src_epsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrped08src_epsnr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrPed08_st)
  return target;
}

size_t B_DngrPed08_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrPed08_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_DngrPed08LongtDist_sg = 1;
  if (this->da_in_d_dngrped08longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrPed08LatDist_sg = 2;
  if (this->da_in_d_dngrped08latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed08LongtSpd_sg = 3;
  if (this->da_in_v_dngrped08longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed08LongtAcc_sg = 4;
  if (this->da_in_a_dngrped08longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed08LatSpd_sg = 5;
  if (this->da_in_v_dngrped08latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed08LatAcc_sg = 6;
  if (this->da_in_a_dngrped08latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_DngrPed08ID_u32 = 7;
  if (this->da_in_indx_dngrped08id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped08id_u32());
  }

  // sint32 DA_IN_indx_DngrPed08Age_u16 = 8;
  if (this->da_in_indx_dngrped08age_u16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped08age_u16());
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed08Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped08sts_eptrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped08sts_eptrk());
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed08Class_ePCLS = 10;
  if (this->da_in_stat_dngrped08class_epcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped08class_epcls());
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed08Src_ePSNR = 11;
  if (this->da_in_stat_dngrped08src_epsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped08src_epsnr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrPed08_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrPed08_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrPed08_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrPed08_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrPed08_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrPed08_st)
    MergeFrom(*source);
  }
}

void B_DngrPed08_st::MergeFrom(const B_DngrPed08_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrPed08_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_dngrped08longtdist_sg() != 0) {
    set_da_in_d_dngrped08longtdist_sg(from.da_in_d_dngrped08longtdist_sg());
  }
  if (from.da_in_d_dngrped08latdist_sg() != 0) {
    set_da_in_d_dngrped08latdist_sg(from.da_in_d_dngrped08latdist_sg());
  }
  if (from.da_in_v_dngrped08longtspd_sg() != 0) {
    set_da_in_v_dngrped08longtspd_sg(from.da_in_v_dngrped08longtspd_sg());
  }
  if (from.da_in_a_dngrped08longtacc_sg() != 0) {
    set_da_in_a_dngrped08longtacc_sg(from.da_in_a_dngrped08longtacc_sg());
  }
  if (from.da_in_v_dngrped08latspd_sg() != 0) {
    set_da_in_v_dngrped08latspd_sg(from.da_in_v_dngrped08latspd_sg());
  }
  if (from.da_in_a_dngrped08latacc_sg() != 0) {
    set_da_in_a_dngrped08latacc_sg(from.da_in_a_dngrped08latacc_sg());
  }
  if (from.da_in_indx_dngrped08id_u32() != 0) {
    set_da_in_indx_dngrped08id_u32(from.da_in_indx_dngrped08id_u32());
  }
  if (from.da_in_indx_dngrped08age_u16() != 0) {
    set_da_in_indx_dngrped08age_u16(from.da_in_indx_dngrped08age_u16());
  }
  if (from.da_in_stat_dngrped08sts_eptrk() != 0) {
    set_da_in_stat_dngrped08sts_eptrk(from.da_in_stat_dngrped08sts_eptrk());
  }
  if (from.da_in_stat_dngrped08class_epcls() != 0) {
    set_da_in_stat_dngrped08class_epcls(from.da_in_stat_dngrped08class_epcls());
  }
  if (from.da_in_stat_dngrped08src_epsnr() != 0) {
    set_da_in_stat_dngrped08src_epsnr(from.da_in_stat_dngrped08src_epsnr());
  }
}

void B_DngrPed08_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrPed08_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrPed08_st::CopyFrom(const B_DngrPed08_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrPed08_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrPed08_st::IsInitialized() const {
  return true;
}

void B_DngrPed08_st::Swap(B_DngrPed08_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrPed08_st::InternalSwap(B_DngrPed08_st* other) {
  using std::swap;
  swap(da_in_d_dngrped08longtdist_sg_, other->da_in_d_dngrped08longtdist_sg_);
  swap(da_in_d_dngrped08latdist_sg_, other->da_in_d_dngrped08latdist_sg_);
  swap(da_in_v_dngrped08longtspd_sg_, other->da_in_v_dngrped08longtspd_sg_);
  swap(da_in_a_dngrped08longtacc_sg_, other->da_in_a_dngrped08longtacc_sg_);
  swap(da_in_v_dngrped08latspd_sg_, other->da_in_v_dngrped08latspd_sg_);
  swap(da_in_a_dngrped08latacc_sg_, other->da_in_a_dngrped08latacc_sg_);
  swap(da_in_indx_dngrped08id_u32_, other->da_in_indx_dngrped08id_u32_);
  swap(da_in_indx_dngrped08age_u16_, other->da_in_indx_dngrped08age_u16_);
  swap(da_in_stat_dngrped08sts_eptrk_, other->da_in_stat_dngrped08sts_eptrk_);
  swap(da_in_stat_dngrped08class_epcls_, other->da_in_stat_dngrped08class_epcls_);
  swap(da_in_stat_dngrped08src_epsnr_, other->da_in_stat_dngrped08src_epsnr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrPed08_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrPed09_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrPed09_st::kDAINDDngrPed09LongtDistSgFieldNumber;
const int B_DngrPed09_st::kDAINDDngrPed09LatDistSgFieldNumber;
const int B_DngrPed09_st::kDAINVDngrPed09LongtSpdSgFieldNumber;
const int B_DngrPed09_st::kDAINADngrPed09LongtAccSgFieldNumber;
const int B_DngrPed09_st::kDAINVDngrPed09LatSpdSgFieldNumber;
const int B_DngrPed09_st::kDAINADngrPed09LatAccSgFieldNumber;
const int B_DngrPed09_st::kDAINIndxDngrPed09IDU32FieldNumber;
const int B_DngrPed09_st::kDAINIndxDngrPed09AgeU16FieldNumber;
const int B_DngrPed09_st::kDAINStatDngrPed09StsEPTRKFieldNumber;
const int B_DngrPed09_st::kDAINStatDngrPed09ClassEPCLSFieldNumber;
const int B_DngrPed09_st::kDAINStatDngrPed09SrcEPSNRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrPed09_st::B_DngrPed09_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed09_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrPed09_st)
}
B_DngrPed09_st::B_DngrPed09_st(const B_DngrPed09_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_dngrped09longtdist_sg_, &from.da_in_d_dngrped09longtdist_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_dngrped09src_epsnr_) -
    reinterpret_cast<char*>(&da_in_d_dngrped09longtdist_sg_)) + sizeof(da_in_stat_dngrped09src_epsnr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrPed09_st)
}

void B_DngrPed09_st::SharedCtor() {
  ::memset(&da_in_d_dngrped09longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped09src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped09longtdist_sg_)) + sizeof(da_in_stat_dngrped09src_epsnr_));
}

B_DngrPed09_st::~B_DngrPed09_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrPed09_st)
  SharedDtor();
}

void B_DngrPed09_st::SharedDtor() {
}

void B_DngrPed09_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrPed09_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrPed09_st& B_DngrPed09_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed09_st.base);
  return *internal_default_instance();
}


void B_DngrPed09_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrPed09_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_dngrped09longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped09src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped09longtdist_sg_)) + sizeof(da_in_stat_dngrped09src_epsnr_));
  _internal_metadata_.Clear();
}

bool B_DngrPed09_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrPed09_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_DngrPed09LongtDist_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped09longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrPed09LatDist_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped09latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed09LongtSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped09longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed09LongtAcc_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped09longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed09LatSpd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped09latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed09LatAcc_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped09latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed09ID_u32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped09id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed09Age_u16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped09age_u16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed09Sts_ePTRK = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped09sts_eptrk(static_cast< ::ads_common::ePTRK_DngrPedSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed09Class_ePCLS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped09class_epcls(static_cast< ::ads_common::ePCLS_DngrPedClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed09Src_ePSNR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped09src_epsnr(static_cast< ::ads_common::ePSNR_DngrPedFusSrc >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrPed09_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrPed09_st)
  return false;
#undef DO_
}

void B_DngrPed09_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrPed09_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed09LongtDist_sg = 1;
  if (this->da_in_d_dngrped09longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_dngrped09longtdist_sg(), output);
  }

  // float DA_IN_d_DngrPed09LatDist_sg = 2;
  if (this->da_in_d_dngrped09latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_d_dngrped09latdist_sg(), output);
  }

  // float DA_IN_v_DngrPed09LongtSpd_sg = 3;
  if (this->da_in_v_dngrped09longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrped09longtspd_sg(), output);
  }

  // float DA_IN_a_DngrPed09LongtAcc_sg = 4;
  if (this->da_in_a_dngrped09longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_a_dngrped09longtacc_sg(), output);
  }

  // float DA_IN_v_DngrPed09LatSpd_sg = 5;
  if (this->da_in_v_dngrped09latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_v_dngrped09latspd_sg(), output);
  }

  // float DA_IN_a_DngrPed09LatAcc_sg = 6;
  if (this->da_in_a_dngrped09latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_a_dngrped09latacc_sg(), output);
  }

  // sint32 DA_IN_indx_DngrPed09ID_u32 = 7;
  if (this->da_in_indx_dngrped09id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->da_in_indx_dngrped09id_u32(), output);
  }

  // sint32 DA_IN_indx_DngrPed09Age_u16 = 8;
  if (this->da_in_indx_dngrped09age_u16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->da_in_indx_dngrped09age_u16(), output);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed09Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped09sts_eptrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_dngrped09sts_eptrk(), output);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed09Class_ePCLS = 10;
  if (this->da_in_stat_dngrped09class_epcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->da_in_stat_dngrped09class_epcls(), output);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed09Src_ePSNR = 11;
  if (this->da_in_stat_dngrped09src_epsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrped09src_epsnr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrPed09_st)
}

::google::protobuf::uint8* B_DngrPed09_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrPed09_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed09LongtDist_sg = 1;
  if (this->da_in_d_dngrped09longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_dngrped09longtdist_sg(), target);
  }

  // float DA_IN_d_DngrPed09LatDist_sg = 2;
  if (this->da_in_d_dngrped09latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_d_dngrped09latdist_sg(), target);
  }

  // float DA_IN_v_DngrPed09LongtSpd_sg = 3;
  if (this->da_in_v_dngrped09longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrped09longtspd_sg(), target);
  }

  // float DA_IN_a_DngrPed09LongtAcc_sg = 4;
  if (this->da_in_a_dngrped09longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_a_dngrped09longtacc_sg(), target);
  }

  // float DA_IN_v_DngrPed09LatSpd_sg = 5;
  if (this->da_in_v_dngrped09latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_v_dngrped09latspd_sg(), target);
  }

  // float DA_IN_a_DngrPed09LatAcc_sg = 6;
  if (this->da_in_a_dngrped09latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_a_dngrped09latacc_sg(), target);
  }

  // sint32 DA_IN_indx_DngrPed09ID_u32 = 7;
  if (this->da_in_indx_dngrped09id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->da_in_indx_dngrped09id_u32(), target);
  }

  // sint32 DA_IN_indx_DngrPed09Age_u16 = 8;
  if (this->da_in_indx_dngrped09age_u16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->da_in_indx_dngrped09age_u16(), target);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed09Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped09sts_eptrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_dngrped09sts_eptrk(), target);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed09Class_ePCLS = 10;
  if (this->da_in_stat_dngrped09class_epcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->da_in_stat_dngrped09class_epcls(), target);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed09Src_ePSNR = 11;
  if (this->da_in_stat_dngrped09src_epsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrped09src_epsnr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrPed09_st)
  return target;
}

size_t B_DngrPed09_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrPed09_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_DngrPed09LongtDist_sg = 1;
  if (this->da_in_d_dngrped09longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrPed09LatDist_sg = 2;
  if (this->da_in_d_dngrped09latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed09LongtSpd_sg = 3;
  if (this->da_in_v_dngrped09longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed09LongtAcc_sg = 4;
  if (this->da_in_a_dngrped09longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed09LatSpd_sg = 5;
  if (this->da_in_v_dngrped09latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed09LatAcc_sg = 6;
  if (this->da_in_a_dngrped09latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_DngrPed09ID_u32 = 7;
  if (this->da_in_indx_dngrped09id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped09id_u32());
  }

  // sint32 DA_IN_indx_DngrPed09Age_u16 = 8;
  if (this->da_in_indx_dngrped09age_u16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped09age_u16());
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed09Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped09sts_eptrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped09sts_eptrk());
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed09Class_ePCLS = 10;
  if (this->da_in_stat_dngrped09class_epcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped09class_epcls());
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed09Src_ePSNR = 11;
  if (this->da_in_stat_dngrped09src_epsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped09src_epsnr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrPed09_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrPed09_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrPed09_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrPed09_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrPed09_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrPed09_st)
    MergeFrom(*source);
  }
}

void B_DngrPed09_st::MergeFrom(const B_DngrPed09_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrPed09_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_dngrped09longtdist_sg() != 0) {
    set_da_in_d_dngrped09longtdist_sg(from.da_in_d_dngrped09longtdist_sg());
  }
  if (from.da_in_d_dngrped09latdist_sg() != 0) {
    set_da_in_d_dngrped09latdist_sg(from.da_in_d_dngrped09latdist_sg());
  }
  if (from.da_in_v_dngrped09longtspd_sg() != 0) {
    set_da_in_v_dngrped09longtspd_sg(from.da_in_v_dngrped09longtspd_sg());
  }
  if (from.da_in_a_dngrped09longtacc_sg() != 0) {
    set_da_in_a_dngrped09longtacc_sg(from.da_in_a_dngrped09longtacc_sg());
  }
  if (from.da_in_v_dngrped09latspd_sg() != 0) {
    set_da_in_v_dngrped09latspd_sg(from.da_in_v_dngrped09latspd_sg());
  }
  if (from.da_in_a_dngrped09latacc_sg() != 0) {
    set_da_in_a_dngrped09latacc_sg(from.da_in_a_dngrped09latacc_sg());
  }
  if (from.da_in_indx_dngrped09id_u32() != 0) {
    set_da_in_indx_dngrped09id_u32(from.da_in_indx_dngrped09id_u32());
  }
  if (from.da_in_indx_dngrped09age_u16() != 0) {
    set_da_in_indx_dngrped09age_u16(from.da_in_indx_dngrped09age_u16());
  }
  if (from.da_in_stat_dngrped09sts_eptrk() != 0) {
    set_da_in_stat_dngrped09sts_eptrk(from.da_in_stat_dngrped09sts_eptrk());
  }
  if (from.da_in_stat_dngrped09class_epcls() != 0) {
    set_da_in_stat_dngrped09class_epcls(from.da_in_stat_dngrped09class_epcls());
  }
  if (from.da_in_stat_dngrped09src_epsnr() != 0) {
    set_da_in_stat_dngrped09src_epsnr(from.da_in_stat_dngrped09src_epsnr());
  }
}

void B_DngrPed09_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrPed09_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrPed09_st::CopyFrom(const B_DngrPed09_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrPed09_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrPed09_st::IsInitialized() const {
  return true;
}

void B_DngrPed09_st::Swap(B_DngrPed09_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrPed09_st::InternalSwap(B_DngrPed09_st* other) {
  using std::swap;
  swap(da_in_d_dngrped09longtdist_sg_, other->da_in_d_dngrped09longtdist_sg_);
  swap(da_in_d_dngrped09latdist_sg_, other->da_in_d_dngrped09latdist_sg_);
  swap(da_in_v_dngrped09longtspd_sg_, other->da_in_v_dngrped09longtspd_sg_);
  swap(da_in_a_dngrped09longtacc_sg_, other->da_in_a_dngrped09longtacc_sg_);
  swap(da_in_v_dngrped09latspd_sg_, other->da_in_v_dngrped09latspd_sg_);
  swap(da_in_a_dngrped09latacc_sg_, other->da_in_a_dngrped09latacc_sg_);
  swap(da_in_indx_dngrped09id_u32_, other->da_in_indx_dngrped09id_u32_);
  swap(da_in_indx_dngrped09age_u16_, other->da_in_indx_dngrped09age_u16_);
  swap(da_in_stat_dngrped09sts_eptrk_, other->da_in_stat_dngrped09sts_eptrk_);
  swap(da_in_stat_dngrped09class_epcls_, other->da_in_stat_dngrped09class_epcls_);
  swap(da_in_stat_dngrped09src_epsnr_, other->da_in_stat_dngrped09src_epsnr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrPed09_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_DngrPed10_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_DngrPed10_st::kDAINDDngrPed10LongtDistSgFieldNumber;
const int B_DngrPed10_st::kDAINDDngrPed10LatDistSgFieldNumber;
const int B_DngrPed10_st::kDAINVDngrPed10LongtSpdSgFieldNumber;
const int B_DngrPed10_st::kDAINADngrPed10LongtAccSgFieldNumber;
const int B_DngrPed10_st::kDAINVDngrPed10LatSpdSgFieldNumber;
const int B_DngrPed10_st::kDAINADngrPed10LatAccSgFieldNumber;
const int B_DngrPed10_st::kDAINIndxDngrPed10IDU32FieldNumber;
const int B_DngrPed10_st::kDAINIndxDngrPed10AgeU16FieldNumber;
const int B_DngrPed10_st::kDAINStatDngrPed10StsEPTRKFieldNumber;
const int B_DngrPed10_st::kDAINStatDngrPed10ClassEPCLSFieldNumber;
const int B_DngrPed10_st::kDAINStatDngrPed10SrcEPSNRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_DngrPed10_st::B_DngrPed10_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed10_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_DngrPed10_st)
}
B_DngrPed10_st::B_DngrPed10_st(const B_DngrPed10_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_dngrped10longtdist_sg_, &from.da_in_d_dngrped10longtdist_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_dngrped10src_epsnr_) -
    reinterpret_cast<char*>(&da_in_d_dngrped10longtdist_sg_)) + sizeof(da_in_stat_dngrped10src_epsnr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_DngrPed10_st)
}

void B_DngrPed10_st::SharedCtor() {
  ::memset(&da_in_d_dngrped10longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped10src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped10longtdist_sg_)) + sizeof(da_in_stat_dngrped10src_epsnr_));
}

B_DngrPed10_st::~B_DngrPed10_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_DngrPed10_st)
  SharedDtor();
}

void B_DngrPed10_st::SharedDtor() {
}

void B_DngrPed10_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_DngrPed10_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_DngrPed10_st& B_DngrPed10_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_DngrPed10_st.base);
  return *internal_default_instance();
}


void B_DngrPed10_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_DngrPed10_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_dngrped10longtdist_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_dngrped10src_epsnr_) -
      reinterpret_cast<char*>(&da_in_d_dngrped10longtdist_sg_)) + sizeof(da_in_stat_dngrped10src_epsnr_));
  _internal_metadata_.Clear();
}

bool B_DngrPed10_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_DngrPed10_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_DngrPed10LongtDist_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped10longtdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_DngrPed10LatDist_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_dngrped10latdist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed10LongtSpd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped10longtspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed10LongtAcc_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped10longtacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_v_DngrPed10LatSpd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_v_dngrped10latspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_a_DngrPed10LatAcc_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_a_dngrped10latacc_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed10ID_u32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped10id_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_DngrPed10Age_u16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_dngrped10age_u16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed10Sts_ePTRK = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped10sts_eptrk(static_cast< ::ads_common::ePTRK_DngrPedSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed10Class_ePCLS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped10class_epcls(static_cast< ::ads_common::ePCLS_DngrPedClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed10Src_ePSNR = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_dngrped10src_epsnr(static_cast< ::ads_common::ePSNR_DngrPedFusSrc >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_DngrPed10_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_DngrPed10_st)
  return false;
#undef DO_
}

void B_DngrPed10_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_DngrPed10_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed10LongtDist_sg = 1;
  if (this->da_in_d_dngrped10longtdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_dngrped10longtdist_sg(), output);
  }

  // float DA_IN_d_DngrPed10LatDist_sg = 2;
  if (this->da_in_d_dngrped10latdist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_d_dngrped10latdist_sg(), output);
  }

  // float DA_IN_v_DngrPed10LongtSpd_sg = 3;
  if (this->da_in_v_dngrped10longtspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_v_dngrped10longtspd_sg(), output);
  }

  // float DA_IN_a_DngrPed10LongtAcc_sg = 4;
  if (this->da_in_a_dngrped10longtacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_a_dngrped10longtacc_sg(), output);
  }

  // float DA_IN_v_DngrPed10LatSpd_sg = 5;
  if (this->da_in_v_dngrped10latspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_v_dngrped10latspd_sg(), output);
  }

  // float DA_IN_a_DngrPed10LatAcc_sg = 6;
  if (this->da_in_a_dngrped10latacc_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_a_dngrped10latacc_sg(), output);
  }

  // sint32 DA_IN_indx_DngrPed10ID_u32 = 7;
  if (this->da_in_indx_dngrped10id_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->da_in_indx_dngrped10id_u32(), output);
  }

  // sint32 DA_IN_indx_DngrPed10Age_u16 = 8;
  if (this->da_in_indx_dngrped10age_u16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->da_in_indx_dngrped10age_u16(), output);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed10Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped10sts_eptrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_dngrped10sts_eptrk(), output);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed10Class_ePCLS = 10;
  if (this->da_in_stat_dngrped10class_epcls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->da_in_stat_dngrped10class_epcls(), output);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed10Src_ePSNR = 11;
  if (this->da_in_stat_dngrped10src_epsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->da_in_stat_dngrped10src_epsnr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_DngrPed10_st)
}

::google::protobuf::uint8* B_DngrPed10_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_DngrPed10_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_DngrPed10LongtDist_sg = 1;
  if (this->da_in_d_dngrped10longtdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_dngrped10longtdist_sg(), target);
  }

  // float DA_IN_d_DngrPed10LatDist_sg = 2;
  if (this->da_in_d_dngrped10latdist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_d_dngrped10latdist_sg(), target);
  }

  // float DA_IN_v_DngrPed10LongtSpd_sg = 3;
  if (this->da_in_v_dngrped10longtspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_v_dngrped10longtspd_sg(), target);
  }

  // float DA_IN_a_DngrPed10LongtAcc_sg = 4;
  if (this->da_in_a_dngrped10longtacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_a_dngrped10longtacc_sg(), target);
  }

  // float DA_IN_v_DngrPed10LatSpd_sg = 5;
  if (this->da_in_v_dngrped10latspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_v_dngrped10latspd_sg(), target);
  }

  // float DA_IN_a_DngrPed10LatAcc_sg = 6;
  if (this->da_in_a_dngrped10latacc_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_a_dngrped10latacc_sg(), target);
  }

  // sint32 DA_IN_indx_DngrPed10ID_u32 = 7;
  if (this->da_in_indx_dngrped10id_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->da_in_indx_dngrped10id_u32(), target);
  }

  // sint32 DA_IN_indx_DngrPed10Age_u16 = 8;
  if (this->da_in_indx_dngrped10age_u16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->da_in_indx_dngrped10age_u16(), target);
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed10Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped10sts_eptrk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_dngrped10sts_eptrk(), target);
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed10Class_ePCLS = 10;
  if (this->da_in_stat_dngrped10class_epcls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->da_in_stat_dngrped10class_epcls(), target);
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed10Src_ePSNR = 11;
  if (this->da_in_stat_dngrped10src_epsnr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->da_in_stat_dngrped10src_epsnr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_DngrPed10_st)
  return target;
}

size_t B_DngrPed10_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_DngrPed10_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_DngrPed10LongtDist_sg = 1;
  if (this->da_in_d_dngrped10longtdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_DngrPed10LatDist_sg = 2;
  if (this->da_in_d_dngrped10latdist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed10LongtSpd_sg = 3;
  if (this->da_in_v_dngrped10longtspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed10LongtAcc_sg = 4;
  if (this->da_in_a_dngrped10longtacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_v_DngrPed10LatSpd_sg = 5;
  if (this->da_in_v_dngrped10latspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_a_DngrPed10LatAcc_sg = 6;
  if (this->da_in_a_dngrped10latacc_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_DngrPed10ID_u32 = 7;
  if (this->da_in_indx_dngrped10id_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped10id_u32());
  }

  // sint32 DA_IN_indx_DngrPed10Age_u16 = 8;
  if (this->da_in_indx_dngrped10age_u16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_dngrped10age_u16());
  }

  // .ads_common.ePTRK_DngrPedSts DA_IN_stat_DngrPed10Sts_ePTRK = 9;
  if (this->da_in_stat_dngrped10sts_eptrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped10sts_eptrk());
  }

  // .ads_common.ePCLS_DngrPedClass DA_IN_stat_DngrPed10Class_ePCLS = 10;
  if (this->da_in_stat_dngrped10class_epcls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped10class_epcls());
  }

  // .ads_common.ePSNR_DngrPedFusSrc DA_IN_stat_DngrPed10Src_ePSNR = 11;
  if (this->da_in_stat_dngrped10src_epsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_dngrped10src_epsnr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_DngrPed10_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_DngrPed10_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_DngrPed10_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_DngrPed10_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_DngrPed10_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_DngrPed10_st)
    MergeFrom(*source);
  }
}

void B_DngrPed10_st::MergeFrom(const B_DngrPed10_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_DngrPed10_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_dngrped10longtdist_sg() != 0) {
    set_da_in_d_dngrped10longtdist_sg(from.da_in_d_dngrped10longtdist_sg());
  }
  if (from.da_in_d_dngrped10latdist_sg() != 0) {
    set_da_in_d_dngrped10latdist_sg(from.da_in_d_dngrped10latdist_sg());
  }
  if (from.da_in_v_dngrped10longtspd_sg() != 0) {
    set_da_in_v_dngrped10longtspd_sg(from.da_in_v_dngrped10longtspd_sg());
  }
  if (from.da_in_a_dngrped10longtacc_sg() != 0) {
    set_da_in_a_dngrped10longtacc_sg(from.da_in_a_dngrped10longtacc_sg());
  }
  if (from.da_in_v_dngrped10latspd_sg() != 0) {
    set_da_in_v_dngrped10latspd_sg(from.da_in_v_dngrped10latspd_sg());
  }
  if (from.da_in_a_dngrped10latacc_sg() != 0) {
    set_da_in_a_dngrped10latacc_sg(from.da_in_a_dngrped10latacc_sg());
  }
  if (from.da_in_indx_dngrped10id_u32() != 0) {
    set_da_in_indx_dngrped10id_u32(from.da_in_indx_dngrped10id_u32());
  }
  if (from.da_in_indx_dngrped10age_u16() != 0) {
    set_da_in_indx_dngrped10age_u16(from.da_in_indx_dngrped10age_u16());
  }
  if (from.da_in_stat_dngrped10sts_eptrk() != 0) {
    set_da_in_stat_dngrped10sts_eptrk(from.da_in_stat_dngrped10sts_eptrk());
  }
  if (from.da_in_stat_dngrped10class_epcls() != 0) {
    set_da_in_stat_dngrped10class_epcls(from.da_in_stat_dngrped10class_epcls());
  }
  if (from.da_in_stat_dngrped10src_epsnr() != 0) {
    set_da_in_stat_dngrped10src_epsnr(from.da_in_stat_dngrped10src_epsnr());
  }
}

void B_DngrPed10_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_DngrPed10_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_DngrPed10_st::CopyFrom(const B_DngrPed10_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_DngrPed10_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_DngrPed10_st::IsInitialized() const {
  return true;
}

void B_DngrPed10_st::Swap(B_DngrPed10_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_DngrPed10_st::InternalSwap(B_DngrPed10_st* other) {
  using std::swap;
  swap(da_in_d_dngrped10longtdist_sg_, other->da_in_d_dngrped10longtdist_sg_);
  swap(da_in_d_dngrped10latdist_sg_, other->da_in_d_dngrped10latdist_sg_);
  swap(da_in_v_dngrped10longtspd_sg_, other->da_in_v_dngrped10longtspd_sg_);
  swap(da_in_a_dngrped10longtacc_sg_, other->da_in_a_dngrped10longtacc_sg_);
  swap(da_in_v_dngrped10latspd_sg_, other->da_in_v_dngrped10latspd_sg_);
  swap(da_in_a_dngrped10latacc_sg_, other->da_in_a_dngrped10latacc_sg_);
  swap(da_in_indx_dngrped10id_u32_, other->da_in_indx_dngrped10id_u32_);
  swap(da_in_indx_dngrped10age_u16_, other->da_in_indx_dngrped10age_u16_);
  swap(da_in_stat_dngrped10sts_eptrk_, other->da_in_stat_dngrped10sts_eptrk_);
  swap(da_in_stat_dngrped10class_epcls_, other->da_in_stat_dngrped10class_epcls_);
  swap(da_in_stat_dngrped10src_epsnr_, other->da_in_stat_dngrped10src_epsnr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_DngrPed10_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_CenterLine_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_CenterLine_st::kDAINDCntrLnPosOffstA0SgFieldNumber;
const int B_CenterLine_st::kDAINAngRCntrLnHdAngA1SgFieldNumber;
const int B_CenterLine_st::kDAINCvCntrLnCurvA2SgFieldNumber;
const int B_CenterLine_st::kDAINCvrCntrLndCurvA3SgFieldNumber;
const int B_CenterLine_st::kDAINStatCntrLnMrkCnfdnELCFFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_CenterLine_st::B_CenterLine_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_CenterLine_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_CenterLine_st)
}
B_CenterLine_st::B_CenterLine_st(const B_CenterLine_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_cntrlnposoffsta0_sg_, &from.da_in_d_cntrlnposoffsta0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_cntrlnmrkcnfdn_elcf_) -
    reinterpret_cast<char*>(&da_in_d_cntrlnposoffsta0_sg_)) + sizeof(da_in_stat_cntrlnmrkcnfdn_elcf_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_CenterLine_st)
}

void B_CenterLine_st::SharedCtor() {
  ::memset(&da_in_d_cntrlnposoffsta0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_cntrlnmrkcnfdn_elcf_) -
      reinterpret_cast<char*>(&da_in_d_cntrlnposoffsta0_sg_)) + sizeof(da_in_stat_cntrlnmrkcnfdn_elcf_));
}

B_CenterLine_st::~B_CenterLine_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_CenterLine_st)
  SharedDtor();
}

void B_CenterLine_st::SharedDtor() {
}

void B_CenterLine_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_CenterLine_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_CenterLine_st& B_CenterLine_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_CenterLine_st.base);
  return *internal_default_instance();
}


void B_CenterLine_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_CenterLine_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_cntrlnposoffsta0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_cntrlnmrkcnfdn_elcf_) -
      reinterpret_cast<char*>(&da_in_d_cntrlnposoffsta0_sg_)) + sizeof(da_in_stat_cntrlnmrkcnfdn_elcf_));
  _internal_metadata_.Clear();
}

bool B_CenterLine_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_CenterLine_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_CntrLnPosOffstA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_cntrlnposoffsta0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_CntrLnHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_cntrlnhdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_CntrLnCurvA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_cntrlncurva2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_CntrLndCurvA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_cntrlndcurva3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_CntrLnMrkCnfdn_eLCF = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_cntrlnmrkcnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_CenterLine_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_CenterLine_st)
  return false;
#undef DO_
}

void B_CenterLine_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_CenterLine_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_CntrLnPosOffstA0_sg = 1;
  if (this->da_in_d_cntrlnposoffsta0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_cntrlnposoffsta0_sg(), output);
  }

  // float DA_IN_angR_CntrLnHdAngA1_sg = 2;
  if (this->da_in_angr_cntrlnhdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_cntrlnhdanga1_sg(), output);
  }

  // float DA_IN_cv_CntrLnCurvA2_sg = 3;
  if (this->da_in_cv_cntrlncurva2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_cntrlncurva2_sg(), output);
  }

  // float DA_IN_cvr_CntrLndCurvA3_sg = 4;
  if (this->da_in_cvr_cntrlndcurva3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_cntrlndcurva3_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_CntrLnMrkCnfdn_eLCF = 5;
  if (this->da_in_stat_cntrlnmrkcnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->da_in_stat_cntrlnmrkcnfdn_elcf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_CenterLine_st)
}

::google::protobuf::uint8* B_CenterLine_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_CenterLine_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_CntrLnPosOffstA0_sg = 1;
  if (this->da_in_d_cntrlnposoffsta0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_cntrlnposoffsta0_sg(), target);
  }

  // float DA_IN_angR_CntrLnHdAngA1_sg = 2;
  if (this->da_in_angr_cntrlnhdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_cntrlnhdanga1_sg(), target);
  }

  // float DA_IN_cv_CntrLnCurvA2_sg = 3;
  if (this->da_in_cv_cntrlncurva2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_cntrlncurva2_sg(), target);
  }

  // float DA_IN_cvr_CntrLndCurvA3_sg = 4;
  if (this->da_in_cvr_cntrlndcurva3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_cntrlndcurva3_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_CntrLnMrkCnfdn_eLCF = 5;
  if (this->da_in_stat_cntrlnmrkcnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->da_in_stat_cntrlnmrkcnfdn_elcf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_CenterLine_st)
  return target;
}

size_t B_CenterLine_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_CenterLine_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_CntrLnPosOffstA0_sg = 1;
  if (this->da_in_d_cntrlnposoffsta0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_CntrLnHdAngA1_sg = 2;
  if (this->da_in_angr_cntrlnhdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_CntrLnCurvA2_sg = 3;
  if (this->da_in_cv_cntrlncurva2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_CntrLndCurvA3_sg = 4;
  if (this->da_in_cvr_cntrlndcurva3_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_CntrLnMrkCnfdn_eLCF = 5;
  if (this->da_in_stat_cntrlnmrkcnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_cntrlnmrkcnfdn_elcf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_CenterLine_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_CenterLine_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_CenterLine_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_CenterLine_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_CenterLine_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_CenterLine_st)
    MergeFrom(*source);
  }
}

void B_CenterLine_st::MergeFrom(const B_CenterLine_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_CenterLine_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_cntrlnposoffsta0_sg() != 0) {
    set_da_in_d_cntrlnposoffsta0_sg(from.da_in_d_cntrlnposoffsta0_sg());
  }
  if (from.da_in_angr_cntrlnhdanga1_sg() != 0) {
    set_da_in_angr_cntrlnhdanga1_sg(from.da_in_angr_cntrlnhdanga1_sg());
  }
  if (from.da_in_cv_cntrlncurva2_sg() != 0) {
    set_da_in_cv_cntrlncurva2_sg(from.da_in_cv_cntrlncurva2_sg());
  }
  if (from.da_in_cvr_cntrlndcurva3_sg() != 0) {
    set_da_in_cvr_cntrlndcurva3_sg(from.da_in_cvr_cntrlndcurva3_sg());
  }
  if (from.da_in_stat_cntrlnmrkcnfdn_elcf() != 0) {
    set_da_in_stat_cntrlnmrkcnfdn_elcf(from.da_in_stat_cntrlnmrkcnfdn_elcf());
  }
}

void B_CenterLine_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_CenterLine_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_CenterLine_st::CopyFrom(const B_CenterLine_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_CenterLine_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_CenterLine_st::IsInitialized() const {
  return true;
}

void B_CenterLine_st::Swap(B_CenterLine_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_CenterLine_st::InternalSwap(B_CenterLine_st* other) {
  using std::swap;
  swap(da_in_d_cntrlnposoffsta0_sg_, other->da_in_d_cntrlnposoffsta0_sg_);
  swap(da_in_angr_cntrlnhdanga1_sg_, other->da_in_angr_cntrlnhdanga1_sg_);
  swap(da_in_cv_cntrlncurva2_sg_, other->da_in_cv_cntrlncurva2_sg_);
  swap(da_in_cvr_cntrlndcurva3_sg_, other->da_in_cvr_cntrlndcurva3_sg_);
  swap(da_in_stat_cntrlnmrkcnfdn_elcf_, other->da_in_stat_cntrlnmrkcnfdn_elcf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_CenterLine_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_LeftRoadEdge_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_LeftRoadEdge_st::kDAINDLftRoadEdgeA0SgFieldNumber;
const int B_LeftRoadEdge_st::kDAINAngRLftRoadEdgeA1SgFieldNumber;
const int B_LeftRoadEdge_st::kDAINCvLftRoadEdgeA2SgFieldNumber;
const int B_LeftRoadEdge_st::kDAINCvrLftRoadEdgeA3SgFieldNumber;
const int B_LeftRoadEdge_st::kDAINDLftRoadEdgeRangEndSgFieldNumber;
const int B_LeftRoadEdge_st::kDAINStatLftRoadEdgeCnfdnELCFFieldNumber;
const int B_LeftRoadEdge_st::kDAINStatLftLneMrkColorELCRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_LeftRoadEdge_st::B_LeftRoadEdge_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_LeftRoadEdge_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_LeftRoadEdge_st)
}
B_LeftRoadEdge_st::B_LeftRoadEdge_st(const B_LeftRoadEdge_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_lftroadedgea0_sg_, &from.da_in_d_lftroadedgea0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_lftlnemrkcolor_elcr_) -
    reinterpret_cast<char*>(&da_in_d_lftroadedgea0_sg_)) + sizeof(da_in_stat_lftlnemrkcolor_elcr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_LeftRoadEdge_st)
}

void B_LeftRoadEdge_st::SharedCtor() {
  ::memset(&da_in_d_lftroadedgea0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_lftlnemrkcolor_elcr_) -
      reinterpret_cast<char*>(&da_in_d_lftroadedgea0_sg_)) + sizeof(da_in_stat_lftlnemrkcolor_elcr_));
}

B_LeftRoadEdge_st::~B_LeftRoadEdge_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_LeftRoadEdge_st)
  SharedDtor();
}

void B_LeftRoadEdge_st::SharedDtor() {
}

void B_LeftRoadEdge_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_LeftRoadEdge_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_LeftRoadEdge_st& B_LeftRoadEdge_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_LeftRoadEdge_st.base);
  return *internal_default_instance();
}


void B_LeftRoadEdge_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_LeftRoadEdge_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_lftroadedgea0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_lftlnemrkcolor_elcr_) -
      reinterpret_cast<char*>(&da_in_d_lftroadedgea0_sg_)) + sizeof(da_in_stat_lftlnemrkcolor_elcr_));
  _internal_metadata_.Clear();
}

bool B_LeftRoadEdge_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_LeftRoadEdge_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_LftRoadEdgeA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_lftroadedgea0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_LftRoadEdgeA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_lftroadedgea1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_LftRoadEdgeA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_lftroadedgea2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_LftRoadEdgeA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_lftroadedgea3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_LftRoadEdgeRangEnd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_lftroadedgerangend_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_LftRoadEdgeCnfdn_eLCF = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_lftroadedgecnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor DA_IN_stat_LftLneMrkColor_eLCR = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_lftlnemrkcolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_LeftRoadEdge_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_LeftRoadEdge_st)
  return false;
#undef DO_
}

void B_LeftRoadEdge_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_LeftRoadEdge_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_LftRoadEdgeA0_sg = 1;
  if (this->da_in_d_lftroadedgea0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_lftroadedgea0_sg(), output);
  }

  // float DA_IN_angR_LftRoadEdgeA1_sg = 2;
  if (this->da_in_angr_lftroadedgea1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_lftroadedgea1_sg(), output);
  }

  // float DA_IN_cv_LftRoadEdgeA2_sg = 3;
  if (this->da_in_cv_lftroadedgea2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_lftroadedgea2_sg(), output);
  }

  // float DA_IN_cvr_LftRoadEdgeA3_sg = 4;
  if (this->da_in_cvr_lftroadedgea3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_lftroadedgea3_sg(), output);
  }

  // float DA_IN_d_LftRoadEdgeRangEnd_sg = 5;
  if (this->da_in_d_lftroadedgerangend_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_lftroadedgerangend_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_LftRoadEdgeCnfdn_eLCF = 6;
  if (this->da_in_stat_lftroadedgecnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_lftroadedgecnfdn_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_LftLneMrkColor_eLCR = 7;
  if (this->da_in_stat_lftlnemrkcolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_lftlnemrkcolor_elcr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_LeftRoadEdge_st)
}

::google::protobuf::uint8* B_LeftRoadEdge_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_LeftRoadEdge_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_LftRoadEdgeA0_sg = 1;
  if (this->da_in_d_lftroadedgea0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_lftroadedgea0_sg(), target);
  }

  // float DA_IN_angR_LftRoadEdgeA1_sg = 2;
  if (this->da_in_angr_lftroadedgea1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_lftroadedgea1_sg(), target);
  }

  // float DA_IN_cv_LftRoadEdgeA2_sg = 3;
  if (this->da_in_cv_lftroadedgea2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_lftroadedgea2_sg(), target);
  }

  // float DA_IN_cvr_LftRoadEdgeA3_sg = 4;
  if (this->da_in_cvr_lftroadedgea3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_lftroadedgea3_sg(), target);
  }

  // float DA_IN_d_LftRoadEdgeRangEnd_sg = 5;
  if (this->da_in_d_lftroadedgerangend_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_lftroadedgerangend_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_LftRoadEdgeCnfdn_eLCF = 6;
  if (this->da_in_stat_lftroadedgecnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_lftroadedgecnfdn_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_LftLneMrkColor_eLCR = 7;
  if (this->da_in_stat_lftlnemrkcolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_lftlnemrkcolor_elcr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_LeftRoadEdge_st)
  return target;
}

size_t B_LeftRoadEdge_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_LeftRoadEdge_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_LftRoadEdgeA0_sg = 1;
  if (this->da_in_d_lftroadedgea0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_LftRoadEdgeA1_sg = 2;
  if (this->da_in_angr_lftroadedgea1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_LftRoadEdgeA2_sg = 3;
  if (this->da_in_cv_lftroadedgea2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_LftRoadEdgeA3_sg = 4;
  if (this->da_in_cvr_lftroadedgea3_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_LftRoadEdgeRangEnd_sg = 5;
  if (this->da_in_d_lftroadedgerangend_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_LftRoadEdgeCnfdn_eLCF = 6;
  if (this->da_in_stat_lftroadedgecnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_lftroadedgecnfdn_elcf());
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_LftLneMrkColor_eLCR = 7;
  if (this->da_in_stat_lftlnemrkcolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_lftlnemrkcolor_elcr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_LeftRoadEdge_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_LeftRoadEdge_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_LeftRoadEdge_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_LeftRoadEdge_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_LeftRoadEdge_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_LeftRoadEdge_st)
    MergeFrom(*source);
  }
}

void B_LeftRoadEdge_st::MergeFrom(const B_LeftRoadEdge_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_LeftRoadEdge_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_lftroadedgea0_sg() != 0) {
    set_da_in_d_lftroadedgea0_sg(from.da_in_d_lftroadedgea0_sg());
  }
  if (from.da_in_angr_lftroadedgea1_sg() != 0) {
    set_da_in_angr_lftroadedgea1_sg(from.da_in_angr_lftroadedgea1_sg());
  }
  if (from.da_in_cv_lftroadedgea2_sg() != 0) {
    set_da_in_cv_lftroadedgea2_sg(from.da_in_cv_lftroadedgea2_sg());
  }
  if (from.da_in_cvr_lftroadedgea3_sg() != 0) {
    set_da_in_cvr_lftroadedgea3_sg(from.da_in_cvr_lftroadedgea3_sg());
  }
  if (from.da_in_d_lftroadedgerangend_sg() != 0) {
    set_da_in_d_lftroadedgerangend_sg(from.da_in_d_lftroadedgerangend_sg());
  }
  if (from.da_in_stat_lftroadedgecnfdn_elcf() != 0) {
    set_da_in_stat_lftroadedgecnfdn_elcf(from.da_in_stat_lftroadedgecnfdn_elcf());
  }
  if (from.da_in_stat_lftlnemrkcolor_elcr() != 0) {
    set_da_in_stat_lftlnemrkcolor_elcr(from.da_in_stat_lftlnemrkcolor_elcr());
  }
}

void B_LeftRoadEdge_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_LeftRoadEdge_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_LeftRoadEdge_st::CopyFrom(const B_LeftRoadEdge_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_LeftRoadEdge_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_LeftRoadEdge_st::IsInitialized() const {
  return true;
}

void B_LeftRoadEdge_st::Swap(B_LeftRoadEdge_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_LeftRoadEdge_st::InternalSwap(B_LeftRoadEdge_st* other) {
  using std::swap;
  swap(da_in_d_lftroadedgea0_sg_, other->da_in_d_lftroadedgea0_sg_);
  swap(da_in_angr_lftroadedgea1_sg_, other->da_in_angr_lftroadedgea1_sg_);
  swap(da_in_cv_lftroadedgea2_sg_, other->da_in_cv_lftroadedgea2_sg_);
  swap(da_in_cvr_lftroadedgea3_sg_, other->da_in_cvr_lftroadedgea3_sg_);
  swap(da_in_d_lftroadedgerangend_sg_, other->da_in_d_lftroadedgerangend_sg_);
  swap(da_in_stat_lftroadedgecnfdn_elcf_, other->da_in_stat_lftroadedgecnfdn_elcf_);
  swap(da_in_stat_lftlnemrkcolor_elcr_, other->da_in_stat_lftlnemrkcolor_elcr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_LeftRoadEdge_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_RightRoadEdge_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_RightRoadEdge_st::kDAINDRghtRoadEdgeA0SgFieldNumber;
const int B_RightRoadEdge_st::kDAINAngRRghtRoadEdgeA1SgFieldNumber;
const int B_RightRoadEdge_st::kDAINCvRghtRoadEdgeA2SgFieldNumber;
const int B_RightRoadEdge_st::kDAINCvrRghtRoadEdgeA3SgFieldNumber;
const int B_RightRoadEdge_st::kDAINDRghtRoadEdgeRangEndSgFieldNumber;
const int B_RightRoadEdge_st::kDAINStatRghtRoadEdgeCnfdnELCFFieldNumber;
const int B_RightRoadEdge_st::kDAINStatRghtLneMrkColorELCRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_RightRoadEdge_st::B_RightRoadEdge_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_RightRoadEdge_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_RightRoadEdge_st)
}
B_RightRoadEdge_st::B_RightRoadEdge_st(const B_RightRoadEdge_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_rghtroadedgea0_sg_, &from.da_in_d_rghtroadedgea0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_rghtlnemrkcolor_elcr_) -
    reinterpret_cast<char*>(&da_in_d_rghtroadedgea0_sg_)) + sizeof(da_in_stat_rghtlnemrkcolor_elcr_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_RightRoadEdge_st)
}

void B_RightRoadEdge_st::SharedCtor() {
  ::memset(&da_in_d_rghtroadedgea0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_rghtlnemrkcolor_elcr_) -
      reinterpret_cast<char*>(&da_in_d_rghtroadedgea0_sg_)) + sizeof(da_in_stat_rghtlnemrkcolor_elcr_));
}

B_RightRoadEdge_st::~B_RightRoadEdge_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_RightRoadEdge_st)
  SharedDtor();
}

void B_RightRoadEdge_st::SharedDtor() {
}

void B_RightRoadEdge_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_RightRoadEdge_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_RightRoadEdge_st& B_RightRoadEdge_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_RightRoadEdge_st.base);
  return *internal_default_instance();
}


void B_RightRoadEdge_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_RightRoadEdge_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_rghtroadedgea0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_rghtlnemrkcolor_elcr_) -
      reinterpret_cast<char*>(&da_in_d_rghtroadedgea0_sg_)) + sizeof(da_in_stat_rghtlnemrkcolor_elcr_));
  _internal_metadata_.Clear();
}

bool B_RightRoadEdge_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_RightRoadEdge_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_RghtRoadEdgeA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_rghtroadedgea0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_RghtRoadEdgeA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_rghtroadedgea1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_RghtRoadEdgeA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_rghtroadedgea2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_RghtRoadEdgeA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_rghtroadedgea3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_RghtRoadEdgeRangEnd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_rghtroadedgerangend_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_RghtRoadEdgeCnfdn_eLCF = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_rghtroadedgecnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor DA_IN_stat_RghtLneMrkColor_eLCR = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_rghtlnemrkcolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_RightRoadEdge_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_RightRoadEdge_st)
  return false;
#undef DO_
}

void B_RightRoadEdge_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_RightRoadEdge_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_RghtRoadEdgeA0_sg = 1;
  if (this->da_in_d_rghtroadedgea0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_rghtroadedgea0_sg(), output);
  }

  // float DA_IN_angR_RghtRoadEdgeA1_sg = 2;
  if (this->da_in_angr_rghtroadedgea1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_rghtroadedgea1_sg(), output);
  }

  // float DA_IN_cv_RghtRoadEdgeA2_sg = 3;
  if (this->da_in_cv_rghtroadedgea2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_rghtroadedgea2_sg(), output);
  }

  // float DA_IN_cvr_RghtRoadEdgeA3_sg = 4;
  if (this->da_in_cvr_rghtroadedgea3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_rghtroadedgea3_sg(), output);
  }

  // float DA_IN_d_RghtRoadEdgeRangEnd_sg = 5;
  if (this->da_in_d_rghtroadedgerangend_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_rghtroadedgerangend_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_RghtRoadEdgeCnfdn_eLCF = 6;
  if (this->da_in_stat_rghtroadedgecnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->da_in_stat_rghtroadedgecnfdn_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_RghtLneMrkColor_eLCR = 7;
  if (this->da_in_stat_rghtlnemrkcolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_rghtlnemrkcolor_elcr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_RightRoadEdge_st)
}

::google::protobuf::uint8* B_RightRoadEdge_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_RightRoadEdge_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_RghtRoadEdgeA0_sg = 1;
  if (this->da_in_d_rghtroadedgea0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_rghtroadedgea0_sg(), target);
  }

  // float DA_IN_angR_RghtRoadEdgeA1_sg = 2;
  if (this->da_in_angr_rghtroadedgea1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_rghtroadedgea1_sg(), target);
  }

  // float DA_IN_cv_RghtRoadEdgeA2_sg = 3;
  if (this->da_in_cv_rghtroadedgea2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_rghtroadedgea2_sg(), target);
  }

  // float DA_IN_cvr_RghtRoadEdgeA3_sg = 4;
  if (this->da_in_cvr_rghtroadedgea3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_rghtroadedgea3_sg(), target);
  }

  // float DA_IN_d_RghtRoadEdgeRangEnd_sg = 5;
  if (this->da_in_d_rghtroadedgerangend_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_rghtroadedgerangend_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_RghtRoadEdgeCnfdn_eLCF = 6;
  if (this->da_in_stat_rghtroadedgecnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->da_in_stat_rghtroadedgecnfdn_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_RghtLneMrkColor_eLCR = 7;
  if (this->da_in_stat_rghtlnemrkcolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_rghtlnemrkcolor_elcr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_RightRoadEdge_st)
  return target;
}

size_t B_RightRoadEdge_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_RightRoadEdge_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_RghtRoadEdgeA0_sg = 1;
  if (this->da_in_d_rghtroadedgea0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_RghtRoadEdgeA1_sg = 2;
  if (this->da_in_angr_rghtroadedgea1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_RghtRoadEdgeA2_sg = 3;
  if (this->da_in_cv_rghtroadedgea2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_RghtRoadEdgeA3_sg = 4;
  if (this->da_in_cvr_rghtroadedgea3_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_RghtRoadEdgeRangEnd_sg = 5;
  if (this->da_in_d_rghtroadedgerangend_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_RghtRoadEdgeCnfdn_eLCF = 6;
  if (this->da_in_stat_rghtroadedgecnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_rghtroadedgecnfdn_elcf());
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_RghtLneMrkColor_eLCR = 7;
  if (this->da_in_stat_rghtlnemrkcolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_rghtlnemrkcolor_elcr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_RightRoadEdge_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_RightRoadEdge_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_RightRoadEdge_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_RightRoadEdge_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_RightRoadEdge_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_RightRoadEdge_st)
    MergeFrom(*source);
  }
}

void B_RightRoadEdge_st::MergeFrom(const B_RightRoadEdge_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_RightRoadEdge_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_rghtroadedgea0_sg() != 0) {
    set_da_in_d_rghtroadedgea0_sg(from.da_in_d_rghtroadedgea0_sg());
  }
  if (from.da_in_angr_rghtroadedgea1_sg() != 0) {
    set_da_in_angr_rghtroadedgea1_sg(from.da_in_angr_rghtroadedgea1_sg());
  }
  if (from.da_in_cv_rghtroadedgea2_sg() != 0) {
    set_da_in_cv_rghtroadedgea2_sg(from.da_in_cv_rghtroadedgea2_sg());
  }
  if (from.da_in_cvr_rghtroadedgea3_sg() != 0) {
    set_da_in_cvr_rghtroadedgea3_sg(from.da_in_cvr_rghtroadedgea3_sg());
  }
  if (from.da_in_d_rghtroadedgerangend_sg() != 0) {
    set_da_in_d_rghtroadedgerangend_sg(from.da_in_d_rghtroadedgerangend_sg());
  }
  if (from.da_in_stat_rghtroadedgecnfdn_elcf() != 0) {
    set_da_in_stat_rghtroadedgecnfdn_elcf(from.da_in_stat_rghtroadedgecnfdn_elcf());
  }
  if (from.da_in_stat_rghtlnemrkcolor_elcr() != 0) {
    set_da_in_stat_rghtlnemrkcolor_elcr(from.da_in_stat_rghtlnemrkcolor_elcr());
  }
}

void B_RightRoadEdge_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_RightRoadEdge_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_RightRoadEdge_st::CopyFrom(const B_RightRoadEdge_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_RightRoadEdge_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_RightRoadEdge_st::IsInitialized() const {
  return true;
}

void B_RightRoadEdge_st::Swap(B_RightRoadEdge_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_RightRoadEdge_st::InternalSwap(B_RightRoadEdge_st* other) {
  using std::swap;
  swap(da_in_d_rghtroadedgea0_sg_, other->da_in_d_rghtroadedgea0_sg_);
  swap(da_in_angr_rghtroadedgea1_sg_, other->da_in_angr_rghtroadedgea1_sg_);
  swap(da_in_cv_rghtroadedgea2_sg_, other->da_in_cv_rghtroadedgea2_sg_);
  swap(da_in_cvr_rghtroadedgea3_sg_, other->da_in_cvr_rghtroadedgea3_sg_);
  swap(da_in_d_rghtroadedgerangend_sg_, other->da_in_d_rghtroadedgerangend_sg_);
  swap(da_in_stat_rghtroadedgecnfdn_elcf_, other->da_in_stat_rghtroadedgecnfdn_elcf_);
  swap(da_in_stat_rghtlnemrkcolor_elcr_, other->da_in_stat_rghtlnemrkcolor_elcr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_RightRoadEdge_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_LeftBarrier_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_LeftBarrier_st::kDAINDLftBarrierA0SgFieldNumber;
const int B_LeftBarrier_st::kDAINAngRLftBarrierA1SgFieldNumber;
const int B_LeftBarrier_st::kDAINCvLftBarrierA2SgFieldNumber;
const int B_LeftBarrier_st::kDAINCvrLftBarrierA3SgFieldNumber;
const int B_LeftBarrier_st::kDAINDLftBarrierRangEndSgFieldNumber;
const int B_LeftBarrier_st::kDAINIndxLftBarrierStatusU8FieldNumber;
const int B_LeftBarrier_st::kDAINStatLftBarrierCnfdnELCFFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_LeftBarrier_st::B_LeftBarrier_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_LeftBarrier_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_LeftBarrier_st)
}
B_LeftBarrier_st::B_LeftBarrier_st(const B_LeftBarrier_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_lftbarriera0_sg_, &from.da_in_d_lftbarriera0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_lftbarriercnfdn_elcf_) -
    reinterpret_cast<char*>(&da_in_d_lftbarriera0_sg_)) + sizeof(da_in_stat_lftbarriercnfdn_elcf_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_LeftBarrier_st)
}

void B_LeftBarrier_st::SharedCtor() {
  ::memset(&da_in_d_lftbarriera0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_lftbarriercnfdn_elcf_) -
      reinterpret_cast<char*>(&da_in_d_lftbarriera0_sg_)) + sizeof(da_in_stat_lftbarriercnfdn_elcf_));
}

B_LeftBarrier_st::~B_LeftBarrier_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_LeftBarrier_st)
  SharedDtor();
}

void B_LeftBarrier_st::SharedDtor() {
}

void B_LeftBarrier_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_LeftBarrier_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_LeftBarrier_st& B_LeftBarrier_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_LeftBarrier_st.base);
  return *internal_default_instance();
}


void B_LeftBarrier_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_LeftBarrier_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_lftbarriera0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_lftbarriercnfdn_elcf_) -
      reinterpret_cast<char*>(&da_in_d_lftbarriera0_sg_)) + sizeof(da_in_stat_lftbarriercnfdn_elcf_));
  _internal_metadata_.Clear();
}

bool B_LeftBarrier_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_LeftBarrier_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_LftBarrierA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_lftbarriera0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_LftBarrierA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_lftbarriera1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_LftBarrierA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_lftbarriera2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_LftBarrierA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_lftbarriera3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_LftBarrierRangEnd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_lftbarrierrangend_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_LftBarrierStatus_u8 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_lftbarrierstatus_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_LftBarrierCnfdn_eLCF = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_lftbarriercnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_LeftBarrier_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_LeftBarrier_st)
  return false;
#undef DO_
}

void B_LeftBarrier_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_LeftBarrier_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_LftBarrierA0_sg = 1;
  if (this->da_in_d_lftbarriera0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_lftbarriera0_sg(), output);
  }

  // float DA_IN_angR_LftBarrierA1_sg = 2;
  if (this->da_in_angr_lftbarriera1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_lftbarriera1_sg(), output);
  }

  // float DA_IN_cv_LftBarrierA2_sg = 3;
  if (this->da_in_cv_lftbarriera2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_lftbarriera2_sg(), output);
  }

  // float DA_IN_cvr_LftBarrierA3_sg = 4;
  if (this->da_in_cvr_lftbarriera3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_lftbarriera3_sg(), output);
  }

  // float DA_IN_d_LftBarrierRangEnd_sg = 5;
  if (this->da_in_d_lftbarrierrangend_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_lftbarrierrangend_sg(), output);
  }

  // sint32 DA_IN_indx_LftBarrierStatus_u8 = 6;
  if (this->da_in_indx_lftbarrierstatus_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->da_in_indx_lftbarrierstatus_u8(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_LftBarrierCnfdn_eLCF = 7;
  if (this->da_in_stat_lftbarriercnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_lftbarriercnfdn_elcf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_LeftBarrier_st)
}

::google::protobuf::uint8* B_LeftBarrier_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_LeftBarrier_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_LftBarrierA0_sg = 1;
  if (this->da_in_d_lftbarriera0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_lftbarriera0_sg(), target);
  }

  // float DA_IN_angR_LftBarrierA1_sg = 2;
  if (this->da_in_angr_lftbarriera1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_lftbarriera1_sg(), target);
  }

  // float DA_IN_cv_LftBarrierA2_sg = 3;
  if (this->da_in_cv_lftbarriera2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_lftbarriera2_sg(), target);
  }

  // float DA_IN_cvr_LftBarrierA3_sg = 4;
  if (this->da_in_cvr_lftbarriera3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_lftbarriera3_sg(), target);
  }

  // float DA_IN_d_LftBarrierRangEnd_sg = 5;
  if (this->da_in_d_lftbarrierrangend_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_lftbarrierrangend_sg(), target);
  }

  // sint32 DA_IN_indx_LftBarrierStatus_u8 = 6;
  if (this->da_in_indx_lftbarrierstatus_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->da_in_indx_lftbarrierstatus_u8(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_LftBarrierCnfdn_eLCF = 7;
  if (this->da_in_stat_lftbarriercnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_lftbarriercnfdn_elcf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_LeftBarrier_st)
  return target;
}

size_t B_LeftBarrier_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_LeftBarrier_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_LftBarrierA0_sg = 1;
  if (this->da_in_d_lftbarriera0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_LftBarrierA1_sg = 2;
  if (this->da_in_angr_lftbarriera1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_LftBarrierA2_sg = 3;
  if (this->da_in_cv_lftbarriera2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_LftBarrierA3_sg = 4;
  if (this->da_in_cvr_lftbarriera3_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_LftBarrierRangEnd_sg = 5;
  if (this->da_in_d_lftbarrierrangend_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_LftBarrierStatus_u8 = 6;
  if (this->da_in_indx_lftbarrierstatus_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_lftbarrierstatus_u8());
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_LftBarrierCnfdn_eLCF = 7;
  if (this->da_in_stat_lftbarriercnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_lftbarriercnfdn_elcf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_LeftBarrier_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_LeftBarrier_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_LeftBarrier_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_LeftBarrier_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_LeftBarrier_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_LeftBarrier_st)
    MergeFrom(*source);
  }
}

void B_LeftBarrier_st::MergeFrom(const B_LeftBarrier_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_LeftBarrier_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_lftbarriera0_sg() != 0) {
    set_da_in_d_lftbarriera0_sg(from.da_in_d_lftbarriera0_sg());
  }
  if (from.da_in_angr_lftbarriera1_sg() != 0) {
    set_da_in_angr_lftbarriera1_sg(from.da_in_angr_lftbarriera1_sg());
  }
  if (from.da_in_cv_lftbarriera2_sg() != 0) {
    set_da_in_cv_lftbarriera2_sg(from.da_in_cv_lftbarriera2_sg());
  }
  if (from.da_in_cvr_lftbarriera3_sg() != 0) {
    set_da_in_cvr_lftbarriera3_sg(from.da_in_cvr_lftbarriera3_sg());
  }
  if (from.da_in_d_lftbarrierrangend_sg() != 0) {
    set_da_in_d_lftbarrierrangend_sg(from.da_in_d_lftbarrierrangend_sg());
  }
  if (from.da_in_indx_lftbarrierstatus_u8() != 0) {
    set_da_in_indx_lftbarrierstatus_u8(from.da_in_indx_lftbarrierstatus_u8());
  }
  if (from.da_in_stat_lftbarriercnfdn_elcf() != 0) {
    set_da_in_stat_lftbarriercnfdn_elcf(from.da_in_stat_lftbarriercnfdn_elcf());
  }
}

void B_LeftBarrier_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_LeftBarrier_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_LeftBarrier_st::CopyFrom(const B_LeftBarrier_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_LeftBarrier_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_LeftBarrier_st::IsInitialized() const {
  return true;
}

void B_LeftBarrier_st::Swap(B_LeftBarrier_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_LeftBarrier_st::InternalSwap(B_LeftBarrier_st* other) {
  using std::swap;
  swap(da_in_d_lftbarriera0_sg_, other->da_in_d_lftbarriera0_sg_);
  swap(da_in_angr_lftbarriera1_sg_, other->da_in_angr_lftbarriera1_sg_);
  swap(da_in_cv_lftbarriera2_sg_, other->da_in_cv_lftbarriera2_sg_);
  swap(da_in_cvr_lftbarriera3_sg_, other->da_in_cvr_lftbarriera3_sg_);
  swap(da_in_d_lftbarrierrangend_sg_, other->da_in_d_lftbarrierrangend_sg_);
  swap(da_in_indx_lftbarrierstatus_u8_, other->da_in_indx_lftbarrierstatus_u8_);
  swap(da_in_stat_lftbarriercnfdn_elcf_, other->da_in_stat_lftbarriercnfdn_elcf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_LeftBarrier_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_RightBarrier_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_RightBarrier_st::kDAINDRghtBarrierA0SgFieldNumber;
const int B_RightBarrier_st::kDAINAngRRghtBarrierA1SgFieldNumber;
const int B_RightBarrier_st::kDAINCvRghtBarrierA2SgFieldNumber;
const int B_RightBarrier_st::kDAINCvrRghtBarrierA3SgFieldNumber;
const int B_RightBarrier_st::kDAINDRghtBarrierRangEndSgFieldNumber;
const int B_RightBarrier_st::kDAINIndxRghtBarrierStatusU8FieldNumber;
const int B_RightBarrier_st::kDAINStatRghtBarrierCnfdnELCFFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_RightBarrier_st::B_RightBarrier_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_RightBarrier_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_RightBarrier_st)
}
B_RightBarrier_st::B_RightBarrier_st(const B_RightBarrier_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_rghtbarriera0_sg_, &from.da_in_d_rghtbarriera0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_rghtbarriercnfdn_elcf_) -
    reinterpret_cast<char*>(&da_in_d_rghtbarriera0_sg_)) + sizeof(da_in_stat_rghtbarriercnfdn_elcf_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_RightBarrier_st)
}

void B_RightBarrier_st::SharedCtor() {
  ::memset(&da_in_d_rghtbarriera0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_rghtbarriercnfdn_elcf_) -
      reinterpret_cast<char*>(&da_in_d_rghtbarriera0_sg_)) + sizeof(da_in_stat_rghtbarriercnfdn_elcf_));
}

B_RightBarrier_st::~B_RightBarrier_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_RightBarrier_st)
  SharedDtor();
}

void B_RightBarrier_st::SharedDtor() {
}

void B_RightBarrier_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_RightBarrier_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_RightBarrier_st& B_RightBarrier_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_RightBarrier_st.base);
  return *internal_default_instance();
}


void B_RightBarrier_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_RightBarrier_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_rghtbarriera0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_rghtbarriercnfdn_elcf_) -
      reinterpret_cast<char*>(&da_in_d_rghtbarriera0_sg_)) + sizeof(da_in_stat_rghtbarriercnfdn_elcf_));
  _internal_metadata_.Clear();
}

bool B_RightBarrier_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_RightBarrier_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_RghtBarrierA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_rghtbarriera0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_RghtBarrierA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_rghtbarriera1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_RghtBarrierA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_rghtbarriera2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_RghtBarrierA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_rghtbarriera3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_RghtBarrierRangEnd_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_rghtbarrierrangend_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_RghtBarrierStatus_u8 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_rghtbarrierstatus_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_RghtBarrierCnfdn_eLCF = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_rghtbarriercnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_RightBarrier_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_RightBarrier_st)
  return false;
#undef DO_
}

void B_RightBarrier_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_RightBarrier_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_RghtBarrierA0_sg = 1;
  if (this->da_in_d_rghtbarriera0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_rghtbarriera0_sg(), output);
  }

  // float DA_IN_angR_RghtBarrierA1_sg = 2;
  if (this->da_in_angr_rghtbarriera1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_rghtbarriera1_sg(), output);
  }

  // float DA_IN_cv_RghtBarrierA2_sg = 3;
  if (this->da_in_cv_rghtbarriera2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_rghtbarriera2_sg(), output);
  }

  // float DA_IN_cvr_RghtBarrierA3_sg = 4;
  if (this->da_in_cvr_rghtbarriera3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_rghtbarriera3_sg(), output);
  }

  // float DA_IN_d_RghtBarrierRangEnd_sg = 5;
  if (this->da_in_d_rghtbarrierrangend_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->da_in_d_rghtbarrierrangend_sg(), output);
  }

  // sint32 DA_IN_indx_RghtBarrierStatus_u8 = 6;
  if (this->da_in_indx_rghtbarrierstatus_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->da_in_indx_rghtbarrierstatus_u8(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_RghtBarrierCnfdn_eLCF = 7;
  if (this->da_in_stat_rghtbarriercnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_rghtbarriercnfdn_elcf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_RightBarrier_st)
}

::google::protobuf::uint8* B_RightBarrier_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_RightBarrier_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_RghtBarrierA0_sg = 1;
  if (this->da_in_d_rghtbarriera0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_rghtbarriera0_sg(), target);
  }

  // float DA_IN_angR_RghtBarrierA1_sg = 2;
  if (this->da_in_angr_rghtbarriera1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_rghtbarriera1_sg(), target);
  }

  // float DA_IN_cv_RghtBarrierA2_sg = 3;
  if (this->da_in_cv_rghtbarriera2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_rghtbarriera2_sg(), target);
  }

  // float DA_IN_cvr_RghtBarrierA3_sg = 4;
  if (this->da_in_cvr_rghtbarriera3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_rghtbarriera3_sg(), target);
  }

  // float DA_IN_d_RghtBarrierRangEnd_sg = 5;
  if (this->da_in_d_rghtbarrierrangend_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->da_in_d_rghtbarrierrangend_sg(), target);
  }

  // sint32 DA_IN_indx_RghtBarrierStatus_u8 = 6;
  if (this->da_in_indx_rghtbarrierstatus_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->da_in_indx_rghtbarrierstatus_u8(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_RghtBarrierCnfdn_eLCF = 7;
  if (this->da_in_stat_rghtbarriercnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_rghtbarriercnfdn_elcf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_RightBarrier_st)
  return target;
}

size_t B_RightBarrier_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_RightBarrier_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_RghtBarrierA0_sg = 1;
  if (this->da_in_d_rghtbarriera0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_RghtBarrierA1_sg = 2;
  if (this->da_in_angr_rghtbarriera1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_RghtBarrierA2_sg = 3;
  if (this->da_in_cv_rghtbarriera2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_RghtBarrierA3_sg = 4;
  if (this->da_in_cvr_rghtbarriera3_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_d_RghtBarrierRangEnd_sg = 5;
  if (this->da_in_d_rghtbarrierrangend_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 DA_IN_indx_RghtBarrierStatus_u8 = 6;
  if (this->da_in_indx_rghtbarrierstatus_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_rghtbarrierstatus_u8());
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_RghtBarrierCnfdn_eLCF = 7;
  if (this->da_in_stat_rghtbarriercnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_rghtbarriercnfdn_elcf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_RightBarrier_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_RightBarrier_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_RightBarrier_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_RightBarrier_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_RightBarrier_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_RightBarrier_st)
    MergeFrom(*source);
  }
}

void B_RightBarrier_st::MergeFrom(const B_RightBarrier_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_RightBarrier_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_rghtbarriera0_sg() != 0) {
    set_da_in_d_rghtbarriera0_sg(from.da_in_d_rghtbarriera0_sg());
  }
  if (from.da_in_angr_rghtbarriera1_sg() != 0) {
    set_da_in_angr_rghtbarriera1_sg(from.da_in_angr_rghtbarriera1_sg());
  }
  if (from.da_in_cv_rghtbarriera2_sg() != 0) {
    set_da_in_cv_rghtbarriera2_sg(from.da_in_cv_rghtbarriera2_sg());
  }
  if (from.da_in_cvr_rghtbarriera3_sg() != 0) {
    set_da_in_cvr_rghtbarriera3_sg(from.da_in_cvr_rghtbarriera3_sg());
  }
  if (from.da_in_d_rghtbarrierrangend_sg() != 0) {
    set_da_in_d_rghtbarrierrangend_sg(from.da_in_d_rghtbarrierrangend_sg());
  }
  if (from.da_in_indx_rghtbarrierstatus_u8() != 0) {
    set_da_in_indx_rghtbarrierstatus_u8(from.da_in_indx_rghtbarrierstatus_u8());
  }
  if (from.da_in_stat_rghtbarriercnfdn_elcf() != 0) {
    set_da_in_stat_rghtbarriercnfdn_elcf(from.da_in_stat_rghtbarriercnfdn_elcf());
  }
}

void B_RightBarrier_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_RightBarrier_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_RightBarrier_st::CopyFrom(const B_RightBarrier_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_RightBarrier_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_RightBarrier_st::IsInitialized() const {
  return true;
}

void B_RightBarrier_st::Swap(B_RightBarrier_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_RightBarrier_st::InternalSwap(B_RightBarrier_st* other) {
  using std::swap;
  swap(da_in_d_rghtbarriera0_sg_, other->da_in_d_rghtbarriera0_sg_);
  swap(da_in_angr_rghtbarriera1_sg_, other->da_in_angr_rghtbarriera1_sg_);
  swap(da_in_cv_rghtbarriera2_sg_, other->da_in_cv_rghtbarriera2_sg_);
  swap(da_in_cvr_rghtbarriera3_sg_, other->da_in_cvr_rghtbarriera3_sg_);
  swap(da_in_d_rghtbarrierrangend_sg_, other->da_in_d_rghtbarrierrangend_sg_);
  swap(da_in_indx_rghtbarrierstatus_u8_, other->da_in_indx_rghtbarrierstatus_u8_);
  swap(da_in_stat_rghtbarriercnfdn_elcf_, other->da_in_stat_rghtbarriercnfdn_elcf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_RightBarrier_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_SppPolyCoeff_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_SppPolyCoeff_st::kDAINDSppPolyCoefA0SgFieldNumber;
const int B_SppPolyCoeff_st::kDAINAngRSppPolyCoefA1SgFieldNumber;
const int B_SppPolyCoeff_st::kDAINCvSppPolyCoefA2SgFieldNumber;
const int B_SppPolyCoeff_st::kDAINCvrSppPolyCoefA3SgFieldNumber;
const int B_SppPolyCoeff_st::kDAINStatSppPolyCoefCnfdnELCFFieldNumber;
const int B_SppPolyCoeff_st::kDAINIndxSppPolyCoefTypeU8FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_SppPolyCoeff_st::B_SppPolyCoeff_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_SppPolyCoeff_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_SppPolyCoeff_st)
}
B_SppPolyCoeff_st::B_SppPolyCoeff_st(const B_SppPolyCoeff_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_spppolycoefa0_sg_, &from.da_in_d_spppolycoefa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_indx_spppolycoeftype_u8_) -
    reinterpret_cast<char*>(&da_in_d_spppolycoefa0_sg_)) + sizeof(da_in_indx_spppolycoeftype_u8_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_SppPolyCoeff_st)
}

void B_SppPolyCoeff_st::SharedCtor() {
  ::memset(&da_in_d_spppolycoefa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_indx_spppolycoeftype_u8_) -
      reinterpret_cast<char*>(&da_in_d_spppolycoefa0_sg_)) + sizeof(da_in_indx_spppolycoeftype_u8_));
}

B_SppPolyCoeff_st::~B_SppPolyCoeff_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_SppPolyCoeff_st)
  SharedDtor();
}

void B_SppPolyCoeff_st::SharedDtor() {
}

void B_SppPolyCoeff_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_SppPolyCoeff_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_SppPolyCoeff_st& B_SppPolyCoeff_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_SppPolyCoeff_st.base);
  return *internal_default_instance();
}


void B_SppPolyCoeff_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_SppPolyCoeff_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_spppolycoefa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_indx_spppolycoeftype_u8_) -
      reinterpret_cast<char*>(&da_in_d_spppolycoefa0_sg_)) + sizeof(da_in_indx_spppolycoeftype_u8_));
  _internal_metadata_.Clear();
}

bool B_SppPolyCoeff_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_SppPolyCoeff_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_SppPolyCoefA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_spppolycoefa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_SppPolyCoefA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_spppolycoefa1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_SppPolyCoefA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_spppolycoefa2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_SppPolyCoefA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_spppolycoefa3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_SppPolyCoefCnfdn_eLCF = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_spppolycoefcnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DA_IN_indx_SppPolyCoefType_u8 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &da_in_indx_spppolycoeftype_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_SppPolyCoeff_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_SppPolyCoeff_st)
  return false;
#undef DO_
}

void B_SppPolyCoeff_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_SppPolyCoeff_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_SppPolyCoefA0_sg = 1;
  if (this->da_in_d_spppolycoefa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_spppolycoefa0_sg(), output);
  }

  // float DA_IN_angR_SppPolyCoefA1_sg = 2;
  if (this->da_in_angr_spppolycoefa1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_spppolycoefa1_sg(), output);
  }

  // float DA_IN_cv_SppPolyCoefA2_sg = 3;
  if (this->da_in_cv_spppolycoefa2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_spppolycoefa2_sg(), output);
  }

  // float DA_IN_cvr_SppPolyCoefA3_sg = 4;
  if (this->da_in_cvr_spppolycoefa3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_spppolycoefa3_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_SppPolyCoefCnfdn_eLCF = 5;
  if (this->da_in_stat_spppolycoefcnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->da_in_stat_spppolycoefcnfdn_elcf(), output);
  }

  // sint32 DA_IN_indx_SppPolyCoefType_u8 = 6;
  if (this->da_in_indx_spppolycoeftype_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->da_in_indx_spppolycoeftype_u8(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_SppPolyCoeff_st)
}

::google::protobuf::uint8* B_SppPolyCoeff_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_SppPolyCoeff_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_SppPolyCoefA0_sg = 1;
  if (this->da_in_d_spppolycoefa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_spppolycoefa0_sg(), target);
  }

  // float DA_IN_angR_SppPolyCoefA1_sg = 2;
  if (this->da_in_angr_spppolycoefa1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_spppolycoefa1_sg(), target);
  }

  // float DA_IN_cv_SppPolyCoefA2_sg = 3;
  if (this->da_in_cv_spppolycoefa2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_spppolycoefa2_sg(), target);
  }

  // float DA_IN_cvr_SppPolyCoefA3_sg = 4;
  if (this->da_in_cvr_spppolycoefa3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_spppolycoefa3_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_SppPolyCoefCnfdn_eLCF = 5;
  if (this->da_in_stat_spppolycoefcnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->da_in_stat_spppolycoefcnfdn_elcf(), target);
  }

  // sint32 DA_IN_indx_SppPolyCoefType_u8 = 6;
  if (this->da_in_indx_spppolycoeftype_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->da_in_indx_spppolycoeftype_u8(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_SppPolyCoeff_st)
  return target;
}

size_t B_SppPolyCoeff_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_SppPolyCoeff_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_SppPolyCoefA0_sg = 1;
  if (this->da_in_d_spppolycoefa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_SppPolyCoefA1_sg = 2;
  if (this->da_in_angr_spppolycoefa1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_SppPolyCoefA2_sg = 3;
  if (this->da_in_cv_spppolycoefa2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_SppPolyCoefA3_sg = 4;
  if (this->da_in_cvr_spppolycoefa3_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_SppPolyCoefCnfdn_eLCF = 5;
  if (this->da_in_stat_spppolycoefcnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_spppolycoefcnfdn_elcf());
  }

  // sint32 DA_IN_indx_SppPolyCoefType_u8 = 6;
  if (this->da_in_indx_spppolycoeftype_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->da_in_indx_spppolycoeftype_u8());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_SppPolyCoeff_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_SppPolyCoeff_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_SppPolyCoeff_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_SppPolyCoeff_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_SppPolyCoeff_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_SppPolyCoeff_st)
    MergeFrom(*source);
  }
}

void B_SppPolyCoeff_st::MergeFrom(const B_SppPolyCoeff_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_SppPolyCoeff_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_spppolycoefa0_sg() != 0) {
    set_da_in_d_spppolycoefa0_sg(from.da_in_d_spppolycoefa0_sg());
  }
  if (from.da_in_angr_spppolycoefa1_sg() != 0) {
    set_da_in_angr_spppolycoefa1_sg(from.da_in_angr_spppolycoefa1_sg());
  }
  if (from.da_in_cv_spppolycoefa2_sg() != 0) {
    set_da_in_cv_spppolycoefa2_sg(from.da_in_cv_spppolycoefa2_sg());
  }
  if (from.da_in_cvr_spppolycoefa3_sg() != 0) {
    set_da_in_cvr_spppolycoefa3_sg(from.da_in_cvr_spppolycoefa3_sg());
  }
  if (from.da_in_stat_spppolycoefcnfdn_elcf() != 0) {
    set_da_in_stat_spppolycoefcnfdn_elcf(from.da_in_stat_spppolycoefcnfdn_elcf());
  }
  if (from.da_in_indx_spppolycoeftype_u8() != 0) {
    set_da_in_indx_spppolycoeftype_u8(from.da_in_indx_spppolycoeftype_u8());
  }
}

void B_SppPolyCoeff_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_SppPolyCoeff_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_SppPolyCoeff_st::CopyFrom(const B_SppPolyCoeff_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_SppPolyCoeff_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_SppPolyCoeff_st::IsInitialized() const {
  return true;
}

void B_SppPolyCoeff_st::Swap(B_SppPolyCoeff_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_SppPolyCoeff_st::InternalSwap(B_SppPolyCoeff_st* other) {
  using std::swap;
  swap(da_in_d_spppolycoefa0_sg_, other->da_in_d_spppolycoefa0_sg_);
  swap(da_in_angr_spppolycoefa1_sg_, other->da_in_angr_spppolycoefa1_sg_);
  swap(da_in_cv_spppolycoefa2_sg_, other->da_in_cv_spppolycoefa2_sg_);
  swap(da_in_cvr_spppolycoefa3_sg_, other->da_in_cvr_spppolycoefa3_sg_);
  swap(da_in_stat_spppolycoefcnfdn_elcf_, other->da_in_stat_spppolycoefcnfdn_elcf_);
  swap(da_in_indx_spppolycoeftype_u8_, other->da_in_indx_spppolycoeftype_u8_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_SppPolyCoeff_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_HostRHSP_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_HostRHSP_st::kDAINDHostRHSPPosA0SgFieldNumber;
const int B_HostRHSP_st::kDAINAngRHostRHSPHdAngA1SgFieldNumber;
const int B_HostRHSP_st::kDAINCvHostRHSPCrvteA2SgFieldNumber;
const int B_HostRHSP_st::kDAINCvrHostRHSPCrvteRtA3SgFieldNumber;
const int B_HostRHSP_st::kDAINIsHostRHSPChgToRghtBlFieldNumber;
const int B_HostRHSP_st::kDAINDHostRHSPRngeSgFieldNumber;
const int B_HostRHSP_st::kDAINStatHostRHSPCnfdnELCFFieldNumber;
const int B_HostRHSP_st::kDAINStatHostRHSPColorELCRFieldNumber;
const int B_HostRHSP_st::kDAINStatHostRHSPTypeELTPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_HostRHSP_st::B_HostRHSP_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_HostRHSP_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_HostRHSP_st)
}
B_HostRHSP_st::B_HostRHSP_st(const B_HostRHSP_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_hostrhspposa0_sg_, &from.da_in_d_hostrhspposa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_hostrhsptype_eltp_) -
    reinterpret_cast<char*>(&da_in_d_hostrhspposa0_sg_)) + sizeof(da_in_stat_hostrhsptype_eltp_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_HostRHSP_st)
}

void B_HostRHSP_st::SharedCtor() {
  ::memset(&da_in_d_hostrhspposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostrhsptype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostrhspposa0_sg_)) + sizeof(da_in_stat_hostrhsptype_eltp_));
}

B_HostRHSP_st::~B_HostRHSP_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_HostRHSP_st)
  SharedDtor();
}

void B_HostRHSP_st::SharedDtor() {
}

void B_HostRHSP_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_HostRHSP_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_HostRHSP_st& B_HostRHSP_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_HostRHSP_st.base);
  return *internal_default_instance();
}


void B_HostRHSP_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_HostRHSP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_hostrhspposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostrhsptype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostrhspposa0_sg_)) + sizeof(da_in_stat_hostrhsptype_eltp_));
  _internal_metadata_.Clear();
}

bool B_HostRHSP_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_HostRHSP_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_HostRHSPPosA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostrhspposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_HostRHSPHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_hostrhsphdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_HostRHSPCrvteA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_hostrhspcrvtea2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_HostRHSPCrvteRtA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_hostrhspcrvterta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_is_HostRHSPChgToRght_bl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_is_hostrhspchgtorght_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_HostRHSPRnge_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostrhsprnge_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRHSPCnfdn_eLCF = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostrhspcnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor DA_IN_stat_HostRHSPColor_eLCR = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostrhspcolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLTP_LaneType DA_IN_stat_HostRHSPType_eLTP = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostrhsptype_eltp(static_cast< ::ads_common::eLTP_LaneType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_HostRHSP_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_HostRHSP_st)
  return false;
#undef DO_
}

void B_HostRHSP_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_HostRHSP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostRHSPPosA0_sg = 1;
  if (this->da_in_d_hostrhspposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_hostrhspposa0_sg(), output);
  }

  // float DA_IN_angR_HostRHSPHdAngA1_sg = 2;
  if (this->da_in_angr_hostrhsphdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_hostrhsphdanga1_sg(), output);
  }

  // float DA_IN_cv_HostRHSPCrvteA2_sg = 3;
  if (this->da_in_cv_hostrhspcrvtea2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_hostrhspcrvtea2_sg(), output);
  }

  // float DA_IN_cvr_HostRHSPCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostrhspcrvterta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_hostrhspcrvterta3_sg(), output);
  }

  // bool DA_IN_is_HostRHSPChgToRght_bl = 5;
  if (this->da_in_is_hostrhspchgtorght_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->da_in_is_hostrhspchgtorght_bl(), output);
  }

  // float DA_IN_d_HostRHSPRnge_sg = 6;
  if (this->da_in_d_hostrhsprnge_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_d_hostrhsprnge_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRHSPCnfdn_eLCF = 7;
  if (this->da_in_stat_hostrhspcnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_hostrhspcnfdn_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostRHSPColor_eLCR = 8;
  if (this->da_in_stat_hostrhspcolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_hostrhspcolor_elcr(), output);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostRHSPType_eLTP = 9;
  if (this->da_in_stat_hostrhsptype_eltp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_hostrhsptype_eltp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_HostRHSP_st)
}

::google::protobuf::uint8* B_HostRHSP_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_HostRHSP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostRHSPPosA0_sg = 1;
  if (this->da_in_d_hostrhspposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_hostrhspposa0_sg(), target);
  }

  // float DA_IN_angR_HostRHSPHdAngA1_sg = 2;
  if (this->da_in_angr_hostrhsphdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_hostrhsphdanga1_sg(), target);
  }

  // float DA_IN_cv_HostRHSPCrvteA2_sg = 3;
  if (this->da_in_cv_hostrhspcrvtea2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_hostrhspcrvtea2_sg(), target);
  }

  // float DA_IN_cvr_HostRHSPCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostrhspcrvterta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_hostrhspcrvterta3_sg(), target);
  }

  // bool DA_IN_is_HostRHSPChgToRght_bl = 5;
  if (this->da_in_is_hostrhspchgtorght_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->da_in_is_hostrhspchgtorght_bl(), target);
  }

  // float DA_IN_d_HostRHSPRnge_sg = 6;
  if (this->da_in_d_hostrhsprnge_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_d_hostrhsprnge_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRHSPCnfdn_eLCF = 7;
  if (this->da_in_stat_hostrhspcnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_hostrhspcnfdn_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostRHSPColor_eLCR = 8;
  if (this->da_in_stat_hostrhspcolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_hostrhspcolor_elcr(), target);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostRHSPType_eLTP = 9;
  if (this->da_in_stat_hostrhsptype_eltp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_hostrhsptype_eltp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_HostRHSP_st)
  return target;
}

size_t B_HostRHSP_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_HostRHSP_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_HostRHSPPosA0_sg = 1;
  if (this->da_in_d_hostrhspposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_HostRHSPHdAngA1_sg = 2;
  if (this->da_in_angr_hostrhsphdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_HostRHSPCrvteA2_sg = 3;
  if (this->da_in_cv_hostrhspcrvtea2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_HostRHSPCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostrhspcrvterta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool DA_IN_is_HostRHSPChgToRght_bl = 5;
  if (this->da_in_is_hostrhspchgtorght_bl() != 0) {
    total_size += 1 + 1;
  }

  // float DA_IN_d_HostRHSPRnge_sg = 6;
  if (this->da_in_d_hostrhsprnge_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRHSPCnfdn_eLCF = 7;
  if (this->da_in_stat_hostrhspcnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostrhspcnfdn_elcf());
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostRHSPColor_eLCR = 8;
  if (this->da_in_stat_hostrhspcolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostrhspcolor_elcr());
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostRHSPType_eLTP = 9;
  if (this->da_in_stat_hostrhsptype_eltp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostrhsptype_eltp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_HostRHSP_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_HostRHSP_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_HostRHSP_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_HostRHSP_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_HostRHSP_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_HostRHSP_st)
    MergeFrom(*source);
  }
}

void B_HostRHSP_st::MergeFrom(const B_HostRHSP_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_HostRHSP_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_hostrhspposa0_sg() != 0) {
    set_da_in_d_hostrhspposa0_sg(from.da_in_d_hostrhspposa0_sg());
  }
  if (from.da_in_angr_hostrhsphdanga1_sg() != 0) {
    set_da_in_angr_hostrhsphdanga1_sg(from.da_in_angr_hostrhsphdanga1_sg());
  }
  if (from.da_in_cv_hostrhspcrvtea2_sg() != 0) {
    set_da_in_cv_hostrhspcrvtea2_sg(from.da_in_cv_hostrhspcrvtea2_sg());
  }
  if (from.da_in_cvr_hostrhspcrvterta3_sg() != 0) {
    set_da_in_cvr_hostrhspcrvterta3_sg(from.da_in_cvr_hostrhspcrvterta3_sg());
  }
  if (from.da_in_is_hostrhspchgtorght_bl() != 0) {
    set_da_in_is_hostrhspchgtorght_bl(from.da_in_is_hostrhspchgtorght_bl());
  }
  if (from.da_in_d_hostrhsprnge_sg() != 0) {
    set_da_in_d_hostrhsprnge_sg(from.da_in_d_hostrhsprnge_sg());
  }
  if (from.da_in_stat_hostrhspcnfdn_elcf() != 0) {
    set_da_in_stat_hostrhspcnfdn_elcf(from.da_in_stat_hostrhspcnfdn_elcf());
  }
  if (from.da_in_stat_hostrhspcolor_elcr() != 0) {
    set_da_in_stat_hostrhspcolor_elcr(from.da_in_stat_hostrhspcolor_elcr());
  }
  if (from.da_in_stat_hostrhsptype_eltp() != 0) {
    set_da_in_stat_hostrhsptype_eltp(from.da_in_stat_hostrhsptype_eltp());
  }
}

void B_HostRHSP_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_HostRHSP_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_HostRHSP_st::CopyFrom(const B_HostRHSP_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_HostRHSP_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_HostRHSP_st::IsInitialized() const {
  return true;
}

void B_HostRHSP_st::Swap(B_HostRHSP_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_HostRHSP_st::InternalSwap(B_HostRHSP_st* other) {
  using std::swap;
  swap(da_in_d_hostrhspposa0_sg_, other->da_in_d_hostrhspposa0_sg_);
  swap(da_in_angr_hostrhsphdanga1_sg_, other->da_in_angr_hostrhsphdanga1_sg_);
  swap(da_in_cv_hostrhspcrvtea2_sg_, other->da_in_cv_hostrhspcrvtea2_sg_);
  swap(da_in_cvr_hostrhspcrvterta3_sg_, other->da_in_cvr_hostrhspcrvterta3_sg_);
  swap(da_in_is_hostrhspchgtorght_bl_, other->da_in_is_hostrhspchgtorght_bl_);
  swap(da_in_d_hostrhsprnge_sg_, other->da_in_d_hostrhsprnge_sg_);
  swap(da_in_stat_hostrhspcnfdn_elcf_, other->da_in_stat_hostrhspcnfdn_elcf_);
  swap(da_in_stat_hostrhspcolor_elcr_, other->da_in_stat_hostrhspcolor_elcr_);
  swap(da_in_stat_hostrhsptype_eltp_, other->da_in_stat_hostrhsptype_eltp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_HostRHSP_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_HostLHSP_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_HostLHSP_st::kDAINDHostLHSPPosA0SgFieldNumber;
const int B_HostLHSP_st::kDAINAngRHostLHSPHdAngA1SgFieldNumber;
const int B_HostLHSP_st::kDAINCvHostLHSPCrvteA2SgFieldNumber;
const int B_HostLHSP_st::kDAINCvrHostLHSPCrvteRtA3SgFieldNumber;
const int B_HostLHSP_st::kDAINIsHostLHSPChgToLeftBlFieldNumber;
const int B_HostLHSP_st::kDAINDHostLHSPRngeSgFieldNumber;
const int B_HostLHSP_st::kDAINStatHostLHSPCnfdnELCFFieldNumber;
const int B_HostLHSP_st::kDAINStatHostLHSPColorELCRFieldNumber;
const int B_HostLHSP_st::kDAINStatHostLHSPTypeELTPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_HostLHSP_st::B_HostLHSP_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_HostLHSP_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_HostLHSP_st)
}
B_HostLHSP_st::B_HostLHSP_st(const B_HostLHSP_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_hostlhspposa0_sg_, &from.da_in_d_hostlhspposa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_hostlhsptype_eltp_) -
    reinterpret_cast<char*>(&da_in_d_hostlhspposa0_sg_)) + sizeof(da_in_stat_hostlhsptype_eltp_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_HostLHSP_st)
}

void B_HostLHSP_st::SharedCtor() {
  ::memset(&da_in_d_hostlhspposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostlhsptype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostlhspposa0_sg_)) + sizeof(da_in_stat_hostlhsptype_eltp_));
}

B_HostLHSP_st::~B_HostLHSP_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_HostLHSP_st)
  SharedDtor();
}

void B_HostLHSP_st::SharedDtor() {
}

void B_HostLHSP_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_HostLHSP_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_HostLHSP_st& B_HostLHSP_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_HostLHSP_st.base);
  return *internal_default_instance();
}


void B_HostLHSP_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_HostLHSP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_hostlhspposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostlhsptype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostlhspposa0_sg_)) + sizeof(da_in_stat_hostlhsptype_eltp_));
  _internal_metadata_.Clear();
}

bool B_HostLHSP_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_HostLHSP_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_HostLHSPPosA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostlhspposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_HostLHSPHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_hostlhsphdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_HostLHSPCrvteA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_hostlhspcrvtea2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_HostLHSPCrvteRtA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_hostlhspcrvterta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_is_HostLHSPChgToLeft_bl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_is_hostlhspchgtoleft_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_HostLHSPRnge_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostlhsprnge_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLHSPCnfdn_eLCF = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostlhspcnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor DA_IN_stat_HostLHSPColor_eLCR = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostlhspcolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLTP_LaneType DA_IN_stat_HostLHSPType_eLTP = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostlhsptype_eltp(static_cast< ::ads_common::eLTP_LaneType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_HostLHSP_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_HostLHSP_st)
  return false;
#undef DO_
}

void B_HostLHSP_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_HostLHSP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostLHSPPosA0_sg = 1;
  if (this->da_in_d_hostlhspposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_hostlhspposa0_sg(), output);
  }

  // float DA_IN_angR_HostLHSPHdAngA1_sg = 2;
  if (this->da_in_angr_hostlhsphdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_hostlhsphdanga1_sg(), output);
  }

  // float DA_IN_cv_HostLHSPCrvteA2_sg = 3;
  if (this->da_in_cv_hostlhspcrvtea2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_hostlhspcrvtea2_sg(), output);
  }

  // float DA_IN_cvr_HostLHSPCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostlhspcrvterta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_hostlhspcrvterta3_sg(), output);
  }

  // bool DA_IN_is_HostLHSPChgToLeft_bl = 5;
  if (this->da_in_is_hostlhspchgtoleft_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->da_in_is_hostlhspchgtoleft_bl(), output);
  }

  // float DA_IN_d_HostLHSPRnge_sg = 6;
  if (this->da_in_d_hostlhsprnge_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_d_hostlhsprnge_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLHSPCnfdn_eLCF = 7;
  if (this->da_in_stat_hostlhspcnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_hostlhspcnfdn_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostLHSPColor_eLCR = 8;
  if (this->da_in_stat_hostlhspcolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_hostlhspcolor_elcr(), output);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostLHSPType_eLTP = 9;
  if (this->da_in_stat_hostlhsptype_eltp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_hostlhsptype_eltp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_HostLHSP_st)
}

::google::protobuf::uint8* B_HostLHSP_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_HostLHSP_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostLHSPPosA0_sg = 1;
  if (this->da_in_d_hostlhspposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_hostlhspposa0_sg(), target);
  }

  // float DA_IN_angR_HostLHSPHdAngA1_sg = 2;
  if (this->da_in_angr_hostlhsphdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_hostlhsphdanga1_sg(), target);
  }

  // float DA_IN_cv_HostLHSPCrvteA2_sg = 3;
  if (this->da_in_cv_hostlhspcrvtea2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_hostlhspcrvtea2_sg(), target);
  }

  // float DA_IN_cvr_HostLHSPCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostlhspcrvterta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_hostlhspcrvterta3_sg(), target);
  }

  // bool DA_IN_is_HostLHSPChgToLeft_bl = 5;
  if (this->da_in_is_hostlhspchgtoleft_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->da_in_is_hostlhspchgtoleft_bl(), target);
  }

  // float DA_IN_d_HostLHSPRnge_sg = 6;
  if (this->da_in_d_hostlhsprnge_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_d_hostlhsprnge_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLHSPCnfdn_eLCF = 7;
  if (this->da_in_stat_hostlhspcnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_hostlhspcnfdn_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostLHSPColor_eLCR = 8;
  if (this->da_in_stat_hostlhspcolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_hostlhspcolor_elcr(), target);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostLHSPType_eLTP = 9;
  if (this->da_in_stat_hostlhsptype_eltp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_hostlhsptype_eltp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_HostLHSP_st)
  return target;
}

size_t B_HostLHSP_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_HostLHSP_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_HostLHSPPosA0_sg = 1;
  if (this->da_in_d_hostlhspposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_HostLHSPHdAngA1_sg = 2;
  if (this->da_in_angr_hostlhsphdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_HostLHSPCrvteA2_sg = 3;
  if (this->da_in_cv_hostlhspcrvtea2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_HostLHSPCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostlhspcrvterta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool DA_IN_is_HostLHSPChgToLeft_bl = 5;
  if (this->da_in_is_hostlhspchgtoleft_bl() != 0) {
    total_size += 1 + 1;
  }

  // float DA_IN_d_HostLHSPRnge_sg = 6;
  if (this->da_in_d_hostlhsprnge_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLHSPCnfdn_eLCF = 7;
  if (this->da_in_stat_hostlhspcnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostlhspcnfdn_elcf());
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostLHSPColor_eLCR = 8;
  if (this->da_in_stat_hostlhspcolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostlhspcolor_elcr());
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostLHSPType_eLTP = 9;
  if (this->da_in_stat_hostlhsptype_eltp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostlhsptype_eltp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_HostLHSP_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_HostLHSP_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_HostLHSP_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_HostLHSP_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_HostLHSP_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_HostLHSP_st)
    MergeFrom(*source);
  }
}

void B_HostLHSP_st::MergeFrom(const B_HostLHSP_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_HostLHSP_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_hostlhspposa0_sg() != 0) {
    set_da_in_d_hostlhspposa0_sg(from.da_in_d_hostlhspposa0_sg());
  }
  if (from.da_in_angr_hostlhsphdanga1_sg() != 0) {
    set_da_in_angr_hostlhsphdanga1_sg(from.da_in_angr_hostlhsphdanga1_sg());
  }
  if (from.da_in_cv_hostlhspcrvtea2_sg() != 0) {
    set_da_in_cv_hostlhspcrvtea2_sg(from.da_in_cv_hostlhspcrvtea2_sg());
  }
  if (from.da_in_cvr_hostlhspcrvterta3_sg() != 0) {
    set_da_in_cvr_hostlhspcrvterta3_sg(from.da_in_cvr_hostlhspcrvterta3_sg());
  }
  if (from.da_in_is_hostlhspchgtoleft_bl() != 0) {
    set_da_in_is_hostlhspchgtoleft_bl(from.da_in_is_hostlhspchgtoleft_bl());
  }
  if (from.da_in_d_hostlhsprnge_sg() != 0) {
    set_da_in_d_hostlhsprnge_sg(from.da_in_d_hostlhsprnge_sg());
  }
  if (from.da_in_stat_hostlhspcnfdn_elcf() != 0) {
    set_da_in_stat_hostlhspcnfdn_elcf(from.da_in_stat_hostlhspcnfdn_elcf());
  }
  if (from.da_in_stat_hostlhspcolor_elcr() != 0) {
    set_da_in_stat_hostlhspcolor_elcr(from.da_in_stat_hostlhspcolor_elcr());
  }
  if (from.da_in_stat_hostlhsptype_eltp() != 0) {
    set_da_in_stat_hostlhsptype_eltp(from.da_in_stat_hostlhsptype_eltp());
  }
}

void B_HostLHSP_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_HostLHSP_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_HostLHSP_st::CopyFrom(const B_HostLHSP_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_HostLHSP_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_HostLHSP_st::IsInitialized() const {
  return true;
}

void B_HostLHSP_st::Swap(B_HostLHSP_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_HostLHSP_st::InternalSwap(B_HostLHSP_st* other) {
  using std::swap;
  swap(da_in_d_hostlhspposa0_sg_, other->da_in_d_hostlhspposa0_sg_);
  swap(da_in_angr_hostlhsphdanga1_sg_, other->da_in_angr_hostlhsphdanga1_sg_);
  swap(da_in_cv_hostlhspcrvtea2_sg_, other->da_in_cv_hostlhspcrvtea2_sg_);
  swap(da_in_cvr_hostlhspcrvterta3_sg_, other->da_in_cvr_hostlhspcrvterta3_sg_);
  swap(da_in_is_hostlhspchgtoleft_bl_, other->da_in_is_hostlhspchgtoleft_bl_);
  swap(da_in_d_hostlhsprnge_sg_, other->da_in_d_hostlhsprnge_sg_);
  swap(da_in_stat_hostlhspcnfdn_elcf_, other->da_in_stat_hostlhspcnfdn_elcf_);
  swap(da_in_stat_hostlhspcolor_elcr_, other->da_in_stat_hostlhspcolor_elcr_);
  swap(da_in_stat_hostlhsptype_eltp_, other->da_in_stat_hostlhsptype_eltp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_HostLHSP_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_HostRInd_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_HostRInd_st::kDAINDHostRIndPosA0SgFieldNumber;
const int B_HostRInd_st::kDAINAngRHostRIndHdAngA1SgFieldNumber;
const int B_HostRInd_st::kDAINCvHostRIndCrvteA2SgFieldNumber;
const int B_HostRInd_st::kDAINCvrHostRIndCrvteRtA3SgFieldNumber;
const int B_HostRInd_st::kDAINIsHostRIndChgToRghtBlFieldNumber;
const int B_HostRInd_st::kDAINDHostRIndRngeSgFieldNumber;
const int B_HostRInd_st::kDAINStatHostRIndCnfdnELCFFieldNumber;
const int B_HostRInd_st::kDAINStatHostRIndColorELCRFieldNumber;
const int B_HostRInd_st::kDAINStatHostRIndTypeELTPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_HostRInd_st::B_HostRInd_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_HostRInd_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_HostRInd_st)
}
B_HostRInd_st::B_HostRInd_st(const B_HostRInd_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_hostrindposa0_sg_, &from.da_in_d_hostrindposa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_hostrindtype_eltp_) -
    reinterpret_cast<char*>(&da_in_d_hostrindposa0_sg_)) + sizeof(da_in_stat_hostrindtype_eltp_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_HostRInd_st)
}

void B_HostRInd_st::SharedCtor() {
  ::memset(&da_in_d_hostrindposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostrindtype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostrindposa0_sg_)) + sizeof(da_in_stat_hostrindtype_eltp_));
}

B_HostRInd_st::~B_HostRInd_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_HostRInd_st)
  SharedDtor();
}

void B_HostRInd_st::SharedDtor() {
}

void B_HostRInd_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_HostRInd_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_HostRInd_st& B_HostRInd_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_HostRInd_st.base);
  return *internal_default_instance();
}


void B_HostRInd_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_HostRInd_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_hostrindposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostrindtype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostrindposa0_sg_)) + sizeof(da_in_stat_hostrindtype_eltp_));
  _internal_metadata_.Clear();
}

bool B_HostRInd_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_HostRInd_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_HostRIndPosA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostrindposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_HostRIndHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_hostrindhdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_HostRIndCrvteA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_hostrindcrvtea2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_HostRIndCrvteRtA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_hostrindcrvterta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_is_HostRIndChgToRght_bl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_is_hostrindchgtorght_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_HostRIndRnge_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostrindrnge_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRIndCnfdn_eLCF = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostrindcnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor DA_IN_stat_HostRIndColor_eLCR = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostrindcolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLTP_LaneType DA_IN_stat_HostRIndType_eLTP = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostrindtype_eltp(static_cast< ::ads_common::eLTP_LaneType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_HostRInd_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_HostRInd_st)
  return false;
#undef DO_
}

void B_HostRInd_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_HostRInd_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostRIndPosA0_sg = 1;
  if (this->da_in_d_hostrindposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_hostrindposa0_sg(), output);
  }

  // float DA_IN_angR_HostRIndHdAngA1_sg = 2;
  if (this->da_in_angr_hostrindhdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_hostrindhdanga1_sg(), output);
  }

  // float DA_IN_cv_HostRIndCrvteA2_sg = 3;
  if (this->da_in_cv_hostrindcrvtea2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_hostrindcrvtea2_sg(), output);
  }

  // float DA_IN_cvr_HostRIndCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostrindcrvterta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_hostrindcrvterta3_sg(), output);
  }

  // bool DA_IN_is_HostRIndChgToRght_bl = 5;
  if (this->da_in_is_hostrindchgtorght_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->da_in_is_hostrindchgtorght_bl(), output);
  }

  // float DA_IN_d_HostRIndRnge_sg = 6;
  if (this->da_in_d_hostrindrnge_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_d_hostrindrnge_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRIndCnfdn_eLCF = 7;
  if (this->da_in_stat_hostrindcnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_hostrindcnfdn_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostRIndColor_eLCR = 8;
  if (this->da_in_stat_hostrindcolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_hostrindcolor_elcr(), output);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostRIndType_eLTP = 9;
  if (this->da_in_stat_hostrindtype_eltp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_hostrindtype_eltp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_HostRInd_st)
}

::google::protobuf::uint8* B_HostRInd_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_HostRInd_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostRIndPosA0_sg = 1;
  if (this->da_in_d_hostrindposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_hostrindposa0_sg(), target);
  }

  // float DA_IN_angR_HostRIndHdAngA1_sg = 2;
  if (this->da_in_angr_hostrindhdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_hostrindhdanga1_sg(), target);
  }

  // float DA_IN_cv_HostRIndCrvteA2_sg = 3;
  if (this->da_in_cv_hostrindcrvtea2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_hostrindcrvtea2_sg(), target);
  }

  // float DA_IN_cvr_HostRIndCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostrindcrvterta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_hostrindcrvterta3_sg(), target);
  }

  // bool DA_IN_is_HostRIndChgToRght_bl = 5;
  if (this->da_in_is_hostrindchgtorght_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->da_in_is_hostrindchgtorght_bl(), target);
  }

  // float DA_IN_d_HostRIndRnge_sg = 6;
  if (this->da_in_d_hostrindrnge_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_d_hostrindrnge_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRIndCnfdn_eLCF = 7;
  if (this->da_in_stat_hostrindcnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_hostrindcnfdn_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostRIndColor_eLCR = 8;
  if (this->da_in_stat_hostrindcolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_hostrindcolor_elcr(), target);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostRIndType_eLTP = 9;
  if (this->da_in_stat_hostrindtype_eltp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_hostrindtype_eltp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_HostRInd_st)
  return target;
}

size_t B_HostRInd_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_HostRInd_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_HostRIndPosA0_sg = 1;
  if (this->da_in_d_hostrindposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_HostRIndHdAngA1_sg = 2;
  if (this->da_in_angr_hostrindhdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_HostRIndCrvteA2_sg = 3;
  if (this->da_in_cv_hostrindcrvtea2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_HostRIndCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostrindcrvterta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool DA_IN_is_HostRIndChgToRght_bl = 5;
  if (this->da_in_is_hostrindchgtorght_bl() != 0) {
    total_size += 1 + 1;
  }

  // float DA_IN_d_HostRIndRnge_sg = 6;
  if (this->da_in_d_hostrindrnge_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostRIndCnfdn_eLCF = 7;
  if (this->da_in_stat_hostrindcnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostrindcnfdn_elcf());
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostRIndColor_eLCR = 8;
  if (this->da_in_stat_hostrindcolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostrindcolor_elcr());
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostRIndType_eLTP = 9;
  if (this->da_in_stat_hostrindtype_eltp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostrindtype_eltp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_HostRInd_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_HostRInd_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_HostRInd_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_HostRInd_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_HostRInd_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_HostRInd_st)
    MergeFrom(*source);
  }
}

void B_HostRInd_st::MergeFrom(const B_HostRInd_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_HostRInd_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_hostrindposa0_sg() != 0) {
    set_da_in_d_hostrindposa0_sg(from.da_in_d_hostrindposa0_sg());
  }
  if (from.da_in_angr_hostrindhdanga1_sg() != 0) {
    set_da_in_angr_hostrindhdanga1_sg(from.da_in_angr_hostrindhdanga1_sg());
  }
  if (from.da_in_cv_hostrindcrvtea2_sg() != 0) {
    set_da_in_cv_hostrindcrvtea2_sg(from.da_in_cv_hostrindcrvtea2_sg());
  }
  if (from.da_in_cvr_hostrindcrvterta3_sg() != 0) {
    set_da_in_cvr_hostrindcrvterta3_sg(from.da_in_cvr_hostrindcrvterta3_sg());
  }
  if (from.da_in_is_hostrindchgtorght_bl() != 0) {
    set_da_in_is_hostrindchgtorght_bl(from.da_in_is_hostrindchgtorght_bl());
  }
  if (from.da_in_d_hostrindrnge_sg() != 0) {
    set_da_in_d_hostrindrnge_sg(from.da_in_d_hostrindrnge_sg());
  }
  if (from.da_in_stat_hostrindcnfdn_elcf() != 0) {
    set_da_in_stat_hostrindcnfdn_elcf(from.da_in_stat_hostrindcnfdn_elcf());
  }
  if (from.da_in_stat_hostrindcolor_elcr() != 0) {
    set_da_in_stat_hostrindcolor_elcr(from.da_in_stat_hostrindcolor_elcr());
  }
  if (from.da_in_stat_hostrindtype_eltp() != 0) {
    set_da_in_stat_hostrindtype_eltp(from.da_in_stat_hostrindtype_eltp());
  }
}

void B_HostRInd_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_HostRInd_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_HostRInd_st::CopyFrom(const B_HostRInd_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_HostRInd_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_HostRInd_st::IsInitialized() const {
  return true;
}

void B_HostRInd_st::Swap(B_HostRInd_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_HostRInd_st::InternalSwap(B_HostRInd_st* other) {
  using std::swap;
  swap(da_in_d_hostrindposa0_sg_, other->da_in_d_hostrindposa0_sg_);
  swap(da_in_angr_hostrindhdanga1_sg_, other->da_in_angr_hostrindhdanga1_sg_);
  swap(da_in_cv_hostrindcrvtea2_sg_, other->da_in_cv_hostrindcrvtea2_sg_);
  swap(da_in_cvr_hostrindcrvterta3_sg_, other->da_in_cvr_hostrindcrvterta3_sg_);
  swap(da_in_is_hostrindchgtorght_bl_, other->da_in_is_hostrindchgtorght_bl_);
  swap(da_in_d_hostrindrnge_sg_, other->da_in_d_hostrindrnge_sg_);
  swap(da_in_stat_hostrindcnfdn_elcf_, other->da_in_stat_hostrindcnfdn_elcf_);
  swap(da_in_stat_hostrindcolor_elcr_, other->da_in_stat_hostrindcolor_elcr_);
  swap(da_in_stat_hostrindtype_eltp_, other->da_in_stat_hostrindtype_eltp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_HostRInd_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_HostLInd_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_HostLInd_st::kDAINDHostLIndPosA0SgFieldNumber;
const int B_HostLInd_st::kDAINAngRHostLIndHdAngA1SgFieldNumber;
const int B_HostLInd_st::kDAINCvHostLIndCrvteA2SgFieldNumber;
const int B_HostLInd_st::kDAINCvrHostLIndCrvteRtA3SgFieldNumber;
const int B_HostLInd_st::kDAINIsHostLIndChgToLeftBlFieldNumber;
const int B_HostLInd_st::kDAINDHostLIndRngeSgFieldNumber;
const int B_HostLInd_st::kDAINStatHostLIndCnfdnELCFFieldNumber;
const int B_HostLInd_st::kDAINStatHostLIndColorELCRFieldNumber;
const int B_HostLInd_st::kDAINStatHostLIndTypeELTPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_HostLInd_st::B_HostLInd_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_HostLInd_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_HostLInd_st)
}
B_HostLInd_st::B_HostLInd_st(const B_HostLInd_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&da_in_d_hostlindposa0_sg_, &from.da_in_d_hostlindposa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&da_in_stat_hostlindtype_eltp_) -
    reinterpret_cast<char*>(&da_in_d_hostlindposa0_sg_)) + sizeof(da_in_stat_hostlindtype_eltp_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_HostLInd_st)
}

void B_HostLInd_st::SharedCtor() {
  ::memset(&da_in_d_hostlindposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostlindtype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostlindposa0_sg_)) + sizeof(da_in_stat_hostlindtype_eltp_));
}

B_HostLInd_st::~B_HostLInd_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_HostLInd_st)
  SharedDtor();
}

void B_HostLInd_st::SharedDtor() {
}

void B_HostLInd_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_HostLInd_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_HostLInd_st& B_HostLInd_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_HostLInd_st.base);
  return *internal_default_instance();
}


void B_HostLInd_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_HostLInd_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&da_in_d_hostlindposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&da_in_stat_hostlindtype_eltp_) -
      reinterpret_cast<char*>(&da_in_d_hostlindposa0_sg_)) + sizeof(da_in_stat_hostlindtype_eltp_));
  _internal_metadata_.Clear();
}

bool B_HostLInd_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_HostLInd_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float DA_IN_d_HostLIndPosA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostlindposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_angR_HostLIndHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_angr_hostlindhdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cv_HostLIndCrvteA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cv_hostlindcrvtea2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_cvr_HostLIndCrvteRtA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_cvr_hostlindcrvterta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool DA_IN_is_HostLIndChgToLeft_bl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &da_in_is_hostlindchgtoleft_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DA_IN_d_HostLIndRnge_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &da_in_d_hostlindrnge_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLIndCnfdn_eLCF = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostlindcnfdn_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCR_LaneColor DA_IN_stat_HostLIndColor_eLCR = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostlindcolor_elcr(static_cast< ::ads_common::eLCR_LaneColor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLTP_LaneType DA_IN_stat_HostLIndType_eLTP = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_da_in_stat_hostlindtype_eltp(static_cast< ::ads_common::eLTP_LaneType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_HostLInd_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_HostLInd_st)
  return false;
#undef DO_
}

void B_HostLInd_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_HostLInd_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostLIndPosA0_sg = 1;
  if (this->da_in_d_hostlindposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->da_in_d_hostlindposa0_sg(), output);
  }

  // float DA_IN_angR_HostLIndHdAngA1_sg = 2;
  if (this->da_in_angr_hostlindhdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->da_in_angr_hostlindhdanga1_sg(), output);
  }

  // float DA_IN_cv_HostLIndCrvteA2_sg = 3;
  if (this->da_in_cv_hostlindcrvtea2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->da_in_cv_hostlindcrvtea2_sg(), output);
  }

  // float DA_IN_cvr_HostLIndCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostlindcrvterta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->da_in_cvr_hostlindcrvterta3_sg(), output);
  }

  // bool DA_IN_is_HostLIndChgToLeft_bl = 5;
  if (this->da_in_is_hostlindchgtoleft_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->da_in_is_hostlindchgtoleft_bl(), output);
  }

  // float DA_IN_d_HostLIndRnge_sg = 6;
  if (this->da_in_d_hostlindrnge_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->da_in_d_hostlindrnge_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLIndCnfdn_eLCF = 7;
  if (this->da_in_stat_hostlindcnfdn_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->da_in_stat_hostlindcnfdn_elcf(), output);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostLIndColor_eLCR = 8;
  if (this->da_in_stat_hostlindcolor_elcr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->da_in_stat_hostlindcolor_elcr(), output);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostLIndType_eLTP = 9;
  if (this->da_in_stat_hostlindtype_eltp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->da_in_stat_hostlindtype_eltp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_HostLInd_st)
}

::google::protobuf::uint8* B_HostLInd_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_HostLInd_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float DA_IN_d_HostLIndPosA0_sg = 1;
  if (this->da_in_d_hostlindposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->da_in_d_hostlindposa0_sg(), target);
  }

  // float DA_IN_angR_HostLIndHdAngA1_sg = 2;
  if (this->da_in_angr_hostlindhdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->da_in_angr_hostlindhdanga1_sg(), target);
  }

  // float DA_IN_cv_HostLIndCrvteA2_sg = 3;
  if (this->da_in_cv_hostlindcrvtea2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->da_in_cv_hostlindcrvtea2_sg(), target);
  }

  // float DA_IN_cvr_HostLIndCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostlindcrvterta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->da_in_cvr_hostlindcrvterta3_sg(), target);
  }

  // bool DA_IN_is_HostLIndChgToLeft_bl = 5;
  if (this->da_in_is_hostlindchgtoleft_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->da_in_is_hostlindchgtoleft_bl(), target);
  }

  // float DA_IN_d_HostLIndRnge_sg = 6;
  if (this->da_in_d_hostlindrnge_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->da_in_d_hostlindrnge_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLIndCnfdn_eLCF = 7;
  if (this->da_in_stat_hostlindcnfdn_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->da_in_stat_hostlindcnfdn_elcf(), target);
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostLIndColor_eLCR = 8;
  if (this->da_in_stat_hostlindcolor_elcr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->da_in_stat_hostlindcolor_elcr(), target);
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostLIndType_eLTP = 9;
  if (this->da_in_stat_hostlindtype_eltp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->da_in_stat_hostlindtype_eltp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_HostLInd_st)
  return target;
}

size_t B_HostLInd_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_HostLInd_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float DA_IN_d_HostLIndPosA0_sg = 1;
  if (this->da_in_d_hostlindposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_angR_HostLIndHdAngA1_sg = 2;
  if (this->da_in_angr_hostlindhdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cv_HostLIndCrvteA2_sg = 3;
  if (this->da_in_cv_hostlindcrvtea2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float DA_IN_cvr_HostLIndCrvteRtA3_sg = 4;
  if (this->da_in_cvr_hostlindcrvterta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool DA_IN_is_HostLIndChgToLeft_bl = 5;
  if (this->da_in_is_hostlindchgtoleft_bl() != 0) {
    total_size += 1 + 1;
  }

  // float DA_IN_d_HostLIndRnge_sg = 6;
  if (this->da_in_d_hostlindrnge_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn DA_IN_stat_HostLIndCnfdn_eLCF = 7;
  if (this->da_in_stat_hostlindcnfdn_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostlindcnfdn_elcf());
  }

  // .ads_common.eLCR_LaneColor DA_IN_stat_HostLIndColor_eLCR = 8;
  if (this->da_in_stat_hostlindcolor_elcr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostlindcolor_elcr());
  }

  // .ads_common.eLTP_LaneType DA_IN_stat_HostLIndType_eLTP = 9;
  if (this->da_in_stat_hostlindtype_eltp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->da_in_stat_hostlindtype_eltp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_HostLInd_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_HostLInd_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_HostLInd_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_HostLInd_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_HostLInd_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_HostLInd_st)
    MergeFrom(*source);
  }
}

void B_HostLInd_st::MergeFrom(const B_HostLInd_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_HostLInd_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.da_in_d_hostlindposa0_sg() != 0) {
    set_da_in_d_hostlindposa0_sg(from.da_in_d_hostlindposa0_sg());
  }
  if (from.da_in_angr_hostlindhdanga1_sg() != 0) {
    set_da_in_angr_hostlindhdanga1_sg(from.da_in_angr_hostlindhdanga1_sg());
  }
  if (from.da_in_cv_hostlindcrvtea2_sg() != 0) {
    set_da_in_cv_hostlindcrvtea2_sg(from.da_in_cv_hostlindcrvtea2_sg());
  }
  if (from.da_in_cvr_hostlindcrvterta3_sg() != 0) {
    set_da_in_cvr_hostlindcrvterta3_sg(from.da_in_cvr_hostlindcrvterta3_sg());
  }
  if (from.da_in_is_hostlindchgtoleft_bl() != 0) {
    set_da_in_is_hostlindchgtoleft_bl(from.da_in_is_hostlindchgtoleft_bl());
  }
  if (from.da_in_d_hostlindrnge_sg() != 0) {
    set_da_in_d_hostlindrnge_sg(from.da_in_d_hostlindrnge_sg());
  }
  if (from.da_in_stat_hostlindcnfdn_elcf() != 0) {
    set_da_in_stat_hostlindcnfdn_elcf(from.da_in_stat_hostlindcnfdn_elcf());
  }
  if (from.da_in_stat_hostlindcolor_elcr() != 0) {
    set_da_in_stat_hostlindcolor_elcr(from.da_in_stat_hostlindcolor_elcr());
  }
  if (from.da_in_stat_hostlindtype_eltp() != 0) {
    set_da_in_stat_hostlindtype_eltp(from.da_in_stat_hostlindtype_eltp());
  }
}

void B_HostLInd_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_HostLInd_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_HostLInd_st::CopyFrom(const B_HostLInd_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_HostLInd_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_HostLInd_st::IsInitialized() const {
  return true;
}

void B_HostLInd_st::Swap(B_HostLInd_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_HostLInd_st::InternalSwap(B_HostLInd_st* other) {
  using std::swap;
  swap(da_in_d_hostlindposa0_sg_, other->da_in_d_hostlindposa0_sg_);
  swap(da_in_angr_hostlindhdanga1_sg_, other->da_in_angr_hostlindhdanga1_sg_);
  swap(da_in_cv_hostlindcrvtea2_sg_, other->da_in_cv_hostlindcrvtea2_sg_);
  swap(da_in_cvr_hostlindcrvterta3_sg_, other->da_in_cvr_hostlindcrvterta3_sg_);
  swap(da_in_is_hostlindchgtoleft_bl_, other->da_in_is_hostlindchgtoleft_bl_);
  swap(da_in_d_hostlindrnge_sg_, other->da_in_d_hostlindrnge_sg_);
  swap(da_in_stat_hostlindcnfdn_elcf_, other->da_in_stat_hostlindcnfdn_elcf_);
  swap(da_in_stat_hostlindcolor_elcr_, other->da_in_stat_hostlindcolor_elcr_);
  swap(da_in_stat_hostlindtype_eltp_, other->da_in_stat_hostlindtype_eltp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_HostLInd_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point3D_COM::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3D_COM::kXFieldNumber;
const int Point3D_COM::kYFieldNumber;
const int Point3D_COM::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3D_COM::Point3D_COM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_Point3D_COM.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.Point3D_COM)
}
Point3D_COM::Point3D_COM(const Point3D_COM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ads_common.Point3D_COM)
}

void Point3D_COM::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Point3D_COM::~Point3D_COM() {
  // @@protoc_insertion_point(destructor:ads_common.Point3D_COM)
  SharedDtor();
}

void Point3D_COM::SharedDtor() {
}

void Point3D_COM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Point3D_COM::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3D_COM& Point3D_COM::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_Point3D_COM.base);
  return *internal_default_instance();
}


void Point3D_COM::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.Point3D_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Point3D_COM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.Point3D_COM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.Point3D_COM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.Point3D_COM)
  return false;
#undef DO_
}

void Point3D_COM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.Point3D_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.Point3D_COM)
}

::google::protobuf::uint8* Point3D_COM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.Point3D_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.Point3D_COM)
  return target;
}

size_t Point3D_COM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.Point3D_COM)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point3D_COM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.Point3D_COM)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3D_COM* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3D_COM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.Point3D_COM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.Point3D_COM)
    MergeFrom(*source);
  }
}

void Point3D_COM::MergeFrom(const Point3D_COM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.Point3D_COM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Point3D_COM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.Point3D_COM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3D_COM::CopyFrom(const Point3D_COM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.Point3D_COM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3D_COM::IsInitialized() const {
  return true;
}

void Point3D_COM::Swap(Point3D_COM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3D_COM::InternalSwap(Point3D_COM* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Point3D_COM::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HafRect3D_COM::InitAsDefaultInstance() {
  ::ads_common::_HafRect3D_COM_default_instance_._instance.get_mutable()->center_ = const_cast< ::ads_common::Point3D_COM*>(
      ::ads_common::Point3D_COM::internal_default_instance());
  ::ads_common::_HafRect3D_COM_default_instance_._instance.get_mutable()->centerstddev_ = const_cast< ::ads_common::Point3D_COM*>(
      ::ads_common::Point3D_COM::internal_default_instance());
  ::ads_common::_HafRect3D_COM_default_instance_._instance.get_mutable()->sizelwh_ = const_cast< ::ads_common::Point3D_COM*>(
      ::ads_common::Point3D_COM::internal_default_instance());
  ::ads_common::_HafRect3D_COM_default_instance_._instance.get_mutable()->sizestddev_ = const_cast< ::ads_common::Point3D_COM*>(
      ::ads_common::Point3D_COM::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HafRect3D_COM::kCenterFieldNumber;
const int HafRect3D_COM::kCenterStdDevFieldNumber;
const int HafRect3D_COM::kSizeLWHFieldNumber;
const int HafRect3D_COM::kSizeStdDevFieldNumber;
const int HafRect3D_COM::kOrientationFieldNumber;
const int HafRect3D_COM::kOrientationStdDevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HafRect3D_COM::HafRect3D_COM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_HafRect3D_COM.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.HafRect3D_COM)
}
HafRect3D_COM::HafRect3D_COM(const HafRect3D_COM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center()) {
    center_ = new ::ads_common::Point3D_COM(*from.center_);
  } else {
    center_ = NULL;
  }
  if (from.has_centerstddev()) {
    centerstddev_ = new ::ads_common::Point3D_COM(*from.centerstddev_);
  } else {
    centerstddev_ = NULL;
  }
  if (from.has_sizelwh()) {
    sizelwh_ = new ::ads_common::Point3D_COM(*from.sizelwh_);
  } else {
    sizelwh_ = NULL;
  }
  if (from.has_sizestddev()) {
    sizestddev_ = new ::ads_common::Point3D_COM(*from.sizestddev_);
  } else {
    sizestddev_ = NULL;
  }
  ::memcpy(&orientation_, &from.orientation_,
    static_cast<size_t>(reinterpret_cast<char*>(&orientationstddev_) -
    reinterpret_cast<char*>(&orientation_)) + sizeof(orientationstddev_));
  // @@protoc_insertion_point(copy_constructor:ads_common.HafRect3D_COM)
}

void HafRect3D_COM::SharedCtor() {
  ::memset(&center_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientationstddev_) -
      reinterpret_cast<char*>(&center_)) + sizeof(orientationstddev_));
}

HafRect3D_COM::~HafRect3D_COM() {
  // @@protoc_insertion_point(destructor:ads_common.HafRect3D_COM)
  SharedDtor();
}

void HafRect3D_COM::SharedDtor() {
  if (this != internal_default_instance()) delete center_;
  if (this != internal_default_instance()) delete centerstddev_;
  if (this != internal_default_instance()) delete sizelwh_;
  if (this != internal_default_instance()) delete sizestddev_;
}

void HafRect3D_COM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HafRect3D_COM::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HafRect3D_COM& HafRect3D_COM::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_HafRect3D_COM.base);
  return *internal_default_instance();
}


void HafRect3D_COM::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.HafRect3D_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && center_ != NULL) {
    delete center_;
  }
  center_ = NULL;
  if (GetArenaNoVirtual() == NULL && centerstddev_ != NULL) {
    delete centerstddev_;
  }
  centerstddev_ = NULL;
  if (GetArenaNoVirtual() == NULL && sizelwh_ != NULL) {
    delete sizelwh_;
  }
  sizelwh_ = NULL;
  if (GetArenaNoVirtual() == NULL && sizestddev_ != NULL) {
    delete sizestddev_;
  }
  sizestddev_ = NULL;
  ::memset(&orientation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientationstddev_) -
      reinterpret_cast<char*>(&orientation_)) + sizeof(orientationstddev_));
  _internal_metadata_.Clear();
}

bool HafRect3D_COM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.HafRect3D_COM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ads_common.Point3D_COM Center = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_center()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.Point3D_COM CenterStdDev = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_centerstddev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.Point3D_COM SizeLWH = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sizelwh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.Point3D_COM SizeStdDev = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sizestddev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Orientation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orientation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float OrientationStdDev = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orientationstddev_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.HafRect3D_COM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.HafRect3D_COM)
  return false;
#undef DO_
}

void HafRect3D_COM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.HafRect3D_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ads_common.Point3D_COM Center = 1;
  if (this->has_center()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_center(), output);
  }

  // .ads_common.Point3D_COM CenterStdDev = 2;
  if (this->has_centerstddev()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_centerstddev(), output);
  }

  // .ads_common.Point3D_COM SizeLWH = 3;
  if (this->has_sizelwh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_sizelwh(), output);
  }

  // .ads_common.Point3D_COM SizeStdDev = 4;
  if (this->has_sizestddev()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_sizestddev(), output);
  }

  // float Orientation = 5;
  if (this->orientation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->orientation(), output);
  }

  // float OrientationStdDev = 6;
  if (this->orientationstddev() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->orientationstddev(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.HafRect3D_COM)
}

::google::protobuf::uint8* HafRect3D_COM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.HafRect3D_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ads_common.Point3D_COM Center = 1;
  if (this->has_center()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_center(), deterministic, target);
  }

  // .ads_common.Point3D_COM CenterStdDev = 2;
  if (this->has_centerstddev()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_centerstddev(), deterministic, target);
  }

  // .ads_common.Point3D_COM SizeLWH = 3;
  if (this->has_sizelwh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_sizelwh(), deterministic, target);
  }

  // .ads_common.Point3D_COM SizeStdDev = 4;
  if (this->has_sizestddev()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_sizestddev(), deterministic, target);
  }

  // float Orientation = 5;
  if (this->orientation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->orientation(), target);
  }

  // float OrientationStdDev = 6;
  if (this->orientationstddev() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->orientationstddev(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.HafRect3D_COM)
  return target;
}

size_t HafRect3D_COM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.HafRect3D_COM)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ads_common.Point3D_COM Center = 1;
  if (this->has_center()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *center_);
  }

  // .ads_common.Point3D_COM CenterStdDev = 2;
  if (this->has_centerstddev()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *centerstddev_);
  }

  // .ads_common.Point3D_COM SizeLWH = 3;
  if (this->has_sizelwh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sizelwh_);
  }

  // .ads_common.Point3D_COM SizeStdDev = 4;
  if (this->has_sizestddev()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sizestddev_);
  }

  // float Orientation = 5;
  if (this->orientation() != 0) {
    total_size += 1 + 4;
  }

  // float OrientationStdDev = 6;
  if (this->orientationstddev() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HafRect3D_COM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.HafRect3D_COM)
  GOOGLE_DCHECK_NE(&from, this);
  const HafRect3D_COM* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HafRect3D_COM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.HafRect3D_COM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.HafRect3D_COM)
    MergeFrom(*source);
  }
}

void HafRect3D_COM::MergeFrom(const HafRect3D_COM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.HafRect3D_COM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_center()) {
    mutable_center()->::ads_common::Point3D_COM::MergeFrom(from.center());
  }
  if (from.has_centerstddev()) {
    mutable_centerstddev()->::ads_common::Point3D_COM::MergeFrom(from.centerstddev());
  }
  if (from.has_sizelwh()) {
    mutable_sizelwh()->::ads_common::Point3D_COM::MergeFrom(from.sizelwh());
  }
  if (from.has_sizestddev()) {
    mutable_sizestddev()->::ads_common::Point3D_COM::MergeFrom(from.sizestddev());
  }
  if (from.orientation() != 0) {
    set_orientation(from.orientation());
  }
  if (from.orientationstddev() != 0) {
    set_orientationstddev(from.orientationstddev());
  }
}

void HafRect3D_COM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.HafRect3D_COM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HafRect3D_COM::CopyFrom(const HafRect3D_COM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.HafRect3D_COM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HafRect3D_COM::IsInitialized() const {
  return true;
}

void HafRect3D_COM::Swap(HafRect3D_COM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HafRect3D_COM::InternalSwap(HafRect3D_COM* other) {
  using std::swap;
  swap(center_, other->center_);
  swap(centerstddev_, other->centerstddev_);
  swap(sizelwh_, other->sizelwh_);
  swap(sizestddev_, other->sizestddev_);
  swap(orientation_, other->orientation_);
  swap(orientationstddev_, other->orientationstddev_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HafRect3D_COM::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point2D_COM::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point2D_COM::kXFieldNumber;
const int Point2D_COM::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point2D_COM::Point2D_COM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_Point2D_COM.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.Point2D_COM)
}
Point2D_COM::Point2D_COM(const Point2D_COM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:ads_common.Point2D_COM)
}

void Point2D_COM::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Point2D_COM::~Point2D_COM() {
  // @@protoc_insertion_point(destructor:ads_common.Point2D_COM)
  SharedDtor();
}

void Point2D_COM::SharedDtor() {
}

void Point2D_COM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Point2D_COM::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point2D_COM& Point2D_COM::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_Point2D_COM.base);
  return *internal_default_instance();
}


void Point2D_COM::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.Point2D_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Point2D_COM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.Point2D_COM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.Point2D_COM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.Point2D_COM)
  return false;
#undef DO_
}

void Point2D_COM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.Point2D_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.Point2D_COM)
}

::google::protobuf::uint8* Point2D_COM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.Point2D_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.Point2D_COM)
  return target;
}

size_t Point2D_COM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.Point2D_COM)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point2D_COM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.Point2D_COM)
  GOOGLE_DCHECK_NE(&from, this);
  const Point2D_COM* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point2D_COM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.Point2D_COM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.Point2D_COM)
    MergeFrom(*source);
  }
}

void Point2D_COM::MergeFrom(const Point2D_COM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.Point2D_COM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Point2D_COM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.Point2D_COM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point2D_COM::CopyFrom(const Point2D_COM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.Point2D_COM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point2D_COM::IsInitialized() const {
  return true;
}

void Point2D_COM::Swap(Point2D_COM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point2D_COM::InternalSwap(Point2D_COM* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Point2D_COM::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HafTime_COM::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HafTime_COM::kSecFieldNumber;
const int HafTime_COM::kNsecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HafTime_COM::HafTime_COM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_HafTime_COM.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.HafTime_COM)
}
HafTime_COM::HafTime_COM(const HafTime_COM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sec_, &from.sec_,
    static_cast<size_t>(reinterpret_cast<char*>(&nsec_) -
    reinterpret_cast<char*>(&sec_)) + sizeof(nsec_));
  // @@protoc_insertion_point(copy_constructor:ads_common.HafTime_COM)
}

void HafTime_COM::SharedCtor() {
  ::memset(&sec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsec_) -
      reinterpret_cast<char*>(&sec_)) + sizeof(nsec_));
}

HafTime_COM::~HafTime_COM() {
  // @@protoc_insertion_point(destructor:ads_common.HafTime_COM)
  SharedDtor();
}

void HafTime_COM::SharedDtor() {
}

void HafTime_COM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HafTime_COM::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HafTime_COM& HafTime_COM::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_HafTime_COM.base);
  return *internal_default_instance();
}


void HafTime_COM::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.HafTime_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsec_) -
      reinterpret_cast<char*>(&sec_)) + sizeof(nsec_));
  _internal_metadata_.Clear();
}

bool HafTime_COM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.HafTime_COM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float sec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float nsec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nsec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.HafTime_COM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.HafTime_COM)
  return false;
#undef DO_
}

void HafTime_COM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.HafTime_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float sec = 1;
  if (this->sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->sec(), output);
  }

  // float nsec = 2;
  if (this->nsec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->nsec(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.HafTime_COM)
}

::google::protobuf::uint8* HafTime_COM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.HafTime_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float sec = 1;
  if (this->sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->sec(), target);
  }

  // float nsec = 2;
  if (this->nsec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->nsec(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.HafTime_COM)
  return target;
}

size_t HafTime_COM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.HafTime_COM)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float sec = 1;
  if (this->sec() != 0) {
    total_size += 1 + 4;
  }

  // float nsec = 2;
  if (this->nsec() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HafTime_COM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.HafTime_COM)
  GOOGLE_DCHECK_NE(&from, this);
  const HafTime_COM* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HafTime_COM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.HafTime_COM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.HafTime_COM)
    MergeFrom(*source);
  }
}

void HafTime_COM::MergeFrom(const HafTime_COM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.HafTime_COM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sec() != 0) {
    set_sec(from.sec());
  }
  if (from.nsec() != 0) {
    set_nsec(from.nsec());
  }
}

void HafTime_COM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.HafTime_COM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HafTime_COM::CopyFrom(const HafTime_COM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.HafTime_COM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HafTime_COM::IsInitialized() const {
  return true;
}

void HafTime_COM::Swap(HafTime_COM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HafTime_COM::InternalSwap(HafTime_COM* other) {
  using std::swap;
  swap(sec_, other->sec_);
  swap(nsec_, other->nsec_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HafTime_COM::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HafFusionOut_COM::InitAsDefaultInstance() {
  ::ads_common::_HafFusionOut_COM_default_instance_._instance.get_mutable()->rectinfo_ = const_cast< ::ads_common::HafRect3D_COM*>(
      ::ads_common::HafRect3D_COM::internal_default_instance());
  ::ads_common::_HafFusionOut_COM_default_instance_._instance.get_mutable()->velocityabs_ = const_cast< ::ads_common::Point2D_COM*>(
      ::ads_common::Point2D_COM::internal_default_instance());
  ::ads_common::_HafFusionOut_COM_default_instance_._instance.get_mutable()->accelerationabs_ = const_cast< ::ads_common::Point2D_COM*>(
      ::ads_common::Point2D_COM::internal_default_instance());
  ::ads_common::_HafFusionOut_COM_default_instance_._instance.get_mutable()->timecreation_ = const_cast< ::ads_common::HafTime_COM*>(
      ::ads_common::HafTime_COM::internal_default_instance());
  ::ads_common::_HafFusionOut_COM_default_instance_._instance.get_mutable()->lastupdatedtime_ = const_cast< ::ads_common::HafTime_COM*>(
      ::ads_common::HafTime_COM::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HafFusionOut_COM::kObjectIDFieldNumber;
const int HafFusionOut_COM::kClassFieldNumber;
const int HafFusionOut_COM::kDetectSensorCurrentFieldNumber;
const int HafFusionOut_COM::kDetectSensorHistoryFieldNumber;
const int HafFusionOut_COM::kMaintenanceStatusFieldNumber;
const int HafFusionOut_COM::kClassConfidenceFieldNumber;
const int HafFusionOut_COM::kExistenceProbabilityFieldNumber;
const int HafFusionOut_COM::kRectInfoFieldNumber;
const int HafFusionOut_COM::kVelocityAbsFieldNumber;
const int HafFusionOut_COM::kAccelerationAbsFieldNumber;
const int HafFusionOut_COM::kTimeCreationFieldNumber;
const int HafFusionOut_COM::kLastUpdatedTimeFieldNumber;
const int HafFusionOut_COM::kMotionPatternFieldNumber;
const int HafFusionOut_COM::kMotionPatternHistoryFieldNumber;
const int HafFusionOut_COM::kBrakeLightStFieldNumber;
const int HafFusionOut_COM::kTurnLightStFieldNumber;
const int HafFusionOut_COM::kNearSideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HafFusionOut_COM::HafFusionOut_COM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_HafFusionOut_COM.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.HafFusionOut_COM)
}
HafFusionOut_COM::HafFusionOut_COM(const HafFusionOut_COM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rectinfo()) {
    rectinfo_ = new ::ads_common::HafRect3D_COM(*from.rectinfo_);
  } else {
    rectinfo_ = NULL;
  }
  if (from.has_velocityabs()) {
    velocityabs_ = new ::ads_common::Point2D_COM(*from.velocityabs_);
  } else {
    velocityabs_ = NULL;
  }
  if (from.has_accelerationabs()) {
    accelerationabs_ = new ::ads_common::Point2D_COM(*from.accelerationabs_);
  } else {
    accelerationabs_ = NULL;
  }
  if (from.has_timecreation()) {
    timecreation_ = new ::ads_common::HafTime_COM(*from.timecreation_);
  } else {
    timecreation_ = NULL;
  }
  if (from.has_lastupdatedtime()) {
    lastupdatedtime_ = new ::ads_common::HafTime_COM(*from.lastupdatedtime_);
  } else {
    lastupdatedtime_ = NULL;
  }
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nearside_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(nearside_));
  // @@protoc_insertion_point(copy_constructor:ads_common.HafFusionOut_COM)
}

void HafFusionOut_COM::SharedCtor() {
  ::memset(&rectinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nearside_) -
      reinterpret_cast<char*>(&rectinfo_)) + sizeof(nearside_));
}

HafFusionOut_COM::~HafFusionOut_COM() {
  // @@protoc_insertion_point(destructor:ads_common.HafFusionOut_COM)
  SharedDtor();
}

void HafFusionOut_COM::SharedDtor() {
  if (this != internal_default_instance()) delete rectinfo_;
  if (this != internal_default_instance()) delete velocityabs_;
  if (this != internal_default_instance()) delete accelerationabs_;
  if (this != internal_default_instance()) delete timecreation_;
  if (this != internal_default_instance()) delete lastupdatedtime_;
}

void HafFusionOut_COM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HafFusionOut_COM::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HafFusionOut_COM& HafFusionOut_COM::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_HafFusionOut_COM.base);
  return *internal_default_instance();
}


void HafFusionOut_COM::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.HafFusionOut_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && rectinfo_ != NULL) {
    delete rectinfo_;
  }
  rectinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && velocityabs_ != NULL) {
    delete velocityabs_;
  }
  velocityabs_ = NULL;
  if (GetArenaNoVirtual() == NULL && accelerationabs_ != NULL) {
    delete accelerationabs_;
  }
  accelerationabs_ = NULL;
  if (GetArenaNoVirtual() == NULL && timecreation_ != NULL) {
    delete timecreation_;
  }
  timecreation_ = NULL;
  if (GetArenaNoVirtual() == NULL && lastupdatedtime_ != NULL) {
    delete lastupdatedtime_;
  }
  lastupdatedtime_ = NULL;
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nearside_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(nearside_));
  _internal_metadata_.Clear();
}

bool HafFusionOut_COM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.HafFusionOut_COM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 ObjectID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &objectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Class = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &class__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DetectSensor_Current = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &detectsensor_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 DetectSensor_History = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &detectsensor_history_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 MaintenanceStatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &maintenancestatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 ClassConfidence = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &classconfidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 ExistenceProbability = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &existenceprobability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.HafRect3D_COM RectInfo = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rectinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.Point2D_COM VelocityAbs = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocityabs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.Point2D_COM AccelerationAbs = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_accelerationabs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.HafTime_COM TimeCreation = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timecreation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.HafTime_COM LastUpdatedTime = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lastupdatedtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 MotionPattern = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &motionpattern_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 MotionPatternHistory = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &motionpatternhistory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 BrakeLightSt = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &brakelightst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 TurnLightSt = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &turnlightst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 NearSide = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &nearside_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.HafFusionOut_COM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.HafFusionOut_COM)
  return false;
#undef DO_
}

void HafFusionOut_COM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.HafFusionOut_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ObjectID = 1;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->objectid(), output);
  }

  // sint32 Class = 2;
  if (this->class_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->class_(), output);
  }

  // sint32 DetectSensor_Current = 3;
  if (this->detectsensor_current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->detectsensor_current(), output);
  }

  // sint32 DetectSensor_History = 4;
  if (this->detectsensor_history() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->detectsensor_history(), output);
  }

  // sint32 MaintenanceStatus = 5;
  if (this->maintenancestatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->maintenancestatus(), output);
  }

  // sint32 ClassConfidence = 6;
  if (this->classconfidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->classconfidence(), output);
  }

  // sint32 ExistenceProbability = 7;
  if (this->existenceprobability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->existenceprobability(), output);
  }

  // .ads_common.HafRect3D_COM RectInfo = 8;
  if (this->has_rectinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_rectinfo(), output);
  }

  // .ads_common.Point2D_COM VelocityAbs = 9;
  if (this->has_velocityabs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_velocityabs(), output);
  }

  // .ads_common.Point2D_COM AccelerationAbs = 10;
  if (this->has_accelerationabs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_accelerationabs(), output);
  }

  // .ads_common.HafTime_COM TimeCreation = 11;
  if (this->has_timecreation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_timecreation(), output);
  }

  // .ads_common.HafTime_COM LastUpdatedTime = 12;
  if (this->has_lastupdatedtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_lastupdatedtime(), output);
  }

  // sint32 MotionPattern = 13;
  if (this->motionpattern() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(13, this->motionpattern(), output);
  }

  // sint32 MotionPatternHistory = 14;
  if (this->motionpatternhistory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(14, this->motionpatternhistory(), output);
  }

  // sint32 BrakeLightSt = 15;
  if (this->brakelightst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(15, this->brakelightst(), output);
  }

  // sint32 TurnLightSt = 16;
  if (this->turnlightst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(16, this->turnlightst(), output);
  }

  // sint32 NearSide = 17;
  if (this->nearside() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(17, this->nearside(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.HafFusionOut_COM)
}

::google::protobuf::uint8* HafFusionOut_COM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.HafFusionOut_COM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ObjectID = 1;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->objectid(), target);
  }

  // sint32 Class = 2;
  if (this->class_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->class_(), target);
  }

  // sint32 DetectSensor_Current = 3;
  if (this->detectsensor_current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->detectsensor_current(), target);
  }

  // sint32 DetectSensor_History = 4;
  if (this->detectsensor_history() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->detectsensor_history(), target);
  }

  // sint32 MaintenanceStatus = 5;
  if (this->maintenancestatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->maintenancestatus(), target);
  }

  // sint32 ClassConfidence = 6;
  if (this->classconfidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->classconfidence(), target);
  }

  // sint32 ExistenceProbability = 7;
  if (this->existenceprobability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->existenceprobability(), target);
  }

  // .ads_common.HafRect3D_COM RectInfo = 8;
  if (this->has_rectinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_rectinfo(), deterministic, target);
  }

  // .ads_common.Point2D_COM VelocityAbs = 9;
  if (this->has_velocityabs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_velocityabs(), deterministic, target);
  }

  // .ads_common.Point2D_COM AccelerationAbs = 10;
  if (this->has_accelerationabs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_accelerationabs(), deterministic, target);
  }

  // .ads_common.HafTime_COM TimeCreation = 11;
  if (this->has_timecreation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_timecreation(), deterministic, target);
  }

  // .ads_common.HafTime_COM LastUpdatedTime = 12;
  if (this->has_lastupdatedtime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_lastupdatedtime(), deterministic, target);
  }

  // sint32 MotionPattern = 13;
  if (this->motionpattern() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(13, this->motionpattern(), target);
  }

  // sint32 MotionPatternHistory = 14;
  if (this->motionpatternhistory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(14, this->motionpatternhistory(), target);
  }

  // sint32 BrakeLightSt = 15;
  if (this->brakelightst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(15, this->brakelightst(), target);
  }

  // sint32 TurnLightSt = 16;
  if (this->turnlightst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(16, this->turnlightst(), target);
  }

  // sint32 NearSide = 17;
  if (this->nearside() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(17, this->nearside(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.HafFusionOut_COM)
  return target;
}

size_t HafFusionOut_COM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.HafFusionOut_COM)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ads_common.HafRect3D_COM RectInfo = 8;
  if (this->has_rectinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rectinfo_);
  }

  // .ads_common.Point2D_COM VelocityAbs = 9;
  if (this->has_velocityabs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocityabs_);
  }

  // .ads_common.Point2D_COM AccelerationAbs = 10;
  if (this->has_accelerationabs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *accelerationabs_);
  }

  // .ads_common.HafTime_COM TimeCreation = 11;
  if (this->has_timecreation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timecreation_);
  }

  // .ads_common.HafTime_COM LastUpdatedTime = 12;
  if (this->has_lastupdatedtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lastupdatedtime_);
  }

  // sint32 ObjectID = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->objectid());
  }

  // sint32 Class = 2;
  if (this->class_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->class_());
  }

  // sint32 DetectSensor_Current = 3;
  if (this->detectsensor_current() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->detectsensor_current());
  }

  // sint32 DetectSensor_History = 4;
  if (this->detectsensor_history() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->detectsensor_history());
  }

  // sint32 MaintenanceStatus = 5;
  if (this->maintenancestatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->maintenancestatus());
  }

  // sint32 ClassConfidence = 6;
  if (this->classconfidence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->classconfidence());
  }

  // sint32 ExistenceProbability = 7;
  if (this->existenceprobability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->existenceprobability());
  }

  // sint32 MotionPattern = 13;
  if (this->motionpattern() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->motionpattern());
  }

  // sint32 MotionPatternHistory = 14;
  if (this->motionpatternhistory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->motionpatternhistory());
  }

  // sint32 BrakeLightSt = 15;
  if (this->brakelightst() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->brakelightst());
  }

  // sint32 TurnLightSt = 16;
  if (this->turnlightst() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->turnlightst());
  }

  // sint32 NearSide = 17;
  if (this->nearside() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->nearside());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HafFusionOut_COM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.HafFusionOut_COM)
  GOOGLE_DCHECK_NE(&from, this);
  const HafFusionOut_COM* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HafFusionOut_COM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.HafFusionOut_COM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.HafFusionOut_COM)
    MergeFrom(*source);
  }
}

void HafFusionOut_COM::MergeFrom(const HafFusionOut_COM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.HafFusionOut_COM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rectinfo()) {
    mutable_rectinfo()->::ads_common::HafRect3D_COM::MergeFrom(from.rectinfo());
  }
  if (from.has_velocityabs()) {
    mutable_velocityabs()->::ads_common::Point2D_COM::MergeFrom(from.velocityabs());
  }
  if (from.has_accelerationabs()) {
    mutable_accelerationabs()->::ads_common::Point2D_COM::MergeFrom(from.accelerationabs());
  }
  if (from.has_timecreation()) {
    mutable_timecreation()->::ads_common::HafTime_COM::MergeFrom(from.timecreation());
  }
  if (from.has_lastupdatedtime()) {
    mutable_lastupdatedtime()->::ads_common::HafTime_COM::MergeFrom(from.lastupdatedtime());
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.class_() != 0) {
    set_class_(from.class_());
  }
  if (from.detectsensor_current() != 0) {
    set_detectsensor_current(from.detectsensor_current());
  }
  if (from.detectsensor_history() != 0) {
    set_detectsensor_history(from.detectsensor_history());
  }
  if (from.maintenancestatus() != 0) {
    set_maintenancestatus(from.maintenancestatus());
  }
  if (from.classconfidence() != 0) {
    set_classconfidence(from.classconfidence());
  }
  if (from.existenceprobability() != 0) {
    set_existenceprobability(from.existenceprobability());
  }
  if (from.motionpattern() != 0) {
    set_motionpattern(from.motionpattern());
  }
  if (from.motionpatternhistory() != 0) {
    set_motionpatternhistory(from.motionpatternhistory());
  }
  if (from.brakelightst() != 0) {
    set_brakelightst(from.brakelightst());
  }
  if (from.turnlightst() != 0) {
    set_turnlightst(from.turnlightst());
  }
  if (from.nearside() != 0) {
    set_nearside(from.nearside());
  }
}

void HafFusionOut_COM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.HafFusionOut_COM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HafFusionOut_COM::CopyFrom(const HafFusionOut_COM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.HafFusionOut_COM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HafFusionOut_COM::IsInitialized() const {
  return true;
}

void HafFusionOut_COM::Swap(HafFusionOut_COM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HafFusionOut_COM::InternalSwap(HafFusionOut_COM* other) {
  using std::swap;
  swap(rectinfo_, other->rectinfo_);
  swap(velocityabs_, other->velocityabs_);
  swap(accelerationabs_, other->accelerationabs_);
  swap(timecreation_, other->timecreation_);
  swap(lastupdatedtime_, other->lastupdatedtime_);
  swap(objectid_, other->objectid_);
  swap(class__, other->class__);
  swap(detectsensor_current_, other->detectsensor_current_);
  swap(detectsensor_history_, other->detectsensor_history_);
  swap(maintenancestatus_, other->maintenancestatus_);
  swap(classconfidence_, other->classconfidence_);
  swap(existenceprobability_, other->existenceprobability_);
  swap(motionpattern_, other->motionpattern_);
  swap(motionpatternhistory_, other->motionpatternhistory_);
  swap(brakelightst_, other->brakelightst_);
  swap(turnlightst_, other->turnlightst_);
  swap(nearside_, other->nearside_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HafFusionOut_COM::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HafTrajParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HafTrajParam::kA0FieldNumber;
const int HafTrajParam::kA1FieldNumber;
const int HafTrajParam::kA2FieldNumber;
const int HafTrajParam::kA3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HafTrajParam::HafTrajParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_HafTrajParam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.HafTrajParam)
}
HafTrajParam::HafTrajParam(const HafTrajParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&a0_, &from.a0_,
    static_cast<size_t>(reinterpret_cast<char*>(&a3_) -
    reinterpret_cast<char*>(&a0_)) + sizeof(a3_));
  // @@protoc_insertion_point(copy_constructor:ads_common.HafTrajParam)
}

void HafTrajParam::SharedCtor() {
  ::memset(&a0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a3_) -
      reinterpret_cast<char*>(&a0_)) + sizeof(a3_));
}

HafTrajParam::~HafTrajParam() {
  // @@protoc_insertion_point(destructor:ads_common.HafTrajParam)
  SharedDtor();
}

void HafTrajParam::SharedDtor() {
}

void HafTrajParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HafTrajParam::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HafTrajParam& HafTrajParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_HafTrajParam.base);
  return *internal_default_instance();
}


void HafTrajParam::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.HafTrajParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&a0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a3_) -
      reinterpret_cast<char*>(&a0_)) + sizeof(a3_));
  _internal_metadata_.Clear();
}

bool HafTrajParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.HafTrajParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float A0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float A1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float A2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float A3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.HafTrajParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.HafTrajParam)
  return false;
#undef DO_
}

void HafTrajParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.HafTrajParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float A0 = 1;
  if (this->a0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->a0(), output);
  }

  // float A1 = 2;
  if (this->a1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->a1(), output);
  }

  // float A2 = 3;
  if (this->a2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->a2(), output);
  }

  // float A3 = 4;
  if (this->a3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->a3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.HafTrajParam)
}

::google::protobuf::uint8* HafTrajParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.HafTrajParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float A0 = 1;
  if (this->a0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->a0(), target);
  }

  // float A1 = 2;
  if (this->a1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->a1(), target);
  }

  // float A2 = 3;
  if (this->a2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->a2(), target);
  }

  // float A3 = 4;
  if (this->a3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->a3(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.HafTrajParam)
  return target;
}

size_t HafTrajParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.HafTrajParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float A0 = 1;
  if (this->a0() != 0) {
    total_size += 1 + 4;
  }

  // float A1 = 2;
  if (this->a1() != 0) {
    total_size += 1 + 4;
  }

  // float A2 = 3;
  if (this->a2() != 0) {
    total_size += 1 + 4;
  }

  // float A3 = 4;
  if (this->a3() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HafTrajParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.HafTrajParam)
  GOOGLE_DCHECK_NE(&from, this);
  const HafTrajParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HafTrajParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.HafTrajParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.HafTrajParam)
    MergeFrom(*source);
  }
}

void HafTrajParam::MergeFrom(const HafTrajParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.HafTrajParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.a0() != 0) {
    set_a0(from.a0());
  }
  if (from.a1() != 0) {
    set_a1(from.a1());
  }
  if (from.a2() != 0) {
    set_a2(from.a2());
  }
  if (from.a3() != 0) {
    set_a3(from.a3());
  }
}

void HafTrajParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.HafTrajParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HafTrajParam::CopyFrom(const HafTrajParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.HafTrajParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HafTrajParam::IsInitialized() const {
  return true;
}

void HafTrajParam::Swap(HafTrajParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HafTrajParam::InternalSwap(HafTrajParam* other) {
  using std::swap;
  swap(a0_, other->a0_);
  swap(a1_, other->a1_);
  swap(a2_, other->a2_);
  swap(a3_, other->a3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HafTrajParam::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ACCOutputs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ACCOutputs::kACCVCSCMaxCrvteSpdSgFieldNumber;
const int ACCOutputs::kACCIsCSCCtrlActvBlFieldNumber;
const int ACCOutputs::kACCACSCAccelSgFieldNumber;
const int ACCOutputs::kACCIsCSCActvRtLmtOffBlFieldNumber;
const int ACCOutputs::kACCIsCSCActvRtLmtMstLgtBlFieldNumber;
const int ACCOutputs::kACCAFSCAccelSgFieldNumber;
const int ACCOutputs::kACCAFTCAccelSgFieldNumber;
const int ACCOutputs::kACCDFTCLongtDsrdDistSgFieldNumber;
const int ACCOutputs::kACCIsFTCStdyBlFieldNumber;
const int ACCOutputs::kACCIsFTCSlideFlagBlFieldNumber;
const int ACCOutputs::kACCDFTCDsrdDistLvl1HMISgFieldNumber;
const int ACCOutputs::kACCDFTCDsrdDistLvl2HMISgFieldNumber;
const int ACCOutputs::kACCDFTCDsrdDistLvl3HMISgFieldNumber;
const int ACCOutputs::kACCAFTCAccelDynSgFieldNumber;
const int ACCOutputs::kACCIsFTCDnSteepHillBlFieldNumber;
const int ACCOutputs::kACCIsFTCUpSteepHillBlFieldNumber;
const int ACCOutputs::kACCDDistMinGapSgFieldNumber;
const int ACCOutputs::kACCIsCBCActvBlFieldNumber;
const int ACCOutputs::kACCAMALTgtAccelSgFieldNumber;
const int ACCOutputs::kACCAMALTgtAccelRAWSgFieldNumber;
const int ACCOutputs::kACCIsMALCSCAccelUsedBlFieldNumber;
const int ACCOutputs::kACCAMALTgtAccelDeadCompSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ACCOutputs::ACCOutputs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_ACCOutputs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.ACCOutputs)
}
ACCOutputs::ACCOutputs(const ACCOutputs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&acc_v_cscmaxcrvtespd_sg_, &from.acc_v_cscmaxcrvtespd_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&acc_a_maltgtacceldeadcomp_sg_) -
    reinterpret_cast<char*>(&acc_v_cscmaxcrvtespd_sg_)) + sizeof(acc_a_maltgtacceldeadcomp_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.ACCOutputs)
}

void ACCOutputs::SharedCtor() {
  ::memset(&acc_v_cscmaxcrvtespd_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acc_a_maltgtacceldeadcomp_sg_) -
      reinterpret_cast<char*>(&acc_v_cscmaxcrvtespd_sg_)) + sizeof(acc_a_maltgtacceldeadcomp_sg_));
}

ACCOutputs::~ACCOutputs() {
  // @@protoc_insertion_point(destructor:ads_common.ACCOutputs)
  SharedDtor();
}

void ACCOutputs::SharedDtor() {
}

void ACCOutputs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ACCOutputs::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ACCOutputs& ACCOutputs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_ACCOutputs.base);
  return *internal_default_instance();
}


void ACCOutputs::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.ACCOutputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&acc_v_cscmaxcrvtespd_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acc_a_maltgtacceldeadcomp_sg_) -
      reinterpret_cast<char*>(&acc_v_cscmaxcrvtespd_sg_)) + sizeof(acc_a_maltgtacceldeadcomp_sg_));
  _internal_metadata_.Clear();
}

bool ACCOutputs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.ACCOutputs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float ACC_v_CSCMaxCrvteSpd_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_v_cscmaxcrvtespd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_CSCCtrlActv_bl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_cscctrlactv_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_a_CSCAccel_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_a_cscaccel_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_CSCActvRtLmtOff_bl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_cscactvrtlmtoff_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_CSCActvRtLmtMstLgt_bl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_cscactvrtlmtmstlgt_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_a_FSCAccel_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_a_fscaccel_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_a_FTCAccel_sg = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_a_ftcaccel_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_d_FTCLongtDsrdDist_sg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_d_ftclongtdsrddist_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_FTCStdy_bl = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_ftcstdy_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_FTCSlideFlag_bl = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_ftcslideflag_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_d_FTCDsrdDistLvl1HMI_sg = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_d_ftcdsrddistlvl1hmi_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_d_FTCDsrdDistLvl2HMI_sg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_d_ftcdsrddistlvl2hmi_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_d_FTCDsrdDistLvl3HMI_sg = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_d_ftcdsrddistlvl3hmi_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_a_FTCAccelDyn_sg = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_a_ftcacceldyn_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_FTCDnSteepHill_bl = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_ftcdnsteephill_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_FTCUpSteepHill_bl = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_ftcupsteephill_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_d_DistMinGap_sg = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(141u /* 141 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_d_distmingap_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_CBCActv_bl = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_cbcactv_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_a_MALTgtAccel_sg = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_a_maltgtaccel_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_a_MALTgtAccelRAW_sg = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u /* 165 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_a_maltgtaccelraw_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ACC_is_MALCSCAccelUsed_bl = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &acc_is_malcscaccelused_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ACC_a_MALTgtAccelDeadComp_sg = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_a_maltgtacceldeadcomp_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.ACCOutputs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.ACCOutputs)
  return false;
#undef DO_
}

void ACCOutputs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.ACCOutputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float ACC_v_CSCMaxCrvteSpd_sg = 1;
  if (this->acc_v_cscmaxcrvtespd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->acc_v_cscmaxcrvtespd_sg(), output);
  }

  // bool ACC_is_CSCCtrlActv_bl = 2;
  if (this->acc_is_cscctrlactv_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->acc_is_cscctrlactv_bl(), output);
  }

  // float ACC_a_CSCAccel_sg = 3;
  if (this->acc_a_cscaccel_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->acc_a_cscaccel_sg(), output);
  }

  // bool ACC_is_CSCActvRtLmtOff_bl = 4;
  if (this->acc_is_cscactvrtlmtoff_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->acc_is_cscactvrtlmtoff_bl(), output);
  }

  // bool ACC_is_CSCActvRtLmtMstLgt_bl = 5;
  if (this->acc_is_cscactvrtlmtmstlgt_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->acc_is_cscactvrtlmtmstlgt_bl(), output);
  }

  // float ACC_a_FSCAccel_sg = 6;
  if (this->acc_a_fscaccel_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->acc_a_fscaccel_sg(), output);
  }

  // float ACC_a_FTCAccel_sg = 7;
  if (this->acc_a_ftcaccel_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->acc_a_ftcaccel_sg(), output);
  }

  // float ACC_d_FTCLongtDsrdDist_sg = 8;
  if (this->acc_d_ftclongtdsrddist_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->acc_d_ftclongtdsrddist_sg(), output);
  }

  // bool ACC_is_FTCStdy_bl = 9;
  if (this->acc_is_ftcstdy_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->acc_is_ftcstdy_bl(), output);
  }

  // bool ACC_is_FTCSlideFlag_bl = 10;
  if (this->acc_is_ftcslideflag_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->acc_is_ftcslideflag_bl(), output);
  }

  // float ACC_d_FTCDsrdDistLvl1HMI_sg = 11;
  if (this->acc_d_ftcdsrddistlvl1hmi_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->acc_d_ftcdsrddistlvl1hmi_sg(), output);
  }

  // float ACC_d_FTCDsrdDistLvl2HMI_sg = 12;
  if (this->acc_d_ftcdsrddistlvl2hmi_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->acc_d_ftcdsrddistlvl2hmi_sg(), output);
  }

  // float ACC_d_FTCDsrdDistLvl3HMI_sg = 13;
  if (this->acc_d_ftcdsrddistlvl3hmi_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->acc_d_ftcdsrddistlvl3hmi_sg(), output);
  }

  // float ACC_a_FTCAccelDyn_sg = 14;
  if (this->acc_a_ftcacceldyn_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->acc_a_ftcacceldyn_sg(), output);
  }

  // bool ACC_is_FTCDnSteepHill_bl = 15;
  if (this->acc_is_ftcdnsteephill_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->acc_is_ftcdnsteephill_bl(), output);
  }

  // bool ACC_is_FTCUpSteepHill_bl = 16;
  if (this->acc_is_ftcupsteephill_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->acc_is_ftcupsteephill_bl(), output);
  }

  // float ACC_d_DistMinGap_sg = 17;
  if (this->acc_d_distmingap_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->acc_d_distmingap_sg(), output);
  }

  // bool ACC_is_CBCActv_bl = 18;
  if (this->acc_is_cbcactv_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->acc_is_cbcactv_bl(), output);
  }

  // float ACC_a_MALTgtAccel_sg = 19;
  if (this->acc_a_maltgtaccel_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->acc_a_maltgtaccel_sg(), output);
  }

  // float ACC_a_MALTgtAccelRAW_sg = 20;
  if (this->acc_a_maltgtaccelraw_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->acc_a_maltgtaccelraw_sg(), output);
  }

  // bool ACC_is_MALCSCAccelUsed_bl = 21;
  if (this->acc_is_malcscaccelused_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->acc_is_malcscaccelused_bl(), output);
  }

  // float ACC_a_MALTgtAccelDeadComp_sg = 22;
  if (this->acc_a_maltgtacceldeadcomp_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->acc_a_maltgtacceldeadcomp_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.ACCOutputs)
}

::google::protobuf::uint8* ACCOutputs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.ACCOutputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float ACC_v_CSCMaxCrvteSpd_sg = 1;
  if (this->acc_v_cscmaxcrvtespd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->acc_v_cscmaxcrvtespd_sg(), target);
  }

  // bool ACC_is_CSCCtrlActv_bl = 2;
  if (this->acc_is_cscctrlactv_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->acc_is_cscctrlactv_bl(), target);
  }

  // float ACC_a_CSCAccel_sg = 3;
  if (this->acc_a_cscaccel_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->acc_a_cscaccel_sg(), target);
  }

  // bool ACC_is_CSCActvRtLmtOff_bl = 4;
  if (this->acc_is_cscactvrtlmtoff_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->acc_is_cscactvrtlmtoff_bl(), target);
  }

  // bool ACC_is_CSCActvRtLmtMstLgt_bl = 5;
  if (this->acc_is_cscactvrtlmtmstlgt_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->acc_is_cscactvrtlmtmstlgt_bl(), target);
  }

  // float ACC_a_FSCAccel_sg = 6;
  if (this->acc_a_fscaccel_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->acc_a_fscaccel_sg(), target);
  }

  // float ACC_a_FTCAccel_sg = 7;
  if (this->acc_a_ftcaccel_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->acc_a_ftcaccel_sg(), target);
  }

  // float ACC_d_FTCLongtDsrdDist_sg = 8;
  if (this->acc_d_ftclongtdsrddist_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->acc_d_ftclongtdsrddist_sg(), target);
  }

  // bool ACC_is_FTCStdy_bl = 9;
  if (this->acc_is_ftcstdy_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->acc_is_ftcstdy_bl(), target);
  }

  // bool ACC_is_FTCSlideFlag_bl = 10;
  if (this->acc_is_ftcslideflag_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->acc_is_ftcslideflag_bl(), target);
  }

  // float ACC_d_FTCDsrdDistLvl1HMI_sg = 11;
  if (this->acc_d_ftcdsrddistlvl1hmi_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->acc_d_ftcdsrddistlvl1hmi_sg(), target);
  }

  // float ACC_d_FTCDsrdDistLvl2HMI_sg = 12;
  if (this->acc_d_ftcdsrddistlvl2hmi_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->acc_d_ftcdsrddistlvl2hmi_sg(), target);
  }

  // float ACC_d_FTCDsrdDistLvl3HMI_sg = 13;
  if (this->acc_d_ftcdsrddistlvl3hmi_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->acc_d_ftcdsrddistlvl3hmi_sg(), target);
  }

  // float ACC_a_FTCAccelDyn_sg = 14;
  if (this->acc_a_ftcacceldyn_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->acc_a_ftcacceldyn_sg(), target);
  }

  // bool ACC_is_FTCDnSteepHill_bl = 15;
  if (this->acc_is_ftcdnsteephill_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->acc_is_ftcdnsteephill_bl(), target);
  }

  // bool ACC_is_FTCUpSteepHill_bl = 16;
  if (this->acc_is_ftcupsteephill_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->acc_is_ftcupsteephill_bl(), target);
  }

  // float ACC_d_DistMinGap_sg = 17;
  if (this->acc_d_distmingap_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->acc_d_distmingap_sg(), target);
  }

  // bool ACC_is_CBCActv_bl = 18;
  if (this->acc_is_cbcactv_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->acc_is_cbcactv_bl(), target);
  }

  // float ACC_a_MALTgtAccel_sg = 19;
  if (this->acc_a_maltgtaccel_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->acc_a_maltgtaccel_sg(), target);
  }

  // float ACC_a_MALTgtAccelRAW_sg = 20;
  if (this->acc_a_maltgtaccelraw_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->acc_a_maltgtaccelraw_sg(), target);
  }

  // bool ACC_is_MALCSCAccelUsed_bl = 21;
  if (this->acc_is_malcscaccelused_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->acc_is_malcscaccelused_bl(), target);
  }

  // float ACC_a_MALTgtAccelDeadComp_sg = 22;
  if (this->acc_a_maltgtacceldeadcomp_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->acc_a_maltgtacceldeadcomp_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.ACCOutputs)
  return target;
}

size_t ACCOutputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.ACCOutputs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float ACC_v_CSCMaxCrvteSpd_sg = 1;
  if (this->acc_v_cscmaxcrvtespd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ACC_a_CSCAccel_sg = 3;
  if (this->acc_a_cscaccel_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool ACC_is_CSCCtrlActv_bl = 2;
  if (this->acc_is_cscctrlactv_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_CSCActvRtLmtOff_bl = 4;
  if (this->acc_is_cscactvrtlmtoff_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_CSCActvRtLmtMstLgt_bl = 5;
  if (this->acc_is_cscactvrtlmtmstlgt_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_FTCStdy_bl = 9;
  if (this->acc_is_ftcstdy_bl() != 0) {
    total_size += 1 + 1;
  }

  // float ACC_a_FSCAccel_sg = 6;
  if (this->acc_a_fscaccel_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ACC_a_FTCAccel_sg = 7;
  if (this->acc_a_ftcaccel_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ACC_d_FTCLongtDsrdDist_sg = 8;
  if (this->acc_d_ftclongtdsrddist_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ACC_d_FTCDsrdDistLvl1HMI_sg = 11;
  if (this->acc_d_ftcdsrddistlvl1hmi_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ACC_d_FTCDsrdDistLvl2HMI_sg = 12;
  if (this->acc_d_ftcdsrddistlvl2hmi_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ACC_d_FTCDsrdDistLvl3HMI_sg = 13;
  if (this->acc_d_ftcdsrddistlvl3hmi_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ACC_a_FTCAccelDyn_sg = 14;
  if (this->acc_a_ftcacceldyn_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool ACC_is_FTCSlideFlag_bl = 10;
  if (this->acc_is_ftcslideflag_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_FTCDnSteepHill_bl = 15;
  if (this->acc_is_ftcdnsteephill_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool ACC_is_FTCUpSteepHill_bl = 16;
  if (this->acc_is_ftcupsteephill_bl() != 0) {
    total_size += 2 + 1;
  }

  // bool ACC_is_CBCActv_bl = 18;
  if (this->acc_is_cbcactv_bl() != 0) {
    total_size += 2 + 1;
  }

  // float ACC_d_DistMinGap_sg = 17;
  if (this->acc_d_distmingap_sg() != 0) {
    total_size += 2 + 4;
  }

  // float ACC_a_MALTgtAccel_sg = 19;
  if (this->acc_a_maltgtaccel_sg() != 0) {
    total_size += 2 + 4;
  }

  // float ACC_a_MALTgtAccelRAW_sg = 20;
  if (this->acc_a_maltgtaccelraw_sg() != 0) {
    total_size += 2 + 4;
  }

  // bool ACC_is_MALCSCAccelUsed_bl = 21;
  if (this->acc_is_malcscaccelused_bl() != 0) {
    total_size += 2 + 1;
  }

  // float ACC_a_MALTgtAccelDeadComp_sg = 22;
  if (this->acc_a_maltgtacceldeadcomp_sg() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ACCOutputs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.ACCOutputs)
  GOOGLE_DCHECK_NE(&from, this);
  const ACCOutputs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ACCOutputs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.ACCOutputs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.ACCOutputs)
    MergeFrom(*source);
  }
}

void ACCOutputs::MergeFrom(const ACCOutputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.ACCOutputs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.acc_v_cscmaxcrvtespd_sg() != 0) {
    set_acc_v_cscmaxcrvtespd_sg(from.acc_v_cscmaxcrvtespd_sg());
  }
  if (from.acc_a_cscaccel_sg() != 0) {
    set_acc_a_cscaccel_sg(from.acc_a_cscaccel_sg());
  }
  if (from.acc_is_cscctrlactv_bl() != 0) {
    set_acc_is_cscctrlactv_bl(from.acc_is_cscctrlactv_bl());
  }
  if (from.acc_is_cscactvrtlmtoff_bl() != 0) {
    set_acc_is_cscactvrtlmtoff_bl(from.acc_is_cscactvrtlmtoff_bl());
  }
  if (from.acc_is_cscactvrtlmtmstlgt_bl() != 0) {
    set_acc_is_cscactvrtlmtmstlgt_bl(from.acc_is_cscactvrtlmtmstlgt_bl());
  }
  if (from.acc_is_ftcstdy_bl() != 0) {
    set_acc_is_ftcstdy_bl(from.acc_is_ftcstdy_bl());
  }
  if (from.acc_a_fscaccel_sg() != 0) {
    set_acc_a_fscaccel_sg(from.acc_a_fscaccel_sg());
  }
  if (from.acc_a_ftcaccel_sg() != 0) {
    set_acc_a_ftcaccel_sg(from.acc_a_ftcaccel_sg());
  }
  if (from.acc_d_ftclongtdsrddist_sg() != 0) {
    set_acc_d_ftclongtdsrddist_sg(from.acc_d_ftclongtdsrddist_sg());
  }
  if (from.acc_d_ftcdsrddistlvl1hmi_sg() != 0) {
    set_acc_d_ftcdsrddistlvl1hmi_sg(from.acc_d_ftcdsrddistlvl1hmi_sg());
  }
  if (from.acc_d_ftcdsrddistlvl2hmi_sg() != 0) {
    set_acc_d_ftcdsrddistlvl2hmi_sg(from.acc_d_ftcdsrddistlvl2hmi_sg());
  }
  if (from.acc_d_ftcdsrddistlvl3hmi_sg() != 0) {
    set_acc_d_ftcdsrddistlvl3hmi_sg(from.acc_d_ftcdsrddistlvl3hmi_sg());
  }
  if (from.acc_a_ftcacceldyn_sg() != 0) {
    set_acc_a_ftcacceldyn_sg(from.acc_a_ftcacceldyn_sg());
  }
  if (from.acc_is_ftcslideflag_bl() != 0) {
    set_acc_is_ftcslideflag_bl(from.acc_is_ftcslideflag_bl());
  }
  if (from.acc_is_ftcdnsteephill_bl() != 0) {
    set_acc_is_ftcdnsteephill_bl(from.acc_is_ftcdnsteephill_bl());
  }
  if (from.acc_is_ftcupsteephill_bl() != 0) {
    set_acc_is_ftcupsteephill_bl(from.acc_is_ftcupsteephill_bl());
  }
  if (from.acc_is_cbcactv_bl() != 0) {
    set_acc_is_cbcactv_bl(from.acc_is_cbcactv_bl());
  }
  if (from.acc_d_distmingap_sg() != 0) {
    set_acc_d_distmingap_sg(from.acc_d_distmingap_sg());
  }
  if (from.acc_a_maltgtaccel_sg() != 0) {
    set_acc_a_maltgtaccel_sg(from.acc_a_maltgtaccel_sg());
  }
  if (from.acc_a_maltgtaccelraw_sg() != 0) {
    set_acc_a_maltgtaccelraw_sg(from.acc_a_maltgtaccelraw_sg());
  }
  if (from.acc_is_malcscaccelused_bl() != 0) {
    set_acc_is_malcscaccelused_bl(from.acc_is_malcscaccelused_bl());
  }
  if (from.acc_a_maltgtacceldeadcomp_sg() != 0) {
    set_acc_a_maltgtacceldeadcomp_sg(from.acc_a_maltgtacceldeadcomp_sg());
  }
}

void ACCOutputs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.ACCOutputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ACCOutputs::CopyFrom(const ACCOutputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.ACCOutputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ACCOutputs::IsInitialized() const {
  return true;
}

void ACCOutputs::Swap(ACCOutputs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ACCOutputs::InternalSwap(ACCOutputs* other) {
  using std::swap;
  swap(acc_v_cscmaxcrvtespd_sg_, other->acc_v_cscmaxcrvtespd_sg_);
  swap(acc_a_cscaccel_sg_, other->acc_a_cscaccel_sg_);
  swap(acc_is_cscctrlactv_bl_, other->acc_is_cscctrlactv_bl_);
  swap(acc_is_cscactvrtlmtoff_bl_, other->acc_is_cscactvrtlmtoff_bl_);
  swap(acc_is_cscactvrtlmtmstlgt_bl_, other->acc_is_cscactvrtlmtmstlgt_bl_);
  swap(acc_is_ftcstdy_bl_, other->acc_is_ftcstdy_bl_);
  swap(acc_a_fscaccel_sg_, other->acc_a_fscaccel_sg_);
  swap(acc_a_ftcaccel_sg_, other->acc_a_ftcaccel_sg_);
  swap(acc_d_ftclongtdsrddist_sg_, other->acc_d_ftclongtdsrddist_sg_);
  swap(acc_d_ftcdsrddistlvl1hmi_sg_, other->acc_d_ftcdsrddistlvl1hmi_sg_);
  swap(acc_d_ftcdsrddistlvl2hmi_sg_, other->acc_d_ftcdsrddistlvl2hmi_sg_);
  swap(acc_d_ftcdsrddistlvl3hmi_sg_, other->acc_d_ftcdsrddistlvl3hmi_sg_);
  swap(acc_a_ftcacceldyn_sg_, other->acc_a_ftcacceldyn_sg_);
  swap(acc_is_ftcslideflag_bl_, other->acc_is_ftcslideflag_bl_);
  swap(acc_is_ftcdnsteephill_bl_, other->acc_is_ftcdnsteephill_bl_);
  swap(acc_is_ftcupsteephill_bl_, other->acc_is_ftcupsteephill_bl_);
  swap(acc_is_cbcactv_bl_, other->acc_is_cbcactv_bl_);
  swap(acc_d_distmingap_sg_, other->acc_d_distmingap_sg_);
  swap(acc_a_maltgtaccel_sg_, other->acc_a_maltgtaccel_sg_);
  swap(acc_a_maltgtaccelraw_sg_, other->acc_a_maltgtaccelraw_sg_);
  swap(acc_is_malcscaccelused_bl_, other->acc_is_malcscaccelused_bl_);
  swap(acc_a_maltgtacceldeadcomp_sg_, other->acc_a_maltgtacceldeadcomp_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ACCOutputs::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ARBOutputs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ARBOutputs::kARBTPCTToqReqValSgFieldNumber;
const int ARBOutputs::kARBTPCTTorqCmpValSgFieldNumber;
const int ARBOutputs::kARBTPCTTorqSlpEstdSgFieldNumber;
const int ARBOutputs::kARBIndxPCTWhlToq2PTRatSgFieldNumber;
const int ARBOutputs::kARBAPCTMaxSlideDecelSgFieldNumber;
const int ARBOutputs::kARBIsPCTUphillBackSlidRiskBlFieldNumber;
const int ARBOutputs::kARBIndxBPAARBReqStsEnFieldNumber;
const int ARBOutputs::kARBABPADclReqValSgFieldNumber;
const int ARBOutputs::kARBTBPAToqReqValSgFieldNumber;
const int ARBOutputs::kARBIndxBPAESPECMActvStsEnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ARBOutputs::ARBOutputs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_ARBOutputs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.ARBOutputs)
}
ARBOutputs::ARBOutputs(const ARBOutputs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&arb_t_pcttoqreqval_sg_, &from.arb_t_pcttoqreqval_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&arb_indx_bpaespecmactvsts_en_) -
    reinterpret_cast<char*>(&arb_t_pcttoqreqval_sg_)) + sizeof(arb_indx_bpaespecmactvsts_en_));
  // @@protoc_insertion_point(copy_constructor:ads_common.ARBOutputs)
}

void ARBOutputs::SharedCtor() {
  ::memset(&arb_t_pcttoqreqval_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&arb_indx_bpaespecmactvsts_en_) -
      reinterpret_cast<char*>(&arb_t_pcttoqreqval_sg_)) + sizeof(arb_indx_bpaespecmactvsts_en_));
}

ARBOutputs::~ARBOutputs() {
  // @@protoc_insertion_point(destructor:ads_common.ARBOutputs)
  SharedDtor();
}

void ARBOutputs::SharedDtor() {
}

void ARBOutputs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ARBOutputs::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ARBOutputs& ARBOutputs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_ARBOutputs.base);
  return *internal_default_instance();
}


void ARBOutputs::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.ARBOutputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&arb_t_pcttoqreqval_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&arb_indx_bpaespecmactvsts_en_) -
      reinterpret_cast<char*>(&arb_t_pcttoqreqval_sg_)) + sizeof(arb_indx_bpaespecmactvsts_en_));
  _internal_metadata_.Clear();
}

bool ARBOutputs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.ARBOutputs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float ARB_T_PCTToqReqVal_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &arb_t_pcttoqreqval_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ARB_T_PCTTorqCmpVal_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &arb_t_pcttorqcmpval_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ARB_T_PCTTorqSlpEstd_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &arb_t_pcttorqslpestd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ARB_indx_PCTWhlToq2PTRat_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &arb_indx_pctwhltoq2ptrat_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ARB_a_PCTMaxSlideDecel_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &arb_a_pctmaxslidedecel_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ARB_is_PCTUphillBackSlidRisk_bl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &arb_is_pctuphillbackslidrisk_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.E_ARBReqSts_t ARB_indx_BPAARBReqSts_en = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_arb_indx_bpaarbreqsts_en(static_cast< ::ads_common::E_ARBReqSts_t >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ARB_a_BPADclReqVal_sg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &arb_a_bpadclreqval_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ARB_T_BPAToqReqVal_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &arb_t_bpatoqreqval_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.E_ACCESPECMReqSts_t ARB_indx_BPAESPECMActvSts_en = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_arb_indx_bpaespecmactvsts_en(static_cast< ::ads_common::E_ACCESPECMReqSts_t >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.ARBOutputs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.ARBOutputs)
  return false;
#undef DO_
}

void ARBOutputs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.ARBOutputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float ARB_T_PCTToqReqVal_sg = 1;
  if (this->arb_t_pcttoqreqval_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->arb_t_pcttoqreqval_sg(), output);
  }

  // float ARB_T_PCTTorqCmpVal_sg = 2;
  if (this->arb_t_pcttorqcmpval_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->arb_t_pcttorqcmpval_sg(), output);
  }

  // float ARB_T_PCTTorqSlpEstd_sg = 3;
  if (this->arb_t_pcttorqslpestd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->arb_t_pcttorqslpestd_sg(), output);
  }

  // float ARB_indx_PCTWhlToq2PTRat_sg = 4;
  if (this->arb_indx_pctwhltoq2ptrat_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->arb_indx_pctwhltoq2ptrat_sg(), output);
  }

  // float ARB_a_PCTMaxSlideDecel_sg = 5;
  if (this->arb_a_pctmaxslidedecel_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->arb_a_pctmaxslidedecel_sg(), output);
  }

  // bool ARB_is_PCTUphillBackSlidRisk_bl = 6;
  if (this->arb_is_pctuphillbackslidrisk_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->arb_is_pctuphillbackslidrisk_bl(), output);
  }

  // .ads_common.E_ARBReqSts_t ARB_indx_BPAARBReqSts_en = 7;
  if (this->arb_indx_bpaarbreqsts_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->arb_indx_bpaarbreqsts_en(), output);
  }

  // float ARB_a_BPADclReqVal_sg = 8;
  if (this->arb_a_bpadclreqval_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->arb_a_bpadclreqval_sg(), output);
  }

  // float ARB_T_BPAToqReqVal_sg = 9;
  if (this->arb_t_bpatoqreqval_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->arb_t_bpatoqreqval_sg(), output);
  }

  // .ads_common.E_ACCESPECMReqSts_t ARB_indx_BPAESPECMActvSts_en = 10;
  if (this->arb_indx_bpaespecmactvsts_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->arb_indx_bpaespecmactvsts_en(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.ARBOutputs)
}

::google::protobuf::uint8* ARBOutputs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.ARBOutputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float ARB_T_PCTToqReqVal_sg = 1;
  if (this->arb_t_pcttoqreqval_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->arb_t_pcttoqreqval_sg(), target);
  }

  // float ARB_T_PCTTorqCmpVal_sg = 2;
  if (this->arb_t_pcttorqcmpval_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->arb_t_pcttorqcmpval_sg(), target);
  }

  // float ARB_T_PCTTorqSlpEstd_sg = 3;
  if (this->arb_t_pcttorqslpestd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->arb_t_pcttorqslpestd_sg(), target);
  }

  // float ARB_indx_PCTWhlToq2PTRat_sg = 4;
  if (this->arb_indx_pctwhltoq2ptrat_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->arb_indx_pctwhltoq2ptrat_sg(), target);
  }

  // float ARB_a_PCTMaxSlideDecel_sg = 5;
  if (this->arb_a_pctmaxslidedecel_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->arb_a_pctmaxslidedecel_sg(), target);
  }

  // bool ARB_is_PCTUphillBackSlidRisk_bl = 6;
  if (this->arb_is_pctuphillbackslidrisk_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->arb_is_pctuphillbackslidrisk_bl(), target);
  }

  // .ads_common.E_ARBReqSts_t ARB_indx_BPAARBReqSts_en = 7;
  if (this->arb_indx_bpaarbreqsts_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->arb_indx_bpaarbreqsts_en(), target);
  }

  // float ARB_a_BPADclReqVal_sg = 8;
  if (this->arb_a_bpadclreqval_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->arb_a_bpadclreqval_sg(), target);
  }

  // float ARB_T_BPAToqReqVal_sg = 9;
  if (this->arb_t_bpatoqreqval_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->arb_t_bpatoqreqval_sg(), target);
  }

  // .ads_common.E_ACCESPECMReqSts_t ARB_indx_BPAESPECMActvSts_en = 10;
  if (this->arb_indx_bpaespecmactvsts_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->arb_indx_bpaespecmactvsts_en(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.ARBOutputs)
  return target;
}

size_t ARBOutputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.ARBOutputs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float ARB_T_PCTToqReqVal_sg = 1;
  if (this->arb_t_pcttoqreqval_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ARB_T_PCTTorqCmpVal_sg = 2;
  if (this->arb_t_pcttorqcmpval_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ARB_T_PCTTorqSlpEstd_sg = 3;
  if (this->arb_t_pcttorqslpestd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ARB_indx_PCTWhlToq2PTRat_sg = 4;
  if (this->arb_indx_pctwhltoq2ptrat_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ARB_a_PCTMaxSlideDecel_sg = 5;
  if (this->arb_a_pctmaxslidedecel_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool ARB_is_PCTUphillBackSlidRisk_bl = 6;
  if (this->arb_is_pctuphillbackslidrisk_bl() != 0) {
    total_size += 1 + 1;
  }

  // .ads_common.E_ARBReqSts_t ARB_indx_BPAARBReqSts_en = 7;
  if (this->arb_indx_bpaarbreqsts_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->arb_indx_bpaarbreqsts_en());
  }

  // float ARB_a_BPADclReqVal_sg = 8;
  if (this->arb_a_bpadclreqval_sg() != 0) {
    total_size += 1 + 4;
  }

  // float ARB_T_BPAToqReqVal_sg = 9;
  if (this->arb_t_bpatoqreqval_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.E_ACCESPECMReqSts_t ARB_indx_BPAESPECMActvSts_en = 10;
  if (this->arb_indx_bpaespecmactvsts_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->arb_indx_bpaespecmactvsts_en());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ARBOutputs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.ARBOutputs)
  GOOGLE_DCHECK_NE(&from, this);
  const ARBOutputs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ARBOutputs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.ARBOutputs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.ARBOutputs)
    MergeFrom(*source);
  }
}

void ARBOutputs::MergeFrom(const ARBOutputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.ARBOutputs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.arb_t_pcttoqreqval_sg() != 0) {
    set_arb_t_pcttoqreqval_sg(from.arb_t_pcttoqreqval_sg());
  }
  if (from.arb_t_pcttorqcmpval_sg() != 0) {
    set_arb_t_pcttorqcmpval_sg(from.arb_t_pcttorqcmpval_sg());
  }
  if (from.arb_t_pcttorqslpestd_sg() != 0) {
    set_arb_t_pcttorqslpestd_sg(from.arb_t_pcttorqslpestd_sg());
  }
  if (from.arb_indx_pctwhltoq2ptrat_sg() != 0) {
    set_arb_indx_pctwhltoq2ptrat_sg(from.arb_indx_pctwhltoq2ptrat_sg());
  }
  if (from.arb_a_pctmaxslidedecel_sg() != 0) {
    set_arb_a_pctmaxslidedecel_sg(from.arb_a_pctmaxslidedecel_sg());
  }
  if (from.arb_is_pctuphillbackslidrisk_bl() != 0) {
    set_arb_is_pctuphillbackslidrisk_bl(from.arb_is_pctuphillbackslidrisk_bl());
  }
  if (from.arb_indx_bpaarbreqsts_en() != 0) {
    set_arb_indx_bpaarbreqsts_en(from.arb_indx_bpaarbreqsts_en());
  }
  if (from.arb_a_bpadclreqval_sg() != 0) {
    set_arb_a_bpadclreqval_sg(from.arb_a_bpadclreqval_sg());
  }
  if (from.arb_t_bpatoqreqval_sg() != 0) {
    set_arb_t_bpatoqreqval_sg(from.arb_t_bpatoqreqval_sg());
  }
  if (from.arb_indx_bpaespecmactvsts_en() != 0) {
    set_arb_indx_bpaespecmactvsts_en(from.arb_indx_bpaespecmactvsts_en());
  }
}

void ARBOutputs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.ARBOutputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ARBOutputs::CopyFrom(const ARBOutputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.ARBOutputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ARBOutputs::IsInitialized() const {
  return true;
}

void ARBOutputs::Swap(ARBOutputs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ARBOutputs::InternalSwap(ARBOutputs* other) {
  using std::swap;
  swap(arb_t_pcttoqreqval_sg_, other->arb_t_pcttoqreqval_sg_);
  swap(arb_t_pcttorqcmpval_sg_, other->arb_t_pcttorqcmpval_sg_);
  swap(arb_t_pcttorqslpestd_sg_, other->arb_t_pcttorqslpestd_sg_);
  swap(arb_indx_pctwhltoq2ptrat_sg_, other->arb_indx_pctwhltoq2ptrat_sg_);
  swap(arb_a_pctmaxslidedecel_sg_, other->arb_a_pctmaxslidedecel_sg_);
  swap(arb_is_pctuphillbackslidrisk_bl_, other->arb_is_pctuphillbackslidrisk_bl_);
  swap(arb_indx_bpaarbreqsts_en_, other->arb_indx_bpaarbreqsts_en_);
  swap(arb_a_bpadclreqval_sg_, other->arb_a_bpadclreqval_sg_);
  swap(arb_t_bpatoqreqval_sg_, other->arb_t_bpatoqreqval_sg_);
  swap(arb_indx_bpaespecmactvsts_en_, other->arb_indx_bpaespecmactvsts_en_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ARBOutputs::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B1_RdEdgeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B1_RdEdgeInfo::kREIDRdEdgeLatPosA0SgFieldNumber;
const int B1_RdEdgeInfo::kREIAngRRdEdgeHdAngA1SgFieldNumber;
const int B1_RdEdgeInfo::kREICvRdEdgeCrvA2SgFieldNumber;
const int B1_RdEdgeInfo::kREICvrRdEdgeCrvRtA3SgFieldNumber;
const int B1_RdEdgeInfo::kREIDRdEdgeRngStartSgFieldNumber;
const int B1_RdEdgeInfo::kREIDRdEdgeRngEndSgFieldNumber;
const int B1_RdEdgeInfo::kREIStatRdEdgeQltyCnfdELCFFieldNumber;
const int B1_RdEdgeInfo::kREIStatRdEdgeTypeU8FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B1_RdEdgeInfo::B1_RdEdgeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B1_RdEdgeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B1_RdEdgeInfo)
}
B1_RdEdgeInfo::B1_RdEdgeInfo(const B1_RdEdgeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rei_d_rdedgelatposa0_sg_, &from.rei_d_rdedgelatposa0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&rei_stat_rdedgetype_u8_) -
    reinterpret_cast<char*>(&rei_d_rdedgelatposa0_sg_)) + sizeof(rei_stat_rdedgetype_u8_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B1_RdEdgeInfo)
}

void B1_RdEdgeInfo::SharedCtor() {
  ::memset(&rei_d_rdedgelatposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rei_stat_rdedgetype_u8_) -
      reinterpret_cast<char*>(&rei_d_rdedgelatposa0_sg_)) + sizeof(rei_stat_rdedgetype_u8_));
}

B1_RdEdgeInfo::~B1_RdEdgeInfo() {
  // @@protoc_insertion_point(destructor:ads_common.B1_RdEdgeInfo)
  SharedDtor();
}

void B1_RdEdgeInfo::SharedDtor() {
}

void B1_RdEdgeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B1_RdEdgeInfo::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B1_RdEdgeInfo& B1_RdEdgeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B1_RdEdgeInfo.base);
  return *internal_default_instance();
}


void B1_RdEdgeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B1_RdEdgeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rei_d_rdedgelatposa0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rei_stat_rdedgetype_u8_) -
      reinterpret_cast<char*>(&rei_d_rdedgelatposa0_sg_)) + sizeof(rei_stat_rdedgetype_u8_));
  _internal_metadata_.Clear();
}

bool B1_RdEdgeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B1_RdEdgeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float REI_d_RdEdgeLatPosA0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rei_d_rdedgelatposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float REI_angR_RdEdgeHdAngA1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rei_angr_rdedgehdanga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float REI_cv_RdEdgeCrvA2_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rei_cv_rdedgecrva2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float REI_cvr_RdEdgeCrvRtA3_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rei_cvr_rdedgecrvrta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float REI_d_RdEdgeRngStart_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rei_d_rdedgerngstart_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float REI_d_RdEdgeRngEnd_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rei_d_rdedgerngend_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eLCF_LaneCnfdn REI_stat_RdEdgeQltyCnfd_eLCF = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rei_stat_rdedgeqltycnfd_elcf(static_cast< ::ads_common::eLCF_LaneCnfdn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 REI_stat_RdEdgeType_u8 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &rei_stat_rdedgetype_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B1_RdEdgeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B1_RdEdgeInfo)
  return false;
#undef DO_
}

void B1_RdEdgeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B1_RdEdgeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float REI_d_RdEdgeLatPosA0_sg = 1;
  if (this->rei_d_rdedgelatposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->rei_d_rdedgelatposa0_sg(), output);
  }

  // float REI_angR_RdEdgeHdAngA1_sg = 2;
  if (this->rei_angr_rdedgehdanga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->rei_angr_rdedgehdanga1_sg(), output);
  }

  // float REI_cv_RdEdgeCrvA2_sg = 3;
  if (this->rei_cv_rdedgecrva2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->rei_cv_rdedgecrva2_sg(), output);
  }

  // float REI_cvr_RdEdgeCrvRtA3_sg = 4;
  if (this->rei_cvr_rdedgecrvrta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rei_cvr_rdedgecrvrta3_sg(), output);
  }

  // float REI_d_RdEdgeRngStart_sg = 5;
  if (this->rei_d_rdedgerngstart_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rei_d_rdedgerngstart_sg(), output);
  }

  // float REI_d_RdEdgeRngEnd_sg = 6;
  if (this->rei_d_rdedgerngend_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->rei_d_rdedgerngend_sg(), output);
  }

  // .ads_common.eLCF_LaneCnfdn REI_stat_RdEdgeQltyCnfd_eLCF = 7;
  if (this->rei_stat_rdedgeqltycnfd_elcf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->rei_stat_rdedgeqltycnfd_elcf(), output);
  }

  // sint32 REI_stat_RdEdgeType_u8 = 8;
  if (this->rei_stat_rdedgetype_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->rei_stat_rdedgetype_u8(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B1_RdEdgeInfo)
}

::google::protobuf::uint8* B1_RdEdgeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B1_RdEdgeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float REI_d_RdEdgeLatPosA0_sg = 1;
  if (this->rei_d_rdedgelatposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->rei_d_rdedgelatposa0_sg(), target);
  }

  // float REI_angR_RdEdgeHdAngA1_sg = 2;
  if (this->rei_angr_rdedgehdanga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->rei_angr_rdedgehdanga1_sg(), target);
  }

  // float REI_cv_RdEdgeCrvA2_sg = 3;
  if (this->rei_cv_rdedgecrva2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->rei_cv_rdedgecrva2_sg(), target);
  }

  // float REI_cvr_RdEdgeCrvRtA3_sg = 4;
  if (this->rei_cvr_rdedgecrvrta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rei_cvr_rdedgecrvrta3_sg(), target);
  }

  // float REI_d_RdEdgeRngStart_sg = 5;
  if (this->rei_d_rdedgerngstart_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rei_d_rdedgerngstart_sg(), target);
  }

  // float REI_d_RdEdgeRngEnd_sg = 6;
  if (this->rei_d_rdedgerngend_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->rei_d_rdedgerngend_sg(), target);
  }

  // .ads_common.eLCF_LaneCnfdn REI_stat_RdEdgeQltyCnfd_eLCF = 7;
  if (this->rei_stat_rdedgeqltycnfd_elcf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->rei_stat_rdedgeqltycnfd_elcf(), target);
  }

  // sint32 REI_stat_RdEdgeType_u8 = 8;
  if (this->rei_stat_rdedgetype_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->rei_stat_rdedgetype_u8(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B1_RdEdgeInfo)
  return target;
}

size_t B1_RdEdgeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B1_RdEdgeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float REI_d_RdEdgeLatPosA0_sg = 1;
  if (this->rei_d_rdedgelatposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float REI_angR_RdEdgeHdAngA1_sg = 2;
  if (this->rei_angr_rdedgehdanga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float REI_cv_RdEdgeCrvA2_sg = 3;
  if (this->rei_cv_rdedgecrva2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float REI_cvr_RdEdgeCrvRtA3_sg = 4;
  if (this->rei_cvr_rdedgecrvrta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // float REI_d_RdEdgeRngStart_sg = 5;
  if (this->rei_d_rdedgerngstart_sg() != 0) {
    total_size += 1 + 4;
  }

  // float REI_d_RdEdgeRngEnd_sg = 6;
  if (this->rei_d_rdedgerngend_sg() != 0) {
    total_size += 1 + 4;
  }

  // .ads_common.eLCF_LaneCnfdn REI_stat_RdEdgeQltyCnfd_eLCF = 7;
  if (this->rei_stat_rdedgeqltycnfd_elcf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rei_stat_rdedgeqltycnfd_elcf());
  }

  // sint32 REI_stat_RdEdgeType_u8 = 8;
  if (this->rei_stat_rdedgetype_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->rei_stat_rdedgetype_u8());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B1_RdEdgeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B1_RdEdgeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const B1_RdEdgeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B1_RdEdgeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B1_RdEdgeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B1_RdEdgeInfo)
    MergeFrom(*source);
  }
}

void B1_RdEdgeInfo::MergeFrom(const B1_RdEdgeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B1_RdEdgeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rei_d_rdedgelatposa0_sg() != 0) {
    set_rei_d_rdedgelatposa0_sg(from.rei_d_rdedgelatposa0_sg());
  }
  if (from.rei_angr_rdedgehdanga1_sg() != 0) {
    set_rei_angr_rdedgehdanga1_sg(from.rei_angr_rdedgehdanga1_sg());
  }
  if (from.rei_cv_rdedgecrva2_sg() != 0) {
    set_rei_cv_rdedgecrva2_sg(from.rei_cv_rdedgecrva2_sg());
  }
  if (from.rei_cvr_rdedgecrvrta3_sg() != 0) {
    set_rei_cvr_rdedgecrvrta3_sg(from.rei_cvr_rdedgecrvrta3_sg());
  }
  if (from.rei_d_rdedgerngstart_sg() != 0) {
    set_rei_d_rdedgerngstart_sg(from.rei_d_rdedgerngstart_sg());
  }
  if (from.rei_d_rdedgerngend_sg() != 0) {
    set_rei_d_rdedgerngend_sg(from.rei_d_rdedgerngend_sg());
  }
  if (from.rei_stat_rdedgeqltycnfd_elcf() != 0) {
    set_rei_stat_rdedgeqltycnfd_elcf(from.rei_stat_rdedgeqltycnfd_elcf());
  }
  if (from.rei_stat_rdedgetype_u8() != 0) {
    set_rei_stat_rdedgetype_u8(from.rei_stat_rdedgetype_u8());
  }
}

void B1_RdEdgeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B1_RdEdgeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B1_RdEdgeInfo::CopyFrom(const B1_RdEdgeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B1_RdEdgeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B1_RdEdgeInfo::IsInitialized() const {
  return true;
}

void B1_RdEdgeInfo::Swap(B1_RdEdgeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B1_RdEdgeInfo::InternalSwap(B1_RdEdgeInfo* other) {
  using std::swap;
  swap(rei_d_rdedgelatposa0_sg_, other->rei_d_rdedgelatposa0_sg_);
  swap(rei_angr_rdedgehdanga1_sg_, other->rei_angr_rdedgehdanga1_sg_);
  swap(rei_cv_rdedgecrva2_sg_, other->rei_cv_rdedgecrva2_sg_);
  swap(rei_cvr_rdedgecrvrta3_sg_, other->rei_cvr_rdedgecrvrta3_sg_);
  swap(rei_d_rdedgerngstart_sg_, other->rei_d_rdedgerngstart_sg_);
  swap(rei_d_rdedgerngend_sg_, other->rei_d_rdedgerngend_sg_);
  swap(rei_stat_rdedgeqltycnfd_elcf_, other->rei_stat_rdedgeqltycnfd_elcf_);
  swap(rei_stat_rdedgetype_u8_, other->rei_stat_rdedgetype_u8_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B1_RdEdgeInfo::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B1_BorderLaneData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B1_BorderLaneData::kBLDIndxRdTwoSidesBndryCaseU8FieldNumber;
const int B1_BorderLaneData::kBLDDLftLmRePosA0SgFieldNumber;
const int B1_BorderLaneData::kBLDAngRLftLmReHdAgA1SgFieldNumber;
const int B1_BorderLaneData::kBLDCvLftLmReCrvA2SgFieldNumber;
const int B1_BorderLaneData::kBLDCvrLftLmReCrvteRtA3SgFieldNumber;
const int B1_BorderLaneData::kBLDDRghtLmRePosA0SgFieldNumber;
const int B1_BorderLaneData::kBLDAngRRghtLmReHdAgA1SgFieldNumber;
const int B1_BorderLaneData::kBLDCvRghtLmReCrvA2SgFieldNumber;
const int B1_BorderLaneData::kBLDCvrRghtLmReCrvteRtA3SgFieldNumber;
const int B1_BorderLaneData::kBLDDEgoLaneWidthSgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B1_BorderLaneData::B1_BorderLaneData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B1_BorderLaneData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B1_BorderLaneData)
}
B1_BorderLaneData::B1_BorderLaneData(const B1_BorderLaneData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bld_indx_rdtwosidesbndrycase_u8_, &from.bld_indx_rdtwosidesbndrycase_u8_,
    static_cast<size_t>(reinterpret_cast<char*>(&bld_d_egolanewidth_sg_) -
    reinterpret_cast<char*>(&bld_indx_rdtwosidesbndrycase_u8_)) + sizeof(bld_d_egolanewidth_sg_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B1_BorderLaneData)
}

void B1_BorderLaneData::SharedCtor() {
  ::memset(&bld_indx_rdtwosidesbndrycase_u8_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bld_d_egolanewidth_sg_) -
      reinterpret_cast<char*>(&bld_indx_rdtwosidesbndrycase_u8_)) + sizeof(bld_d_egolanewidth_sg_));
}

B1_BorderLaneData::~B1_BorderLaneData() {
  // @@protoc_insertion_point(destructor:ads_common.B1_BorderLaneData)
  SharedDtor();
}

void B1_BorderLaneData::SharedDtor() {
}

void B1_BorderLaneData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B1_BorderLaneData::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B1_BorderLaneData& B1_BorderLaneData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B1_BorderLaneData.base);
  return *internal_default_instance();
}


void B1_BorderLaneData::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B1_BorderLaneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bld_indx_rdtwosidesbndrycase_u8_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bld_d_egolanewidth_sg_) -
      reinterpret_cast<char*>(&bld_indx_rdtwosidesbndrycase_u8_)) + sizeof(bld_d_egolanewidth_sg_));
  _internal_metadata_.Clear();
}

bool B1_BorderLaneData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B1_BorderLaneData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 BLD_indx_RdTwoSidesBndryCase_u8 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bld_indx_rdtwosidesbndrycase_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BLD_d_LftLmRePosA0_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bld_d_lftlmreposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BLD_angR_LftLmReHdAgA1_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bld_angr_lftlmrehdaga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BLD_cv_LftLmReCrvA2_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bld_cv_lftlmrecrva2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BLD_cvr_LftLmReCrvteRtA3_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bld_cvr_lftlmrecrvterta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BLD_d_RghtLmRePosA0_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bld_d_rghtlmreposa0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BLD_angR_RghtLmReHdAgA1_sg = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bld_angr_rghtlmrehdaga1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BLD_cv_RghtLmReCrvA2_sg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bld_cv_rghtlmrecrva2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BLD_cvr_RghtLmReCrvteRtA3_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bld_cvr_rghtlmrecrvterta3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BLD_d_EgoLaneWidth_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bld_d_egolanewidth_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B1_BorderLaneData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B1_BorderLaneData)
  return false;
#undef DO_
}

void B1_BorderLaneData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B1_BorderLaneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 BLD_indx_RdTwoSidesBndryCase_u8 = 1;
  if (this->bld_indx_rdtwosidesbndrycase_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->bld_indx_rdtwosidesbndrycase_u8(), output);
  }

  // float BLD_d_LftLmRePosA0_sg = 2;
  if (this->bld_d_lftlmreposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->bld_d_lftlmreposa0_sg(), output);
  }

  // float BLD_angR_LftLmReHdAgA1_sg = 3;
  if (this->bld_angr_lftlmrehdaga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->bld_angr_lftlmrehdaga1_sg(), output);
  }

  // float BLD_cv_LftLmReCrvA2_sg = 4;
  if (this->bld_cv_lftlmrecrva2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->bld_cv_lftlmrecrva2_sg(), output);
  }

  // float BLD_cvr_LftLmReCrvteRtA3_sg = 5;
  if (this->bld_cvr_lftlmrecrvterta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->bld_cvr_lftlmrecrvterta3_sg(), output);
  }

  // float BLD_d_RghtLmRePosA0_sg = 6;
  if (this->bld_d_rghtlmreposa0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->bld_d_rghtlmreposa0_sg(), output);
  }

  // float BLD_angR_RghtLmReHdAgA1_sg = 7;
  if (this->bld_angr_rghtlmrehdaga1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->bld_angr_rghtlmrehdaga1_sg(), output);
  }

  // float BLD_cv_RghtLmReCrvA2_sg = 8;
  if (this->bld_cv_rghtlmrecrva2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->bld_cv_rghtlmrecrva2_sg(), output);
  }

  // float BLD_cvr_RghtLmReCrvteRtA3_sg = 9;
  if (this->bld_cvr_rghtlmrecrvterta3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->bld_cvr_rghtlmrecrvterta3_sg(), output);
  }

  // float BLD_d_EgoLaneWidth_sg = 10;
  if (this->bld_d_egolanewidth_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->bld_d_egolanewidth_sg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B1_BorderLaneData)
}

::google::protobuf::uint8* B1_BorderLaneData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B1_BorderLaneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 BLD_indx_RdTwoSidesBndryCase_u8 = 1;
  if (this->bld_indx_rdtwosidesbndrycase_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->bld_indx_rdtwosidesbndrycase_u8(), target);
  }

  // float BLD_d_LftLmRePosA0_sg = 2;
  if (this->bld_d_lftlmreposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->bld_d_lftlmreposa0_sg(), target);
  }

  // float BLD_angR_LftLmReHdAgA1_sg = 3;
  if (this->bld_angr_lftlmrehdaga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->bld_angr_lftlmrehdaga1_sg(), target);
  }

  // float BLD_cv_LftLmReCrvA2_sg = 4;
  if (this->bld_cv_lftlmrecrva2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->bld_cv_lftlmrecrva2_sg(), target);
  }

  // float BLD_cvr_LftLmReCrvteRtA3_sg = 5;
  if (this->bld_cvr_lftlmrecrvterta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->bld_cvr_lftlmrecrvterta3_sg(), target);
  }

  // float BLD_d_RghtLmRePosA0_sg = 6;
  if (this->bld_d_rghtlmreposa0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->bld_d_rghtlmreposa0_sg(), target);
  }

  // float BLD_angR_RghtLmReHdAgA1_sg = 7;
  if (this->bld_angr_rghtlmrehdaga1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->bld_angr_rghtlmrehdaga1_sg(), target);
  }

  // float BLD_cv_RghtLmReCrvA2_sg = 8;
  if (this->bld_cv_rghtlmrecrva2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->bld_cv_rghtlmrecrva2_sg(), target);
  }

  // float BLD_cvr_RghtLmReCrvteRtA3_sg = 9;
  if (this->bld_cvr_rghtlmrecrvterta3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->bld_cvr_rghtlmrecrvterta3_sg(), target);
  }

  // float BLD_d_EgoLaneWidth_sg = 10;
  if (this->bld_d_egolanewidth_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->bld_d_egolanewidth_sg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B1_BorderLaneData)
  return target;
}

size_t B1_BorderLaneData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B1_BorderLaneData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 BLD_indx_RdTwoSidesBndryCase_u8 = 1;
  if (this->bld_indx_rdtwosidesbndrycase_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->bld_indx_rdtwosidesbndrycase_u8());
  }

  // float BLD_d_LftLmRePosA0_sg = 2;
  if (this->bld_d_lftlmreposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float BLD_angR_LftLmReHdAgA1_sg = 3;
  if (this->bld_angr_lftlmrehdaga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float BLD_cv_LftLmReCrvA2_sg = 4;
  if (this->bld_cv_lftlmrecrva2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float BLD_cvr_LftLmReCrvteRtA3_sg = 5;
  if (this->bld_cvr_lftlmrecrvterta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // float BLD_d_RghtLmRePosA0_sg = 6;
  if (this->bld_d_rghtlmreposa0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float BLD_angR_RghtLmReHdAgA1_sg = 7;
  if (this->bld_angr_rghtlmrehdaga1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float BLD_cv_RghtLmReCrvA2_sg = 8;
  if (this->bld_cv_rghtlmrecrva2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float BLD_cvr_RghtLmReCrvteRtA3_sg = 9;
  if (this->bld_cvr_rghtlmrecrvterta3_sg() != 0) {
    total_size += 1 + 4;
  }

  // float BLD_d_EgoLaneWidth_sg = 10;
  if (this->bld_d_egolanewidth_sg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B1_BorderLaneData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B1_BorderLaneData)
  GOOGLE_DCHECK_NE(&from, this);
  const B1_BorderLaneData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B1_BorderLaneData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B1_BorderLaneData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B1_BorderLaneData)
    MergeFrom(*source);
  }
}

void B1_BorderLaneData::MergeFrom(const B1_BorderLaneData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B1_BorderLaneData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bld_indx_rdtwosidesbndrycase_u8() != 0) {
    set_bld_indx_rdtwosidesbndrycase_u8(from.bld_indx_rdtwosidesbndrycase_u8());
  }
  if (from.bld_d_lftlmreposa0_sg() != 0) {
    set_bld_d_lftlmreposa0_sg(from.bld_d_lftlmreposa0_sg());
  }
  if (from.bld_angr_lftlmrehdaga1_sg() != 0) {
    set_bld_angr_lftlmrehdaga1_sg(from.bld_angr_lftlmrehdaga1_sg());
  }
  if (from.bld_cv_lftlmrecrva2_sg() != 0) {
    set_bld_cv_lftlmrecrva2_sg(from.bld_cv_lftlmrecrva2_sg());
  }
  if (from.bld_cvr_lftlmrecrvterta3_sg() != 0) {
    set_bld_cvr_lftlmrecrvterta3_sg(from.bld_cvr_lftlmrecrvterta3_sg());
  }
  if (from.bld_d_rghtlmreposa0_sg() != 0) {
    set_bld_d_rghtlmreposa0_sg(from.bld_d_rghtlmreposa0_sg());
  }
  if (from.bld_angr_rghtlmrehdaga1_sg() != 0) {
    set_bld_angr_rghtlmrehdaga1_sg(from.bld_angr_rghtlmrehdaga1_sg());
  }
  if (from.bld_cv_rghtlmrecrva2_sg() != 0) {
    set_bld_cv_rghtlmrecrva2_sg(from.bld_cv_rghtlmrecrva2_sg());
  }
  if (from.bld_cvr_rghtlmrecrvterta3_sg() != 0) {
    set_bld_cvr_rghtlmrecrvterta3_sg(from.bld_cvr_rghtlmrecrvterta3_sg());
  }
  if (from.bld_d_egolanewidth_sg() != 0) {
    set_bld_d_egolanewidth_sg(from.bld_d_egolanewidth_sg());
  }
}

void B1_BorderLaneData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B1_BorderLaneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B1_BorderLaneData::CopyFrom(const B1_BorderLaneData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B1_BorderLaneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B1_BorderLaneData::IsInitialized() const {
  return true;
}

void B1_BorderLaneData::Swap(B1_BorderLaneData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B1_BorderLaneData::InternalSwap(B1_BorderLaneData* other) {
  using std::swap;
  swap(bld_indx_rdtwosidesbndrycase_u8_, other->bld_indx_rdtwosidesbndrycase_u8_);
  swap(bld_d_lftlmreposa0_sg_, other->bld_d_lftlmreposa0_sg_);
  swap(bld_angr_lftlmrehdaga1_sg_, other->bld_angr_lftlmrehdaga1_sg_);
  swap(bld_cv_lftlmrecrva2_sg_, other->bld_cv_lftlmrecrva2_sg_);
  swap(bld_cvr_lftlmrecrvterta3_sg_, other->bld_cvr_lftlmrecrvterta3_sg_);
  swap(bld_d_rghtlmreposa0_sg_, other->bld_d_rghtlmreposa0_sg_);
  swap(bld_angr_rghtlmrehdaga1_sg_, other->bld_angr_rghtlmrehdaga1_sg_);
  swap(bld_cv_rghtlmrecrva2_sg_, other->bld_cv_rghtlmrecrva2_sg_);
  swap(bld_cvr_rghtlmrecrvterta3_sg_, other->bld_cvr_rghtlmrecrvterta3_sg_);
  swap(bld_d_egolanewidth_sg_, other->bld_d_egolanewidth_sg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B1_BorderLaneData::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B1_SelObjData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B1_SelObjData::kSODIdxObjIDU32FieldNumber;
const int B1_SelObjData::kSODDObjOffsetSgFieldNumber;
const int B1_SelObjData::kSODVObjOffsetDerivSgFieldNumber;
const int B1_SelObjData::kSODVObjSpdSgFieldNumber;
const int B1_SelObjData::kSODAObjAccelSgFieldNumber;
const int B1_SelObjData::kSODAngRObjHdAngSgFieldNumber;
const int B1_SelObjData::kSODDObjLgtPosnSgFieldNumber;
const int B1_SelObjData::kSODDObjLgtPosnStdDevSgFieldNumber;
const int B1_SelObjData::kSODDObjLatPosnSgFieldNumber;
const int B1_SelObjData::kSODIdxObjTypeU8FieldNumber;
const int B1_SelObjData::kSODStsObjLneChgTrndETLSFieldNumber;
const int B1_SelObjData::kSODIdxObjTrfcJamAsstQltyU8FieldNumber;
const int B1_SelObjData::kSODStsObjSelctQltyETSQFieldNumber;
const int B1_SelObjData::kSODIdxObjFusnSrcU8FieldNumber;
const int B1_SelObjData::kSODIdxObjSelectPosInArrayU8FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B1_SelObjData::B1_SelObjData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B1_SelObjData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B1_SelObjData)
}
B1_SelObjData::B1_SelObjData(const B1_SelObjData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sod_idx_objid_u32_, &from.sod_idx_objid_u32_,
    static_cast<size_t>(reinterpret_cast<char*>(&sod_idx_objselectposinarray_u8_) -
    reinterpret_cast<char*>(&sod_idx_objid_u32_)) + sizeof(sod_idx_objselectposinarray_u8_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B1_SelObjData)
}

void B1_SelObjData::SharedCtor() {
  ::memset(&sod_idx_objid_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sod_idx_objselectposinarray_u8_) -
      reinterpret_cast<char*>(&sod_idx_objid_u32_)) + sizeof(sod_idx_objselectposinarray_u8_));
}

B1_SelObjData::~B1_SelObjData() {
  // @@protoc_insertion_point(destructor:ads_common.B1_SelObjData)
  SharedDtor();
}

void B1_SelObjData::SharedDtor() {
}

void B1_SelObjData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B1_SelObjData::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B1_SelObjData& B1_SelObjData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B1_SelObjData.base);
  return *internal_default_instance();
}


void B1_SelObjData::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B1_SelObjData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sod_idx_objid_u32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sod_idx_objselectposinarray_u8_) -
      reinterpret_cast<char*>(&sod_idx_objid_u32_)) + sizeof(sod_idx_objselectposinarray_u8_));
  _internal_metadata_.Clear();
}

bool B1_SelObjData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B1_SelObjData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 SOD_idx_ObjID_u32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sod_idx_objid_u32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SOD_d_ObjOffset_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sod_d_objoffset_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SOD_v_ObjOffsetDeriv_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sod_v_objoffsetderiv_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SOD_v_ObjSpd_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sod_v_objspd_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SOD_a_ObjAccel_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sod_a_objaccel_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SOD_angR_ObjHdAng_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sod_angr_objhdang_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SOD_d_ObjLgtPosn_sg = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sod_d_objlgtposn_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SOD_d_ObjLgtPosnStdDev_sg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sod_d_objlgtposnstddev_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SOD_d_ObjLatPosn_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sod_d_objlatposn_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 SOD_idx_ObjType_u8 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sod_idx_objtype_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eTLS_TrgtLaneSts SOD_sts_ObjLneChgTrnd_eTLS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sod_sts_objlnechgtrnd_etls(static_cast< ::ads_common::eTLS_TrgtLaneSts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 SOD_idx_ObjTrfcJamAsstQlty_u8 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sod_idx_objtrfcjamasstqlty_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.eTSQ_TrgtSelectQualty SOD_sts_ObjSelctQlty_eTSQ = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sod_sts_objselctqlty_etsq(static_cast< ::ads_common::eTSQ_TrgtSelectQualty >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 SOD_idx_ObjFusnSrc_u8 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sod_idx_objfusnsrc_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 SOD_idx_ObjSelectPosInArray_u8 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sod_idx_objselectposinarray_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B1_SelObjData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B1_SelObjData)
  return false;
#undef DO_
}

void B1_SelObjData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B1_SelObjData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 SOD_idx_ObjID_u32 = 1;
  if (this->sod_idx_objid_u32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->sod_idx_objid_u32(), output);
  }

  // float SOD_d_ObjOffset_sg = 2;
  if (this->sod_d_objoffset_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->sod_d_objoffset_sg(), output);
  }

  // float SOD_v_ObjOffsetDeriv_sg = 3;
  if (this->sod_v_objoffsetderiv_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->sod_v_objoffsetderiv_sg(), output);
  }

  // float SOD_v_ObjSpd_sg = 4;
  if (this->sod_v_objspd_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->sod_v_objspd_sg(), output);
  }

  // float SOD_a_ObjAccel_sg = 5;
  if (this->sod_a_objaccel_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->sod_a_objaccel_sg(), output);
  }

  // float SOD_angR_ObjHdAng_sg = 6;
  if (this->sod_angr_objhdang_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->sod_angr_objhdang_sg(), output);
  }

  // float SOD_d_ObjLgtPosn_sg = 7;
  if (this->sod_d_objlgtposn_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->sod_d_objlgtposn_sg(), output);
  }

  // float SOD_d_ObjLgtPosnStdDev_sg = 8;
  if (this->sod_d_objlgtposnstddev_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->sod_d_objlgtposnstddev_sg(), output);
  }

  // float SOD_d_ObjLatPosn_sg = 9;
  if (this->sod_d_objlatposn_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->sod_d_objlatposn_sg(), output);
  }

  // sint32 SOD_idx_ObjType_u8 = 10;
  if (this->sod_idx_objtype_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->sod_idx_objtype_u8(), output);
  }

  // .ads_common.eTLS_TrgtLaneSts SOD_sts_ObjLneChgTrnd_eTLS = 11;
  if (this->sod_sts_objlnechgtrnd_etls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->sod_sts_objlnechgtrnd_etls(), output);
  }

  // sint32 SOD_idx_ObjTrfcJamAsstQlty_u8 = 12;
  if (this->sod_idx_objtrfcjamasstqlty_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->sod_idx_objtrfcjamasstqlty_u8(), output);
  }

  // .ads_common.eTSQ_TrgtSelectQualty SOD_sts_ObjSelctQlty_eTSQ = 13;
  if (this->sod_sts_objselctqlty_etsq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->sod_sts_objselctqlty_etsq(), output);
  }

  // sint32 SOD_idx_ObjFusnSrc_u8 = 14;
  if (this->sod_idx_objfusnsrc_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(14, this->sod_idx_objfusnsrc_u8(), output);
  }

  // sint32 SOD_idx_ObjSelectPosInArray_u8 = 15;
  if (this->sod_idx_objselectposinarray_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(15, this->sod_idx_objselectposinarray_u8(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B1_SelObjData)
}

::google::protobuf::uint8* B1_SelObjData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B1_SelObjData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 SOD_idx_ObjID_u32 = 1;
  if (this->sod_idx_objid_u32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->sod_idx_objid_u32(), target);
  }

  // float SOD_d_ObjOffset_sg = 2;
  if (this->sod_d_objoffset_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->sod_d_objoffset_sg(), target);
  }

  // float SOD_v_ObjOffsetDeriv_sg = 3;
  if (this->sod_v_objoffsetderiv_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->sod_v_objoffsetderiv_sg(), target);
  }

  // float SOD_v_ObjSpd_sg = 4;
  if (this->sod_v_objspd_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->sod_v_objspd_sg(), target);
  }

  // float SOD_a_ObjAccel_sg = 5;
  if (this->sod_a_objaccel_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->sod_a_objaccel_sg(), target);
  }

  // float SOD_angR_ObjHdAng_sg = 6;
  if (this->sod_angr_objhdang_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->sod_angr_objhdang_sg(), target);
  }

  // float SOD_d_ObjLgtPosn_sg = 7;
  if (this->sod_d_objlgtposn_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->sod_d_objlgtposn_sg(), target);
  }

  // float SOD_d_ObjLgtPosnStdDev_sg = 8;
  if (this->sod_d_objlgtposnstddev_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->sod_d_objlgtposnstddev_sg(), target);
  }

  // float SOD_d_ObjLatPosn_sg = 9;
  if (this->sod_d_objlatposn_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->sod_d_objlatposn_sg(), target);
  }

  // sint32 SOD_idx_ObjType_u8 = 10;
  if (this->sod_idx_objtype_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->sod_idx_objtype_u8(), target);
  }

  // .ads_common.eTLS_TrgtLaneSts SOD_sts_ObjLneChgTrnd_eTLS = 11;
  if (this->sod_sts_objlnechgtrnd_etls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->sod_sts_objlnechgtrnd_etls(), target);
  }

  // sint32 SOD_idx_ObjTrfcJamAsstQlty_u8 = 12;
  if (this->sod_idx_objtrfcjamasstqlty_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->sod_idx_objtrfcjamasstqlty_u8(), target);
  }

  // .ads_common.eTSQ_TrgtSelectQualty SOD_sts_ObjSelctQlty_eTSQ = 13;
  if (this->sod_sts_objselctqlty_etsq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->sod_sts_objselctqlty_etsq(), target);
  }

  // sint32 SOD_idx_ObjFusnSrc_u8 = 14;
  if (this->sod_idx_objfusnsrc_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(14, this->sod_idx_objfusnsrc_u8(), target);
  }

  // sint32 SOD_idx_ObjSelectPosInArray_u8 = 15;
  if (this->sod_idx_objselectposinarray_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(15, this->sod_idx_objselectposinarray_u8(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B1_SelObjData)
  return target;
}

size_t B1_SelObjData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B1_SelObjData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 SOD_idx_ObjID_u32 = 1;
  if (this->sod_idx_objid_u32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->sod_idx_objid_u32());
  }

  // float SOD_d_ObjOffset_sg = 2;
  if (this->sod_d_objoffset_sg() != 0) {
    total_size += 1 + 4;
  }

  // float SOD_v_ObjOffsetDeriv_sg = 3;
  if (this->sod_v_objoffsetderiv_sg() != 0) {
    total_size += 1 + 4;
  }

  // float SOD_v_ObjSpd_sg = 4;
  if (this->sod_v_objspd_sg() != 0) {
    total_size += 1 + 4;
  }

  // float SOD_a_ObjAccel_sg = 5;
  if (this->sod_a_objaccel_sg() != 0) {
    total_size += 1 + 4;
  }

  // float SOD_angR_ObjHdAng_sg = 6;
  if (this->sod_angr_objhdang_sg() != 0) {
    total_size += 1 + 4;
  }

  // float SOD_d_ObjLgtPosn_sg = 7;
  if (this->sod_d_objlgtposn_sg() != 0) {
    total_size += 1 + 4;
  }

  // float SOD_d_ObjLgtPosnStdDev_sg = 8;
  if (this->sod_d_objlgtposnstddev_sg() != 0) {
    total_size += 1 + 4;
  }

  // float SOD_d_ObjLatPosn_sg = 9;
  if (this->sod_d_objlatposn_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 SOD_idx_ObjType_u8 = 10;
  if (this->sod_idx_objtype_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->sod_idx_objtype_u8());
  }

  // .ads_common.eTLS_TrgtLaneSts SOD_sts_ObjLneChgTrnd_eTLS = 11;
  if (this->sod_sts_objlnechgtrnd_etls() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sod_sts_objlnechgtrnd_etls());
  }

  // sint32 SOD_idx_ObjTrfcJamAsstQlty_u8 = 12;
  if (this->sod_idx_objtrfcjamasstqlty_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->sod_idx_objtrfcjamasstqlty_u8());
  }

  // .ads_common.eTSQ_TrgtSelectQualty SOD_sts_ObjSelctQlty_eTSQ = 13;
  if (this->sod_sts_objselctqlty_etsq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sod_sts_objselctqlty_etsq());
  }

  // sint32 SOD_idx_ObjFusnSrc_u8 = 14;
  if (this->sod_idx_objfusnsrc_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->sod_idx_objfusnsrc_u8());
  }

  // sint32 SOD_idx_ObjSelectPosInArray_u8 = 15;
  if (this->sod_idx_objselectposinarray_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->sod_idx_objselectposinarray_u8());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B1_SelObjData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B1_SelObjData)
  GOOGLE_DCHECK_NE(&from, this);
  const B1_SelObjData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B1_SelObjData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B1_SelObjData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B1_SelObjData)
    MergeFrom(*source);
  }
}

void B1_SelObjData::MergeFrom(const B1_SelObjData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B1_SelObjData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sod_idx_objid_u32() != 0) {
    set_sod_idx_objid_u32(from.sod_idx_objid_u32());
  }
  if (from.sod_d_objoffset_sg() != 0) {
    set_sod_d_objoffset_sg(from.sod_d_objoffset_sg());
  }
  if (from.sod_v_objoffsetderiv_sg() != 0) {
    set_sod_v_objoffsetderiv_sg(from.sod_v_objoffsetderiv_sg());
  }
  if (from.sod_v_objspd_sg() != 0) {
    set_sod_v_objspd_sg(from.sod_v_objspd_sg());
  }
  if (from.sod_a_objaccel_sg() != 0) {
    set_sod_a_objaccel_sg(from.sod_a_objaccel_sg());
  }
  if (from.sod_angr_objhdang_sg() != 0) {
    set_sod_angr_objhdang_sg(from.sod_angr_objhdang_sg());
  }
  if (from.sod_d_objlgtposn_sg() != 0) {
    set_sod_d_objlgtposn_sg(from.sod_d_objlgtposn_sg());
  }
  if (from.sod_d_objlgtposnstddev_sg() != 0) {
    set_sod_d_objlgtposnstddev_sg(from.sod_d_objlgtposnstddev_sg());
  }
  if (from.sod_d_objlatposn_sg() != 0) {
    set_sod_d_objlatposn_sg(from.sod_d_objlatposn_sg());
  }
  if (from.sod_idx_objtype_u8() != 0) {
    set_sod_idx_objtype_u8(from.sod_idx_objtype_u8());
  }
  if (from.sod_sts_objlnechgtrnd_etls() != 0) {
    set_sod_sts_objlnechgtrnd_etls(from.sod_sts_objlnechgtrnd_etls());
  }
  if (from.sod_idx_objtrfcjamasstqlty_u8() != 0) {
    set_sod_idx_objtrfcjamasstqlty_u8(from.sod_idx_objtrfcjamasstqlty_u8());
  }
  if (from.sod_sts_objselctqlty_etsq() != 0) {
    set_sod_sts_objselctqlty_etsq(from.sod_sts_objselctqlty_etsq());
  }
  if (from.sod_idx_objfusnsrc_u8() != 0) {
    set_sod_idx_objfusnsrc_u8(from.sod_idx_objfusnsrc_u8());
  }
  if (from.sod_idx_objselectposinarray_u8() != 0) {
    set_sod_idx_objselectposinarray_u8(from.sod_idx_objselectposinarray_u8());
  }
}

void B1_SelObjData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B1_SelObjData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B1_SelObjData::CopyFrom(const B1_SelObjData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B1_SelObjData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B1_SelObjData::IsInitialized() const {
  return true;
}

void B1_SelObjData::Swap(B1_SelObjData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B1_SelObjData::InternalSwap(B1_SelObjData* other) {
  using std::swap;
  swap(sod_idx_objid_u32_, other->sod_idx_objid_u32_);
  swap(sod_d_objoffset_sg_, other->sod_d_objoffset_sg_);
  swap(sod_v_objoffsetderiv_sg_, other->sod_v_objoffsetderiv_sg_);
  swap(sod_v_objspd_sg_, other->sod_v_objspd_sg_);
  swap(sod_a_objaccel_sg_, other->sod_a_objaccel_sg_);
  swap(sod_angr_objhdang_sg_, other->sod_angr_objhdang_sg_);
  swap(sod_d_objlgtposn_sg_, other->sod_d_objlgtposn_sg_);
  swap(sod_d_objlgtposnstddev_sg_, other->sod_d_objlgtposnstddev_sg_);
  swap(sod_d_objlatposn_sg_, other->sod_d_objlatposn_sg_);
  swap(sod_idx_objtype_u8_, other->sod_idx_objtype_u8_);
  swap(sod_sts_objlnechgtrnd_etls_, other->sod_sts_objlnechgtrnd_etls_);
  swap(sod_idx_objtrfcjamasstqlty_u8_, other->sod_idx_objtrfcjamasstqlty_u8_);
  swap(sod_sts_objselctqlty_etsq_, other->sod_sts_objselctqlty_etsq_);
  swap(sod_idx_objfusnsrc_u8_, other->sod_idx_objfusnsrc_u8_);
  swap(sod_idx_objselectposinarray_u8_, other->sod_idx_objselectposinarray_u8_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B1_SelObjData::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B1_ObjTrajInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B1_ObjTrajInfo::kOTIDObjTraj1OrderC0SgFieldNumber;
const int B1_ObjTrajInfo::kOTIAngRObjTraj1OrderC1SgFieldNumber;
const int B1_ObjTrajInfo::kOTIDObjTraj3OrderC0SgFieldNumber;
const int B1_ObjTrajInfo::kOTIAngRObjTraj3OrderC1SgFieldNumber;
const int B1_ObjTrajInfo::kOTICvObjTraj3OrderC2SgFieldNumber;
const int B1_ObjTrajInfo::kOTICvrObjTraj3OrderC3SgFieldNumber;
const int B1_ObjTrajInfo::kOTIIsObjTrajRstBlFieldNumber;
const int B1_ObjTrajInfo::kOTIArrObjTrajhistXPntsSgFieldNumber;
const int B1_ObjTrajInfo::kOTIArrObjTrajhistYPntsSgFieldNumber;
const int B1_ObjTrajInfo::kOTIKObjAvgMVSlopeSgFieldNumber;
const int B1_ObjTrajInfo::kOTICvObjAvgMVCrvSgFieldNumber;
const int B1_ObjTrajInfo::kOTIIsObjTrajValidBlFieldNumber;
const int B1_ObjTrajInfo::kOTIPercObjTrajQltyU8FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B1_ObjTrajInfo::B1_ObjTrajInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B1_ObjTrajInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B1_ObjTrajInfo)
}
B1_ObjTrajInfo::B1_ObjTrajInfo(const B1_ObjTrajInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      oti_arr_objtrajhistxpnts_sg_(from.oti_arr_objtrajhistxpnts_sg_),
      oti_arr_objtrajhistypnts_sg_(from.oti_arr_objtrajhistypnts_sg_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&oti_d_objtraj1orderc0_sg_, &from.oti_d_objtraj1orderc0_sg_,
    static_cast<size_t>(reinterpret_cast<char*>(&oti_perc_objtrajqlty_u8_) -
    reinterpret_cast<char*>(&oti_d_objtraj1orderc0_sg_)) + sizeof(oti_perc_objtrajqlty_u8_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B1_ObjTrajInfo)
}

void B1_ObjTrajInfo::SharedCtor() {
  ::memset(&oti_d_objtraj1orderc0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oti_perc_objtrajqlty_u8_) -
      reinterpret_cast<char*>(&oti_d_objtraj1orderc0_sg_)) + sizeof(oti_perc_objtrajqlty_u8_));
}

B1_ObjTrajInfo::~B1_ObjTrajInfo() {
  // @@protoc_insertion_point(destructor:ads_common.B1_ObjTrajInfo)
  SharedDtor();
}

void B1_ObjTrajInfo::SharedDtor() {
}

void B1_ObjTrajInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B1_ObjTrajInfo::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B1_ObjTrajInfo& B1_ObjTrajInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B1_ObjTrajInfo.base);
  return *internal_default_instance();
}


void B1_ObjTrajInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B1_ObjTrajInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oti_arr_objtrajhistxpnts_sg_.Clear();
  oti_arr_objtrajhistypnts_sg_.Clear();
  ::memset(&oti_d_objtraj1orderc0_sg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oti_perc_objtrajqlty_u8_) -
      reinterpret_cast<char*>(&oti_d_objtraj1orderc0_sg_)) + sizeof(oti_perc_objtrajqlty_u8_));
  _internal_metadata_.Clear();
}

bool B1_ObjTrajInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B1_ObjTrajInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float OTI_d_ObjTraj1orderC0_sg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &oti_d_objtraj1orderc0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float OTI_angR_ObjTraj1orderC1_sg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &oti_angr_objtraj1orderc1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float OTI_d_ObjTraj3orderC0_sg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &oti_d_objtraj3orderc0_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float OTI_angR_ObjTraj3orderC1_sg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &oti_angr_objtraj3orderc1_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float OTI_cv_ObjTraj3orderC2_sg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &oti_cv_objtraj3orderc2_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float OTI_cvr_ObjTraj3orderC3_sg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &oti_cvr_objtraj3orderc3_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool OTI_is_ObjTrajRst_bl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &oti_is_objtrajrst_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float OTI_arr_ObjTrajhistXPnts_sg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_oti_arr_objtrajhistxpnts_sg())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 66u, input, this->mutable_oti_arr_objtrajhistxpnts_sg())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float OTI_arr_ObjTrajhistYPnts_sg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_oti_arr_objtrajhistypnts_sg())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 74u, input, this->mutable_oti_arr_objtrajhistypnts_sg())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float OTI_k_ObjAvgMVSlope_sg = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &oti_k_objavgmvslope_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float OTI_cv_ObjAvgMVCrv_sg = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &oti_cv_objavgmvcrv_sg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool OTI_is_ObjTrajValid_bl = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &oti_is_objtrajvalid_bl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 OTI_perc_ObjTrajQlty_u8 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &oti_perc_objtrajqlty_u8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B1_ObjTrajInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B1_ObjTrajInfo)
  return false;
#undef DO_
}

void B1_ObjTrajInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B1_ObjTrajInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float OTI_d_ObjTraj1orderC0_sg = 1;
  if (this->oti_d_objtraj1orderc0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->oti_d_objtraj1orderc0_sg(), output);
  }

  // float OTI_angR_ObjTraj1orderC1_sg = 2;
  if (this->oti_angr_objtraj1orderc1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->oti_angr_objtraj1orderc1_sg(), output);
  }

  // float OTI_d_ObjTraj3orderC0_sg = 3;
  if (this->oti_d_objtraj3orderc0_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->oti_d_objtraj3orderc0_sg(), output);
  }

  // float OTI_angR_ObjTraj3orderC1_sg = 4;
  if (this->oti_angr_objtraj3orderc1_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->oti_angr_objtraj3orderc1_sg(), output);
  }

  // float OTI_cv_ObjTraj3orderC2_sg = 5;
  if (this->oti_cv_objtraj3orderc2_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->oti_cv_objtraj3orderc2_sg(), output);
  }

  // float OTI_cvr_ObjTraj3orderC3_sg = 6;
  if (this->oti_cvr_objtraj3orderc3_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->oti_cvr_objtraj3orderc3_sg(), output);
  }

  // bool OTI_is_ObjTrajRst_bl = 7;
  if (this->oti_is_objtrajrst_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->oti_is_objtrajrst_bl(), output);
  }

  // repeated float OTI_arr_ObjTrajhistXPnts_sg = 8;
  if (this->oti_arr_objtrajhistxpnts_sg_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _oti_arr_objtrajhistxpnts_sg_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->oti_arr_objtrajhistxpnts_sg().data(), this->oti_arr_objtrajhistxpnts_sg_size(), output);
  }

  // repeated float OTI_arr_ObjTrajhistYPnts_sg = 9;
  if (this->oti_arr_objtrajhistypnts_sg_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _oti_arr_objtrajhistypnts_sg_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->oti_arr_objtrajhistypnts_sg().data(), this->oti_arr_objtrajhistypnts_sg_size(), output);
  }

  // float OTI_k_ObjAvgMVSlope_sg = 10;
  if (this->oti_k_objavgmvslope_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->oti_k_objavgmvslope_sg(), output);
  }

  // float OTI_cv_ObjAvgMVCrv_sg = 11;
  if (this->oti_cv_objavgmvcrv_sg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->oti_cv_objavgmvcrv_sg(), output);
  }

  // bool OTI_is_ObjTrajValid_bl = 12;
  if (this->oti_is_objtrajvalid_bl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->oti_is_objtrajvalid_bl(), output);
  }

  // sint32 OTI_perc_ObjTrajQlty_u8 = 13;
  if (this->oti_perc_objtrajqlty_u8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(13, this->oti_perc_objtrajqlty_u8(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B1_ObjTrajInfo)
}

::google::protobuf::uint8* B1_ObjTrajInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B1_ObjTrajInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float OTI_d_ObjTraj1orderC0_sg = 1;
  if (this->oti_d_objtraj1orderc0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->oti_d_objtraj1orderc0_sg(), target);
  }

  // float OTI_angR_ObjTraj1orderC1_sg = 2;
  if (this->oti_angr_objtraj1orderc1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->oti_angr_objtraj1orderc1_sg(), target);
  }

  // float OTI_d_ObjTraj3orderC0_sg = 3;
  if (this->oti_d_objtraj3orderc0_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->oti_d_objtraj3orderc0_sg(), target);
  }

  // float OTI_angR_ObjTraj3orderC1_sg = 4;
  if (this->oti_angr_objtraj3orderc1_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->oti_angr_objtraj3orderc1_sg(), target);
  }

  // float OTI_cv_ObjTraj3orderC2_sg = 5;
  if (this->oti_cv_objtraj3orderc2_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->oti_cv_objtraj3orderc2_sg(), target);
  }

  // float OTI_cvr_ObjTraj3orderC3_sg = 6;
  if (this->oti_cvr_objtraj3orderc3_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->oti_cvr_objtraj3orderc3_sg(), target);
  }

  // bool OTI_is_ObjTrajRst_bl = 7;
  if (this->oti_is_objtrajrst_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->oti_is_objtrajrst_bl(), target);
  }

  // repeated float OTI_arr_ObjTrajhistXPnts_sg = 8;
  if (this->oti_arr_objtrajhistxpnts_sg_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _oti_arr_objtrajhistxpnts_sg_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->oti_arr_objtrajhistxpnts_sg_, target);
  }

  // repeated float OTI_arr_ObjTrajhistYPnts_sg = 9;
  if (this->oti_arr_objtrajhistypnts_sg_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _oti_arr_objtrajhistypnts_sg_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->oti_arr_objtrajhistypnts_sg_, target);
  }

  // float OTI_k_ObjAvgMVSlope_sg = 10;
  if (this->oti_k_objavgmvslope_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->oti_k_objavgmvslope_sg(), target);
  }

  // float OTI_cv_ObjAvgMVCrv_sg = 11;
  if (this->oti_cv_objavgmvcrv_sg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->oti_cv_objavgmvcrv_sg(), target);
  }

  // bool OTI_is_ObjTrajValid_bl = 12;
  if (this->oti_is_objtrajvalid_bl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->oti_is_objtrajvalid_bl(), target);
  }

  // sint32 OTI_perc_ObjTrajQlty_u8 = 13;
  if (this->oti_perc_objtrajqlty_u8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(13, this->oti_perc_objtrajqlty_u8(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B1_ObjTrajInfo)
  return target;
}

size_t B1_ObjTrajInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B1_ObjTrajInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float OTI_arr_ObjTrajhistXPnts_sg = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->oti_arr_objtrajhistxpnts_sg_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oti_arr_objtrajhistxpnts_sg_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float OTI_arr_ObjTrajhistYPnts_sg = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->oti_arr_objtrajhistypnts_sg_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oti_arr_objtrajhistypnts_sg_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // float OTI_d_ObjTraj1orderC0_sg = 1;
  if (this->oti_d_objtraj1orderc0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float OTI_angR_ObjTraj1orderC1_sg = 2;
  if (this->oti_angr_objtraj1orderc1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float OTI_d_ObjTraj3orderC0_sg = 3;
  if (this->oti_d_objtraj3orderc0_sg() != 0) {
    total_size += 1 + 4;
  }

  // float OTI_angR_ObjTraj3orderC1_sg = 4;
  if (this->oti_angr_objtraj3orderc1_sg() != 0) {
    total_size += 1 + 4;
  }

  // float OTI_cv_ObjTraj3orderC2_sg = 5;
  if (this->oti_cv_objtraj3orderc2_sg() != 0) {
    total_size += 1 + 4;
  }

  // float OTI_cvr_ObjTraj3orderC3_sg = 6;
  if (this->oti_cvr_objtraj3orderc3_sg() != 0) {
    total_size += 1 + 4;
  }

  // bool OTI_is_ObjTrajRst_bl = 7;
  if (this->oti_is_objtrajrst_bl() != 0) {
    total_size += 1 + 1;
  }

  // bool OTI_is_ObjTrajValid_bl = 12;
  if (this->oti_is_objtrajvalid_bl() != 0) {
    total_size += 1 + 1;
  }

  // float OTI_k_ObjAvgMVSlope_sg = 10;
  if (this->oti_k_objavgmvslope_sg() != 0) {
    total_size += 1 + 4;
  }

  // float OTI_cv_ObjAvgMVCrv_sg = 11;
  if (this->oti_cv_objavgmvcrv_sg() != 0) {
    total_size += 1 + 4;
  }

  // sint32 OTI_perc_ObjTrajQlty_u8 = 13;
  if (this->oti_perc_objtrajqlty_u8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->oti_perc_objtrajqlty_u8());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B1_ObjTrajInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B1_ObjTrajInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const B1_ObjTrajInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B1_ObjTrajInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B1_ObjTrajInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B1_ObjTrajInfo)
    MergeFrom(*source);
  }
}

void B1_ObjTrajInfo::MergeFrom(const B1_ObjTrajInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B1_ObjTrajInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  oti_arr_objtrajhistxpnts_sg_.MergeFrom(from.oti_arr_objtrajhistxpnts_sg_);
  oti_arr_objtrajhistypnts_sg_.MergeFrom(from.oti_arr_objtrajhistypnts_sg_);
  if (from.oti_d_objtraj1orderc0_sg() != 0) {
    set_oti_d_objtraj1orderc0_sg(from.oti_d_objtraj1orderc0_sg());
  }
  if (from.oti_angr_objtraj1orderc1_sg() != 0) {
    set_oti_angr_objtraj1orderc1_sg(from.oti_angr_objtraj1orderc1_sg());
  }
  if (from.oti_d_objtraj3orderc0_sg() != 0) {
    set_oti_d_objtraj3orderc0_sg(from.oti_d_objtraj3orderc0_sg());
  }
  if (from.oti_angr_objtraj3orderc1_sg() != 0) {
    set_oti_angr_objtraj3orderc1_sg(from.oti_angr_objtraj3orderc1_sg());
  }
  if (from.oti_cv_objtraj3orderc2_sg() != 0) {
    set_oti_cv_objtraj3orderc2_sg(from.oti_cv_objtraj3orderc2_sg());
  }
  if (from.oti_cvr_objtraj3orderc3_sg() != 0) {
    set_oti_cvr_objtraj3orderc3_sg(from.oti_cvr_objtraj3orderc3_sg());
  }
  if (from.oti_is_objtrajrst_bl() != 0) {
    set_oti_is_objtrajrst_bl(from.oti_is_objtrajrst_bl());
  }
  if (from.oti_is_objtrajvalid_bl() != 0) {
    set_oti_is_objtrajvalid_bl(from.oti_is_objtrajvalid_bl());
  }
  if (from.oti_k_objavgmvslope_sg() != 0) {
    set_oti_k_objavgmvslope_sg(from.oti_k_objavgmvslope_sg());
  }
  if (from.oti_cv_objavgmvcrv_sg() != 0) {
    set_oti_cv_objavgmvcrv_sg(from.oti_cv_objavgmvcrv_sg());
  }
  if (from.oti_perc_objtrajqlty_u8() != 0) {
    set_oti_perc_objtrajqlty_u8(from.oti_perc_objtrajqlty_u8());
  }
}

void B1_ObjTrajInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B1_ObjTrajInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B1_ObjTrajInfo::CopyFrom(const B1_ObjTrajInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B1_ObjTrajInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B1_ObjTrajInfo::IsInitialized() const {
  return true;
}

void B1_ObjTrajInfo::Swap(B1_ObjTrajInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B1_ObjTrajInfo::InternalSwap(B1_ObjTrajInfo* other) {
  using std::swap;
  oti_arr_objtrajhistxpnts_sg_.InternalSwap(&other->oti_arr_objtrajhistxpnts_sg_);
  oti_arr_objtrajhistypnts_sg_.InternalSwap(&other->oti_arr_objtrajhistypnts_sg_);
  swap(oti_d_objtraj1orderc0_sg_, other->oti_d_objtraj1orderc0_sg_);
  swap(oti_angr_objtraj1orderc1_sg_, other->oti_angr_objtraj1orderc1_sg_);
  swap(oti_d_objtraj3orderc0_sg_, other->oti_d_objtraj3orderc0_sg_);
  swap(oti_angr_objtraj3orderc1_sg_, other->oti_angr_objtraj3orderc1_sg_);
  swap(oti_cv_objtraj3orderc2_sg_, other->oti_cv_objtraj3orderc2_sg_);
  swap(oti_cvr_objtraj3orderc3_sg_, other->oti_cvr_objtraj3orderc3_sg_);
  swap(oti_is_objtrajrst_bl_, other->oti_is_objtrajrst_bl_);
  swap(oti_is_objtrajvalid_bl_, other->oti_is_objtrajvalid_bl_);
  swap(oti_k_objavgmvslope_sg_, other->oti_k_objavgmvslope_sg_);
  swap(oti_cv_objavgmvcrv_sg_, other->oti_cv_objavgmvcrv_sg_);
  swap(oti_perc_objtrajqlty_u8_, other->oti_perc_objtrajqlty_u8_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B1_ObjTrajInfo::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B1_ObjPredTraj::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B1_ObjPredTraj::kObjPredXpointsFieldNumber;
const int B1_ObjPredTraj::kObjPredYpointsFieldNumber;
const int B1_ObjPredTraj::kObjPredQualityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B1_ObjPredTraj::B1_ObjPredTraj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B1_ObjPredTraj.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B1_ObjPredTraj)
}
B1_ObjPredTraj::B1_ObjPredTraj(const B1_ObjPredTraj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      obj_pred_xpoints_(from.obj_pred_xpoints_),
      obj_pred_ypoints_(from.obj_pred_ypoints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_pred_quality_ = from.obj_pred_quality_;
  // @@protoc_insertion_point(copy_constructor:ads_common.B1_ObjPredTraj)
}

void B1_ObjPredTraj::SharedCtor() {
  obj_pred_quality_ = false;
}

B1_ObjPredTraj::~B1_ObjPredTraj() {
  // @@protoc_insertion_point(destructor:ads_common.B1_ObjPredTraj)
  SharedDtor();
}

void B1_ObjPredTraj::SharedDtor() {
}

void B1_ObjPredTraj::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B1_ObjPredTraj::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B1_ObjPredTraj& B1_ObjPredTraj::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B1_ObjPredTraj.base);
  return *internal_default_instance();
}


void B1_ObjPredTraj::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B1_ObjPredTraj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_pred_xpoints_.Clear();
  obj_pred_ypoints_.Clear();
  obj_pred_quality_ = false;
  _internal_metadata_.Clear();
}

bool B1_ObjPredTraj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B1_ObjPredTraj)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float obj_pred_xpoints = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_obj_pred_xpoints())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_obj_pred_xpoints())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float obj_pred_ypoints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_obj_pred_ypoints())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_obj_pred_ypoints())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool obj_pred_quality = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &obj_pred_quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B1_ObjPredTraj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B1_ObjPredTraj)
  return false;
#undef DO_
}

void B1_ObjPredTraj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B1_ObjPredTraj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float obj_pred_xpoints = 1;
  if (this->obj_pred_xpoints_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _obj_pred_xpoints_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->obj_pred_xpoints().data(), this->obj_pred_xpoints_size(), output);
  }

  // repeated float obj_pred_ypoints = 2;
  if (this->obj_pred_ypoints_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _obj_pred_ypoints_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->obj_pred_ypoints().data(), this->obj_pred_ypoints_size(), output);
  }

  // bool obj_pred_quality = 3;
  if (this->obj_pred_quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->obj_pred_quality(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B1_ObjPredTraj)
}

::google::protobuf::uint8* B1_ObjPredTraj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B1_ObjPredTraj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float obj_pred_xpoints = 1;
  if (this->obj_pred_xpoints_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _obj_pred_xpoints_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->obj_pred_xpoints_, target);
  }

  // repeated float obj_pred_ypoints = 2;
  if (this->obj_pred_ypoints_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _obj_pred_ypoints_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->obj_pred_ypoints_, target);
  }

  // bool obj_pred_quality = 3;
  if (this->obj_pred_quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->obj_pred_quality(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B1_ObjPredTraj)
  return target;
}

size_t B1_ObjPredTraj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B1_ObjPredTraj)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float obj_pred_xpoints = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->obj_pred_xpoints_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _obj_pred_xpoints_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float obj_pred_ypoints = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->obj_pred_ypoints_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _obj_pred_ypoints_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool obj_pred_quality = 3;
  if (this->obj_pred_quality() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B1_ObjPredTraj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B1_ObjPredTraj)
  GOOGLE_DCHECK_NE(&from, this);
  const B1_ObjPredTraj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B1_ObjPredTraj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B1_ObjPredTraj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B1_ObjPredTraj)
    MergeFrom(*source);
  }
}

void B1_ObjPredTraj::MergeFrom(const B1_ObjPredTraj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B1_ObjPredTraj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  obj_pred_xpoints_.MergeFrom(from.obj_pred_xpoints_);
  obj_pred_ypoints_.MergeFrom(from.obj_pred_ypoints_);
  if (from.obj_pred_quality() != 0) {
    set_obj_pred_quality(from.obj_pred_quality());
  }
}

void B1_ObjPredTraj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B1_ObjPredTraj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B1_ObjPredTraj::CopyFrom(const B1_ObjPredTraj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B1_ObjPredTraj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B1_ObjPredTraj::IsInitialized() const {
  return true;
}

void B1_ObjPredTraj::Swap(B1_ObjPredTraj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B1_ObjPredTraj::InternalSwap(B1_ObjPredTraj* other) {
  using std::swap;
  obj_pred_xpoints_.InternalSwap(&other->obj_pred_xpoints_);
  obj_pred_ypoints_.InternalSwap(&other->obj_pred_ypoints_);
  swap(obj_pred_quality_, other->obj_pred_quality_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B1_ObjPredTraj::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B1_ObjPredTrajV2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B1_ObjPredTrajV2::kObjPredVFieldNumber;
const int B1_ObjPredTrajV2::kObjPredVStdFieldNumber;
const int B1_ObjPredTrajV2::kObjPredAFieldNumber;
const int B1_ObjPredTrajV2::kObjPredAStdFieldNumber;
const int B1_ObjPredTrajV2::kObjPredXFieldNumber;
const int B1_ObjPredTrajV2::kObjPredXStdFieldNumber;
const int B1_ObjPredTrajV2::kObjPredYFieldNumber;
const int B1_ObjPredTrajV2::kObjPredYStdFieldNumber;
const int B1_ObjPredTrajV2::kObjPredTimeFieldNumber;
const int B1_ObjPredTrajV2::kObjPredQualityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B1_ObjPredTrajV2::B1_ObjPredTrajV2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B1_ObjPredTrajV2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B1_ObjPredTrajV2)
}
B1_ObjPredTrajV2::B1_ObjPredTrajV2(const B1_ObjPredTrajV2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      obj_pred_v_(from.obj_pred_v_),
      obj_pred_v_std_(from.obj_pred_v_std_),
      obj_pred_a_(from.obj_pred_a_),
      obj_pred_a_std_(from.obj_pred_a_std_),
      obj_pred_x_(from.obj_pred_x_),
      obj_pred_x_std_(from.obj_pred_x_std_),
      obj_pred_y_(from.obj_pred_y_),
      obj_pred_y_std_(from.obj_pred_y_std_),
      obj_pred_time_(from.obj_pred_time_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_pred_quality_ = from.obj_pred_quality_;
  // @@protoc_insertion_point(copy_constructor:ads_common.B1_ObjPredTrajV2)
}

void B1_ObjPredTrajV2::SharedCtor() {
  obj_pred_quality_ = 0;
}

B1_ObjPredTrajV2::~B1_ObjPredTrajV2() {
  // @@protoc_insertion_point(destructor:ads_common.B1_ObjPredTrajV2)
  SharedDtor();
}

void B1_ObjPredTrajV2::SharedDtor() {
}

void B1_ObjPredTrajV2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B1_ObjPredTrajV2::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B1_ObjPredTrajV2& B1_ObjPredTrajV2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B1_ObjPredTrajV2.base);
  return *internal_default_instance();
}


void B1_ObjPredTrajV2::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B1_ObjPredTrajV2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_pred_v_.Clear();
  obj_pred_v_std_.Clear();
  obj_pred_a_.Clear();
  obj_pred_a_std_.Clear();
  obj_pred_x_.Clear();
  obj_pred_x_std_.Clear();
  obj_pred_y_.Clear();
  obj_pred_y_std_.Clear();
  obj_pred_time_.Clear();
  obj_pred_quality_ = 0;
  _internal_metadata_.Clear();
}

bool B1_ObjPredTrajV2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B1_ObjPredTrajV2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float obj_pred_v = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_obj_pred_v())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_obj_pred_v())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float obj_pred_v_std = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_obj_pred_v_std())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_obj_pred_v_std())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float obj_pred_a = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_obj_pred_a())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_obj_pred_a())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float obj_pred_a_std = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_obj_pred_a_std())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_obj_pred_a_std())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float obj_pred_x = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_obj_pred_x())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42u, input, this->mutable_obj_pred_x())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float obj_pred_x_std = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_obj_pred_x_std())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 50u, input, this->mutable_obj_pred_x_std())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float obj_pred_y = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_obj_pred_y())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 58u, input, this->mutable_obj_pred_y())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float obj_pred_y_std = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_obj_pred_y_std())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 66u, input, this->mutable_obj_pred_y_std())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float obj_pred_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_obj_pred_time())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 74u, input, this->mutable_obj_pred_time())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 obj_pred_quality = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &obj_pred_quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B1_ObjPredTrajV2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B1_ObjPredTrajV2)
  return false;
#undef DO_
}

void B1_ObjPredTrajV2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B1_ObjPredTrajV2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float obj_pred_v = 1;
  if (this->obj_pred_v_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _obj_pred_v_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->obj_pred_v().data(), this->obj_pred_v_size(), output);
  }

  // repeated float obj_pred_v_std = 2;
  if (this->obj_pred_v_std_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _obj_pred_v_std_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->obj_pred_v_std().data(), this->obj_pred_v_std_size(), output);
  }

  // repeated float obj_pred_a = 3;
  if (this->obj_pred_a_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _obj_pred_a_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->obj_pred_a().data(), this->obj_pred_a_size(), output);
  }

  // repeated float obj_pred_a_std = 4;
  if (this->obj_pred_a_std_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _obj_pred_a_std_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->obj_pred_a_std().data(), this->obj_pred_a_std_size(), output);
  }

  // repeated float obj_pred_x = 5;
  if (this->obj_pred_x_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _obj_pred_x_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->obj_pred_x().data(), this->obj_pred_x_size(), output);
  }

  // repeated float obj_pred_x_std = 6;
  if (this->obj_pred_x_std_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _obj_pred_x_std_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->obj_pred_x_std().data(), this->obj_pred_x_std_size(), output);
  }

  // repeated float obj_pred_y = 7;
  if (this->obj_pred_y_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _obj_pred_y_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->obj_pred_y().data(), this->obj_pred_y_size(), output);
  }

  // repeated float obj_pred_y_std = 8;
  if (this->obj_pred_y_std_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _obj_pred_y_std_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->obj_pred_y_std().data(), this->obj_pred_y_std_size(), output);
  }

  // repeated float obj_pred_time = 9;
  if (this->obj_pred_time_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _obj_pred_time_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->obj_pred_time().data(), this->obj_pred_time_size(), output);
  }

  // sint32 obj_pred_quality = 10;
  if (this->obj_pred_quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->obj_pred_quality(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B1_ObjPredTrajV2)
}

::google::protobuf::uint8* B1_ObjPredTrajV2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B1_ObjPredTrajV2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float obj_pred_v = 1;
  if (this->obj_pred_v_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _obj_pred_v_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->obj_pred_v_, target);
  }

  // repeated float obj_pred_v_std = 2;
  if (this->obj_pred_v_std_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _obj_pred_v_std_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->obj_pred_v_std_, target);
  }

  // repeated float obj_pred_a = 3;
  if (this->obj_pred_a_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _obj_pred_a_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->obj_pred_a_, target);
  }

  // repeated float obj_pred_a_std = 4;
  if (this->obj_pred_a_std_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _obj_pred_a_std_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->obj_pred_a_std_, target);
  }

  // repeated float obj_pred_x = 5;
  if (this->obj_pred_x_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _obj_pred_x_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->obj_pred_x_, target);
  }

  // repeated float obj_pred_x_std = 6;
  if (this->obj_pred_x_std_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _obj_pred_x_std_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->obj_pred_x_std_, target);
  }

  // repeated float obj_pred_y = 7;
  if (this->obj_pred_y_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _obj_pred_y_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->obj_pred_y_, target);
  }

  // repeated float obj_pred_y_std = 8;
  if (this->obj_pred_y_std_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _obj_pred_y_std_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->obj_pred_y_std_, target);
  }

  // repeated float obj_pred_time = 9;
  if (this->obj_pred_time_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _obj_pred_time_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->obj_pred_time_, target);
  }

  // sint32 obj_pred_quality = 10;
  if (this->obj_pred_quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->obj_pred_quality(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B1_ObjPredTrajV2)
  return target;
}

size_t B1_ObjPredTrajV2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B1_ObjPredTrajV2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float obj_pred_v = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->obj_pred_v_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _obj_pred_v_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float obj_pred_v_std = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->obj_pred_v_std_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _obj_pred_v_std_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float obj_pred_a = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->obj_pred_a_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _obj_pred_a_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float obj_pred_a_std = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->obj_pred_a_std_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _obj_pred_a_std_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float obj_pred_x = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->obj_pred_x_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _obj_pred_x_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float obj_pred_x_std = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->obj_pred_x_std_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _obj_pred_x_std_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float obj_pred_y = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->obj_pred_y_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _obj_pred_y_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float obj_pred_y_std = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->obj_pred_y_std_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _obj_pred_y_std_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float obj_pred_time = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->obj_pred_time_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _obj_pred_time_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // sint32 obj_pred_quality = 10;
  if (this->obj_pred_quality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->obj_pred_quality());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B1_ObjPredTrajV2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B1_ObjPredTrajV2)
  GOOGLE_DCHECK_NE(&from, this);
  const B1_ObjPredTrajV2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B1_ObjPredTrajV2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B1_ObjPredTrajV2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B1_ObjPredTrajV2)
    MergeFrom(*source);
  }
}

void B1_ObjPredTrajV2::MergeFrom(const B1_ObjPredTrajV2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B1_ObjPredTrajV2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  obj_pred_v_.MergeFrom(from.obj_pred_v_);
  obj_pred_v_std_.MergeFrom(from.obj_pred_v_std_);
  obj_pred_a_.MergeFrom(from.obj_pred_a_);
  obj_pred_a_std_.MergeFrom(from.obj_pred_a_std_);
  obj_pred_x_.MergeFrom(from.obj_pred_x_);
  obj_pred_x_std_.MergeFrom(from.obj_pred_x_std_);
  obj_pred_y_.MergeFrom(from.obj_pred_y_);
  obj_pred_y_std_.MergeFrom(from.obj_pred_y_std_);
  obj_pred_time_.MergeFrom(from.obj_pred_time_);
  if (from.obj_pred_quality() != 0) {
    set_obj_pred_quality(from.obj_pred_quality());
  }
}

void B1_ObjPredTrajV2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B1_ObjPredTrajV2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B1_ObjPredTrajV2::CopyFrom(const B1_ObjPredTrajV2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B1_ObjPredTrajV2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B1_ObjPredTrajV2::IsInitialized() const {
  return true;
}

void B1_ObjPredTrajV2::Swap(B1_ObjPredTrajV2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B1_ObjPredTrajV2::InternalSwap(B1_ObjPredTrajV2* other) {
  using std::swap;
  obj_pred_v_.InternalSwap(&other->obj_pred_v_);
  obj_pred_v_std_.InternalSwap(&other->obj_pred_v_std_);
  obj_pred_a_.InternalSwap(&other->obj_pred_a_);
  obj_pred_a_std_.InternalSwap(&other->obj_pred_a_std_);
  obj_pred_x_.InternalSwap(&other->obj_pred_x_);
  obj_pred_x_std_.InternalSwap(&other->obj_pred_x_std_);
  obj_pred_y_.InternalSwap(&other->obj_pred_y_);
  obj_pred_y_std_.InternalSwap(&other->obj_pred_y_std_);
  obj_pred_time_.InternalSwap(&other->obj_pred_time_);
  swap(obj_pred_quality_, other->obj_pred_quality_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B1_ObjPredTrajV2::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_Adptrout_Brake_Command_60_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_Adptrout_Brake_Command_60_st::kAudioFieldNumber;
const int B_Adptrout_Brake_Command_60_st::kAccFieldNumber;
const int B_Adptrout_Brake_Command_60_st::kQuietFieldNumber;
const int B_Adptrout_Brake_Command_60_st::kCountFieldNumber;
const int B_Adptrout_Brake_Command_60_st::kIgnoreFieldNumber;
const int B_Adptrout_Brake_Command_60_st::kClearFieldNumber;
const int B_Adptrout_Brake_Command_60_st::kPcmdFieldNumber;
const int B_Adptrout_Brake_Command_60_st::kEnFieldNumber;
const int B_Adptrout_Brake_Command_60_st::kBcmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_Adptrout_Brake_Command_60_st::B_Adptrout_Brake_Command_60_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Brake_Command_60_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_Adptrout_Brake_Command_60_st)
}
B_Adptrout_Brake_Command_60_st::B_Adptrout_Brake_Command_60_st(const B_Adptrout_Brake_Command_60_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&audio_, &from.audio_,
    static_cast<size_t>(reinterpret_cast<char*>(&bcmd_) -
    reinterpret_cast<char*>(&audio_)) + sizeof(bcmd_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_Adptrout_Brake_Command_60_st)
}

void B_Adptrout_Brake_Command_60_st::SharedCtor() {
  ::memset(&audio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bcmd_) -
      reinterpret_cast<char*>(&audio_)) + sizeof(bcmd_));
}

B_Adptrout_Brake_Command_60_st::~B_Adptrout_Brake_Command_60_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_Adptrout_Brake_Command_60_st)
  SharedDtor();
}

void B_Adptrout_Brake_Command_60_st::SharedDtor() {
}

void B_Adptrout_Brake_Command_60_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_Adptrout_Brake_Command_60_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_Adptrout_Brake_Command_60_st& B_Adptrout_Brake_Command_60_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Brake_Command_60_st.base);
  return *internal_default_instance();
}


void B_Adptrout_Brake_Command_60_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_Adptrout_Brake_Command_60_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&audio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bcmd_) -
      reinterpret_cast<char*>(&audio_)) + sizeof(bcmd_));
  _internal_metadata_.Clear();
}

bool B_Adptrout_Brake_Command_60_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_Adptrout_Brake_Command_60_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 audio = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &audio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float acc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 quiet = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &quiet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 ignore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &ignore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 clear = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &clear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pcmd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 en = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &en_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 bcmd = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_Adptrout_Brake_Command_60_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_Adptrout_Brake_Command_60_st)
  return false;
#undef DO_
}

void B_Adptrout_Brake_Command_60_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_Adptrout_Brake_Command_60_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 audio = 1;
  if (this->audio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->audio(), output);
  }

  // float acc = 2;
  if (this->acc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->acc(), output);
  }

  // sint32 quiet = 3;
  if (this->quiet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->quiet(), output);
  }

  // sint32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->count(), output);
  }

  // sint32 ignore = 5;
  if (this->ignore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->ignore(), output);
  }

  // sint32 clear = 6;
  if (this->clear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->clear(), output);
  }

  // float pcmd = 7;
  if (this->pcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->pcmd(), output);
  }

  // sint32 en = 8;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->en(), output);
  }

  // sint32 bcmd = 9;
  if (this->bcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->bcmd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_Adptrout_Brake_Command_60_st)
}

::google::protobuf::uint8* B_Adptrout_Brake_Command_60_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_Adptrout_Brake_Command_60_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 audio = 1;
  if (this->audio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->audio(), target);
  }

  // float acc = 2;
  if (this->acc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->acc(), target);
  }

  // sint32 quiet = 3;
  if (this->quiet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->quiet(), target);
  }

  // sint32 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->count(), target);
  }

  // sint32 ignore = 5;
  if (this->ignore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->ignore(), target);
  }

  // sint32 clear = 6;
  if (this->clear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->clear(), target);
  }

  // float pcmd = 7;
  if (this->pcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->pcmd(), target);
  }

  // sint32 en = 8;
  if (this->en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->en(), target);
  }

  // sint32 bcmd = 9;
  if (this->bcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->bcmd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_Adptrout_Brake_Command_60_st)
  return target;
}

size_t B_Adptrout_Brake_Command_60_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_Adptrout_Brake_Command_60_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 audio = 1;
  if (this->audio() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->audio());
  }

  // float acc = 2;
  if (this->acc() != 0) {
    total_size += 1 + 4;
  }

  // sint32 quiet = 3;
  if (this->quiet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->quiet());
  }

  // sint32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->count());
  }

  // sint32 ignore = 5;
  if (this->ignore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->ignore());
  }

  // sint32 clear = 6;
  if (this->clear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->clear());
  }

  // float pcmd = 7;
  if (this->pcmd() != 0) {
    total_size += 1 + 4;
  }

  // sint32 en = 8;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->en());
  }

  // sint32 bcmd = 9;
  if (this->bcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->bcmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_Adptrout_Brake_Command_60_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_Adptrout_Brake_Command_60_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_Adptrout_Brake_Command_60_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_Adptrout_Brake_Command_60_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_Adptrout_Brake_Command_60_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_Adptrout_Brake_Command_60_st)
    MergeFrom(*source);
  }
}

void B_Adptrout_Brake_Command_60_st::MergeFrom(const B_Adptrout_Brake_Command_60_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_Adptrout_Brake_Command_60_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio() != 0) {
    set_audio(from.audio());
  }
  if (from.acc() != 0) {
    set_acc(from.acc());
  }
  if (from.quiet() != 0) {
    set_quiet(from.quiet());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.ignore() != 0) {
    set_ignore(from.ignore());
  }
  if (from.clear() != 0) {
    set_clear(from.clear());
  }
  if (from.pcmd() != 0) {
    set_pcmd(from.pcmd());
  }
  if (from.en() != 0) {
    set_en(from.en());
  }
  if (from.bcmd() != 0) {
    set_bcmd(from.bcmd());
  }
}

void B_Adptrout_Brake_Command_60_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_Adptrout_Brake_Command_60_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_Adptrout_Brake_Command_60_st::CopyFrom(const B_Adptrout_Brake_Command_60_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_Adptrout_Brake_Command_60_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_Adptrout_Brake_Command_60_st::IsInitialized() const {
  return true;
}

void B_Adptrout_Brake_Command_60_st::Swap(B_Adptrout_Brake_Command_60_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_Adptrout_Brake_Command_60_st::InternalSwap(B_Adptrout_Brake_Command_60_st* other) {
  using std::swap;
  swap(audio_, other->audio_);
  swap(acc_, other->acc_);
  swap(quiet_, other->quiet_);
  swap(count_, other->count_);
  swap(ignore_, other->ignore_);
  swap(clear_, other->clear_);
  swap(pcmd_, other->pcmd_);
  swap(en_, other->en_);
  swap(bcmd_, other->bcmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_Adptrout_Brake_Command_60_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_Adptrout_Throttle_Command_62_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_Adptrout_Throttle_Command_62_st::kQuietFieldNumber;
const int B_Adptrout_Throttle_Command_62_st::kCountFieldNumber;
const int B_Adptrout_Throttle_Command_62_st::kIgnoreFieldNumber;
const int B_Adptrout_Throttle_Command_62_st::kClearFieldNumber;
const int B_Adptrout_Throttle_Command_62_st::kPcmdFieldNumber;
const int B_Adptrout_Throttle_Command_62_st::kEnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_Adptrout_Throttle_Command_62_st::B_Adptrout_Throttle_Command_62_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Throttle_Command_62_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_Adptrout_Throttle_Command_62_st)
}
B_Adptrout_Throttle_Command_62_st::B_Adptrout_Throttle_Command_62_st(const B_Adptrout_Throttle_Command_62_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&quiet_, &from.quiet_,
    static_cast<size_t>(reinterpret_cast<char*>(&en_) -
    reinterpret_cast<char*>(&quiet_)) + sizeof(en_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_Adptrout_Throttle_Command_62_st)
}

void B_Adptrout_Throttle_Command_62_st::SharedCtor() {
  ::memset(&quiet_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&en_) -
      reinterpret_cast<char*>(&quiet_)) + sizeof(en_));
}

B_Adptrout_Throttle_Command_62_st::~B_Adptrout_Throttle_Command_62_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_Adptrout_Throttle_Command_62_st)
  SharedDtor();
}

void B_Adptrout_Throttle_Command_62_st::SharedDtor() {
}

void B_Adptrout_Throttle_Command_62_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_Adptrout_Throttle_Command_62_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_Adptrout_Throttle_Command_62_st& B_Adptrout_Throttle_Command_62_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Throttle_Command_62_st.base);
  return *internal_default_instance();
}


void B_Adptrout_Throttle_Command_62_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_Adptrout_Throttle_Command_62_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&quiet_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&en_) -
      reinterpret_cast<char*>(&quiet_)) + sizeof(en_));
  _internal_metadata_.Clear();
}

bool B_Adptrout_Throttle_Command_62_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_Adptrout_Throttle_Command_62_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 quiet = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &quiet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 ignore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &ignore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 clear = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &clear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pcmd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 en = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &en_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_Adptrout_Throttle_Command_62_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_Adptrout_Throttle_Command_62_st)
  return false;
#undef DO_
}

void B_Adptrout_Throttle_Command_62_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_Adptrout_Throttle_Command_62_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 quiet = 1;
  if (this->quiet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->quiet(), output);
  }

  // sint32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->count(), output);
  }

  // sint32 ignore = 3;
  if (this->ignore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->ignore(), output);
  }

  // sint32 clear = 4;
  if (this->clear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->clear(), output);
  }

  // float pcmd = 5;
  if (this->pcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->pcmd(), output);
  }

  // sint32 en = 6;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->en(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_Adptrout_Throttle_Command_62_st)
}

::google::protobuf::uint8* B_Adptrout_Throttle_Command_62_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_Adptrout_Throttle_Command_62_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 quiet = 1;
  if (this->quiet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->quiet(), target);
  }

  // sint32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->count(), target);
  }

  // sint32 ignore = 3;
  if (this->ignore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->ignore(), target);
  }

  // sint32 clear = 4;
  if (this->clear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->clear(), target);
  }

  // float pcmd = 5;
  if (this->pcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->pcmd(), target);
  }

  // sint32 en = 6;
  if (this->en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->en(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_Adptrout_Throttle_Command_62_st)
  return target;
}

size_t B_Adptrout_Throttle_Command_62_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_Adptrout_Throttle_Command_62_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 quiet = 1;
  if (this->quiet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->quiet());
  }

  // sint32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->count());
  }

  // sint32 ignore = 3;
  if (this->ignore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->ignore());
  }

  // sint32 clear = 4;
  if (this->clear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->clear());
  }

  // float pcmd = 5;
  if (this->pcmd() != 0) {
    total_size += 1 + 4;
  }

  // sint32 en = 6;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->en());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_Adptrout_Throttle_Command_62_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_Adptrout_Throttle_Command_62_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_Adptrout_Throttle_Command_62_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_Adptrout_Throttle_Command_62_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_Adptrout_Throttle_Command_62_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_Adptrout_Throttle_Command_62_st)
    MergeFrom(*source);
  }
}

void B_Adptrout_Throttle_Command_62_st::MergeFrom(const B_Adptrout_Throttle_Command_62_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_Adptrout_Throttle_Command_62_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.quiet() != 0) {
    set_quiet(from.quiet());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.ignore() != 0) {
    set_ignore(from.ignore());
  }
  if (from.clear() != 0) {
    set_clear(from.clear());
  }
  if (from.pcmd() != 0) {
    set_pcmd(from.pcmd());
  }
  if (from.en() != 0) {
    set_en(from.en());
  }
}

void B_Adptrout_Throttle_Command_62_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_Adptrout_Throttle_Command_62_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_Adptrout_Throttle_Command_62_st::CopyFrom(const B_Adptrout_Throttle_Command_62_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_Adptrout_Throttle_Command_62_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_Adptrout_Throttle_Command_62_st::IsInitialized() const {
  return true;
}

void B_Adptrout_Throttle_Command_62_st::Swap(B_Adptrout_Throttle_Command_62_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_Adptrout_Throttle_Command_62_st::InternalSwap(B_Adptrout_Throttle_Command_62_st* other) {
  using std::swap;
  swap(quiet_, other->quiet_);
  swap(count_, other->count_);
  swap(ignore_, other->ignore_);
  swap(clear_, other->clear_);
  swap(pcmd_, other->pcmd_);
  swap(en_, other->en_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_Adptrout_Throttle_Command_62_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_Adptrout_Steering_Command_64_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_Adptrout_Steering_Command_64_st::kQuietFieldNumber;
const int B_Adptrout_Steering_Command_64_st::kCountFieldNumber;
const int B_Adptrout_Steering_Command_64_st::kIgnoreFieldNumber;
const int B_Adptrout_Steering_Command_64_st::kSvelFieldNumber;
const int B_Adptrout_Steering_Command_64_st::kClearFieldNumber;
const int B_Adptrout_Steering_Command_64_st::kEnFieldNumber;
const int B_Adptrout_Steering_Command_64_st::kScmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_Adptrout_Steering_Command_64_st::B_Adptrout_Steering_Command_64_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Steering_Command_64_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_Adptrout_Steering_Command_64_st)
}
B_Adptrout_Steering_Command_64_st::B_Adptrout_Steering_Command_64_st(const B_Adptrout_Steering_Command_64_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&quiet_, &from.quiet_,
    static_cast<size_t>(reinterpret_cast<char*>(&scmd_) -
    reinterpret_cast<char*>(&quiet_)) + sizeof(scmd_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_Adptrout_Steering_Command_64_st)
}

void B_Adptrout_Steering_Command_64_st::SharedCtor() {
  ::memset(&quiet_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scmd_) -
      reinterpret_cast<char*>(&quiet_)) + sizeof(scmd_));
}

B_Adptrout_Steering_Command_64_st::~B_Adptrout_Steering_Command_64_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_Adptrout_Steering_Command_64_st)
  SharedDtor();
}

void B_Adptrout_Steering_Command_64_st::SharedDtor() {
}

void B_Adptrout_Steering_Command_64_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_Adptrout_Steering_Command_64_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_Adptrout_Steering_Command_64_st& B_Adptrout_Steering_Command_64_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Steering_Command_64_st.base);
  return *internal_default_instance();
}


void B_Adptrout_Steering_Command_64_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_Adptrout_Steering_Command_64_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&quiet_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scmd_) -
      reinterpret_cast<char*>(&quiet_)) + sizeof(scmd_));
  _internal_metadata_.Clear();
}

bool B_Adptrout_Steering_Command_64_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_Adptrout_Steering_Command_64_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 quiet = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &quiet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 ignore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &ignore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float svel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &svel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 clear = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &clear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 en = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &en_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 scmd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &scmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_Adptrout_Steering_Command_64_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_Adptrout_Steering_Command_64_st)
  return false;
#undef DO_
}

void B_Adptrout_Steering_Command_64_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_Adptrout_Steering_Command_64_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 quiet = 1;
  if (this->quiet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->quiet(), output);
  }

  // sint32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->count(), output);
  }

  // sint32 ignore = 3;
  if (this->ignore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->ignore(), output);
  }

  // float svel = 4;
  if (this->svel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->svel(), output);
  }

  // sint32 clear = 5;
  if (this->clear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->clear(), output);
  }

  // sint32 en = 6;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->en(), output);
  }

  // sint32 scmd = 7;
  if (this->scmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->scmd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_Adptrout_Steering_Command_64_st)
}

::google::protobuf::uint8* B_Adptrout_Steering_Command_64_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_Adptrout_Steering_Command_64_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 quiet = 1;
  if (this->quiet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->quiet(), target);
  }

  // sint32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->count(), target);
  }

  // sint32 ignore = 3;
  if (this->ignore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->ignore(), target);
  }

  // float svel = 4;
  if (this->svel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->svel(), target);
  }

  // sint32 clear = 5;
  if (this->clear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->clear(), target);
  }

  // sint32 en = 6;
  if (this->en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->en(), target);
  }

  // sint32 scmd = 7;
  if (this->scmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->scmd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_Adptrout_Steering_Command_64_st)
  return target;
}

size_t B_Adptrout_Steering_Command_64_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_Adptrout_Steering_Command_64_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 quiet = 1;
  if (this->quiet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->quiet());
  }

  // sint32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->count());
  }

  // sint32 ignore = 3;
  if (this->ignore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->ignore());
  }

  // float svel = 4;
  if (this->svel() != 0) {
    total_size += 1 + 4;
  }

  // sint32 clear = 5;
  if (this->clear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->clear());
  }

  // sint32 en = 6;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->en());
  }

  // sint32 scmd = 7;
  if (this->scmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->scmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_Adptrout_Steering_Command_64_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_Adptrout_Steering_Command_64_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_Adptrout_Steering_Command_64_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_Adptrout_Steering_Command_64_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_Adptrout_Steering_Command_64_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_Adptrout_Steering_Command_64_st)
    MergeFrom(*source);
  }
}

void B_Adptrout_Steering_Command_64_st::MergeFrom(const B_Adptrout_Steering_Command_64_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_Adptrout_Steering_Command_64_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.quiet() != 0) {
    set_quiet(from.quiet());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.ignore() != 0) {
    set_ignore(from.ignore());
  }
  if (from.svel() != 0) {
    set_svel(from.svel());
  }
  if (from.clear() != 0) {
    set_clear(from.clear());
  }
  if (from.en() != 0) {
    set_en(from.en());
  }
  if (from.scmd() != 0) {
    set_scmd(from.scmd());
  }
}

void B_Adptrout_Steering_Command_64_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_Adptrout_Steering_Command_64_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_Adptrout_Steering_Command_64_st::CopyFrom(const B_Adptrout_Steering_Command_64_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_Adptrout_Steering_Command_64_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_Adptrout_Steering_Command_64_st::IsInitialized() const {
  return true;
}

void B_Adptrout_Steering_Command_64_st::Swap(B_Adptrout_Steering_Command_64_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_Adptrout_Steering_Command_64_st::InternalSwap(B_Adptrout_Steering_Command_64_st* other) {
  using std::swap;
  swap(quiet_, other->quiet_);
  swap(count_, other->count_);
  swap(ignore_, other->ignore_);
  swap(svel_, other->svel_);
  swap(clear_, other->clear_);
  swap(en_, other->en_);
  swap(scmd_, other->scmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_Adptrout_Steering_Command_64_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_Adptrout_Gear_Command_66_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_Adptrout_Gear_Command_66_st::kEnFieldNumber;
const int B_Adptrout_Gear_Command_66_st::kGcmdFieldNumber;
const int B_Adptrout_Gear_Command_66_st::kClearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_Adptrout_Gear_Command_66_st::B_Adptrout_Gear_Command_66_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Gear_Command_66_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_Adptrout_Gear_Command_66_st)
}
B_Adptrout_Gear_Command_66_st::B_Adptrout_Gear_Command_66_st(const B_Adptrout_Gear_Command_66_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&en_, &from.en_,
    static_cast<size_t>(reinterpret_cast<char*>(&clear_) -
    reinterpret_cast<char*>(&en_)) + sizeof(clear_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_Adptrout_Gear_Command_66_st)
}

void B_Adptrout_Gear_Command_66_st::SharedCtor() {
  ::memset(&en_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_) -
      reinterpret_cast<char*>(&en_)) + sizeof(clear_));
}

B_Adptrout_Gear_Command_66_st::~B_Adptrout_Gear_Command_66_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_Adptrout_Gear_Command_66_st)
  SharedDtor();
}

void B_Adptrout_Gear_Command_66_st::SharedDtor() {
}

void B_Adptrout_Gear_Command_66_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_Adptrout_Gear_Command_66_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_Adptrout_Gear_Command_66_st& B_Adptrout_Gear_Command_66_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Gear_Command_66_st.base);
  return *internal_default_instance();
}


void B_Adptrout_Gear_Command_66_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_Adptrout_Gear_Command_66_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&en_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_) -
      reinterpret_cast<char*>(&en_)) + sizeof(clear_));
  _internal_metadata_.Clear();
}

bool B_Adptrout_Gear_Command_66_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_Adptrout_Gear_Command_66_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 en = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &en_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 gcmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 clear = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &clear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_Adptrout_Gear_Command_66_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_Adptrout_Gear_Command_66_st)
  return false;
#undef DO_
}

void B_Adptrout_Gear_Command_66_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_Adptrout_Gear_Command_66_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 en = 1;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->en(), output);
  }

  // sint32 gcmd = 2;
  if (this->gcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->gcmd(), output);
  }

  // sint32 clear = 3;
  if (this->clear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->clear(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_Adptrout_Gear_Command_66_st)
}

::google::protobuf::uint8* B_Adptrout_Gear_Command_66_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_Adptrout_Gear_Command_66_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 en = 1;
  if (this->en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->en(), target);
  }

  // sint32 gcmd = 2;
  if (this->gcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->gcmd(), target);
  }

  // sint32 clear = 3;
  if (this->clear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->clear(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_Adptrout_Gear_Command_66_st)
  return target;
}

size_t B_Adptrout_Gear_Command_66_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_Adptrout_Gear_Command_66_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 en = 1;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->en());
  }

  // sint32 gcmd = 2;
  if (this->gcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->gcmd());
  }

  // sint32 clear = 3;
  if (this->clear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->clear());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_Adptrout_Gear_Command_66_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_Adptrout_Gear_Command_66_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_Adptrout_Gear_Command_66_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_Adptrout_Gear_Command_66_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_Adptrout_Gear_Command_66_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_Adptrout_Gear_Command_66_st)
    MergeFrom(*source);
  }
}

void B_Adptrout_Gear_Command_66_st::MergeFrom(const B_Adptrout_Gear_Command_66_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_Adptrout_Gear_Command_66_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.en() != 0) {
    set_en(from.en());
  }
  if (from.gcmd() != 0) {
    set_gcmd(from.gcmd());
  }
  if (from.clear() != 0) {
    set_clear(from.clear());
  }
}

void B_Adptrout_Gear_Command_66_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_Adptrout_Gear_Command_66_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_Adptrout_Gear_Command_66_st::CopyFrom(const B_Adptrout_Gear_Command_66_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_Adptrout_Gear_Command_66_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_Adptrout_Gear_Command_66_st::IsInitialized() const {
  return true;
}

void B_Adptrout_Gear_Command_66_st::Swap(B_Adptrout_Gear_Command_66_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_Adptrout_Gear_Command_66_st::InternalSwap(B_Adptrout_Gear_Command_66_st* other) {
  using std::swap;
  swap(en_, other->en_);
  swap(gcmd_, other->gcmd_);
  swap(clear_, other->clear_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_Adptrout_Gear_Command_66_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_Adptrout_TurnSignal_Command_68_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_Adptrout_TurnSignal_Command_68_st::kTrncmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_Adptrout_TurnSignal_Command_68_st::B_Adptrout_TurnSignal_Command_68_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_TurnSignal_Command_68_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_Adptrout_TurnSignal_Command_68_st)
}
B_Adptrout_TurnSignal_Command_68_st::B_Adptrout_TurnSignal_Command_68_st(const B_Adptrout_TurnSignal_Command_68_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trncmd_ = from.trncmd_;
  // @@protoc_insertion_point(copy_constructor:ads_common.B_Adptrout_TurnSignal_Command_68_st)
}

void B_Adptrout_TurnSignal_Command_68_st::SharedCtor() {
  trncmd_ = 0;
}

B_Adptrout_TurnSignal_Command_68_st::~B_Adptrout_TurnSignal_Command_68_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  SharedDtor();
}

void B_Adptrout_TurnSignal_Command_68_st::SharedDtor() {
}

void B_Adptrout_TurnSignal_Command_68_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_Adptrout_TurnSignal_Command_68_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_Adptrout_TurnSignal_Command_68_st& B_Adptrout_TurnSignal_Command_68_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_TurnSignal_Command_68_st.base);
  return *internal_default_instance();
}


void B_Adptrout_TurnSignal_Command_68_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trncmd_ = 0;
  _internal_metadata_.Clear();
}

bool B_Adptrout_TurnSignal_Command_68_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 trncmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &trncmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  return false;
#undef DO_
}

void B_Adptrout_TurnSignal_Command_68_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 trncmd = 1;
  if (this->trncmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->trncmd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_Adptrout_TurnSignal_Command_68_st)
}

::google::protobuf::uint8* B_Adptrout_TurnSignal_Command_68_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 trncmd = 1;
  if (this->trncmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->trncmd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  return target;
}

size_t B_Adptrout_TurnSignal_Command_68_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 trncmd = 1;
  if (this->trncmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->trncmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_Adptrout_TurnSignal_Command_68_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_Adptrout_TurnSignal_Command_68_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_Adptrout_TurnSignal_Command_68_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_Adptrout_TurnSignal_Command_68_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_Adptrout_TurnSignal_Command_68_st)
    MergeFrom(*source);
  }
}

void B_Adptrout_TurnSignal_Command_68_st::MergeFrom(const B_Adptrout_TurnSignal_Command_68_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trncmd() != 0) {
    set_trncmd(from.trncmd());
  }
}

void B_Adptrout_TurnSignal_Command_68_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_Adptrout_TurnSignal_Command_68_st::CopyFrom(const B_Adptrout_TurnSignal_Command_68_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_Adptrout_TurnSignal_Command_68_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_Adptrout_TurnSignal_Command_68_st::IsInitialized() const {
  return true;
}

void B_Adptrout_TurnSignal_Command_68_st::Swap(B_Adptrout_TurnSignal_Command_68_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_Adptrout_TurnSignal_Command_68_st::InternalSwap(B_Adptrout_TurnSignal_Command_68_st* other) {
  using std::swap;
  swap(trncmd_, other->trncmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_Adptrout_TurnSignal_Command_68_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_Adptrout_LatCtrl_State_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLDWLKADspCmdFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLDWSysStsFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLDWSysFltStsFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLDWLKAAudReqFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLKASysStsFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLKASysFltStsFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLKAVbnLvlReqFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutPLTDspCmdFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutPLTSysStsFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutPLTSysFltStsFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutSnstvtLvlDspCmdFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutAdoWrnngDspCmdFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutDrvrTkovReqFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutHptcWrngDspCmdFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLVsulznReqFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutRVsulznReqFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutNOCDspCmdFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutNOCSysStsFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutNOCSysFltStsFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLKAReqCtrlStsFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLKAReqToqFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLKAReqToqVFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLKAReqAngFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLKAReqAngVFieldNumber;
const int B_Adptrout_LatCtrl_State_st::kAdptrOutLKARampStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_Adptrout_LatCtrl_State_st::B_Adptrout_LatCtrl_State_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_LatCtrl_State_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_Adptrout_LatCtrl_State_st)
}
B_Adptrout_LatCtrl_State_st::B_Adptrout_LatCtrl_State_st(const B_Adptrout_LatCtrl_State_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adptr_out_ldwlkadspcmd_, &from.adptr_out_ldwlkadspcmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&adptr_out_lkarampstate_) -
    reinterpret_cast<char*>(&adptr_out_ldwlkadspcmd_)) + sizeof(adptr_out_lkarampstate_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_Adptrout_LatCtrl_State_st)
}

void B_Adptrout_LatCtrl_State_st::SharedCtor() {
  ::memset(&adptr_out_ldwlkadspcmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adptr_out_lkarampstate_) -
      reinterpret_cast<char*>(&adptr_out_ldwlkadspcmd_)) + sizeof(adptr_out_lkarampstate_));
}

B_Adptrout_LatCtrl_State_st::~B_Adptrout_LatCtrl_State_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_Adptrout_LatCtrl_State_st)
  SharedDtor();
}

void B_Adptrout_LatCtrl_State_st::SharedDtor() {
}

void B_Adptrout_LatCtrl_State_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_Adptrout_LatCtrl_State_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_Adptrout_LatCtrl_State_st& B_Adptrout_LatCtrl_State_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_LatCtrl_State_st.base);
  return *internal_default_instance();
}


void B_Adptrout_LatCtrl_State_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_Adptrout_LatCtrl_State_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&adptr_out_ldwlkadspcmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adptr_out_lkarampstate_) -
      reinterpret_cast<char*>(&adptr_out_ldwlkadspcmd_)) + sizeof(adptr_out_lkarampstate_));
  _internal_metadata_.Clear();
}

bool B_Adptrout_LatCtrl_State_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_Adptrout_LatCtrl_State_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 Adptr_Out_LDWLKADspCmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_ldwlkadspcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_LDWSysSts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_ldwsyssts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_LDWSysFltSts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_ldwsysfltsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_LDWLKAAudReq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_ldwlkaaudreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_LKASysSts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_lkasyssts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_LKASysFltSts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_lkasysfltsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_LKAVbnLvlReq = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_lkavbnlvlreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_PLTDspCmd = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_pltdspcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_PLTSysSts = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_pltsyssts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_PLTSysFltSts = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_pltsysfltsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_SnstvtLvlDspCmd = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_snstvtlvldspcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_AdoWrnngDspCmd = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_adowrnngdspcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_DrvrTkovReq = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_drvrtkovreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_HptcWrngDspCmd = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_hptcwrngdspcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_LVsulznReq = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_lvsulznreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_RVsulznReq = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_rvsulznreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_NOCDspCmd = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_nocdspcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_NOCSysSts = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_nocsyssts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_NOCSysFltSts = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_nocsysfltsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_LKAReqCtrlSts = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_lkareqctrlsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Adptr_Out_LKAReqToq = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &adptr_out_lkareqtoq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_LKAReqToqV = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_lkareqtoqv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Adptr_Out_LKAReqAng = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &adptr_out_lkareqang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_LKAReqAngV = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_lkareqangv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_LKARampState = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_lkarampstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_Adptrout_LatCtrl_State_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_Adptrout_LatCtrl_State_st)
  return false;
#undef DO_
}

void B_Adptrout_LatCtrl_State_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_Adptrout_LatCtrl_State_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 Adptr_Out_LDWLKADspCmd = 1;
  if (this->adptr_out_ldwlkadspcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->adptr_out_ldwlkadspcmd(), output);
  }

  // sint32 Adptr_Out_LDWSysSts = 2;
  if (this->adptr_out_ldwsyssts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->adptr_out_ldwsyssts(), output);
  }

  // sint32 Adptr_Out_LDWSysFltSts = 3;
  if (this->adptr_out_ldwsysfltsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->adptr_out_ldwsysfltsts(), output);
  }

  // sint32 Adptr_Out_LDWLKAAudReq = 4;
  if (this->adptr_out_ldwlkaaudreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->adptr_out_ldwlkaaudreq(), output);
  }

  // sint32 Adptr_Out_LKASysSts = 5;
  if (this->adptr_out_lkasyssts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->adptr_out_lkasyssts(), output);
  }

  // sint32 Adptr_Out_LKASysFltSts = 6;
  if (this->adptr_out_lkasysfltsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->adptr_out_lkasysfltsts(), output);
  }

  // sint32 Adptr_Out_LKAVbnLvlReq = 7;
  if (this->adptr_out_lkavbnlvlreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->adptr_out_lkavbnlvlreq(), output);
  }

  // sint32 Adptr_Out_PLTDspCmd = 8;
  if (this->adptr_out_pltdspcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->adptr_out_pltdspcmd(), output);
  }

  // sint32 Adptr_Out_PLTSysSts = 9;
  if (this->adptr_out_pltsyssts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->adptr_out_pltsyssts(), output);
  }

  // sint32 Adptr_Out_PLTSysFltSts = 10;
  if (this->adptr_out_pltsysfltsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->adptr_out_pltsysfltsts(), output);
  }

  // sint32 Adptr_Out_SnstvtLvlDspCmd = 11;
  if (this->adptr_out_snstvtlvldspcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->adptr_out_snstvtlvldspcmd(), output);
  }

  // sint32 Adptr_Out_AdoWrnngDspCmd = 12;
  if (this->adptr_out_adowrnngdspcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->adptr_out_adowrnngdspcmd(), output);
  }

  // sint32 Adptr_Out_DrvrTkovReq = 13;
  if (this->adptr_out_drvrtkovreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(13, this->adptr_out_drvrtkovreq(), output);
  }

  // sint32 Adptr_Out_HptcWrngDspCmd = 14;
  if (this->adptr_out_hptcwrngdspcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(14, this->adptr_out_hptcwrngdspcmd(), output);
  }

  // sint32 Adptr_Out_LVsulznReq = 15;
  if (this->adptr_out_lvsulznreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(15, this->adptr_out_lvsulznreq(), output);
  }

  // sint32 Adptr_Out_RVsulznReq = 16;
  if (this->adptr_out_rvsulznreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(16, this->adptr_out_rvsulznreq(), output);
  }

  // sint32 Adptr_Out_NOCDspCmd = 17;
  if (this->adptr_out_nocdspcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(17, this->adptr_out_nocdspcmd(), output);
  }

  // sint32 Adptr_Out_NOCSysSts = 18;
  if (this->adptr_out_nocsyssts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(18, this->adptr_out_nocsyssts(), output);
  }

  // sint32 Adptr_Out_NOCSysFltSts = 19;
  if (this->adptr_out_nocsysfltsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(19, this->adptr_out_nocsysfltsts(), output);
  }

  // sint32 Adptr_Out_LKAReqCtrlSts = 20;
  if (this->adptr_out_lkareqctrlsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(20, this->adptr_out_lkareqctrlsts(), output);
  }

  // float Adptr_Out_LKAReqToq = 21;
  if (this->adptr_out_lkareqtoq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->adptr_out_lkareqtoq(), output);
  }

  // sint32 Adptr_Out_LKAReqToqV = 22;
  if (this->adptr_out_lkareqtoqv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(22, this->adptr_out_lkareqtoqv(), output);
  }

  // float Adptr_Out_LKAReqAng = 23;
  if (this->adptr_out_lkareqang() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->adptr_out_lkareqang(), output);
  }

  // sint32 Adptr_Out_LKAReqAngV = 24;
  if (this->adptr_out_lkareqangv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(24, this->adptr_out_lkareqangv(), output);
  }

  // sint32 Adptr_Out_LKARampState = 25;
  if (this->adptr_out_lkarampstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(25, this->adptr_out_lkarampstate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_Adptrout_LatCtrl_State_st)
}

::google::protobuf::uint8* B_Adptrout_LatCtrl_State_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_Adptrout_LatCtrl_State_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 Adptr_Out_LDWLKADspCmd = 1;
  if (this->adptr_out_ldwlkadspcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->adptr_out_ldwlkadspcmd(), target);
  }

  // sint32 Adptr_Out_LDWSysSts = 2;
  if (this->adptr_out_ldwsyssts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->adptr_out_ldwsyssts(), target);
  }

  // sint32 Adptr_Out_LDWSysFltSts = 3;
  if (this->adptr_out_ldwsysfltsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->adptr_out_ldwsysfltsts(), target);
  }

  // sint32 Adptr_Out_LDWLKAAudReq = 4;
  if (this->adptr_out_ldwlkaaudreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->adptr_out_ldwlkaaudreq(), target);
  }

  // sint32 Adptr_Out_LKASysSts = 5;
  if (this->adptr_out_lkasyssts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->adptr_out_lkasyssts(), target);
  }

  // sint32 Adptr_Out_LKASysFltSts = 6;
  if (this->adptr_out_lkasysfltsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->adptr_out_lkasysfltsts(), target);
  }

  // sint32 Adptr_Out_LKAVbnLvlReq = 7;
  if (this->adptr_out_lkavbnlvlreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->adptr_out_lkavbnlvlreq(), target);
  }

  // sint32 Adptr_Out_PLTDspCmd = 8;
  if (this->adptr_out_pltdspcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->adptr_out_pltdspcmd(), target);
  }

  // sint32 Adptr_Out_PLTSysSts = 9;
  if (this->adptr_out_pltsyssts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->adptr_out_pltsyssts(), target);
  }

  // sint32 Adptr_Out_PLTSysFltSts = 10;
  if (this->adptr_out_pltsysfltsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->adptr_out_pltsysfltsts(), target);
  }

  // sint32 Adptr_Out_SnstvtLvlDspCmd = 11;
  if (this->adptr_out_snstvtlvldspcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->adptr_out_snstvtlvldspcmd(), target);
  }

  // sint32 Adptr_Out_AdoWrnngDspCmd = 12;
  if (this->adptr_out_adowrnngdspcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->adptr_out_adowrnngdspcmd(), target);
  }

  // sint32 Adptr_Out_DrvrTkovReq = 13;
  if (this->adptr_out_drvrtkovreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(13, this->adptr_out_drvrtkovreq(), target);
  }

  // sint32 Adptr_Out_HptcWrngDspCmd = 14;
  if (this->adptr_out_hptcwrngdspcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(14, this->adptr_out_hptcwrngdspcmd(), target);
  }

  // sint32 Adptr_Out_LVsulznReq = 15;
  if (this->adptr_out_lvsulznreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(15, this->adptr_out_lvsulznreq(), target);
  }

  // sint32 Adptr_Out_RVsulznReq = 16;
  if (this->adptr_out_rvsulznreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(16, this->adptr_out_rvsulznreq(), target);
  }

  // sint32 Adptr_Out_NOCDspCmd = 17;
  if (this->adptr_out_nocdspcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(17, this->adptr_out_nocdspcmd(), target);
  }

  // sint32 Adptr_Out_NOCSysSts = 18;
  if (this->adptr_out_nocsyssts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(18, this->adptr_out_nocsyssts(), target);
  }

  // sint32 Adptr_Out_NOCSysFltSts = 19;
  if (this->adptr_out_nocsysfltsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(19, this->adptr_out_nocsysfltsts(), target);
  }

  // sint32 Adptr_Out_LKAReqCtrlSts = 20;
  if (this->adptr_out_lkareqctrlsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(20, this->adptr_out_lkareqctrlsts(), target);
  }

  // float Adptr_Out_LKAReqToq = 21;
  if (this->adptr_out_lkareqtoq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->adptr_out_lkareqtoq(), target);
  }

  // sint32 Adptr_Out_LKAReqToqV = 22;
  if (this->adptr_out_lkareqtoqv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(22, this->adptr_out_lkareqtoqv(), target);
  }

  // float Adptr_Out_LKAReqAng = 23;
  if (this->adptr_out_lkareqang() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->adptr_out_lkareqang(), target);
  }

  // sint32 Adptr_Out_LKAReqAngV = 24;
  if (this->adptr_out_lkareqangv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(24, this->adptr_out_lkareqangv(), target);
  }

  // sint32 Adptr_Out_LKARampState = 25;
  if (this->adptr_out_lkarampstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(25, this->adptr_out_lkarampstate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_Adptrout_LatCtrl_State_st)
  return target;
}

size_t B_Adptrout_LatCtrl_State_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_Adptrout_LatCtrl_State_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 Adptr_Out_LDWLKADspCmd = 1;
  if (this->adptr_out_ldwlkadspcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_ldwlkadspcmd());
  }

  // sint32 Adptr_Out_LDWSysSts = 2;
  if (this->adptr_out_ldwsyssts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_ldwsyssts());
  }

  // sint32 Adptr_Out_LDWSysFltSts = 3;
  if (this->adptr_out_ldwsysfltsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_ldwsysfltsts());
  }

  // sint32 Adptr_Out_LDWLKAAudReq = 4;
  if (this->adptr_out_ldwlkaaudreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_ldwlkaaudreq());
  }

  // sint32 Adptr_Out_LKASysSts = 5;
  if (this->adptr_out_lkasyssts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_lkasyssts());
  }

  // sint32 Adptr_Out_LKASysFltSts = 6;
  if (this->adptr_out_lkasysfltsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_lkasysfltsts());
  }

  // sint32 Adptr_Out_LKAVbnLvlReq = 7;
  if (this->adptr_out_lkavbnlvlreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_lkavbnlvlreq());
  }

  // sint32 Adptr_Out_PLTDspCmd = 8;
  if (this->adptr_out_pltdspcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_pltdspcmd());
  }

  // sint32 Adptr_Out_PLTSysSts = 9;
  if (this->adptr_out_pltsyssts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_pltsyssts());
  }

  // sint32 Adptr_Out_PLTSysFltSts = 10;
  if (this->adptr_out_pltsysfltsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_pltsysfltsts());
  }

  // sint32 Adptr_Out_SnstvtLvlDspCmd = 11;
  if (this->adptr_out_snstvtlvldspcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_snstvtlvldspcmd());
  }

  // sint32 Adptr_Out_AdoWrnngDspCmd = 12;
  if (this->adptr_out_adowrnngdspcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_adowrnngdspcmd());
  }

  // sint32 Adptr_Out_DrvrTkovReq = 13;
  if (this->adptr_out_drvrtkovreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_drvrtkovreq());
  }

  // sint32 Adptr_Out_HptcWrngDspCmd = 14;
  if (this->adptr_out_hptcwrngdspcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_hptcwrngdspcmd());
  }

  // sint32 Adptr_Out_LVsulznReq = 15;
  if (this->adptr_out_lvsulznreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_lvsulznreq());
  }

  // sint32 Adptr_Out_RVsulznReq = 16;
  if (this->adptr_out_rvsulznreq() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_rvsulznreq());
  }

  // sint32 Adptr_Out_NOCDspCmd = 17;
  if (this->adptr_out_nocdspcmd() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_nocdspcmd());
  }

  // sint32 Adptr_Out_NOCSysSts = 18;
  if (this->adptr_out_nocsyssts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_nocsyssts());
  }

  // sint32 Adptr_Out_NOCSysFltSts = 19;
  if (this->adptr_out_nocsysfltsts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_nocsysfltsts());
  }

  // sint32 Adptr_Out_LKAReqCtrlSts = 20;
  if (this->adptr_out_lkareqctrlsts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_lkareqctrlsts());
  }

  // float Adptr_Out_LKAReqToq = 21;
  if (this->adptr_out_lkareqtoq() != 0) {
    total_size += 2 + 4;
  }

  // sint32 Adptr_Out_LKAReqToqV = 22;
  if (this->adptr_out_lkareqtoqv() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_lkareqtoqv());
  }

  // float Adptr_Out_LKAReqAng = 23;
  if (this->adptr_out_lkareqang() != 0) {
    total_size += 2 + 4;
  }

  // sint32 Adptr_Out_LKAReqAngV = 24;
  if (this->adptr_out_lkareqangv() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_lkareqangv());
  }

  // sint32 Adptr_Out_LKARampState = 25;
  if (this->adptr_out_lkarampstate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_lkarampstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_Adptrout_LatCtrl_State_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_Adptrout_LatCtrl_State_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_Adptrout_LatCtrl_State_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_Adptrout_LatCtrl_State_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_Adptrout_LatCtrl_State_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_Adptrout_LatCtrl_State_st)
    MergeFrom(*source);
  }
}

void B_Adptrout_LatCtrl_State_st::MergeFrom(const B_Adptrout_LatCtrl_State_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_Adptrout_LatCtrl_State_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.adptr_out_ldwlkadspcmd() != 0) {
    set_adptr_out_ldwlkadspcmd(from.adptr_out_ldwlkadspcmd());
  }
  if (from.adptr_out_ldwsyssts() != 0) {
    set_adptr_out_ldwsyssts(from.adptr_out_ldwsyssts());
  }
  if (from.adptr_out_ldwsysfltsts() != 0) {
    set_adptr_out_ldwsysfltsts(from.adptr_out_ldwsysfltsts());
  }
  if (from.adptr_out_ldwlkaaudreq() != 0) {
    set_adptr_out_ldwlkaaudreq(from.adptr_out_ldwlkaaudreq());
  }
  if (from.adptr_out_lkasyssts() != 0) {
    set_adptr_out_lkasyssts(from.adptr_out_lkasyssts());
  }
  if (from.adptr_out_lkasysfltsts() != 0) {
    set_adptr_out_lkasysfltsts(from.adptr_out_lkasysfltsts());
  }
  if (from.adptr_out_lkavbnlvlreq() != 0) {
    set_adptr_out_lkavbnlvlreq(from.adptr_out_lkavbnlvlreq());
  }
  if (from.adptr_out_pltdspcmd() != 0) {
    set_adptr_out_pltdspcmd(from.adptr_out_pltdspcmd());
  }
  if (from.adptr_out_pltsyssts() != 0) {
    set_adptr_out_pltsyssts(from.adptr_out_pltsyssts());
  }
  if (from.adptr_out_pltsysfltsts() != 0) {
    set_adptr_out_pltsysfltsts(from.adptr_out_pltsysfltsts());
  }
  if (from.adptr_out_snstvtlvldspcmd() != 0) {
    set_adptr_out_snstvtlvldspcmd(from.adptr_out_snstvtlvldspcmd());
  }
  if (from.adptr_out_adowrnngdspcmd() != 0) {
    set_adptr_out_adowrnngdspcmd(from.adptr_out_adowrnngdspcmd());
  }
  if (from.adptr_out_drvrtkovreq() != 0) {
    set_adptr_out_drvrtkovreq(from.adptr_out_drvrtkovreq());
  }
  if (from.adptr_out_hptcwrngdspcmd() != 0) {
    set_adptr_out_hptcwrngdspcmd(from.adptr_out_hptcwrngdspcmd());
  }
  if (from.adptr_out_lvsulznreq() != 0) {
    set_adptr_out_lvsulznreq(from.adptr_out_lvsulznreq());
  }
  if (from.adptr_out_rvsulznreq() != 0) {
    set_adptr_out_rvsulznreq(from.adptr_out_rvsulznreq());
  }
  if (from.adptr_out_nocdspcmd() != 0) {
    set_adptr_out_nocdspcmd(from.adptr_out_nocdspcmd());
  }
  if (from.adptr_out_nocsyssts() != 0) {
    set_adptr_out_nocsyssts(from.adptr_out_nocsyssts());
  }
  if (from.adptr_out_nocsysfltsts() != 0) {
    set_adptr_out_nocsysfltsts(from.adptr_out_nocsysfltsts());
  }
  if (from.adptr_out_lkareqctrlsts() != 0) {
    set_adptr_out_lkareqctrlsts(from.adptr_out_lkareqctrlsts());
  }
  if (from.adptr_out_lkareqtoq() != 0) {
    set_adptr_out_lkareqtoq(from.adptr_out_lkareqtoq());
  }
  if (from.adptr_out_lkareqtoqv() != 0) {
    set_adptr_out_lkareqtoqv(from.adptr_out_lkareqtoqv());
  }
  if (from.adptr_out_lkareqang() != 0) {
    set_adptr_out_lkareqang(from.adptr_out_lkareqang());
  }
  if (from.adptr_out_lkareqangv() != 0) {
    set_adptr_out_lkareqangv(from.adptr_out_lkareqangv());
  }
  if (from.adptr_out_lkarampstate() != 0) {
    set_adptr_out_lkarampstate(from.adptr_out_lkarampstate());
  }
}

void B_Adptrout_LatCtrl_State_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_Adptrout_LatCtrl_State_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_Adptrout_LatCtrl_State_st::CopyFrom(const B_Adptrout_LatCtrl_State_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_Adptrout_LatCtrl_State_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_Adptrout_LatCtrl_State_st::IsInitialized() const {
  return true;
}

void B_Adptrout_LatCtrl_State_st::Swap(B_Adptrout_LatCtrl_State_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_Adptrout_LatCtrl_State_st::InternalSwap(B_Adptrout_LatCtrl_State_st* other) {
  using std::swap;
  swap(adptr_out_ldwlkadspcmd_, other->adptr_out_ldwlkadspcmd_);
  swap(adptr_out_ldwsyssts_, other->adptr_out_ldwsyssts_);
  swap(adptr_out_ldwsysfltsts_, other->adptr_out_ldwsysfltsts_);
  swap(adptr_out_ldwlkaaudreq_, other->adptr_out_ldwlkaaudreq_);
  swap(adptr_out_lkasyssts_, other->adptr_out_lkasyssts_);
  swap(adptr_out_lkasysfltsts_, other->adptr_out_lkasysfltsts_);
  swap(adptr_out_lkavbnlvlreq_, other->adptr_out_lkavbnlvlreq_);
  swap(adptr_out_pltdspcmd_, other->adptr_out_pltdspcmd_);
  swap(adptr_out_pltsyssts_, other->adptr_out_pltsyssts_);
  swap(adptr_out_pltsysfltsts_, other->adptr_out_pltsysfltsts_);
  swap(adptr_out_snstvtlvldspcmd_, other->adptr_out_snstvtlvldspcmd_);
  swap(adptr_out_adowrnngdspcmd_, other->adptr_out_adowrnngdspcmd_);
  swap(adptr_out_drvrtkovreq_, other->adptr_out_drvrtkovreq_);
  swap(adptr_out_hptcwrngdspcmd_, other->adptr_out_hptcwrngdspcmd_);
  swap(adptr_out_lvsulznreq_, other->adptr_out_lvsulznreq_);
  swap(adptr_out_rvsulznreq_, other->adptr_out_rvsulznreq_);
  swap(adptr_out_nocdspcmd_, other->adptr_out_nocdspcmd_);
  swap(adptr_out_nocsyssts_, other->adptr_out_nocsyssts_);
  swap(adptr_out_nocsysfltsts_, other->adptr_out_nocsysfltsts_);
  swap(adptr_out_lkareqctrlsts_, other->adptr_out_lkareqctrlsts_);
  swap(adptr_out_lkareqtoq_, other->adptr_out_lkareqtoq_);
  swap(adptr_out_lkareqtoqv_, other->adptr_out_lkareqtoqv_);
  swap(adptr_out_lkareqang_, other->adptr_out_lkareqang_);
  swap(adptr_out_lkareqangv_, other->adptr_out_lkareqangv_);
  swap(adptr_out_lkarampstate_, other->adptr_out_lkarampstate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_Adptrout_LatCtrl_State_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void B_Adptrout_LonCtrl_State_st::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCSysStsFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCSysFltStsFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCSetSpdFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCSetDistanceFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCSGRGoReqFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCSGRSdslReqFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCDetObjDistLvlFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCDrvrTkovReqFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCStopReqFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCJerkUpperLimitFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCJerkLowerLimitFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCReqAccelFieldNumber;
const int B_Adptrout_LonCtrl_State_st::kAdptrOutACCAccelDeadCompFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B_Adptrout_LonCtrl_State_st::B_Adptrout_LonCtrl_State_st()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_LonCtrl_State_st.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_common.B_Adptrout_LonCtrl_State_st)
}
B_Adptrout_LonCtrl_State_st::B_Adptrout_LonCtrl_State_st(const B_Adptrout_LonCtrl_State_st& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adptr_out_accsyssts_, &from.adptr_out_accsyssts_,
    static_cast<size_t>(reinterpret_cast<char*>(&adptr_out_accacceldeadcomp_) -
    reinterpret_cast<char*>(&adptr_out_accsyssts_)) + sizeof(adptr_out_accacceldeadcomp_));
  // @@protoc_insertion_point(copy_constructor:ads_common.B_Adptrout_LonCtrl_State_st)
}

void B_Adptrout_LonCtrl_State_st::SharedCtor() {
  ::memset(&adptr_out_accsyssts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adptr_out_accacceldeadcomp_) -
      reinterpret_cast<char*>(&adptr_out_accsyssts_)) + sizeof(adptr_out_accacceldeadcomp_));
}

B_Adptrout_LonCtrl_State_st::~B_Adptrout_LonCtrl_State_st() {
  // @@protoc_insertion_point(destructor:ads_common.B_Adptrout_LonCtrl_State_st)
  SharedDtor();
}

void B_Adptrout_LonCtrl_State_st::SharedDtor() {
}

void B_Adptrout_LonCtrl_State_st::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* B_Adptrout_LonCtrl_State_st::descriptor() {
  ::protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const B_Adptrout_LonCtrl_State_st& B_Adptrout_LonCtrl_State_st::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_LonCtrl_State_st.base);
  return *internal_default_instance();
}


void B_Adptrout_LonCtrl_State_st::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_common.B_Adptrout_LonCtrl_State_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&adptr_out_accsyssts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adptr_out_accacceldeadcomp_) -
      reinterpret_cast<char*>(&adptr_out_accsyssts_)) + sizeof(adptr_out_accacceldeadcomp_));
  _internal_metadata_.Clear();
}

bool B_Adptrout_LonCtrl_State_st::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_common.B_Adptrout_LonCtrl_State_st)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 Adptr_Out_ACCSysSts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_accsyssts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_ACCSysFltSts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_accsysfltsts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Adptr_Out_ACCSetSpd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &adptr_out_accsetspd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Adptr_Out_ACCSetDistance = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &adptr_out_accsetdistance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_ACCSGRGoReq = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_accsgrgoreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_ACCSGRSdslReq = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_accsgrsdslreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_ACCDetObjDistLvl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_accdetobjdistlvl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_ACCDrvrTkovReq = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_accdrvrtkovreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 Adptr_Out_ACCStopReq = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &adptr_out_accstopreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Adptr_Out_ACCJerkUpperLimit = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &adptr_out_accjerkupperlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Adptr_Out_ACCJerkLowerLimit = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &adptr_out_accjerklowerlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Adptr_Out_ACCReqAccel = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &adptr_out_accreqaccel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Adptr_Out_ACCAccelDeadComp = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &adptr_out_accacceldeadcomp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_common.B_Adptrout_LonCtrl_State_st)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_common.B_Adptrout_LonCtrl_State_st)
  return false;
#undef DO_
}

void B_Adptrout_LonCtrl_State_st::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_common.B_Adptrout_LonCtrl_State_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 Adptr_Out_ACCSysSts = 1;
  if (this->adptr_out_accsyssts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->adptr_out_accsyssts(), output);
  }

  // sint32 Adptr_Out_ACCSysFltSts = 2;
  if (this->adptr_out_accsysfltsts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->adptr_out_accsysfltsts(), output);
  }

  // float Adptr_Out_ACCSetSpd = 3;
  if (this->adptr_out_accsetspd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->adptr_out_accsetspd(), output);
  }

  // float Adptr_Out_ACCSetDistance = 4;
  if (this->adptr_out_accsetdistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->adptr_out_accsetdistance(), output);
  }

  // sint32 Adptr_Out_ACCSGRGoReq = 5;
  if (this->adptr_out_accsgrgoreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->adptr_out_accsgrgoreq(), output);
  }

  // sint32 Adptr_Out_ACCSGRSdslReq = 6;
  if (this->adptr_out_accsgrsdslreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->adptr_out_accsgrsdslreq(), output);
  }

  // sint32 Adptr_Out_ACCDetObjDistLvl = 7;
  if (this->adptr_out_accdetobjdistlvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->adptr_out_accdetobjdistlvl(), output);
  }

  // sint32 Adptr_Out_ACCDrvrTkovReq = 8;
  if (this->adptr_out_accdrvrtkovreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->adptr_out_accdrvrtkovreq(), output);
  }

  // sint32 Adptr_Out_ACCStopReq = 9;
  if (this->adptr_out_accstopreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->adptr_out_accstopreq(), output);
  }

  // float Adptr_Out_ACCJerkUpperLimit = 10;
  if (this->adptr_out_accjerkupperlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->adptr_out_accjerkupperlimit(), output);
  }

  // float Adptr_Out_ACCJerkLowerLimit = 11;
  if (this->adptr_out_accjerklowerlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->adptr_out_accjerklowerlimit(), output);
  }

  // float Adptr_Out_ACCReqAccel = 12;
  if (this->adptr_out_accreqaccel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->adptr_out_accreqaccel(), output);
  }

  // float Adptr_Out_ACCAccelDeadComp = 13;
  if (this->adptr_out_accacceldeadcomp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->adptr_out_accacceldeadcomp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_common.B_Adptrout_LonCtrl_State_st)
}

::google::protobuf::uint8* B_Adptrout_LonCtrl_State_st::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_common.B_Adptrout_LonCtrl_State_st)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 Adptr_Out_ACCSysSts = 1;
  if (this->adptr_out_accsyssts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->adptr_out_accsyssts(), target);
  }

  // sint32 Adptr_Out_ACCSysFltSts = 2;
  if (this->adptr_out_accsysfltsts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->adptr_out_accsysfltsts(), target);
  }

  // float Adptr_Out_ACCSetSpd = 3;
  if (this->adptr_out_accsetspd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->adptr_out_accsetspd(), target);
  }

  // float Adptr_Out_ACCSetDistance = 4;
  if (this->adptr_out_accsetdistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->adptr_out_accsetdistance(), target);
  }

  // sint32 Adptr_Out_ACCSGRGoReq = 5;
  if (this->adptr_out_accsgrgoreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->adptr_out_accsgrgoreq(), target);
  }

  // sint32 Adptr_Out_ACCSGRSdslReq = 6;
  if (this->adptr_out_accsgrsdslreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->adptr_out_accsgrsdslreq(), target);
  }

  // sint32 Adptr_Out_ACCDetObjDistLvl = 7;
  if (this->adptr_out_accdetobjdistlvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->adptr_out_accdetobjdistlvl(), target);
  }

  // sint32 Adptr_Out_ACCDrvrTkovReq = 8;
  if (this->adptr_out_accdrvrtkovreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->adptr_out_accdrvrtkovreq(), target);
  }

  // sint32 Adptr_Out_ACCStopReq = 9;
  if (this->adptr_out_accstopreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->adptr_out_accstopreq(), target);
  }

  // float Adptr_Out_ACCJerkUpperLimit = 10;
  if (this->adptr_out_accjerkupperlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->adptr_out_accjerkupperlimit(), target);
  }

  // float Adptr_Out_ACCJerkLowerLimit = 11;
  if (this->adptr_out_accjerklowerlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->adptr_out_accjerklowerlimit(), target);
  }

  // float Adptr_Out_ACCReqAccel = 12;
  if (this->adptr_out_accreqaccel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->adptr_out_accreqaccel(), target);
  }

  // float Adptr_Out_ACCAccelDeadComp = 13;
  if (this->adptr_out_accacceldeadcomp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->adptr_out_accacceldeadcomp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_common.B_Adptrout_LonCtrl_State_st)
  return target;
}

size_t B_Adptrout_LonCtrl_State_st::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_common.B_Adptrout_LonCtrl_State_st)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 Adptr_Out_ACCSysSts = 1;
  if (this->adptr_out_accsyssts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_accsyssts());
  }

  // sint32 Adptr_Out_ACCSysFltSts = 2;
  if (this->adptr_out_accsysfltsts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_accsysfltsts());
  }

  // float Adptr_Out_ACCSetSpd = 3;
  if (this->adptr_out_accsetspd() != 0) {
    total_size += 1 + 4;
  }

  // float Adptr_Out_ACCSetDistance = 4;
  if (this->adptr_out_accsetdistance() != 0) {
    total_size += 1 + 4;
  }

  // sint32 Adptr_Out_ACCSGRGoReq = 5;
  if (this->adptr_out_accsgrgoreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_accsgrgoreq());
  }

  // sint32 Adptr_Out_ACCSGRSdslReq = 6;
  if (this->adptr_out_accsgrsdslreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_accsgrsdslreq());
  }

  // sint32 Adptr_Out_ACCDetObjDistLvl = 7;
  if (this->adptr_out_accdetobjdistlvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_accdetobjdistlvl());
  }

  // sint32 Adptr_Out_ACCDrvrTkovReq = 8;
  if (this->adptr_out_accdrvrtkovreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_accdrvrtkovreq());
  }

  // sint32 Adptr_Out_ACCStopReq = 9;
  if (this->adptr_out_accstopreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->adptr_out_accstopreq());
  }

  // float Adptr_Out_ACCJerkUpperLimit = 10;
  if (this->adptr_out_accjerkupperlimit() != 0) {
    total_size += 1 + 4;
  }

  // float Adptr_Out_ACCJerkLowerLimit = 11;
  if (this->adptr_out_accjerklowerlimit() != 0) {
    total_size += 1 + 4;
  }

  // float Adptr_Out_ACCReqAccel = 12;
  if (this->adptr_out_accreqaccel() != 0) {
    total_size += 1 + 4;
  }

  // float Adptr_Out_ACCAccelDeadComp = 13;
  if (this->adptr_out_accacceldeadcomp() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void B_Adptrout_LonCtrl_State_st::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_common.B_Adptrout_LonCtrl_State_st)
  GOOGLE_DCHECK_NE(&from, this);
  const B_Adptrout_LonCtrl_State_st* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const B_Adptrout_LonCtrl_State_st>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_common.B_Adptrout_LonCtrl_State_st)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_common.B_Adptrout_LonCtrl_State_st)
    MergeFrom(*source);
  }
}

void B_Adptrout_LonCtrl_State_st::MergeFrom(const B_Adptrout_LonCtrl_State_st& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_common.B_Adptrout_LonCtrl_State_st)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.adptr_out_accsyssts() != 0) {
    set_adptr_out_accsyssts(from.adptr_out_accsyssts());
  }
  if (from.adptr_out_accsysfltsts() != 0) {
    set_adptr_out_accsysfltsts(from.adptr_out_accsysfltsts());
  }
  if (from.adptr_out_accsetspd() != 0) {
    set_adptr_out_accsetspd(from.adptr_out_accsetspd());
  }
  if (from.adptr_out_accsetdistance() != 0) {
    set_adptr_out_accsetdistance(from.adptr_out_accsetdistance());
  }
  if (from.adptr_out_accsgrgoreq() != 0) {
    set_adptr_out_accsgrgoreq(from.adptr_out_accsgrgoreq());
  }
  if (from.adptr_out_accsgrsdslreq() != 0) {
    set_adptr_out_accsgrsdslreq(from.adptr_out_accsgrsdslreq());
  }
  if (from.adptr_out_accdetobjdistlvl() != 0) {
    set_adptr_out_accdetobjdistlvl(from.adptr_out_accdetobjdistlvl());
  }
  if (from.adptr_out_accdrvrtkovreq() != 0) {
    set_adptr_out_accdrvrtkovreq(from.adptr_out_accdrvrtkovreq());
  }
  if (from.adptr_out_accstopreq() != 0) {
    set_adptr_out_accstopreq(from.adptr_out_accstopreq());
  }
  if (from.adptr_out_accjerkupperlimit() != 0) {
    set_adptr_out_accjerkupperlimit(from.adptr_out_accjerkupperlimit());
  }
  if (from.adptr_out_accjerklowerlimit() != 0) {
    set_adptr_out_accjerklowerlimit(from.adptr_out_accjerklowerlimit());
  }
  if (from.adptr_out_accreqaccel() != 0) {
    set_adptr_out_accreqaccel(from.adptr_out_accreqaccel());
  }
  if (from.adptr_out_accacceldeadcomp() != 0) {
    set_adptr_out_accacceldeadcomp(from.adptr_out_accacceldeadcomp());
  }
}

void B_Adptrout_LonCtrl_State_st::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_common.B_Adptrout_LonCtrl_State_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B_Adptrout_LonCtrl_State_st::CopyFrom(const B_Adptrout_LonCtrl_State_st& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_common.B_Adptrout_LonCtrl_State_st)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B_Adptrout_LonCtrl_State_st::IsInitialized() const {
  return true;
}

void B_Adptrout_LonCtrl_State_st::Swap(B_Adptrout_LonCtrl_State_st* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B_Adptrout_LonCtrl_State_st::InternalSwap(B_Adptrout_LonCtrl_State_st* other) {
  using std::swap;
  swap(adptr_out_accsyssts_, other->adptr_out_accsyssts_);
  swap(adptr_out_accsysfltsts_, other->adptr_out_accsysfltsts_);
  swap(adptr_out_accsetspd_, other->adptr_out_accsetspd_);
  swap(adptr_out_accsetdistance_, other->adptr_out_accsetdistance_);
  swap(adptr_out_accsgrgoreq_, other->adptr_out_accsgrgoreq_);
  swap(adptr_out_accsgrsdslreq_, other->adptr_out_accsgrsdslreq_);
  swap(adptr_out_accdetobjdistlvl_, other->adptr_out_accdetobjdistlvl_);
  swap(adptr_out_accdrvrtkovreq_, other->adptr_out_accdrvrtkovreq_);
  swap(adptr_out_accstopreq_, other->adptr_out_accstopreq_);
  swap(adptr_out_accjerkupperlimit_, other->adptr_out_accjerkupperlimit_);
  swap(adptr_out_accjerklowerlimit_, other->adptr_out_accjerklowerlimit_);
  swap(adptr_out_accreqaccel_, other->adptr_out_accreqaccel_);
  swap(adptr_out_accacceldeadcomp_, other->adptr_out_accacceldeadcomp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata B_Adptrout_LonCtrl_State_st::GetMetadata() const {
  protobuf_ads_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ads_common
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B1_LaneLineInfo* Arena::CreateMaybeMessage< ::ads_common::B1_LaneLineInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B1_LaneLineInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B1_RefLineInfo* Arena::CreateMaybeMessage< ::ads_common::B1_RefLineInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B1_RefLineInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::HafLonTrajParam* Arena::CreateMaybeMessage< ::ads_common::HafLonTrajParam >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::HafLonTrajParam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCObjVldLv2* Arena::CreateMaybeMessage< ::ads_common::B_ACCObjVldLv2 >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCObjVldLv2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCObj03_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCObj03_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCObj03_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCObj04_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCObj04_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCObj04_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCStnObj03_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCStnObj03_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCStnObj03_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCStnObj04_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCStnObj04_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCStnObj04_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCObjVldRaw* Arena::CreateMaybeMessage< ::ads_common::B_ACCObjVldRaw >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCObjVldRaw >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_Inputs_VSP_st* Arena::CreateMaybeMessage< ::ads_common::B_Inputs_VSP_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_Inputs_VSP_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_Inputs_VCP_st* Arena::CreateMaybeMessage< ::ads_common::B_Inputs_VCP_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_Inputs_VCP_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::VCP_B_StateEst* Arena::CreateMaybeMessage< ::ads_common::VCP_B_StateEst >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::VCP_B_StateEst >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_Inputs_VDP_st* Arena::CreateMaybeMessage< ::ads_common::B_Inputs_VDP_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_Inputs_VDP_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ConfgDID_st* Arena::CreateMaybeMessage< ::ads_common::B_ConfgDID_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ConfgDID_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCobj01_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCobj01_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCobj01_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCobj02_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCobj02_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCobj02_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCobj05_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCobj05_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCobj05_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCobj06_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCobj06_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCobj06_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCStnObj01_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCStnObj01_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCStnObj01_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCStnObj02_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCStnObj02_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCStnObj02_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCStnObj05_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCStnObj05_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCStnObj05_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_ACCStnObj06_st* Arena::CreateMaybeMessage< ::ads_common::B_ACCStnObj06_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_ACCStnObj06_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_HostL_st* Arena::CreateMaybeMessage< ::ads_common::B_HostL_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_HostL_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_HostR_st* Arena::CreateMaybeMessage< ::ads_common::B_HostR_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_HostR_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_NextLL_st* Arena::CreateMaybeMessage< ::ads_common::B_NextLL_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_NextLL_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_NextRR_st* Arena::CreateMaybeMessage< ::ads_common::B_NextRR_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_NextRR_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrObj_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrObj_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrObj_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrStnObj_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrStnObj_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrStnObj_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrPed01_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrPed01_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrPed01_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrPed02_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrPed02_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrPed02_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrPed03_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrPed03_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrPed03_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrPed04_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrPed04_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrPed04_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrPed05_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrPed05_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrPed05_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrPed06_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrPed06_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrPed06_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrPed07_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrPed07_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrPed07_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrPed08_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrPed08_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrPed08_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrPed09_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrPed09_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrPed09_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_DngrPed10_st* Arena::CreateMaybeMessage< ::ads_common::B_DngrPed10_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_DngrPed10_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_CenterLine_st* Arena::CreateMaybeMessage< ::ads_common::B_CenterLine_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_CenterLine_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_LeftRoadEdge_st* Arena::CreateMaybeMessage< ::ads_common::B_LeftRoadEdge_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_LeftRoadEdge_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_RightRoadEdge_st* Arena::CreateMaybeMessage< ::ads_common::B_RightRoadEdge_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_RightRoadEdge_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_LeftBarrier_st* Arena::CreateMaybeMessage< ::ads_common::B_LeftBarrier_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_LeftBarrier_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_RightBarrier_st* Arena::CreateMaybeMessage< ::ads_common::B_RightBarrier_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_RightBarrier_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_SppPolyCoeff_st* Arena::CreateMaybeMessage< ::ads_common::B_SppPolyCoeff_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_SppPolyCoeff_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_HostRHSP_st* Arena::CreateMaybeMessage< ::ads_common::B_HostRHSP_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_HostRHSP_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_HostLHSP_st* Arena::CreateMaybeMessage< ::ads_common::B_HostLHSP_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_HostLHSP_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_HostRInd_st* Arena::CreateMaybeMessage< ::ads_common::B_HostRInd_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_HostRInd_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_HostLInd_st* Arena::CreateMaybeMessage< ::ads_common::B_HostLInd_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_HostLInd_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::Point3D_COM* Arena::CreateMaybeMessage< ::ads_common::Point3D_COM >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::Point3D_COM >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::HafRect3D_COM* Arena::CreateMaybeMessage< ::ads_common::HafRect3D_COM >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::HafRect3D_COM >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::Point2D_COM* Arena::CreateMaybeMessage< ::ads_common::Point2D_COM >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::Point2D_COM >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::HafTime_COM* Arena::CreateMaybeMessage< ::ads_common::HafTime_COM >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::HafTime_COM >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::HafFusionOut_COM* Arena::CreateMaybeMessage< ::ads_common::HafFusionOut_COM >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::HafFusionOut_COM >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::HafTrajParam* Arena::CreateMaybeMessage< ::ads_common::HafTrajParam >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::HafTrajParam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::ACCOutputs* Arena::CreateMaybeMessage< ::ads_common::ACCOutputs >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::ACCOutputs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::ARBOutputs* Arena::CreateMaybeMessage< ::ads_common::ARBOutputs >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::ARBOutputs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B1_RdEdgeInfo* Arena::CreateMaybeMessage< ::ads_common::B1_RdEdgeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B1_RdEdgeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B1_BorderLaneData* Arena::CreateMaybeMessage< ::ads_common::B1_BorderLaneData >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B1_BorderLaneData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B1_SelObjData* Arena::CreateMaybeMessage< ::ads_common::B1_SelObjData >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B1_SelObjData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B1_ObjTrajInfo* Arena::CreateMaybeMessage< ::ads_common::B1_ObjTrajInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B1_ObjTrajInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B1_ObjPredTraj* Arena::CreateMaybeMessage< ::ads_common::B1_ObjPredTraj >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B1_ObjPredTraj >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B1_ObjPredTrajV2* Arena::CreateMaybeMessage< ::ads_common::B1_ObjPredTrajV2 >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B1_ObjPredTrajV2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_Adptrout_Brake_Command_60_st* Arena::CreateMaybeMessage< ::ads_common::B_Adptrout_Brake_Command_60_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_Adptrout_Brake_Command_60_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_Adptrout_Throttle_Command_62_st* Arena::CreateMaybeMessage< ::ads_common::B_Adptrout_Throttle_Command_62_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_Adptrout_Throttle_Command_62_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_Adptrout_Steering_Command_64_st* Arena::CreateMaybeMessage< ::ads_common::B_Adptrout_Steering_Command_64_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_Adptrout_Steering_Command_64_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_Adptrout_Gear_Command_66_st* Arena::CreateMaybeMessage< ::ads_common::B_Adptrout_Gear_Command_66_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_Adptrout_Gear_Command_66_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_Adptrout_TurnSignal_Command_68_st* Arena::CreateMaybeMessage< ::ads_common::B_Adptrout_TurnSignal_Command_68_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_Adptrout_TurnSignal_Command_68_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_Adptrout_LatCtrl_State_st* Arena::CreateMaybeMessage< ::ads_common::B_Adptrout_LatCtrl_State_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_Adptrout_LatCtrl_State_st >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_common::B_Adptrout_LonCtrl_State_st* Arena::CreateMaybeMessage< ::ads_common::B_Adptrout_LonCtrl_State_st >(Arena* arena) {
  return Arena::CreateInternal< ::ads_common::B_Adptrout_LonCtrl_State_st >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
