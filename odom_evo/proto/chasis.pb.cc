// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chasis.proto

#include "chasis.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_chasis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Accel_report_6b;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Brake_command_60;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Brake_report_61;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Brakeinfo_report_74;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Fuellevel_report_72;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gear_command_66;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gear_report_67;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gps_1_report_6d;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gps_2_report_6e;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gps_3_report_6f;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gyro_report_6c;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Misc_report_69;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Misc_report_ss_7b;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pms_cmd_1ba;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pms_current_1_1c0;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pms_current_2_1c1;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pms_current_3_1c2;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pms_current_4_1c3;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pms_sta_1e0;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pms_voltage_1b0;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Steering_command_64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Steering_report_65;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Surround_report_73;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Suspension_79;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Throttle_command_62;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Throttle_report_63;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Throttleinfo_report_75;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Tirepressure_report_71;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Turnsignal_command_68;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Version_bt_7e;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Version_ss_7f;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Wheelposition_report_70;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Wheelspeed_report_6a;
}  // namespace protobuf_chasis_2eproto
namespace protobuf_header_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_header_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Header;
}  // namespace protobuf_header_2eproto
namespace Calmcar {
namespace drivers {
namespace CHASIS {
class Version_ss_7fDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Version_ss_7f>
      _instance;
} _Version_ss_7f_default_instance_;
class Version_bt_7eDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Version_bt_7e>
      _instance;
} _Version_bt_7e_default_instance_;
class Misc_report_ss_7bDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Misc_report_ss_7b>
      _instance;
} _Misc_report_ss_7b_default_instance_;
class Brake_command_60DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Brake_command_60>
      _instance;
} _Brake_command_60_default_instance_;
class Brake_report_61DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Brake_report_61>
      _instance;
} _Brake_report_61_default_instance_;
class Throttle_command_62DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Throttle_command_62>
      _instance;
} _Throttle_command_62_default_instance_;
class Throttle_report_63DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Throttle_report_63>
      _instance;
} _Throttle_report_63_default_instance_;
class Steering_command_64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Steering_command_64>
      _instance;
} _Steering_command_64_default_instance_;
class Steering_report_65DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Steering_report_65>
      _instance;
} _Steering_report_65_default_instance_;
class Gear_command_66DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gear_command_66>
      _instance;
} _Gear_command_66_default_instance_;
class Gear_report_67DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gear_report_67>
      _instance;
} _Gear_report_67_default_instance_;
class Turnsignal_command_68DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Turnsignal_command_68>
      _instance;
} _Turnsignal_command_68_default_instance_;
class Misc_report_69DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Misc_report_69>
      _instance;
} _Misc_report_69_default_instance_;
class Pms_current_4_1c3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pms_current_4_1c3>
      _instance;
} _Pms_current_4_1c3_default_instance_;
class Pms_current_3_1c2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pms_current_3_1c2>
      _instance;
} _Pms_current_3_1c2_default_instance_;
class Pms_current_2_1c1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pms_current_2_1c1>
      _instance;
} _Pms_current_2_1c1_default_instance_;
class Pms_current_1_1c0DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pms_current_1_1c0>
      _instance;
} _Pms_current_1_1c0_default_instance_;
class Pms_cmd_1baDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pms_cmd_1ba>
      _instance;
} _Pms_cmd_1ba_default_instance_;
class Wheelspeed_report_6aDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Wheelspeed_report_6a>
      _instance;
} _Wheelspeed_report_6a_default_instance_;
class Accel_report_6bDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Accel_report_6b>
      _instance;
} _Accel_report_6b_default_instance_;
class Gyro_report_6cDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gyro_report_6c>
      _instance;
} _Gyro_report_6c_default_instance_;
class Gps_1_report_6dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gps_1_report_6d>
      _instance;
} _Gps_1_report_6d_default_instance_;
class Gps_2_report_6eDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gps_2_report_6e>
      _instance;
} _Gps_2_report_6e_default_instance_;
class Gps_3_report_6fDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gps_3_report_6f>
      _instance;
} _Gps_3_report_6f_default_instance_;
class Throttleinfo_report_75DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Throttleinfo_report_75>
      _instance;
} _Throttleinfo_report_75_default_instance_;
class Brakeinfo_report_74DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Brakeinfo_report_74>
      _instance;
} _Brakeinfo_report_74_default_instance_;
class Surround_report_73DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Surround_report_73>
      _instance;
} _Surround_report_73_default_instance_;
class Fuellevel_report_72DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Fuellevel_report_72>
      _instance;
} _Fuellevel_report_72_default_instance_;
class Tirepressure_report_71DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tirepressure_report_71>
      _instance;
} _Tirepressure_report_71_default_instance_;
class Wheelposition_report_70DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Wheelposition_report_70>
      _instance;
} _Wheelposition_report_70_default_instance_;
class Suspension_79DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Suspension_79>
      _instance;
} _Suspension_79_default_instance_;
class Pms_voltage_1b0DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pms_voltage_1b0>
      _instance;
} _Pms_voltage_1b0_default_instance_;
class Pms_sta_1e0DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pms_sta_1e0>
      _instance;
} _Pms_sta_1e0_default_instance_;
class ChasisDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Chasis>
      _instance;
} _Chasis_default_instance_;
}  // namespace CHASIS
}  // namespace drivers
}  // namespace Calmcar
namespace protobuf_chasis_2eproto {
static void InitDefaultsVersion_ss_7f() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Version_ss_7f_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Version_ss_7f();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Version_ss_7f::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Version_ss_7f =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersion_ss_7f}, {}};

static void InitDefaultsVersion_bt_7e() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Version_bt_7e_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Version_bt_7e();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Version_bt_7e::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Version_bt_7e =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersion_bt_7e}, {}};

static void InitDefaultsMisc_report_ss_7b() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Misc_report_ss_7b_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Misc_report_ss_7b();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Misc_report_ss_7b::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Misc_report_ss_7b =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMisc_report_ss_7b}, {}};

static void InitDefaultsBrake_command_60() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Brake_command_60_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Brake_command_60();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Brake_command_60::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Brake_command_60 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBrake_command_60}, {}};

static void InitDefaultsBrake_report_61() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Brake_report_61_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Brake_report_61();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Brake_report_61::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Brake_report_61 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBrake_report_61}, {}};

static void InitDefaultsThrottle_command_62() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Throttle_command_62_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Throttle_command_62();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Throttle_command_62::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Throttle_command_62 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsThrottle_command_62}, {}};

static void InitDefaultsThrottle_report_63() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Throttle_report_63_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Throttle_report_63();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Throttle_report_63::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Throttle_report_63 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsThrottle_report_63}, {}};

static void InitDefaultsSteering_command_64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Steering_command_64_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Steering_command_64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Steering_command_64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Steering_command_64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSteering_command_64}, {}};

static void InitDefaultsSteering_report_65() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Steering_report_65_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Steering_report_65();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Steering_report_65::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Steering_report_65 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSteering_report_65}, {}};

static void InitDefaultsGear_command_66() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Gear_command_66_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Gear_command_66();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Gear_command_66::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gear_command_66 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGear_command_66}, {}};

static void InitDefaultsGear_report_67() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Gear_report_67_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Gear_report_67();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Gear_report_67::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gear_report_67 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGear_report_67}, {}};

static void InitDefaultsTurnsignal_command_68() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Turnsignal_command_68_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Turnsignal_command_68();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Turnsignal_command_68::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Turnsignal_command_68 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTurnsignal_command_68}, {}};

static void InitDefaultsMisc_report_69() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Misc_report_69_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Misc_report_69();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Misc_report_69::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Misc_report_69 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMisc_report_69}, {}};

static void InitDefaultsPms_current_4_1c3() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Pms_current_4_1c3_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Pms_current_4_1c3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Pms_current_4_1c3::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pms_current_4_1c3 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPms_current_4_1c3}, {}};

static void InitDefaultsPms_current_3_1c2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Pms_current_3_1c2_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Pms_current_3_1c2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Pms_current_3_1c2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pms_current_3_1c2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPms_current_3_1c2}, {}};

static void InitDefaultsPms_current_2_1c1() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Pms_current_2_1c1_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Pms_current_2_1c1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Pms_current_2_1c1::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pms_current_2_1c1 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPms_current_2_1c1}, {}};

static void InitDefaultsPms_current_1_1c0() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Pms_current_1_1c0_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Pms_current_1_1c0();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Pms_current_1_1c0::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pms_current_1_1c0 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPms_current_1_1c0}, {}};

static void InitDefaultsPms_cmd_1ba() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Pms_cmd_1ba_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Pms_cmd_1ba();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Pms_cmd_1ba::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pms_cmd_1ba =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPms_cmd_1ba}, {}};

static void InitDefaultsWheelspeed_report_6a() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Wheelspeed_report_6a_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Wheelspeed_report_6a =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWheelspeed_report_6a}, {}};

static void InitDefaultsAccel_report_6b() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Accel_report_6b_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Accel_report_6b();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Accel_report_6b::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Accel_report_6b =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccel_report_6b}, {}};

static void InitDefaultsGyro_report_6c() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Gyro_report_6c_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Gyro_report_6c();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Gyro_report_6c::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gyro_report_6c =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGyro_report_6c}, {}};

static void InitDefaultsGps_1_report_6d() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Gps_1_report_6d_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Gps_1_report_6d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Gps_1_report_6d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gps_1_report_6d =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGps_1_report_6d}, {}};

static void InitDefaultsGps_2_report_6e() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Gps_2_report_6e_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Gps_2_report_6e();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Gps_2_report_6e::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gps_2_report_6e =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGps_2_report_6e}, {}};

static void InitDefaultsGps_3_report_6f() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Gps_3_report_6f_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Gps_3_report_6f();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Gps_3_report_6f::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gps_3_report_6f =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGps_3_report_6f}, {}};

static void InitDefaultsThrottleinfo_report_75() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Throttleinfo_report_75_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Throttleinfo_report_75();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Throttleinfo_report_75::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Throttleinfo_report_75 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsThrottleinfo_report_75}, {}};

static void InitDefaultsBrakeinfo_report_74() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Brakeinfo_report_74_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Brakeinfo_report_74();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Brakeinfo_report_74 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBrakeinfo_report_74}, {}};

static void InitDefaultsSurround_report_73() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Surround_report_73_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Surround_report_73();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Surround_report_73::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Surround_report_73 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSurround_report_73}, {}};

static void InitDefaultsFuellevel_report_72() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Fuellevel_report_72_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Fuellevel_report_72();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Fuellevel_report_72::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Fuellevel_report_72 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFuellevel_report_72}, {}};

static void InitDefaultsTirepressure_report_71() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Tirepressure_report_71_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Tirepressure_report_71();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Tirepressure_report_71::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Tirepressure_report_71 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTirepressure_report_71}, {}};

static void InitDefaultsWheelposition_report_70() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Wheelposition_report_70_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Wheelposition_report_70();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Wheelposition_report_70::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Wheelposition_report_70 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWheelposition_report_70}, {}};

static void InitDefaultsSuspension_79() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Suspension_79_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Suspension_79();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Suspension_79::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Suspension_79 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSuspension_79}, {}};

static void InitDefaultsPms_voltage_1b0() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Pms_voltage_1b0_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Pms_voltage_1b0();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Pms_voltage_1b0::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pms_voltage_1b0 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPms_voltage_1b0}, {}};

static void InitDefaultsPms_sta_1e0() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Pms_sta_1e0_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Pms_sta_1e0();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Pms_sta_1e0::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pms_sta_1e0 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPms_sta_1e0}, {}};

static void InitDefaultsChasis() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Calmcar::drivers::CHASIS::_Chasis_default_instance_;
    new (ptr) ::Calmcar::drivers::CHASIS::Chasis();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Calmcar::drivers::CHASIS::Chasis::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<34> scc_info_Chasis =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 34, InitDefaultsChasis}, {
      &protobuf_header_2eproto::scc_info_Header.base,
      &protobuf_chasis_2eproto::scc_info_Version_ss_7f.base,
      &protobuf_chasis_2eproto::scc_info_Version_bt_7e.base,
      &protobuf_chasis_2eproto::scc_info_Misc_report_ss_7b.base,
      &protobuf_chasis_2eproto::scc_info_Brake_command_60.base,
      &protobuf_chasis_2eproto::scc_info_Brake_report_61.base,
      &protobuf_chasis_2eproto::scc_info_Throttle_command_62.base,
      &protobuf_chasis_2eproto::scc_info_Throttle_report_63.base,
      &protobuf_chasis_2eproto::scc_info_Steering_command_64.base,
      &protobuf_chasis_2eproto::scc_info_Steering_report_65.base,
      &protobuf_chasis_2eproto::scc_info_Gear_command_66.base,
      &protobuf_chasis_2eproto::scc_info_Gear_report_67.base,
      &protobuf_chasis_2eproto::scc_info_Turnsignal_command_68.base,
      &protobuf_chasis_2eproto::scc_info_Misc_report_69.base,
      &protobuf_chasis_2eproto::scc_info_Pms_current_4_1c3.base,
      &protobuf_chasis_2eproto::scc_info_Pms_current_3_1c2.base,
      &protobuf_chasis_2eproto::scc_info_Pms_current_2_1c1.base,
      &protobuf_chasis_2eproto::scc_info_Pms_current_1_1c0.base,
      &protobuf_chasis_2eproto::scc_info_Pms_cmd_1ba.base,
      &protobuf_chasis_2eproto::scc_info_Wheelspeed_report_6a.base,
      &protobuf_chasis_2eproto::scc_info_Accel_report_6b.base,
      &protobuf_chasis_2eproto::scc_info_Gyro_report_6c.base,
      &protobuf_chasis_2eproto::scc_info_Gps_1_report_6d.base,
      &protobuf_chasis_2eproto::scc_info_Gps_2_report_6e.base,
      &protobuf_chasis_2eproto::scc_info_Gps_3_report_6f.base,
      &protobuf_chasis_2eproto::scc_info_Throttleinfo_report_75.base,
      &protobuf_chasis_2eproto::scc_info_Brakeinfo_report_74.base,
      &protobuf_chasis_2eproto::scc_info_Surround_report_73.base,
      &protobuf_chasis_2eproto::scc_info_Fuellevel_report_72.base,
      &protobuf_chasis_2eproto::scc_info_Tirepressure_report_71.base,
      &protobuf_chasis_2eproto::scc_info_Wheelposition_report_70.base,
      &protobuf_chasis_2eproto::scc_info_Suspension_79.base,
      &protobuf_chasis_2eproto::scc_info_Pms_voltage_1b0.base,
      &protobuf_chasis_2eproto::scc_info_Pms_sta_1e0.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Version_ss_7f.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Version_bt_7e.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Misc_report_ss_7b.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Brake_command_60.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Brake_report_61.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Throttle_command_62.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Throttle_report_63.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Steering_command_64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Steering_report_65.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gear_command_66.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gear_report_67.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Turnsignal_command_68.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Misc_report_69.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pms_current_4_1c3.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pms_current_3_1c2.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pms_current_2_1c1.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pms_current_1_1c0.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pms_cmd_1ba.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Wheelspeed_report_6a.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Accel_report_6b.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gyro_report_6c.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gps_1_report_6d.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gps_2_report_6e.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gps_3_report_6f.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Throttleinfo_report_75.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Brakeinfo_report_74.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Surround_report_73.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Fuellevel_report_72.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Tirepressure_report_71.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Wheelposition_report_70.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Suspension_79.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pms_voltage_1b0.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pms_sta_1e0.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Chasis.base);
}

}  // namespace protobuf_chasis_2eproto
namespace Calmcar {
namespace drivers {
namespace CHASIS {
bool Version_ss_7f_ModuleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Version_ss_7f_ModuleType Version_ss_7f::MODULE_BT;
const Version_ss_7f_ModuleType Version_ss_7f::MODULE_SS;
const Version_ss_7f_ModuleType Version_ss_7f::ModuleType_MIN;
const Version_ss_7f_ModuleType Version_ss_7f::ModuleType_MAX;
const int Version_ss_7f::ModuleType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Version_bt_7e_ModuleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Version_bt_7e_ModuleType Version_bt_7e::MODULE_BT;
const Version_bt_7e_ModuleType Version_bt_7e::MODULE_SS;
const Version_bt_7e_ModuleType Version_bt_7e::ModuleType_MIN;
const Version_bt_7e_ModuleType Version_bt_7e::ModuleType_MAX;
const int Version_bt_7e::ModuleType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_ss_7b_LdupType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_ss_7b_LdupType Misc_report_ss_7b::LDUP_NOT_PRESSED;
const Misc_report_ss_7b_LdupType Misc_report_ss_7b::LDUP_PRESSED;
const Misc_report_ss_7b_LdupType Misc_report_ss_7b::LdupType_MIN;
const Misc_report_ss_7b_LdupType Misc_report_ss_7b::LdupType_MAX;
const int Misc_report_ss_7b::LdupType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_ss_7b_LdrhtType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_ss_7b_LdrhtType Misc_report_ss_7b::LDRHT_NOT_PRESSED;
const Misc_report_ss_7b_LdrhtType Misc_report_ss_7b::LDRHT_PRESSED;
const Misc_report_ss_7b_LdrhtType Misc_report_ss_7b::LdrhtType_MIN;
const Misc_report_ss_7b_LdrhtType Misc_report_ss_7b::LdrhtType_MAX;
const int Misc_report_ss_7b::LdrhtType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_ss_7b_LdokType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_ss_7b_LdokType Misc_report_ss_7b::LDOK_NOT_PRESSED;
const Misc_report_ss_7b_LdokType Misc_report_ss_7b::LDOK_PRESSED;
const Misc_report_ss_7b_LdokType Misc_report_ss_7b::LdokType_MIN;
const Misc_report_ss_7b_LdokType Misc_report_ss_7b::LdokType_MAX;
const int Misc_report_ss_7b::LdokType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_ss_7b_LdlftType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_ss_7b_LdlftType Misc_report_ss_7b::LDLFT_NOT_PRESSED;
const Misc_report_ss_7b_LdlftType Misc_report_ss_7b::LDLFT_PRESSED;
const Misc_report_ss_7b_LdlftType Misc_report_ss_7b::LdlftType_MIN;
const Misc_report_ss_7b_LdlftType Misc_report_ss_7b::LdlftType_MAX;
const int Misc_report_ss_7b::LdlftType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_ss_7b_LddwnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_ss_7b_LddwnType Misc_report_ss_7b::LDDWN_NOT_PRESSED;
const Misc_report_ss_7b_LddwnType Misc_report_ss_7b::LDDWN_PRESSED;
const Misc_report_ss_7b_LddwnType Misc_report_ss_7b::LddwnType_MIN;
const Misc_report_ss_7b_LddwnType Misc_report_ss_7b::LddwnType_MAX;
const int Misc_report_ss_7b::LddwnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_command_60_EnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_command_60_EnType Brake_command_60::EN_DISABLE;
const Brake_command_60_EnType Brake_command_60::EN_ENABLED;
const Brake_command_60_EnType Brake_command_60::EnType_MIN;
const Brake_command_60_EnType Brake_command_60::EnType_MAX;
const int Brake_command_60::EnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_command_60_BcmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_command_60_BcmdType Brake_command_60::BCMD_OFF;
const Brake_command_60_BcmdType Brake_command_60::BCMD_ON;
const Brake_command_60_BcmdType Brake_command_60::BcmdType_MIN;
const Brake_command_60_BcmdType Brake_command_60::BcmdType_MAX;
const int Brake_command_60::BcmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_WdcsrcType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_NONE;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_OTHER_BRAKE;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_OTHER_THROTTLE;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_OTHER_STEERING;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_BRAKE_COUNTER;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_BRAKE_DISABLED;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_BRAKE_COMMAND;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_BRAKE_REPORT;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_THROTTLE_COUNTER;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_THROTTLE_DISABLED;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_THROTTLE_COMMAND;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_THROTTLE_REPORT;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_STEERING_COUNTER;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_STEERING_DISABLED;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_STEERING_COMMAND;
const Brake_report_61_WdcsrcType Brake_report_61::WDCSRC_STEERING_REPORT;
const Brake_report_61_WdcsrcType Brake_report_61::WdcsrcType_MIN;
const Brake_report_61_WdcsrcType Brake_report_61::WdcsrcType_MAX;
const int Brake_report_61::WdcsrcType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_WdcbrkType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_WdcbrkType Brake_report_61::WDCBRK_NORMAL;
const Brake_report_61_WdcbrkType Brake_report_61::WDCBRK_WDC_APPLYING_BRAKES;
const Brake_report_61_WdcbrkType Brake_report_61::WdcbrkType_MIN;
const Brake_report_61_WdcbrkType Brake_report_61::WdcbrkType_MAX;
const int Brake_report_61::WdcbrkType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_DriverType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_DriverType Brake_report_61::DRIVER_NO_ACTIVITY;
const Brake_report_61_DriverType Brake_report_61::DRIVER_DRIVER_ACTIVITY;
const Brake_report_61_DriverType Brake_report_61::DriverType_MIN;
const Brake_report_61_DriverType Brake_report_61::DriverType_MAX;
const int Brake_report_61::DriverType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_FltwdcType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_FltwdcType Brake_report_61::FLTWDC_NO_FAULT;
const Brake_report_61_FltwdcType Brake_report_61::FLTWDC_FAULT;
const Brake_report_61_FltwdcType Brake_report_61::FltwdcType_MIN;
const Brake_report_61_FltwdcType Brake_report_61::FltwdcType_MAX;
const int Brake_report_61::FltwdcType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_TmoutType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_TmoutType Brake_report_61::TMOUT_VALID;
const Brake_report_61_TmoutType Brake_report_61::TMOUT_TIMEOUT;
const Brake_report_61_TmoutType Brake_report_61::TmoutType_MIN;
const Brake_report_61_TmoutType Brake_report_61::TmoutType_MAX;
const int Brake_report_61::TmoutType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_FltbooType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_FltbooType Brake_report_61::FLTBOO_NO_FAULT;
const Brake_report_61_FltbooType Brake_report_61::FLTBOO_FAULT;
const Brake_report_61_FltbooType Brake_report_61::FltbooType_MIN;
const Brake_report_61_FltbooType Brake_report_61::FltbooType_MAX;
const int Brake_report_61::FltbooType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_Flt2Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_Flt2Type Brake_report_61::FLT2_NO_FAULT;
const Brake_report_61_Flt2Type Brake_report_61::FLT2_FAULT;
const Brake_report_61_Flt2Type Brake_report_61::Flt2Type_MIN;
const Brake_report_61_Flt2Type Brake_report_61::Flt2Type_MAX;
const int Brake_report_61::Flt2Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_Flt1Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_Flt1Type Brake_report_61::FLT1_NO_FAULT;
const Brake_report_61_Flt1Type Brake_report_61::FLT1_FAULT;
const Brake_report_61_Flt1Type Brake_report_61::Flt1Type_MIN;
const Brake_report_61_Flt1Type Brake_report_61::Flt1Type_MAX;
const int Brake_report_61::Flt1Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_EnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_EnType Brake_report_61::EN_DISABLED;
const Brake_report_61_EnType Brake_report_61::EN_ENABLED;
const Brake_report_61_EnType Brake_report_61::EnType_MIN;
const Brake_report_61_EnType Brake_report_61::EnType_MAX;
const int Brake_report_61::EnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_OverrideType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_OverrideType Brake_report_61::OVERRIDE_NO_OVERRIDE;
const Brake_report_61_OverrideType Brake_report_61::OVERRIDE_DRIVER_OVERRIDE;
const Brake_report_61_OverrideType Brake_report_61::OverrideType_MIN;
const Brake_report_61_OverrideType Brake_report_61::OverrideType_MAX;
const int Brake_report_61::OverrideType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_BoType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_BoType Brake_report_61::BO_OFF;
const Brake_report_61_BoType Brake_report_61::BO_ON;
const Brake_report_61_BoType Brake_report_61::BoType_MIN;
const Brake_report_61_BoType Brake_report_61::BoType_MAX;
const int Brake_report_61::BoType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_BiType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_BiType Brake_report_61::BI_OFF;
const Brake_report_61_BiType Brake_report_61::BI_ON;
const Brake_report_61_BiType Brake_report_61::BiType_MIN;
const Brake_report_61_BiType Brake_report_61::BiType_MAX;
const int Brake_report_61::BiType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brake_report_61_BcType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brake_report_61_BcType Brake_report_61::BC_OFF;
const Brake_report_61_BcType Brake_report_61::BC_ON;
const Brake_report_61_BcType Brake_report_61::BcType_MIN;
const Brake_report_61_BcType Brake_report_61::BcType_MAX;
const int Brake_report_61::BcType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Throttle_command_62_EnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_command_62_EnType Throttle_command_62::EN_DISABLE;
const Throttle_command_62_EnType Throttle_command_62::EN_ENABLED;
const Throttle_command_62_EnType Throttle_command_62::EnType_MIN;
const Throttle_command_62_EnType Throttle_command_62::EnType_MAX;
const int Throttle_command_62::EnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Throttle_report_63_WdcsrcType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_NONE;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_OTHER_BRAKE;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_OTHER_THROTTLE;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_OTHER_STEERING;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_BRAKE_COUNTER;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_BRAKE_DISABLED;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_BRAKE_COMMAND;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_BRAKE_REPORT;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_THROTTLE_COUNTER;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_THROTTLE_DISABLED;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_THROTTLE_COMMAND;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_THROTTLE_REPORT;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_STEERING_COUNTER;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_STEERING_DISABLED;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_STEERING_COMMAND;
const Throttle_report_63_WdcsrcType Throttle_report_63::WDCSRC_STEERING_REPORT;
const Throttle_report_63_WdcsrcType Throttle_report_63::WdcsrcType_MIN;
const Throttle_report_63_WdcsrcType Throttle_report_63::WdcsrcType_MAX;
const int Throttle_report_63::WdcsrcType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Throttle_report_63_DriverType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_report_63_DriverType Throttle_report_63::DRIVER_NO_ACTIVITY;
const Throttle_report_63_DriverType Throttle_report_63::DRIVER_DRIVER_ACTIVITY;
const Throttle_report_63_DriverType Throttle_report_63::DriverType_MIN;
const Throttle_report_63_DriverType Throttle_report_63::DriverType_MAX;
const int Throttle_report_63::DriverType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Throttle_report_63_FltwdcType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_report_63_FltwdcType Throttle_report_63::FLTWDC_NO_FAULT;
const Throttle_report_63_FltwdcType Throttle_report_63::FLTWDC_FAULT;
const Throttle_report_63_FltwdcType Throttle_report_63::FltwdcType_MIN;
const Throttle_report_63_FltwdcType Throttle_report_63::FltwdcType_MAX;
const int Throttle_report_63::FltwdcType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Throttle_report_63_TmoutType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_report_63_TmoutType Throttle_report_63::TMOUT_VALID;
const Throttle_report_63_TmoutType Throttle_report_63::TMOUT_TIMEOUT;
const Throttle_report_63_TmoutType Throttle_report_63::TmoutType_MIN;
const Throttle_report_63_TmoutType Throttle_report_63::TmoutType_MAX;
const int Throttle_report_63::TmoutType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Throttle_report_63_Flt2Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_report_63_Flt2Type Throttle_report_63::FLT2_NO_FAULT;
const Throttle_report_63_Flt2Type Throttle_report_63::FLT2_FAULT;
const Throttle_report_63_Flt2Type Throttle_report_63::Flt2Type_MIN;
const Throttle_report_63_Flt2Type Throttle_report_63::Flt2Type_MAX;
const int Throttle_report_63::Flt2Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Throttle_report_63_Flt1Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_report_63_Flt1Type Throttle_report_63::FLT1_NO_FAULT;
const Throttle_report_63_Flt1Type Throttle_report_63::FLT1_FAULT;
const Throttle_report_63_Flt1Type Throttle_report_63::Flt1Type_MIN;
const Throttle_report_63_Flt1Type Throttle_report_63::Flt1Type_MAX;
const int Throttle_report_63::Flt1Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Throttle_report_63_EnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_report_63_EnType Throttle_report_63::EN_DISABLED;
const Throttle_report_63_EnType Throttle_report_63::EN_ENABLED;
const Throttle_report_63_EnType Throttle_report_63::EnType_MIN;
const Throttle_report_63_EnType Throttle_report_63::EnType_MAX;
const int Throttle_report_63::EnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Throttle_report_63_OverrideType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Throttle_report_63_OverrideType Throttle_report_63::OVERRIDE_NO_OVERRIDE;
const Throttle_report_63_OverrideType Throttle_report_63::OVERRIDE_DRIVER_OVERRIDE;
const Throttle_report_63_OverrideType Throttle_report_63::OverrideType_MIN;
const Throttle_report_63_OverrideType Throttle_report_63::OverrideType_MAX;
const int Throttle_report_63::OverrideType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_command_64_EnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_command_64_EnType Steering_command_64::EN_DISABLE;
const Steering_command_64_EnType Steering_command_64::EN_ENABLED;
const Steering_command_64_EnType Steering_command_64::EnType_MIN;
const Steering_command_64_EnType Steering_command_64::EnType_MAX;
const int Steering_command_64::EnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_FltwdcType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_FltwdcType Steering_report_65::FLTWDC_NO_FAULT;
const Steering_report_65_FltwdcType Steering_report_65::FLTWDC_FAULT;
const Steering_report_65_FltwdcType Steering_report_65::FltwdcType_MIN;
const Steering_report_65_FltwdcType Steering_report_65::FltwdcType_MAX;
const int Steering_report_65::FltwdcType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_FltcalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_FltcalType Steering_report_65::FLTCAL_NO_FAULT;
const Steering_report_65_FltcalType Steering_report_65::FLTCAL_FAULT;
const Steering_report_65_FltcalType Steering_report_65::FltcalType_MIN;
const Steering_report_65_FltcalType Steering_report_65::FltcalType_MAX;
const int Steering_report_65::FltcalType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_TmoutType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_TmoutType Steering_report_65::TMOUT_VALID;
const Steering_report_65_TmoutType Steering_report_65::TMOUT_TIMEOUT;
const Steering_report_65_TmoutType Steering_report_65::TmoutType_MIN;
const Steering_report_65_TmoutType Steering_report_65::TmoutType_MAX;
const int Steering_report_65::TmoutType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_Flt2Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_Flt2Type Steering_report_65::FLT2_NO_FAULT;
const Steering_report_65_Flt2Type Steering_report_65::FLT2_FAULT;
const Steering_report_65_Flt2Type Steering_report_65::Flt2Type_MIN;
const Steering_report_65_Flt2Type Steering_report_65::Flt2Type_MAX;
const int Steering_report_65::Flt2Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_Flt1Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_Flt1Type Steering_report_65::FLT1_NO_FAULT;
const Steering_report_65_Flt1Type Steering_report_65::FLT1_FAULT;
const Steering_report_65_Flt1Type Steering_report_65::Flt1Type_MIN;
const Steering_report_65_Flt1Type Steering_report_65::Flt1Type_MAX;
const int Steering_report_65::Flt1Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_EnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_EnType Steering_report_65::EN_DISABLED;
const Steering_report_65_EnType Steering_report_65::EN_ENABLED;
const Steering_report_65_EnType Steering_report_65::EnType_MIN;
const Steering_report_65_EnType Steering_report_65::EnType_MAX;
const int Steering_report_65::EnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Steering_report_65_OverrideType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Steering_report_65_OverrideType Steering_report_65::OVERRIDE_NO_OVERRIDE;
const Steering_report_65_OverrideType Steering_report_65::OVERRIDE_DRIVER_OVERRIDE;
const Steering_report_65_OverrideType Steering_report_65::OverrideType_MIN;
const Steering_report_65_OverrideType Steering_report_65::OverrideType_MAX;
const int Steering_report_65::OverrideType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_command_66_EnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_command_66_EnType Gear_command_66::EN_DISABLE;
const Gear_command_66_EnType Gear_command_66::EN_ENABLED;
const Gear_command_66_EnType Gear_command_66::EnType_MIN;
const Gear_command_66_EnType Gear_command_66::EnType_MAX;
const int Gear_command_66::EnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_command_66_GcmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_command_66_GcmdType Gear_command_66::GCMD_NONE;
const Gear_command_66_GcmdType Gear_command_66::GCMD_PARK;
const Gear_command_66_GcmdType Gear_command_66::GCMD_REVERSE;
const Gear_command_66_GcmdType Gear_command_66::GCMD_NEUTRAL;
const Gear_command_66_GcmdType Gear_command_66::GCMD_DRIVE;
const Gear_command_66_GcmdType Gear_command_66::GCMD_LOW;
const Gear_command_66_GcmdType Gear_command_66::GcmdType_MIN;
const Gear_command_66_GcmdType Gear_command_66::GcmdType_MAX;
const int Gear_command_66::GcmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_report_67_RejectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_report_67_RejectType Gear_report_67::REJECT_NOT_REJECTED;
const Gear_report_67_RejectType Gear_report_67::REJECT_OVERRIDE;
const Gear_report_67_RejectType Gear_report_67::REJECT_SHIFT_IN_PROGRESS;
const Gear_report_67_RejectType Gear_report_67::REJECT_REPEAT;
const Gear_report_67_RejectType Gear_report_67::REJECT_CMD_ILLEGAL;
const Gear_report_67_RejectType Gear_report_67::REJECT_SPEED_NOT_2KPH;
const Gear_report_67_RejectType Gear_report_67::REJECT_REJECTED_BY_VEHICLE_TIMEOUT;
const Gear_report_67_RejectType Gear_report_67::RejectType_MIN;
const Gear_report_67_RejectType Gear_report_67::RejectType_MAX;
const int Gear_report_67::RejectType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_report_67_StateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_report_67_StateType Gear_report_67::STATE_NONE;
const Gear_report_67_StateType Gear_report_67::STATE_PARK;
const Gear_report_67_StateType Gear_report_67::STATE_REVERSE;
const Gear_report_67_StateType Gear_report_67::STATE_NEUTRAL;
const Gear_report_67_StateType Gear_report_67::STATE_DRIVE;
const Gear_report_67_StateType Gear_report_67::STATE_LOW;
const Gear_report_67_StateType Gear_report_67::StateType_MIN;
const Gear_report_67_StateType Gear_report_67::StateType_MAX;
const int Gear_report_67::StateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_report_67_FltbusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_report_67_FltbusType Gear_report_67::FLTBUS_NO_FAULT;
const Gear_report_67_FltbusType Gear_report_67::FLTBUS_FAULT;
const Gear_report_67_FltbusType Gear_report_67::FltbusType_MIN;
const Gear_report_67_FltbusType Gear_report_67::FltbusType_MAX;
const int Gear_report_67::FltbusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_report_67_DriverType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_report_67_DriverType Gear_report_67::DRIVER_LAST_SHIFT_REQUESTED_BY_WIRE;
const Gear_report_67_DriverType Gear_report_67::DRIVER_LAST_SHIFT_REQUESTED_BY_DRIVER;
const Gear_report_67_DriverType Gear_report_67::DriverType_MIN;
const Gear_report_67_DriverType Gear_report_67::DriverType_MAX;
const int Gear_report_67::DriverType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gear_report_67_CmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gear_report_67_CmdType Gear_report_67::CMD_NONE;
const Gear_report_67_CmdType Gear_report_67::CMD_PARK;
const Gear_report_67_CmdType Gear_report_67::CMD_REVERSE;
const Gear_report_67_CmdType Gear_report_67::CMD_NEUTRAL;
const Gear_report_67_CmdType Gear_report_67::CMD_DRIVE;
const Gear_report_67_CmdType Gear_report_67::CMD_LOW;
const Gear_report_67_CmdType Gear_report_67::CmdType_MIN;
const Gear_report_67_CmdType Gear_report_67::CmdType_MAX;
const int Gear_report_67::CmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Turnsignal_command_68_TrncmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Turnsignal_command_68_TrncmdType Turnsignal_command_68::TRNCMD_NONE;
const Turnsignal_command_68_TrncmdType Turnsignal_command_68::TRNCMD_LEFT;
const Turnsignal_command_68_TrncmdType Turnsignal_command_68::TRNCMD_RIGHT;
const Turnsignal_command_68_TrncmdType Turnsignal_command_68::TRNCMD_DOUBLEFLASH;
const Turnsignal_command_68_TrncmdType Turnsignal_command_68::TrncmdType_MIN;
const Turnsignal_command_68_TrncmdType Turnsignal_command_68::TrncmdType_MAX;
const int Turnsignal_command_68::TrncmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_LdupType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_LdupType Misc_report_69::LDUP_NOT_PRESSED;
const Misc_report_69_LdupType Misc_report_69::LDUP_PRESSED;
const Misc_report_69_LdupType Misc_report_69::LdupType_MIN;
const Misc_report_69_LdupType Misc_report_69::LdupType_MAX;
const int Misc_report_69::LdupType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_LdrhtType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_LdrhtType Misc_report_69::LDRHT_NOT_PRESSED;
const Misc_report_69_LdrhtType Misc_report_69::LDRHT_PRESSED;
const Misc_report_69_LdrhtType Misc_report_69::LdrhtType_MIN;
const Misc_report_69_LdrhtType Misc_report_69::LdrhtType_MAX;
const int Misc_report_69::LdrhtType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_LdokType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_LdokType Misc_report_69::LDOK_NOT_PRESSED;
const Misc_report_69_LdokType Misc_report_69::LDOK_PRESSED;
const Misc_report_69_LdokType Misc_report_69::LdokType_MIN;
const Misc_report_69_LdokType Misc_report_69::LdokType_MAX;
const int Misc_report_69::LdokType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_LdlftType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_LdlftType Misc_report_69::LDLFT_NOT_PRESSED;
const Misc_report_69_LdlftType Misc_report_69::LDLFT_PRESSED;
const Misc_report_69_LdlftType Misc_report_69::LdlftType_MIN;
const Misc_report_69_LdlftType Misc_report_69::LdlftType_MAX;
const int Misc_report_69::LdlftType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_LddwnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_LddwnType Misc_report_69::LDDWN_NOT_PRESSED;
const Misc_report_69_LddwnType Misc_report_69::LDDWN_PRESSED;
const Misc_report_69_LddwnType Misc_report_69::LddwnType_MIN;
const Misc_report_69_LddwnType Misc_report_69::LddwnType_MAX;
const int Misc_report_69::LddwnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_CnclType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_CnclType Misc_report_69::CNCL_NOT_PRESSED;
const Misc_report_69_CnclType Misc_report_69::CNCL_PRESSED;
const Misc_report_69_CnclType Misc_report_69::CnclType_MIN;
const Misc_report_69_CnclType Misc_report_69::CnclType_MAX;
const int Misc_report_69::CnclType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_ResType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_ResType Misc_report_69::RES_NOT_PRESSED;
const Misc_report_69_ResType Misc_report_69::RES_PRESSED;
const Misc_report_69_ResType Misc_report_69::ResType_MIN;
const Misc_report_69_ResType Misc_report_69::ResType_MAX;
const int Misc_report_69::ResType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_OnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_OnType Misc_report_69::ON_NOT_PRESSED;
const Misc_report_69_OnType Misc_report_69::ON_PRESSED;
const Misc_report_69_OnType Misc_report_69::OnType_MIN;
const Misc_report_69_OnType Misc_report_69::OnType_MAX;
const int Misc_report_69::OnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_OffType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_OffType Misc_report_69::OFF_NOT_PRESSED;
const Misc_report_69_OffType Misc_report_69::OFF_PRESSED;
const Misc_report_69_OffType Misc_report_69::OffType_MIN;
const Misc_report_69_OffType Misc_report_69::OffType_MAX;
const int Misc_report_69::OffType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_BeltpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_BeltpType Misc_report_69::BELTP_UNBUCKLED;
const Misc_report_69_BeltpType Misc_report_69::BELTP_BUCKLED;
const Misc_report_69_BeltpType Misc_report_69::BeltpType_MIN;
const Misc_report_69_BeltpType Misc_report_69::BeltpType_MAX;
const int Misc_report_69::BeltpType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_BeltdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_BeltdType Misc_report_69::BELTD_UNBUCKLED;
const Misc_report_69_BeltdType Misc_report_69::BELTD_BUCKLED;
const Misc_report_69_BeltdType Misc_report_69::BeltdType_MIN;
const Misc_report_69_BeltdType Misc_report_69::BeltdType_MAX;
const int Misc_report_69::BeltdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_PabagType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_PabagType Misc_report_69::PABAG_DISABLED;
const Misc_report_69_PabagType Misc_report_69::PABAG_ENABLED;
const Misc_report_69_PabagType Misc_report_69::PabagType_MIN;
const Misc_report_69_PabagType Misc_report_69::PabagType_MAX;
const int Misc_report_69::PabagType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_PdectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_PdectType Misc_report_69::PDECT_NO_PASSENGER;
const Misc_report_69_PdectType Misc_report_69::PDECT_PASSENGER;
const Misc_report_69_PdectType Misc_report_69::PdectType_MIN;
const Misc_report_69_PdectType Misc_report_69::PdectType_MAX;
const int Misc_report_69::PdectType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_TrunkType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_TrunkType Misc_report_69::TRUNK_CLOSED;
const Misc_report_69_TrunkType Misc_report_69::TRUNK_OPEN;
const Misc_report_69_TrunkType Misc_report_69::TrunkType_MIN;
const Misc_report_69_TrunkType Misc_report_69::TrunkType_MAX;
const int Misc_report_69::TrunkType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_HoodType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_HoodType Misc_report_69::HOOD_CLOSED;
const Misc_report_69_HoodType Misc_report_69::HOOD_OPEN;
const Misc_report_69_HoodType Misc_report_69::HoodType_MIN;
const Misc_report_69_HoodType Misc_report_69::HoodType_MAX;
const int Misc_report_69::HoodType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_DoorrType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_DoorrType Misc_report_69::DOORR_CLOSED;
const Misc_report_69_DoorrType Misc_report_69::DOORR_OPEN;
const Misc_report_69_DoorrType Misc_report_69::DoorrType_MIN;
const Misc_report_69_DoorrType Misc_report_69::DoorrType_MAX;
const int Misc_report_69::DoorrType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_DoorpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_DoorpType Misc_report_69::DOORP_CLOSED;
const Misc_report_69_DoorpType Misc_report_69::DOORP_OPEN;
const Misc_report_69_DoorpType Misc_report_69::DoorpType_MIN;
const Misc_report_69_DoorpType Misc_report_69::DoorpType_MAX;
const int Misc_report_69::DoorpType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_DoorlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_DoorlType Misc_report_69::DOORL_CLOSED;
const Misc_report_69_DoorlType Misc_report_69::DOORL_OPEN;
const Misc_report_69_DoorlType Misc_report_69::DoorlType_MIN;
const Misc_report_69_DoorlType Misc_report_69::DoorlType_MAX;
const int Misc_report_69::DoorlType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_DoordType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_DoordType Misc_report_69::DOORD_CLOSED;
const Misc_report_69_DoordType Misc_report_69::DOORD_OPEN;
const Misc_report_69_DoordType Misc_report_69::DoordType_MIN;
const Misc_report_69_DoordType Misc_report_69::DoordType_MAX;
const int Misc_report_69::DoordType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_WiperType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_WiperType Misc_report_69::WIPER_OFF;
const Misc_report_69_WiperType Misc_report_69::WIPER_AUTO_OFF;
const Misc_report_69_WiperType Misc_report_69::WIPER_OFF_MOVING;
const Misc_report_69_WiperType Misc_report_69::WIPER_MANUAL_OFF;
const Misc_report_69_WiperType Misc_report_69::WIPER_MANUAL_ON;
const Misc_report_69_WiperType Misc_report_69::WIPER_MANUAL_LOW;
const Misc_report_69_WiperType Misc_report_69::WIPER_MANUAL_HIGH;
const Misc_report_69_WiperType Misc_report_69::WIPER_MIST_FLICK;
const Misc_report_69_WiperType Misc_report_69::WIPER_WASH;
const Misc_report_69_WiperType Misc_report_69::WIPER_AUTO_LOW;
const Misc_report_69_WiperType Misc_report_69::WIPER_AUTO_HIGH;
const Misc_report_69_WiperType Misc_report_69::WIPER_COURTESY_WIPE;
const Misc_report_69_WiperType Misc_report_69::WIPER_AUTO_ADJUST;
const Misc_report_69_WiperType Misc_report_69::WIPER_RESERVED;
const Misc_report_69_WiperType Misc_report_69::WIPER_STALLED;
const Misc_report_69_WiperType Misc_report_69::WIPER_NO_DATA;
const Misc_report_69_WiperType Misc_report_69::WiperType_MIN;
const Misc_report_69_WiperType Misc_report_69::WiperType_MAX;
const int Misc_report_69::WiperType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_TrnstatType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_TrnstatType Misc_report_69::TRNSTAT_NONE;
const Misc_report_69_TrnstatType Misc_report_69::TRNSTAT_LEFT;
const Misc_report_69_TrnstatType Misc_report_69::TRNSTAT_RIGHT;
const Misc_report_69_TrnstatType Misc_report_69::TrnstatType_MIN;
const Misc_report_69_TrnstatType Misc_report_69::TrnstatType_MAX;
const int Misc_report_69::TrnstatType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_SincType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_SincType Misc_report_69::SINC_NOT_PRESSED;
const Misc_report_69_SincType Misc_report_69::SINC_PRESSED;
const Misc_report_69_SincType Misc_report_69::SincType_MIN;
const Misc_report_69_SincType Misc_report_69::SincType_MAX;
const int Misc_report_69::SincType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_SdecType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_SdecType Misc_report_69::SDEC_NOT_PRESSED;
const Misc_report_69_SdecType Misc_report_69::SDEC_PRESSED;
const Misc_report_69_SdecType Misc_report_69::SdecType_MIN;
const Misc_report_69_SdecType Misc_report_69::SdecType_MAX;
const int Misc_report_69::SdecType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_OnoffType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_OnoffType Misc_report_69::ONOFF_NOT_PRESSED;
const Misc_report_69_OnoffType Misc_report_69::ONOFF_PRESSED;
const Misc_report_69_OnoffType Misc_report_69::OnoffType_MIN;
const Misc_report_69_OnoffType Misc_report_69::OnoffType_MAX;
const int Misc_report_69::OnoffType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_LkaenType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_LkaenType Misc_report_69::LKAEN_NOT_PRESSED;
const Misc_report_69_LkaenType Misc_report_69::LKAEN_PRESSED;
const Misc_report_69_LkaenType Misc_report_69::LkaenType_MIN;
const Misc_report_69_LkaenType Misc_report_69::LkaenType_MAX;
const int Misc_report_69::LkaenType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_HibeamType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_HibeamType Misc_report_69::HIBEAM_NULL;
const Misc_report_69_HibeamType Misc_report_69::HIBEAM_FLASH_TO_PASS;
const Misc_report_69_HibeamType Misc_report_69::HIBEAM_HIGH;
const Misc_report_69_HibeamType Misc_report_69::HibeamType_MIN;
const Misc_report_69_HibeamType Misc_report_69::HibeamType_MAX;
const int Misc_report_69::HibeamType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_GincType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_GincType Misc_report_69::GINC_NOT_PRESSED;
const Misc_report_69_GincType Misc_report_69::GINC_PRESSED;
const Misc_report_69_GincType Misc_report_69::GincType_MIN;
const Misc_report_69_GincType Misc_report_69::GincType_MAX;
const int Misc_report_69::GincType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_GdecType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_GdecType Misc_report_69::GDEC_NOT_PRESSED;
const Misc_report_69_GdecType Misc_report_69::GDEC_PRESSED;
const Misc_report_69_GdecType Misc_report_69::GdecType_MIN;
const Misc_report_69_GdecType Misc_report_69::GdecType_MAX;
const int Misc_report_69::GdecType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_FltbusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_FltbusType Misc_report_69::FLTBUS_NO_FAULT;
const Misc_report_69_FltbusType Misc_report_69::FLTBUS_FAULT;
const Misc_report_69_FltbusType Misc_report_69::FltbusType_MIN;
const Misc_report_69_FltbusType Misc_report_69::FltbusType_MAX;
const int Misc_report_69::FltbusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_RescnclType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_RescnclType Misc_report_69::RESCNCL_NOT_PRESSED;
const Misc_report_69_RescnclType Misc_report_69::RESCNCL_PRESSED;
const Misc_report_69_RescnclType Misc_report_69::RescnclType_MIN;
const Misc_report_69_RescnclType Misc_report_69::RescnclType_MAX;
const int Misc_report_69::RescnclType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Misc_report_69_AmbientType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Misc_report_69_AmbientType Misc_report_69::AMBIENT_DARK;
const Misc_report_69_AmbientType Misc_report_69::AMBIENT_LIGHT;
const Misc_report_69_AmbientType Misc_report_69::AMBIENT_TWILIGHT;
const Misc_report_69_AmbientType Misc_report_69::AMBIENT_TUNNEL_ON;
const Misc_report_69_AmbientType Misc_report_69::AMBIENT_TUNNEL_OFF;
const Misc_report_69_AmbientType Misc_report_69::AMBIENT_NO_DATA;
const Misc_report_69_AmbientType Misc_report_69::AmbientType_MIN;
const Misc_report_69_AmbientType Misc_report_69::AmbientType_MAX;
const int Misc_report_69::AmbientType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gps_1_report_6d_ValidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gps_1_report_6d_ValidType Gps_1_report_6d::VALID_INVALID;
const Gps_1_report_6d_ValidType Gps_1_report_6d::VALID_VALID;
const Gps_1_report_6d_ValidType Gps_1_report_6d::ValidType_MIN;
const Gps_1_report_6d_ValidType Gps_1_report_6d::ValidType_MAX;
const int Gps_1_report_6d::ValidType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gps_2_report_6e_InfType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gps_2_report_6e_InfType Gps_2_report_6e::INF_ACTUAL_POSITION;
const Gps_2_report_6e_InfType Gps_2_report_6e::INF_INFERRED_POSITION;
const Gps_2_report_6e_InfType Gps_2_report_6e::InfType_MIN;
const Gps_2_report_6e_InfType Gps_2_report_6e::InfType_MAX;
const int Gps_2_report_6e::InfType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gps_2_report_6e_FltgpsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gps_2_report_6e_FltgpsType Gps_2_report_6e::FLTGPS_NO_FAULT;
const Gps_2_report_6e_FltgpsType Gps_2_report_6e::FLTGPS_FAULT;
const Gps_2_report_6e_FltgpsType Gps_2_report_6e::FltgpsType_MIN;
const Gps_2_report_6e_FltgpsType Gps_2_report_6e::FltgpsType_MAX;
const int Gps_2_report_6e::FltgpsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Gps_3_report_6f_QualityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gps_3_report_6f_QualityType Gps_3_report_6f::QUALITY_NO_FIX;
const Gps_3_report_6f_QualityType Gps_3_report_6f::QUALITY_2D_FIX;
const Gps_3_report_6f_QualityType Gps_3_report_6f::QUALITY_3D_FIX;
const Gps_3_report_6f_QualityType Gps_3_report_6f::QualityType_MIN;
const Gps_3_report_6f_QualityType Gps_3_report_6f::QualityType_MAX;
const int Gps_3_report_6f::QualityType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brakeinfo_report_74_TraceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brakeinfo_report_74_TraceType Brakeinfo_report_74::TRACE_DISABLED;
const Brakeinfo_report_74_TraceType Brakeinfo_report_74::TRACE_ENABLED;
const Brakeinfo_report_74_TraceType Brakeinfo_report_74::TraceType_MIN;
const Brakeinfo_report_74_TraceType Brakeinfo_report_74::TraceType_MAX;
const int Brakeinfo_report_74::TraceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brakeinfo_report_74_TracaType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brakeinfo_report_74_TracaType Brakeinfo_report_74::TRACA_INACTIVE;
const Brakeinfo_report_74_TracaType Brakeinfo_report_74::TRACA_ACTIVE;
const Brakeinfo_report_74_TracaType Brakeinfo_report_74::TracaType_MIN;
const Brakeinfo_report_74_TracaType Brakeinfo_report_74::TracaType_MAX;
const int Brakeinfo_report_74::TracaType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brakeinfo_report_74_StabeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brakeinfo_report_74_StabeType Brakeinfo_report_74::STABE_DISABLED;
const Brakeinfo_report_74_StabeType Brakeinfo_report_74::STABE_ENABLED;
const Brakeinfo_report_74_StabeType Brakeinfo_report_74::StabeType_MIN;
const Brakeinfo_report_74_StabeType Brakeinfo_report_74::StabeType_MAX;
const int Brakeinfo_report_74::StabeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brakeinfo_report_74_StabaType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brakeinfo_report_74_StabaType Brakeinfo_report_74::STABA_INACTIVE;
const Brakeinfo_report_74_StabaType Brakeinfo_report_74::STABA_ACTIVE;
const Brakeinfo_report_74_StabaType Brakeinfo_report_74::StabaType_MIN;
const Brakeinfo_report_74_StabaType Brakeinfo_report_74::StabaType_MAX;
const int Brakeinfo_report_74::StabaType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brakeinfo_report_74_AbseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brakeinfo_report_74_AbseType Brakeinfo_report_74::ABSE_DISABLED;
const Brakeinfo_report_74_AbseType Brakeinfo_report_74::ABSE_ENABLED;
const Brakeinfo_report_74_AbseType Brakeinfo_report_74::AbseType_MIN;
const Brakeinfo_report_74_AbseType Brakeinfo_report_74::AbseType_MAX;
const int Brakeinfo_report_74::AbseType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brakeinfo_report_74_AbsaType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brakeinfo_report_74_AbsaType Brakeinfo_report_74::ABSA_INACTIVE;
const Brakeinfo_report_74_AbsaType Brakeinfo_report_74::ABSA_ACTIVE;
const Brakeinfo_report_74_AbsaType Brakeinfo_report_74::AbsaType_MIN;
const Brakeinfo_report_74_AbsaType Brakeinfo_report_74::AbsaType_MAX;
const int Brakeinfo_report_74::AbsaType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brakeinfo_report_74_PbrakeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brakeinfo_report_74_PbrakeType Brakeinfo_report_74::PBRAKE_OFF;
const Brakeinfo_report_74_PbrakeType Brakeinfo_report_74::PBRAKE_TRANSITION;
const Brakeinfo_report_74_PbrakeType Brakeinfo_report_74::PBRAKE_ON;
const Brakeinfo_report_74_PbrakeType Brakeinfo_report_74::PBRAKE_FAULT;
const Brakeinfo_report_74_PbrakeType Brakeinfo_report_74::PbrakeType_MIN;
const Brakeinfo_report_74_PbrakeType Brakeinfo_report_74::PbrakeType_MAX;
const int Brakeinfo_report_74::PbrakeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brakeinfo_report_74_StatnryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brakeinfo_report_74_StatnryType Brakeinfo_report_74::STATNRY_MOVING;
const Brakeinfo_report_74_StatnryType Brakeinfo_report_74::STATNRY_STATIONARY;
const Brakeinfo_report_74_StatnryType Brakeinfo_report_74::StatnryType_MIN;
const Brakeinfo_report_74_StatnryType Brakeinfo_report_74::StatnryType_MAX;
const int Brakeinfo_report_74::StatnryType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brakeinfo_report_74_HsastatType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74::HSASTAT_INACTIVE;
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74::HSASTAT_FINDING_GRADIENT;
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74::HSASTAT_ACTIVE_PRESSED;
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74::HSASTAT_ACTIVE_RELEASED;
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74::HSASTAT_FAST_RELEASE;
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74::HSASTAT_SLOW_RELEASE;
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74::HSASTAT_FAILED;
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74::HSASTAT_UNDEFINED;
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74::HsastatType_MIN;
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74::HsastatType_MAX;
const int Brakeinfo_report_74::HsastatType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Brakeinfo_report_74_HsamodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Brakeinfo_report_74_HsamodeType Brakeinfo_report_74::HSAMODE_OFF;
const Brakeinfo_report_74_HsamodeType Brakeinfo_report_74::HSAMODE_AUTO;
const Brakeinfo_report_74_HsamodeType Brakeinfo_report_74::HSAMODE_MANUAL;
const Brakeinfo_report_74_HsamodeType Brakeinfo_report_74::HSAMODE_UNDEFINED;
const Brakeinfo_report_74_HsamodeType Brakeinfo_report_74::HsamodeType_MIN;
const Brakeinfo_report_74_HsamodeType Brakeinfo_report_74::HsamodeType_MAX;
const int Brakeinfo_report_74::HsamodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_EnsnrType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_EnsnrType Surround_report_73::ENSNR_DISABLED;
const Surround_report_73_EnsnrType Surround_report_73::ENSNR_ENABLED;
const Surround_report_73_EnsnrType Surround_report_73::EnsnrType_MIN;
const Surround_report_73_EnsnrType Surround_report_73::EnsnrType_MAX;
const int Surround_report_73::EnsnrType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_FltsnrType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_FltsnrType Surround_report_73::FLTSNR_NO_FAULT;
const Surround_report_73_FltsnrType Surround_report_73::FLTSNR_FAULT;
const Surround_report_73_FltsnrType Surround_report_73::FltsnrType_MIN;
const Surround_report_73_FltsnrType Surround_report_73::FltsnrType_MAX;
const int Surround_report_73::FltsnrType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar11Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar11Type Surround_report_73::SONAR11_NO_DETECTION;
const Surround_report_73_Sonar11Type Surround_report_73::Sonar11Type_MIN;
const Surround_report_73_Sonar11Type Surround_report_73::Sonar11Type_MAX;
const int Surround_report_73::Sonar11Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar10Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar10Type Surround_report_73::SONAR10_NO_DETECTION;
const Surround_report_73_Sonar10Type Surround_report_73::Sonar10Type_MIN;
const Surround_report_73_Sonar10Type Surround_report_73::Sonar10Type_MAX;
const int Surround_report_73::Sonar10Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar09Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar09Type Surround_report_73::SONAR09_NO_DETECTION;
const Surround_report_73_Sonar09Type Surround_report_73::Sonar09Type_MIN;
const Surround_report_73_Sonar09Type Surround_report_73::Sonar09Type_MAX;
const int Surround_report_73::Sonar09Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar08Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar08Type Surround_report_73::SONAR08_NO_DETECTION;
const Surround_report_73_Sonar08Type Surround_report_73::Sonar08Type_MIN;
const Surround_report_73_Sonar08Type Surround_report_73::Sonar08Type_MAX;
const int Surround_report_73::Sonar08Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar07Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar07Type Surround_report_73::SONAR07_NO_DETECTION;
const Surround_report_73_Sonar07Type Surround_report_73::Sonar07Type_MIN;
const Surround_report_73_Sonar07Type Surround_report_73::Sonar07Type_MAX;
const int Surround_report_73::Sonar07Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar06Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar06Type Surround_report_73::SONAR06_NO_DETECTION;
const Surround_report_73_Sonar06Type Surround_report_73::Sonar06Type_MIN;
const Surround_report_73_Sonar06Type Surround_report_73::Sonar06Type_MAX;
const int Surround_report_73::Sonar06Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar05Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar05Type Surround_report_73::SONAR05_NO_DETECTION;
const Surround_report_73_Sonar05Type Surround_report_73::Sonar05Type_MIN;
const Surround_report_73_Sonar05Type Surround_report_73::Sonar05Type_MAX;
const int Surround_report_73::Sonar05Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar04Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar04Type Surround_report_73::SONAR04_NO_DETECTION;
const Surround_report_73_Sonar04Type Surround_report_73::Sonar04Type_MIN;
const Surround_report_73_Sonar04Type Surround_report_73::Sonar04Type_MAX;
const int Surround_report_73::Sonar04Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar03Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar03Type Surround_report_73::SONAR03_NO_DETECTION;
const Surround_report_73_Sonar03Type Surround_report_73::Sonar03Type_MIN;
const Surround_report_73_Sonar03Type Surround_report_73::Sonar03Type_MAX;
const int Surround_report_73::Sonar03Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar02Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar02Type Surround_report_73::SONAR02_NO_DETECTION;
const Surround_report_73_Sonar02Type Surround_report_73::Sonar02Type_MIN;
const Surround_report_73_Sonar02Type Surround_report_73::Sonar02Type_MAX;
const int Surround_report_73::Sonar02Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar01Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar01Type Surround_report_73::SONAR01_NO_DETECTION;
const Surround_report_73_Sonar01Type Surround_report_73::Sonar01Type_MIN;
const Surround_report_73_Sonar01Type Surround_report_73::Sonar01Type_MAX;
const int Surround_report_73::Sonar01Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_Sonar00Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_Sonar00Type Surround_report_73::SONAR00_NO_DETECTION;
const Surround_report_73_Sonar00Type Surround_report_73::Sonar00Type_MIN;
const Surround_report_73_Sonar00Type Surround_report_73::Sonar00Type_MAX;
const int Surround_report_73::Sonar00Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_BlisreType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_BlisreType Surround_report_73::BLISRE_DISABLED;
const Surround_report_73_BlisreType Surround_report_73::BLISRE_ENABLED;
const Surround_report_73_BlisreType Surround_report_73::BlisreType_MIN;
const Surround_report_73_BlisreType Surround_report_73::BlisreType_MAX;
const int Surround_report_73::BlisreType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_BlisraType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_BlisraType Surround_report_73::BLISRA_NO_ALERT;
const Surround_report_73_BlisraType Surround_report_73::BLISRA_ALERT;
const Surround_report_73_BlisraType Surround_report_73::BlisraType_MIN;
const Surround_report_73_BlisraType Surround_report_73::BlisraType_MAX;
const int Surround_report_73::BlisraType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_BlisleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_BlisleType Surround_report_73::BLISLE_DISABLED;
const Surround_report_73_BlisleType Surround_report_73::BLISLE_ENABLED;
const Surround_report_73_BlisleType Surround_report_73::BlisleType_MIN;
const Surround_report_73_BlisleType Surround_report_73::BlisleType_MAX;
const int Surround_report_73::BlisleType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_BlislaType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_BlislaType Surround_report_73::BLISLA_NO_ALERT;
const Surround_report_73_BlislaType Surround_report_73::BLISLA_ALERT;
const Surround_report_73_BlislaType Surround_report_73::BlislaType_MIN;
const Surround_report_73_BlislaType Surround_report_73::BlislaType_MAX;
const int Surround_report_73::BlislaType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_CtareType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_CtareType Surround_report_73::CTARE_DISABLED;
const Surround_report_73_CtareType Surround_report_73::CTARE_ENABLED;
const Surround_report_73_CtareType Surround_report_73::CtareType_MIN;
const Surround_report_73_CtareType Surround_report_73::CtareType_MAX;
const int Surround_report_73::CtareType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_CtaraType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_CtaraType Surround_report_73::CTARA_NO_ALERT;
const Surround_report_73_CtaraType Surround_report_73::CTARA_ALERT;
const Surround_report_73_CtaraType Surround_report_73::CtaraType_MIN;
const Surround_report_73_CtaraType Surround_report_73::CtaraType_MAX;
const int Surround_report_73::CtaraType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_CtaleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_CtaleType Surround_report_73::CTALE_DISABLED;
const Surround_report_73_CtaleType Surround_report_73::CTALE_ENABLED;
const Surround_report_73_CtaleType Surround_report_73::CtaleType_MIN;
const Surround_report_73_CtaleType Surround_report_73::CtaleType_MAX;
const int Surround_report_73::CtaleType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Surround_report_73_CtalaType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Surround_report_73_CtalaType Surround_report_73::CTALA_NO_ALERT;
const Surround_report_73_CtalaType Surround_report_73::CTALA_ALERT;
const Surround_report_73_CtalaType Surround_report_73::CtalaType_MIN;
const Surround_report_73_CtalaType Surround_report_73::CtalaType_MAX;
const int Surround_report_73::CtalaType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Version_ss_7f::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Version_ss_7f::kBuildFieldNumber;
const int Version_ss_7f::kMyMinorFieldNumber;
const int Version_ss_7f::kMyMajorFieldNumber;
const int Version_ss_7f::kModuleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Version_ss_7f::Version_ss_7f()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Version_ss_7f.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Version_ss_7f)
}
Version_ss_7f::Version_ss_7f(const Version_ss_7f& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&build_, &from.build_,
    static_cast<size_t>(reinterpret_cast<char*>(&module_) -
    reinterpret_cast<char*>(&build_)) + sizeof(module_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Version_ss_7f)
}

void Version_ss_7f::SharedCtor() {
  ::memset(&build_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_) -
      reinterpret_cast<char*>(&build_)) + sizeof(module_));
}

Version_ss_7f::~Version_ss_7f() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Version_ss_7f)
  SharedDtor();
}

void Version_ss_7f::SharedDtor() {
}

void Version_ss_7f::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Version_ss_7f& Version_ss_7f::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Version_ss_7f.base);
  return *internal_default_instance();
}


void Version_ss_7f::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Version_ss_7f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&build_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_) -
      reinterpret_cast<char*>(&build_)) + sizeof(module_));
  _internal_metadata_.Clear();
}

bool Version_ss_7f::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Version_ss_7f)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 build = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &build_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 my_minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 my_major = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 module = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &module_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Version_ss_7f)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Version_ss_7f)
  return false;
#undef DO_
}

void Version_ss_7f::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Version_ss_7f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 build = 1;
  if (this->build() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->build(), output);
  }

  // int32 my_minor = 2;
  if (this->my_minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->my_minor(), output);
  }

  // int32 my_major = 3;
  if (this->my_major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->my_major(), output);
  }

  // int32 module = 4;
  if (this->module() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->module(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Version_ss_7f)
}

size_t Version_ss_7f::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Version_ss_7f)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 build = 1;
  if (this->build() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->build());
  }

  // int32 my_minor = 2;
  if (this->my_minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->my_minor());
  }

  // int32 my_major = 3;
  if (this->my_major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->my_major());
  }

  // int32 module = 4;
  if (this->module() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->module());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Version_ss_7f::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Version_ss_7f*>(&from));
}

void Version_ss_7f::MergeFrom(const Version_ss_7f& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Version_ss_7f)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.build() != 0) {
    set_build(from.build());
  }
  if (from.my_minor() != 0) {
    set_my_minor(from.my_minor());
  }
  if (from.my_major() != 0) {
    set_my_major(from.my_major());
  }
  if (from.module() != 0) {
    set_module(from.module());
  }
}

void Version_ss_7f::CopyFrom(const Version_ss_7f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Version_ss_7f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Version_ss_7f::IsInitialized() const {
  return true;
}

void Version_ss_7f::Swap(Version_ss_7f* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Version_ss_7f::InternalSwap(Version_ss_7f* other) {
  using std::swap;
  swap(build_, other->build_);
  swap(my_minor_, other->my_minor_);
  swap(my_major_, other->my_major_);
  swap(module_, other->module_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Version_ss_7f::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Version_ss_7f";
}


// ===================================================================

void Version_bt_7e::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Version_bt_7e::kVin16FieldNumber;
const int Version_bt_7e::kVin15FieldNumber;
const int Version_bt_7e::kVin14FieldNumber;
const int Version_bt_7e::kVin13FieldNumber;
const int Version_bt_7e::kVin12FieldNumber;
const int Version_bt_7e::kVin11FieldNumber;
const int Version_bt_7e::kVin10FieldNumber;
const int Version_bt_7e::kVin09FieldNumber;
const int Version_bt_7e::kVin08FieldNumber;
const int Version_bt_7e::kVin07FieldNumber;
const int Version_bt_7e::kVin06FieldNumber;
const int Version_bt_7e::kVin05FieldNumber;
const int Version_bt_7e::kVin04FieldNumber;
const int Version_bt_7e::kVin03FieldNumber;
const int Version_bt_7e::kVin02FieldNumber;
const int Version_bt_7e::kVin01FieldNumber;
const int Version_bt_7e::kVin00FieldNumber;
const int Version_bt_7e::kMuxFieldNumber;
const int Version_bt_7e::kBuildFieldNumber;
const int Version_bt_7e::kMyMinorFieldNumber;
const int Version_bt_7e::kMyMajorFieldNumber;
const int Version_bt_7e::kModuleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Version_bt_7e::Version_bt_7e()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Version_bt_7e.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Version_bt_7e)
}
Version_bt_7e::Version_bt_7e(const Version_bt_7e& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vin16_, &from.vin16_,
    static_cast<size_t>(reinterpret_cast<char*>(&module_) -
    reinterpret_cast<char*>(&vin16_)) + sizeof(module_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Version_bt_7e)
}

void Version_bt_7e::SharedCtor() {
  ::memset(&vin16_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_) -
      reinterpret_cast<char*>(&vin16_)) + sizeof(module_));
}

Version_bt_7e::~Version_bt_7e() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Version_bt_7e)
  SharedDtor();
}

void Version_bt_7e::SharedDtor() {
}

void Version_bt_7e::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Version_bt_7e& Version_bt_7e::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Version_bt_7e.base);
  return *internal_default_instance();
}


void Version_bt_7e::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Version_bt_7e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vin16_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_) -
      reinterpret_cast<char*>(&vin16_)) + sizeof(module_));
  _internal_metadata_.Clear();
}

bool Version_bt_7e::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Version_bt_7e)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 vin16 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin15 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin15_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin14 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin14_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin13 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin13_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin12 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin12_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin11 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin11_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin10 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin09 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin09_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin08 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin08_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin07 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin07_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin06 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin06_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin05 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin05_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin04 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin04_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin03 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin03_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin02 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin02_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin01 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin01_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vin00 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vin00_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mux = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mux_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 build = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &build_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 my_minor = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 my_major = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 module = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &module_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Version_bt_7e)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Version_bt_7e)
  return false;
#undef DO_
}

void Version_bt_7e::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Version_bt_7e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 vin16 = 1;
  if (this->vin16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vin16(), output);
  }

  // int32 vin15 = 2;
  if (this->vin15() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vin15(), output);
  }

  // int32 vin14 = 3;
  if (this->vin14() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->vin14(), output);
  }

  // int32 vin13 = 4;
  if (this->vin13() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vin13(), output);
  }

  // int32 vin12 = 5;
  if (this->vin12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->vin12(), output);
  }

  // int32 vin11 = 6;
  if (this->vin11() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->vin11(), output);
  }

  // int32 vin10 = 7;
  if (this->vin10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->vin10(), output);
  }

  // int32 vin09 = 8;
  if (this->vin09() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->vin09(), output);
  }

  // int32 vin08 = 9;
  if (this->vin08() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->vin08(), output);
  }

  // int32 vin07 = 10;
  if (this->vin07() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->vin07(), output);
  }

  // int32 vin06 = 11;
  if (this->vin06() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->vin06(), output);
  }

  // int32 vin05 = 12;
  if (this->vin05() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->vin05(), output);
  }

  // int32 vin04 = 13;
  if (this->vin04() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->vin04(), output);
  }

  // int32 vin03 = 14;
  if (this->vin03() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->vin03(), output);
  }

  // int32 vin02 = 15;
  if (this->vin02() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->vin02(), output);
  }

  // int32 vin01 = 16;
  if (this->vin01() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->vin01(), output);
  }

  // int32 vin00 = 17;
  if (this->vin00() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->vin00(), output);
  }

  // int32 mux = 18;
  if (this->mux() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->mux(), output);
  }

  // int32 build = 19;
  if (this->build() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->build(), output);
  }

  // int32 my_minor = 20;
  if (this->my_minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->my_minor(), output);
  }

  // int32 my_major = 21;
  if (this->my_major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->my_major(), output);
  }

  // int32 module = 22;
  if (this->module() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->module(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Version_bt_7e)
}

size_t Version_bt_7e::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Version_bt_7e)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 vin16 = 1;
  if (this->vin16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin16());
  }

  // int32 vin15 = 2;
  if (this->vin15() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin15());
  }

  // int32 vin14 = 3;
  if (this->vin14() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin14());
  }

  // int32 vin13 = 4;
  if (this->vin13() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin13());
  }

  // int32 vin12 = 5;
  if (this->vin12() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin12());
  }

  // int32 vin11 = 6;
  if (this->vin11() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin11());
  }

  // int32 vin10 = 7;
  if (this->vin10() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin10());
  }

  // int32 vin09 = 8;
  if (this->vin09() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin09());
  }

  // int32 vin08 = 9;
  if (this->vin08() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin08());
  }

  // int32 vin07 = 10;
  if (this->vin07() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin07());
  }

  // int32 vin06 = 11;
  if (this->vin06() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin06());
  }

  // int32 vin05 = 12;
  if (this->vin05() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin05());
  }

  // int32 vin04 = 13;
  if (this->vin04() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin04());
  }

  // int32 vin03 = 14;
  if (this->vin03() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin03());
  }

  // int32 vin02 = 15;
  if (this->vin02() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin02());
  }

  // int32 vin01 = 16;
  if (this->vin01() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin01());
  }

  // int32 vin00 = 17;
  if (this->vin00() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vin00());
  }

  // int32 mux = 18;
  if (this->mux() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mux());
  }

  // int32 build = 19;
  if (this->build() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->build());
  }

  // int32 my_minor = 20;
  if (this->my_minor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->my_minor());
  }

  // int32 my_major = 21;
  if (this->my_major() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->my_major());
  }

  // int32 module = 22;
  if (this->module() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->module());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Version_bt_7e::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Version_bt_7e*>(&from));
}

void Version_bt_7e::MergeFrom(const Version_bt_7e& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Version_bt_7e)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vin16() != 0) {
    set_vin16(from.vin16());
  }
  if (from.vin15() != 0) {
    set_vin15(from.vin15());
  }
  if (from.vin14() != 0) {
    set_vin14(from.vin14());
  }
  if (from.vin13() != 0) {
    set_vin13(from.vin13());
  }
  if (from.vin12() != 0) {
    set_vin12(from.vin12());
  }
  if (from.vin11() != 0) {
    set_vin11(from.vin11());
  }
  if (from.vin10() != 0) {
    set_vin10(from.vin10());
  }
  if (from.vin09() != 0) {
    set_vin09(from.vin09());
  }
  if (from.vin08() != 0) {
    set_vin08(from.vin08());
  }
  if (from.vin07() != 0) {
    set_vin07(from.vin07());
  }
  if (from.vin06() != 0) {
    set_vin06(from.vin06());
  }
  if (from.vin05() != 0) {
    set_vin05(from.vin05());
  }
  if (from.vin04() != 0) {
    set_vin04(from.vin04());
  }
  if (from.vin03() != 0) {
    set_vin03(from.vin03());
  }
  if (from.vin02() != 0) {
    set_vin02(from.vin02());
  }
  if (from.vin01() != 0) {
    set_vin01(from.vin01());
  }
  if (from.vin00() != 0) {
    set_vin00(from.vin00());
  }
  if (from.mux() != 0) {
    set_mux(from.mux());
  }
  if (from.build() != 0) {
    set_build(from.build());
  }
  if (from.my_minor() != 0) {
    set_my_minor(from.my_minor());
  }
  if (from.my_major() != 0) {
    set_my_major(from.my_major());
  }
  if (from.module() != 0) {
    set_module(from.module());
  }
}

void Version_bt_7e::CopyFrom(const Version_bt_7e& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Version_bt_7e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Version_bt_7e::IsInitialized() const {
  return true;
}

void Version_bt_7e::Swap(Version_bt_7e* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Version_bt_7e::InternalSwap(Version_bt_7e* other) {
  using std::swap;
  swap(vin16_, other->vin16_);
  swap(vin15_, other->vin15_);
  swap(vin14_, other->vin14_);
  swap(vin13_, other->vin13_);
  swap(vin12_, other->vin12_);
  swap(vin11_, other->vin11_);
  swap(vin10_, other->vin10_);
  swap(vin09_, other->vin09_);
  swap(vin08_, other->vin08_);
  swap(vin07_, other->vin07_);
  swap(vin06_, other->vin06_);
  swap(vin05_, other->vin05_);
  swap(vin04_, other->vin04_);
  swap(vin03_, other->vin03_);
  swap(vin02_, other->vin02_);
  swap(vin01_, other->vin01_);
  swap(vin00_, other->vin00_);
  swap(mux_, other->mux_);
  swap(build_, other->build_);
  swap(my_minor_, other->my_minor_);
  swap(my_major_, other->my_major_);
  swap(module_, other->module_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Version_bt_7e::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Version_bt_7e";
}


// ===================================================================

void Misc_report_ss_7b::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Misc_report_ss_7b::kLdupFieldNumber;
const int Misc_report_ss_7b::kLdrhtFieldNumber;
const int Misc_report_ss_7b::kLdokFieldNumber;
const int Misc_report_ss_7b::kLdlftFieldNumber;
const int Misc_report_ss_7b::kLddwnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Misc_report_ss_7b::Misc_report_ss_7b()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Misc_report_ss_7b.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
}
Misc_report_ss_7b::Misc_report_ss_7b(const Misc_report_ss_7b& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ldup_, &from.ldup_,
    static_cast<size_t>(reinterpret_cast<char*>(&lddwn_) -
    reinterpret_cast<char*>(&ldup_)) + sizeof(lddwn_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
}

void Misc_report_ss_7b::SharedCtor() {
  ::memset(&ldup_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lddwn_) -
      reinterpret_cast<char*>(&ldup_)) + sizeof(lddwn_));
}

Misc_report_ss_7b::~Misc_report_ss_7b() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
  SharedDtor();
}

void Misc_report_ss_7b::SharedDtor() {
}

void Misc_report_ss_7b::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Misc_report_ss_7b& Misc_report_ss_7b::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Misc_report_ss_7b.base);
  return *internal_default_instance();
}


void Misc_report_ss_7b::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ldup_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lddwn_) -
      reinterpret_cast<char*>(&ldup_)) + sizeof(lddwn_));
  _internal_metadata_.Clear();
}

bool Misc_report_ss_7b::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdupType ldup = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ldup(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdupType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdrhtType ldrht = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ldrht(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdrhtType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdokType ldok = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ldok(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdokType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdlftType ldlft = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ldlft(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdlftType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LddwnType lddwn = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lddwn(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LddwnType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
  return false;
#undef DO_
}

void Misc_report_ss_7b::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdupType ldup = 1;
  if (this->ldup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ldup(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdrhtType ldrht = 2;
  if (this->ldrht() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ldrht(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdokType ldok = 3;
  if (this->ldok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ldok(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdlftType ldlft = 4;
  if (this->ldlft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->ldlft(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LddwnType lddwn = 5;
  if (this->lddwn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->lddwn(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
}

size_t Misc_report_ss_7b::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdupType ldup = 1;
  if (this->ldup() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ldup());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdrhtType ldrht = 2;
  if (this->ldrht() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ldrht());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdokType ldok = 3;
  if (this->ldok() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ldok());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdlftType ldlft = 4;
  if (this->ldlft() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ldlft());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LddwnType lddwn = 5;
  if (this->lddwn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lddwn());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Misc_report_ss_7b::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Misc_report_ss_7b*>(&from));
}

void Misc_report_ss_7b::MergeFrom(const Misc_report_ss_7b& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ldup() != 0) {
    set_ldup(from.ldup());
  }
  if (from.ldrht() != 0) {
    set_ldrht(from.ldrht());
  }
  if (from.ldok() != 0) {
    set_ldok(from.ldok());
  }
  if (from.ldlft() != 0) {
    set_ldlft(from.ldlft());
  }
  if (from.lddwn() != 0) {
    set_lddwn(from.lddwn());
  }
}

void Misc_report_ss_7b::CopyFrom(const Misc_report_ss_7b& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Misc_report_ss_7b::IsInitialized() const {
  return true;
}

void Misc_report_ss_7b::Swap(Misc_report_ss_7b* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Misc_report_ss_7b::InternalSwap(Misc_report_ss_7b* other) {
  using std::swap;
  swap(ldup_, other->ldup_);
  swap(ldrht_, other->ldrht_);
  swap(ldok_, other->ldok_);
  swap(ldlft_, other->ldlft_);
  swap(lddwn_, other->lddwn_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Misc_report_ss_7b::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Misc_report_ss_7b";
}


// ===================================================================

void Brake_command_60::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Brake_command_60::kAudioFieldNumber;
const int Brake_command_60::kAccFieldNumber;
const int Brake_command_60::kQuietFieldNumber;
const int Brake_command_60::kCountFieldNumber;
const int Brake_command_60::kIgnoreFieldNumber;
const int Brake_command_60::kClearFieldNumber;
const int Brake_command_60::kPcmdFieldNumber;
const int Brake_command_60::kEnFieldNumber;
const int Brake_command_60::kBcmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Brake_command_60::Brake_command_60()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Brake_command_60.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Brake_command_60)
}
Brake_command_60::Brake_command_60(const Brake_command_60& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&acc_, &from.acc_,
    static_cast<size_t>(reinterpret_cast<char*>(&bcmd_) -
    reinterpret_cast<char*>(&acc_)) + sizeof(bcmd_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Brake_command_60)
}

void Brake_command_60::SharedCtor() {
  ::memset(&acc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bcmd_) -
      reinterpret_cast<char*>(&acc_)) + sizeof(bcmd_));
}

Brake_command_60::~Brake_command_60() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Brake_command_60)
  SharedDtor();
}

void Brake_command_60::SharedDtor() {
}

void Brake_command_60::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Brake_command_60& Brake_command_60::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Brake_command_60.base);
  return *internal_default_instance();
}


void Brake_command_60::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Brake_command_60)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&acc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bcmd_) -
      reinterpret_cast<char*>(&acc_)) + sizeof(bcmd_));
  _internal_metadata_.Clear();
}

bool Brake_command_60::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Brake_command_60)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool audio = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &audio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double acc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool quiet = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &quiet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ignore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool clear = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pcmd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_command_60.EnType en = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_en(static_cast< ::Calmcar::drivers::CHASIS::Brake_command_60_EnType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_command_60.BcmdType bcmd = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bcmd(static_cast< ::Calmcar::drivers::CHASIS::Brake_command_60_BcmdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Brake_command_60)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Brake_command_60)
  return false;
#undef DO_
}

void Brake_command_60::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Brake_command_60)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool audio = 1;
  if (this->audio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->audio(), output);
  }

  // double acc = 2;
  if (this->acc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->acc(), output);
  }

  // bool quiet = 3;
  if (this->quiet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->quiet(), output);
  }

  // int32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // bool ignore = 5;
  if (this->ignore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ignore(), output);
  }

  // bool clear = 6;
  if (this->clear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->clear(), output);
  }

  // double pcmd = 7;
  if (this->pcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->pcmd(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_command_60.EnType en = 8;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->en(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_command_60.BcmdType bcmd = 9;
  if (this->bcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->bcmd(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Brake_command_60)
}

size_t Brake_command_60::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Brake_command_60)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double acc = 2;
  if (this->acc() != 0) {
    total_size += 1 + 8;
  }

  // bool audio = 1;
  if (this->audio() != 0) {
    total_size += 1 + 1;
  }

  // bool quiet = 3;
  if (this->quiet() != 0) {
    total_size += 1 + 1;
  }

  // bool ignore = 5;
  if (this->ignore() != 0) {
    total_size += 1 + 1;
  }

  // bool clear = 6;
  if (this->clear() != 0) {
    total_size += 1 + 1;
  }

  // int32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // double pcmd = 7;
  if (this->pcmd() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Brake_command_60.EnType en = 8;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->en());
  }

  // .Calmcar.drivers.CHASIS.Brake_command_60.BcmdType bcmd = 9;
  if (this->bcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Brake_command_60::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Brake_command_60*>(&from));
}

void Brake_command_60::MergeFrom(const Brake_command_60& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Brake_command_60)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.acc() != 0) {
    set_acc(from.acc());
  }
  if (from.audio() != 0) {
    set_audio(from.audio());
  }
  if (from.quiet() != 0) {
    set_quiet(from.quiet());
  }
  if (from.ignore() != 0) {
    set_ignore(from.ignore());
  }
  if (from.clear() != 0) {
    set_clear(from.clear());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.pcmd() != 0) {
    set_pcmd(from.pcmd());
  }
  if (from.en() != 0) {
    set_en(from.en());
  }
  if (from.bcmd() != 0) {
    set_bcmd(from.bcmd());
  }
}

void Brake_command_60::CopyFrom(const Brake_command_60& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Brake_command_60)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Brake_command_60::IsInitialized() const {
  return true;
}

void Brake_command_60::Swap(Brake_command_60* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Brake_command_60::InternalSwap(Brake_command_60* other) {
  using std::swap;
  swap(acc_, other->acc_);
  swap(audio_, other->audio_);
  swap(quiet_, other->quiet_);
  swap(ignore_, other->ignore_);
  swap(clear_, other->clear_);
  swap(count_, other->count_);
  swap(pcmd_, other->pcmd_);
  swap(en_, other->en_);
  swap(bcmd_, other->bcmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Brake_command_60::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Brake_command_60";
}


// ===================================================================

void Brake_report_61::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Brake_report_61::kWdcsrcFieldNumber;
const int Brake_report_61::kWdcbrkFieldNumber;
const int Brake_report_61::kDriverFieldNumber;
const int Brake_report_61::kFltwdcFieldNumber;
const int Brake_report_61::kPoFieldNumber;
const int Brake_report_61::kPiFieldNumber;
const int Brake_report_61::kPcFieldNumber;
const int Brake_report_61::kTmoutFieldNumber;
const int Brake_report_61::kFltbooFieldNumber;
const int Brake_report_61::kFlt2FieldNumber;
const int Brake_report_61::kFlt1FieldNumber;
const int Brake_report_61::kEnFieldNumber;
const int Brake_report_61::kOverrideFieldNumber;
const int Brake_report_61::kBoFieldNumber;
const int Brake_report_61::kBiFieldNumber;
const int Brake_report_61::kBcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Brake_report_61::Brake_report_61()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Brake_report_61.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Brake_report_61)
}
Brake_report_61::Brake_report_61(const Brake_report_61& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wdcsrc_, &from.wdcsrc_,
    static_cast<size_t>(reinterpret_cast<char*>(&bc_) -
    reinterpret_cast<char*>(&wdcsrc_)) + sizeof(bc_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Brake_report_61)
}

void Brake_report_61::SharedCtor() {
  ::memset(&wdcsrc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bc_) -
      reinterpret_cast<char*>(&wdcsrc_)) + sizeof(bc_));
}

Brake_report_61::~Brake_report_61() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Brake_report_61)
  SharedDtor();
}

void Brake_report_61::SharedDtor() {
}

void Brake_report_61::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Brake_report_61& Brake_report_61::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Brake_report_61.base);
  return *internal_default_instance();
}


void Brake_report_61::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Brake_report_61)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&wdcsrc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bc_) -
      reinterpret_cast<char*>(&wdcsrc_)) + sizeof(bc_));
  _internal_metadata_.Clear();
}

bool Brake_report_61::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Brake_report_61)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.CHASIS.Brake_report_61.WdcsrcType wdcsrc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_wdcsrc(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_WdcsrcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.WdcbrkType wdcbrk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_wdcbrk(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_WdcbrkType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.DriverType driver = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_driver(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_DriverType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.FltwdcType fltwdc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltwdc(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_FltwdcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double po = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &po_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pi = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.TmoutType tmout = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tmout(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_TmoutType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.FltbooType fltboo = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltboo(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_FltbooType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.Flt2Type flt2 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_flt2(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_Flt2Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.Flt1Type flt1 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_flt1(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_Flt1Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.EnType en = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_en(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_EnType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.OverrideType override = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_override(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_OverrideType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.BoType bo = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bo(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_BoType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.BiType bi = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bi(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_BiType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61.BcType bc = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bc(static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_BcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Brake_report_61)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Brake_report_61)
  return false;
#undef DO_
}

void Brake_report_61::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Brake_report_61)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.CHASIS.Brake_report_61.WdcsrcType wdcsrc = 1;
  if (this->wdcsrc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->wdcsrc(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.WdcbrkType wdcbrk = 2;
  if (this->wdcbrk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->wdcbrk(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.DriverType driver = 3;
  if (this->driver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->driver(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.FltwdcType fltwdc = 4;
  if (this->fltwdc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->fltwdc(), output);
  }

  // double po = 5;
  if (this->po() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->po(), output);
  }

  // double pi = 6;
  if (this->pi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->pi(), output);
  }

  // double pc = 7;
  if (this->pc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->pc(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.TmoutType tmout = 8;
  if (this->tmout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->tmout(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.FltbooType fltboo = 9;
  if (this->fltboo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->fltboo(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.Flt2Type flt2 = 10;
  if (this->flt2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->flt2(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.Flt1Type flt1 = 11;
  if (this->flt1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->flt1(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.EnType en = 12;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->en(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.OverrideType override = 13;
  if (this->override() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->override(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.BoType bo = 14;
  if (this->bo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->bo(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.BiType bi = 15;
  if (this->bi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->bi(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.BcType bc = 16;
  if (this->bc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->bc(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Brake_report_61)
}

size_t Brake_report_61::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Brake_report_61)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.CHASIS.Brake_report_61.WdcsrcType wdcsrc = 1;
  if (this->wdcsrc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->wdcsrc());
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.WdcbrkType wdcbrk = 2;
  if (this->wdcbrk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->wdcbrk());
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.DriverType driver = 3;
  if (this->driver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->driver());
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.FltwdcType fltwdc = 4;
  if (this->fltwdc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltwdc());
  }

  // double po = 5;
  if (this->po() != 0) {
    total_size += 1 + 8;
  }

  // double pi = 6;
  if (this->pi() != 0) {
    total_size += 1 + 8;
  }

  // double pc = 7;
  if (this->pc() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.TmoutType tmout = 8;
  if (this->tmout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tmout());
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.FltbooType fltboo = 9;
  if (this->fltboo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltboo());
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.Flt2Type flt2 = 10;
  if (this->flt2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->flt2());
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.Flt1Type flt1 = 11;
  if (this->flt1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->flt1());
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.EnType en = 12;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->en());
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.OverrideType override = 13;
  if (this->override() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->override());
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.BoType bo = 14;
  if (this->bo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bo());
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.BiType bi = 15;
  if (this->bi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bi());
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61.BcType bc = 16;
  if (this->bc() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Brake_report_61::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Brake_report_61*>(&from));
}

void Brake_report_61::MergeFrom(const Brake_report_61& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Brake_report_61)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wdcsrc() != 0) {
    set_wdcsrc(from.wdcsrc());
  }
  if (from.wdcbrk() != 0) {
    set_wdcbrk(from.wdcbrk());
  }
  if (from.driver() != 0) {
    set_driver(from.driver());
  }
  if (from.fltwdc() != 0) {
    set_fltwdc(from.fltwdc());
  }
  if (from.po() != 0) {
    set_po(from.po());
  }
  if (from.pi() != 0) {
    set_pi(from.pi());
  }
  if (from.pc() != 0) {
    set_pc(from.pc());
  }
  if (from.tmout() != 0) {
    set_tmout(from.tmout());
  }
  if (from.fltboo() != 0) {
    set_fltboo(from.fltboo());
  }
  if (from.flt2() != 0) {
    set_flt2(from.flt2());
  }
  if (from.flt1() != 0) {
    set_flt1(from.flt1());
  }
  if (from.en() != 0) {
    set_en(from.en());
  }
  if (from.override() != 0) {
    set_override(from.override());
  }
  if (from.bo() != 0) {
    set_bo(from.bo());
  }
  if (from.bi() != 0) {
    set_bi(from.bi());
  }
  if (from.bc() != 0) {
    set_bc(from.bc());
  }
}

void Brake_report_61::CopyFrom(const Brake_report_61& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Brake_report_61)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Brake_report_61::IsInitialized() const {
  return true;
}

void Brake_report_61::Swap(Brake_report_61* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Brake_report_61::InternalSwap(Brake_report_61* other) {
  using std::swap;
  swap(wdcsrc_, other->wdcsrc_);
  swap(wdcbrk_, other->wdcbrk_);
  swap(driver_, other->driver_);
  swap(fltwdc_, other->fltwdc_);
  swap(po_, other->po_);
  swap(pi_, other->pi_);
  swap(pc_, other->pc_);
  swap(tmout_, other->tmout_);
  swap(fltboo_, other->fltboo_);
  swap(flt2_, other->flt2_);
  swap(flt1_, other->flt1_);
  swap(en_, other->en_);
  swap(override_, other->override_);
  swap(bo_, other->bo_);
  swap(bi_, other->bi_);
  swap(bc_, other->bc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Brake_report_61::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Brake_report_61";
}


// ===================================================================

void Throttle_command_62::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Throttle_command_62::kQuietFieldNumber;
const int Throttle_command_62::kCountFieldNumber;
const int Throttle_command_62::kIgnoreFieldNumber;
const int Throttle_command_62::kClearFieldNumber;
const int Throttle_command_62::kPcmdFieldNumber;
const int Throttle_command_62::kEnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Throttle_command_62::Throttle_command_62()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Throttle_command_62.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Throttle_command_62)
}
Throttle_command_62::Throttle_command_62(const Throttle_command_62& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&en_) -
    reinterpret_cast<char*>(&count_)) + sizeof(en_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Throttle_command_62)
}

void Throttle_command_62::SharedCtor() {
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&en_) -
      reinterpret_cast<char*>(&count_)) + sizeof(en_));
}

Throttle_command_62::~Throttle_command_62() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Throttle_command_62)
  SharedDtor();
}

void Throttle_command_62::SharedDtor() {
}

void Throttle_command_62::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Throttle_command_62& Throttle_command_62::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Throttle_command_62.base);
  return *internal_default_instance();
}


void Throttle_command_62::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Throttle_command_62)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&en_) -
      reinterpret_cast<char*>(&count_)) + sizeof(en_));
  _internal_metadata_.Clear();
}

bool Throttle_command_62::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Throttle_command_62)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool quiet = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &quiet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ignore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool clear = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pcmd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Throttle_command_62.EnType en = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_en(static_cast< ::Calmcar::drivers::CHASIS::Throttle_command_62_EnType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Throttle_command_62)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Throttle_command_62)
  return false;
#undef DO_
}

void Throttle_command_62::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Throttle_command_62)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool quiet = 1;
  if (this->quiet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->quiet(), output);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // bool ignore = 3;
  if (this->ignore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ignore(), output);
  }

  // bool clear = 4;
  if (this->clear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->clear(), output);
  }

  // double pcmd = 5;
  if (this->pcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->pcmd(), output);
  }

  // .Calmcar.drivers.CHASIS.Throttle_command_62.EnType en = 6;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->en(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Throttle_command_62)
}

size_t Throttle_command_62::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Throttle_command_62)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // bool quiet = 1;
  if (this->quiet() != 0) {
    total_size += 1 + 1;
  }

  // bool ignore = 3;
  if (this->ignore() != 0) {
    total_size += 1 + 1;
  }

  // bool clear = 4;
  if (this->clear() != 0) {
    total_size += 1 + 1;
  }

  // double pcmd = 5;
  if (this->pcmd() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Throttle_command_62.EnType en = 6;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->en());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Throttle_command_62::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Throttle_command_62*>(&from));
}

void Throttle_command_62::MergeFrom(const Throttle_command_62& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Throttle_command_62)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.quiet() != 0) {
    set_quiet(from.quiet());
  }
  if (from.ignore() != 0) {
    set_ignore(from.ignore());
  }
  if (from.clear() != 0) {
    set_clear(from.clear());
  }
  if (from.pcmd() != 0) {
    set_pcmd(from.pcmd());
  }
  if (from.en() != 0) {
    set_en(from.en());
  }
}

void Throttle_command_62::CopyFrom(const Throttle_command_62& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Throttle_command_62)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Throttle_command_62::IsInitialized() const {
  return true;
}

void Throttle_command_62::Swap(Throttle_command_62* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Throttle_command_62::InternalSwap(Throttle_command_62* other) {
  using std::swap;
  swap(count_, other->count_);
  swap(quiet_, other->quiet_);
  swap(ignore_, other->ignore_);
  swap(clear_, other->clear_);
  swap(pcmd_, other->pcmd_);
  swap(en_, other->en_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Throttle_command_62::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Throttle_command_62";
}


// ===================================================================

void Throttle_report_63::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Throttle_report_63::kWdcsrcFieldNumber;
const int Throttle_report_63::kDriverFieldNumber;
const int Throttle_report_63::kFltwdcFieldNumber;
const int Throttle_report_63::kPoFieldNumber;
const int Throttle_report_63::kPiFieldNumber;
const int Throttle_report_63::kPcFieldNumber;
const int Throttle_report_63::kTmoutFieldNumber;
const int Throttle_report_63::kFlt2FieldNumber;
const int Throttle_report_63::kFlt1FieldNumber;
const int Throttle_report_63::kEnFieldNumber;
const int Throttle_report_63::kOverrideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Throttle_report_63::Throttle_report_63()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Throttle_report_63.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Throttle_report_63)
}
Throttle_report_63::Throttle_report_63(const Throttle_report_63& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wdcsrc_, &from.wdcsrc_,
    static_cast<size_t>(reinterpret_cast<char*>(&override_) -
    reinterpret_cast<char*>(&wdcsrc_)) + sizeof(override_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Throttle_report_63)
}

void Throttle_report_63::SharedCtor() {
  ::memset(&wdcsrc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&override_) -
      reinterpret_cast<char*>(&wdcsrc_)) + sizeof(override_));
}

Throttle_report_63::~Throttle_report_63() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Throttle_report_63)
  SharedDtor();
}

void Throttle_report_63::SharedDtor() {
}

void Throttle_report_63::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Throttle_report_63& Throttle_report_63::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Throttle_report_63.base);
  return *internal_default_instance();
}


void Throttle_report_63::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Throttle_report_63)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&wdcsrc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&override_) -
      reinterpret_cast<char*>(&wdcsrc_)) + sizeof(override_));
  _internal_metadata_.Clear();
}

bool Throttle_report_63::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Throttle_report_63)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.CHASIS.Throttle_report_63.WdcsrcType wdcsrc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_wdcsrc(static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_WdcsrcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Throttle_report_63.DriverType driver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_driver(static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_DriverType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Throttle_report_63.FltwdcType fltwdc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltwdc(static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_FltwdcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double po = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &po_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pi = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Throttle_report_63.TmoutType tmout = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tmout(static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_TmoutType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Throttle_report_63.Flt2Type flt2 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_flt2(static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_Flt2Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Throttle_report_63.Flt1Type flt1 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_flt1(static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_Flt1Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Throttle_report_63.EnType en = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_en(static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_EnType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Throttle_report_63.OverrideType override = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_override(static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_OverrideType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Throttle_report_63)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Throttle_report_63)
  return false;
#undef DO_
}

void Throttle_report_63::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Throttle_report_63)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.CHASIS.Throttle_report_63.WdcsrcType wdcsrc = 1;
  if (this->wdcsrc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->wdcsrc(), output);
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.DriverType driver = 2;
  if (this->driver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->driver(), output);
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.FltwdcType fltwdc = 3;
  if (this->fltwdc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->fltwdc(), output);
  }

  // double po = 4;
  if (this->po() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->po(), output);
  }

  // double pi = 5;
  if (this->pi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->pi(), output);
  }

  // double pc = 6;
  if (this->pc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->pc(), output);
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.TmoutType tmout = 7;
  if (this->tmout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->tmout(), output);
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.Flt2Type flt2 = 8;
  if (this->flt2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->flt2(), output);
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.Flt1Type flt1 = 9;
  if (this->flt1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->flt1(), output);
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.EnType en = 10;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->en(), output);
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.OverrideType override = 11;
  if (this->override() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->override(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Throttle_report_63)
}

size_t Throttle_report_63::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Throttle_report_63)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.CHASIS.Throttle_report_63.WdcsrcType wdcsrc = 1;
  if (this->wdcsrc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->wdcsrc());
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.DriverType driver = 2;
  if (this->driver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->driver());
  }

  // double po = 4;
  if (this->po() != 0) {
    total_size += 1 + 8;
  }

  // double pi = 5;
  if (this->pi() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.FltwdcType fltwdc = 3;
  if (this->fltwdc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltwdc());
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.TmoutType tmout = 7;
  if (this->tmout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tmout());
  }

  // double pc = 6;
  if (this->pc() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.Flt2Type flt2 = 8;
  if (this->flt2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->flt2());
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.Flt1Type flt1 = 9;
  if (this->flt1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->flt1());
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.EnType en = 10;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->en());
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63.OverrideType override = 11;
  if (this->override() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->override());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Throttle_report_63::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Throttle_report_63*>(&from));
}

void Throttle_report_63::MergeFrom(const Throttle_report_63& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Throttle_report_63)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wdcsrc() != 0) {
    set_wdcsrc(from.wdcsrc());
  }
  if (from.driver() != 0) {
    set_driver(from.driver());
  }
  if (from.po() != 0) {
    set_po(from.po());
  }
  if (from.pi() != 0) {
    set_pi(from.pi());
  }
  if (from.fltwdc() != 0) {
    set_fltwdc(from.fltwdc());
  }
  if (from.tmout() != 0) {
    set_tmout(from.tmout());
  }
  if (from.pc() != 0) {
    set_pc(from.pc());
  }
  if (from.flt2() != 0) {
    set_flt2(from.flt2());
  }
  if (from.flt1() != 0) {
    set_flt1(from.flt1());
  }
  if (from.en() != 0) {
    set_en(from.en());
  }
  if (from.override() != 0) {
    set_override(from.override());
  }
}

void Throttle_report_63::CopyFrom(const Throttle_report_63& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Throttle_report_63)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Throttle_report_63::IsInitialized() const {
  return true;
}

void Throttle_report_63::Swap(Throttle_report_63* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Throttle_report_63::InternalSwap(Throttle_report_63* other) {
  using std::swap;
  swap(wdcsrc_, other->wdcsrc_);
  swap(driver_, other->driver_);
  swap(po_, other->po_);
  swap(pi_, other->pi_);
  swap(fltwdc_, other->fltwdc_);
  swap(tmout_, other->tmout_);
  swap(pc_, other->pc_);
  swap(flt2_, other->flt2_);
  swap(flt1_, other->flt1_);
  swap(en_, other->en_);
  swap(override_, other->override_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Throttle_report_63::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Throttle_report_63";
}


// ===================================================================

void Steering_command_64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Steering_command_64::kQuietFieldNumber;
const int Steering_command_64::kCountFieldNumber;
const int Steering_command_64::kIgnoreFieldNumber;
const int Steering_command_64::kSvelFieldNumber;
const int Steering_command_64::kClearFieldNumber;
const int Steering_command_64::kEnFieldNumber;
const int Steering_command_64::kScmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Steering_command_64::Steering_command_64()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Steering_command_64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Steering_command_64)
}
Steering_command_64::Steering_command_64(const Steering_command_64& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&en_) -
    reinterpret_cast<char*>(&count_)) + sizeof(en_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Steering_command_64)
}

void Steering_command_64::SharedCtor() {
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&en_) -
      reinterpret_cast<char*>(&count_)) + sizeof(en_));
}

Steering_command_64::~Steering_command_64() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Steering_command_64)
  SharedDtor();
}

void Steering_command_64::SharedDtor() {
}

void Steering_command_64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Steering_command_64& Steering_command_64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Steering_command_64.base);
  return *internal_default_instance();
}


void Steering_command_64::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Steering_command_64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&en_) -
      reinterpret_cast<char*>(&count_)) + sizeof(en_));
  _internal_metadata_.Clear();
}

bool Steering_command_64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Steering_command_64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool quiet = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &quiet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ignore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double svel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &svel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool clear = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Steering_command_64.EnType en = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_en(static_cast< ::Calmcar::drivers::CHASIS::Steering_command_64_EnType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double scmd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &scmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Steering_command_64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Steering_command_64)
  return false;
#undef DO_
}

void Steering_command_64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Steering_command_64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool quiet = 1;
  if (this->quiet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->quiet(), output);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // bool ignore = 3;
  if (this->ignore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ignore(), output);
  }

  // double svel = 4;
  if (this->svel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->svel(), output);
  }

  // bool clear = 5;
  if (this->clear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->clear(), output);
  }

  // .Calmcar.drivers.CHASIS.Steering_command_64.EnType en = 6;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->en(), output);
  }

  // double scmd = 7;
  if (this->scmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->scmd(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Steering_command_64)
}

size_t Steering_command_64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Steering_command_64)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // bool quiet = 1;
  if (this->quiet() != 0) {
    total_size += 1 + 1;
  }

  // bool ignore = 3;
  if (this->ignore() != 0) {
    total_size += 1 + 1;
  }

  // bool clear = 5;
  if (this->clear() != 0) {
    total_size += 1 + 1;
  }

  // double svel = 4;
  if (this->svel() != 0) {
    total_size += 1 + 8;
  }

  // double scmd = 7;
  if (this->scmd() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Steering_command_64.EnType en = 6;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->en());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Steering_command_64::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Steering_command_64*>(&from));
}

void Steering_command_64::MergeFrom(const Steering_command_64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Steering_command_64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.quiet() != 0) {
    set_quiet(from.quiet());
  }
  if (from.ignore() != 0) {
    set_ignore(from.ignore());
  }
  if (from.clear() != 0) {
    set_clear(from.clear());
  }
  if (from.svel() != 0) {
    set_svel(from.svel());
  }
  if (from.scmd() != 0) {
    set_scmd(from.scmd());
  }
  if (from.en() != 0) {
    set_en(from.en());
  }
}

void Steering_command_64::CopyFrom(const Steering_command_64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Steering_command_64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Steering_command_64::IsInitialized() const {
  return true;
}

void Steering_command_64::Swap(Steering_command_64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Steering_command_64::InternalSwap(Steering_command_64* other) {
  using std::swap;
  swap(count_, other->count_);
  swap(quiet_, other->quiet_);
  swap(ignore_, other->ignore_);
  swap(clear_, other->clear_);
  swap(svel_, other->svel_);
  swap(scmd_, other->scmd_);
  swap(en_, other->en_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Steering_command_64::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Steering_command_64";
}


// ===================================================================

void Steering_report_65::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Steering_report_65::kFltwdcFieldNumber;
const int Steering_report_65::kFltcalFieldNumber;
const int Steering_report_65::kTmoutFieldNumber;
const int Steering_report_65::kTorqueFieldNumber;
const int Steering_report_65::kSpeedFieldNumber;
const int Steering_report_65::kFlt2FieldNumber;
const int Steering_report_65::kFlt1FieldNumber;
const int Steering_report_65::kEnFieldNumber;
const int Steering_report_65::kOverrideFieldNumber;
const int Steering_report_65::kCmdFieldNumber;
const int Steering_report_65::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Steering_report_65::Steering_report_65()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Steering_report_65.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Steering_report_65)
}
Steering_report_65::Steering_report_65(const Steering_report_65& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fltwdc_, &from.fltwdc_,
    static_cast<size_t>(reinterpret_cast<char*>(&override_) -
    reinterpret_cast<char*>(&fltwdc_)) + sizeof(override_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Steering_report_65)
}

void Steering_report_65::SharedCtor() {
  ::memset(&fltwdc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&override_) -
      reinterpret_cast<char*>(&fltwdc_)) + sizeof(override_));
}

Steering_report_65::~Steering_report_65() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Steering_report_65)
  SharedDtor();
}

void Steering_report_65::SharedDtor() {
}

void Steering_report_65::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Steering_report_65& Steering_report_65::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Steering_report_65.base);
  return *internal_default_instance();
}


void Steering_report_65::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Steering_report_65)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fltwdc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&override_) -
      reinterpret_cast<char*>(&fltwdc_)) + sizeof(override_));
  _internal_metadata_.Clear();
}

bool Steering_report_65::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Steering_report_65)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.CHASIS.Steering_report_65.FltwdcType fltwdc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltwdc(static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_FltwdcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Steering_report_65.FltcalType fltcal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltcal(static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_FltcalType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Steering_report_65.TmoutType tmout = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tmout(static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_TmoutType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double torque = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &torque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Steering_report_65.Flt2Type flt2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_flt2(static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_Flt2Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Steering_report_65.Flt1Type flt1 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_flt1(static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_Flt1Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Steering_report_65.EnType en = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_en(static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_EnType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Steering_report_65.OverrideType override = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_override(static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_OverrideType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cmd = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double angle = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Steering_report_65)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Steering_report_65)
  return false;
#undef DO_
}

void Steering_report_65::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Steering_report_65)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.CHASIS.Steering_report_65.FltwdcType fltwdc = 1;
  if (this->fltwdc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->fltwdc(), output);
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.FltcalType fltcal = 2;
  if (this->fltcal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->fltcal(), output);
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.TmoutType tmout = 3;
  if (this->tmout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->tmout(), output);
  }

  // double torque = 4;
  if (this->torque() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->torque(), output);
  }

  // double speed = 5;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->speed(), output);
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.Flt2Type flt2 = 6;
  if (this->flt2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->flt2(), output);
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.Flt1Type flt1 = 7;
  if (this->flt1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->flt1(), output);
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.EnType en = 8;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->en(), output);
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.OverrideType override = 9;
  if (this->override() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->override(), output);
  }

  // double cmd = 10;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->cmd(), output);
  }

  // double angle = 11;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->angle(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Steering_report_65)
}

size_t Steering_report_65::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Steering_report_65)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.CHASIS.Steering_report_65.FltwdcType fltwdc = 1;
  if (this->fltwdc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltwdc());
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.FltcalType fltcal = 2;
  if (this->fltcal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltcal());
  }

  // double torque = 4;
  if (this->torque() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.TmoutType tmout = 3;
  if (this->tmout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tmout());
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.Flt2Type flt2 = 6;
  if (this->flt2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->flt2());
  }

  // double speed = 5;
  if (this->speed() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.Flt1Type flt1 = 7;
  if (this->flt1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->flt1());
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.EnType en = 8;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->en());
  }

  // double cmd = 10;
  if (this->cmd() != 0) {
    total_size += 1 + 8;
  }

  // double angle = 11;
  if (this->angle() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65.OverrideType override = 9;
  if (this->override() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->override());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Steering_report_65::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Steering_report_65*>(&from));
}

void Steering_report_65::MergeFrom(const Steering_report_65& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Steering_report_65)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fltwdc() != 0) {
    set_fltwdc(from.fltwdc());
  }
  if (from.fltcal() != 0) {
    set_fltcal(from.fltcal());
  }
  if (from.torque() != 0) {
    set_torque(from.torque());
  }
  if (from.tmout() != 0) {
    set_tmout(from.tmout());
  }
  if (from.flt2() != 0) {
    set_flt2(from.flt2());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.flt1() != 0) {
    set_flt1(from.flt1());
  }
  if (from.en() != 0) {
    set_en(from.en());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.override() != 0) {
    set_override(from.override());
  }
}

void Steering_report_65::CopyFrom(const Steering_report_65& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Steering_report_65)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Steering_report_65::IsInitialized() const {
  return true;
}

void Steering_report_65::Swap(Steering_report_65* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Steering_report_65::InternalSwap(Steering_report_65* other) {
  using std::swap;
  swap(fltwdc_, other->fltwdc_);
  swap(fltcal_, other->fltcal_);
  swap(torque_, other->torque_);
  swap(tmout_, other->tmout_);
  swap(flt2_, other->flt2_);
  swap(speed_, other->speed_);
  swap(flt1_, other->flt1_);
  swap(en_, other->en_);
  swap(cmd_, other->cmd_);
  swap(angle_, other->angle_);
  swap(override_, other->override_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Steering_report_65::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Steering_report_65";
}


// ===================================================================

void Gear_command_66::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gear_command_66::kEnFieldNumber;
const int Gear_command_66::kGcmdFieldNumber;
const int Gear_command_66::kClearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gear_command_66::Gear_command_66()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Gear_command_66.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Gear_command_66)
}
Gear_command_66::Gear_command_66(const Gear_command_66& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&en_, &from.en_,
    static_cast<size_t>(reinterpret_cast<char*>(&clear_) -
    reinterpret_cast<char*>(&en_)) + sizeof(clear_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Gear_command_66)
}

void Gear_command_66::SharedCtor() {
  ::memset(&en_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_) -
      reinterpret_cast<char*>(&en_)) + sizeof(clear_));
}

Gear_command_66::~Gear_command_66() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Gear_command_66)
  SharedDtor();
}

void Gear_command_66::SharedDtor() {
}

void Gear_command_66::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gear_command_66& Gear_command_66::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Gear_command_66.base);
  return *internal_default_instance();
}


void Gear_command_66::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Gear_command_66)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&en_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_) -
      reinterpret_cast<char*>(&en_)) + sizeof(clear_));
  _internal_metadata_.Clear();
}

bool Gear_command_66::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Gear_command_66)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.CHASIS.Gear_command_66.EnType en = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_en(static_cast< ::Calmcar::drivers::CHASIS::Gear_command_66_EnType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gear_command_66.GcmdType gcmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gcmd(static_cast< ::Calmcar::drivers::CHASIS::Gear_command_66_GcmdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool clear = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Gear_command_66)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Gear_command_66)
  return false;
#undef DO_
}

void Gear_command_66::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Gear_command_66)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.CHASIS.Gear_command_66.EnType en = 1;
  if (this->en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->en(), output);
  }

  // .Calmcar.drivers.CHASIS.Gear_command_66.GcmdType gcmd = 2;
  if (this->gcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->gcmd(), output);
  }

  // bool clear = 3;
  if (this->clear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->clear(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Gear_command_66)
}

size_t Gear_command_66::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Gear_command_66)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.CHASIS.Gear_command_66.EnType en = 1;
  if (this->en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->en());
  }

  // .Calmcar.drivers.CHASIS.Gear_command_66.GcmdType gcmd = 2;
  if (this->gcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gcmd());
  }

  // bool clear = 3;
  if (this->clear() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gear_command_66::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gear_command_66*>(&from));
}

void Gear_command_66::MergeFrom(const Gear_command_66& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Gear_command_66)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.en() != 0) {
    set_en(from.en());
  }
  if (from.gcmd() != 0) {
    set_gcmd(from.gcmd());
  }
  if (from.clear() != 0) {
    set_clear(from.clear());
  }
}

void Gear_command_66::CopyFrom(const Gear_command_66& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Gear_command_66)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gear_command_66::IsInitialized() const {
  return true;
}

void Gear_command_66::Swap(Gear_command_66* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gear_command_66::InternalSwap(Gear_command_66* other) {
  using std::swap;
  swap(en_, other->en_);
  swap(gcmd_, other->gcmd_);
  swap(clear_, other->clear_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gear_command_66::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Gear_command_66";
}


// ===================================================================

void Gear_report_67::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gear_report_67::kAccStateFieldNumber;
const int Gear_report_67::kRejectFieldNumber;
const int Gear_report_67::kStateFieldNumber;
const int Gear_report_67::kFltbusFieldNumber;
const int Gear_report_67::kDriverFieldNumber;
const int Gear_report_67::kCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gear_report_67::Gear_report_67()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Gear_report_67.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Gear_report_67)
}
Gear_report_67::Gear_report_67(const Gear_report_67& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&acc_state_, &from.acc_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&acc_state_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Gear_report_67)
}

void Gear_report_67::SharedCtor() {
  ::memset(&acc_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmd_) -
      reinterpret_cast<char*>(&acc_state_)) + sizeof(cmd_));
}

Gear_report_67::~Gear_report_67() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Gear_report_67)
  SharedDtor();
}

void Gear_report_67::SharedDtor() {
}

void Gear_report_67::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gear_report_67& Gear_report_67::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Gear_report_67.base);
  return *internal_default_instance();
}


void Gear_report_67::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Gear_report_67)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&acc_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmd_) -
      reinterpret_cast<char*>(&acc_state_)) + sizeof(cmd_));
  _internal_metadata_.Clear();
}

bool Gear_report_67::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Gear_report_67)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 acc_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &acc_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gear_report_67.RejectType reject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reject(static_cast< ::Calmcar::drivers::CHASIS::Gear_report_67_RejectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gear_report_67.StateType state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::Calmcar::drivers::CHASIS::Gear_report_67_StateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gear_report_67.FltbusType fltbus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltbus(static_cast< ::Calmcar::drivers::CHASIS::Gear_report_67_FltbusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gear_report_67.DriverType driver = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_driver(static_cast< ::Calmcar::drivers::CHASIS::Gear_report_67_DriverType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gear_report_67.CmdType cmd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd(static_cast< ::Calmcar::drivers::CHASIS::Gear_report_67_CmdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Gear_report_67)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Gear_report_67)
  return false;
#undef DO_
}

void Gear_report_67::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Gear_report_67)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 acc_state = 1;
  if (this->acc_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->acc_state(), output);
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67.RejectType reject = 2;
  if (this->reject() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reject(), output);
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67.StateType state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67.FltbusType fltbus = 4;
  if (this->fltbus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->fltbus(), output);
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67.DriverType driver = 5;
  if (this->driver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->driver(), output);
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67.CmdType cmd = 6;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->cmd(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Gear_report_67)
}

size_t Gear_report_67::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Gear_report_67)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 acc_state = 1;
  if (this->acc_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->acc_state());
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67.RejectType reject = 2;
  if (this->reject() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reject());
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67.StateType state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67.FltbusType fltbus = 4;
  if (this->fltbus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltbus());
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67.DriverType driver = 5;
  if (this->driver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->driver());
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67.CmdType cmd = 6;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gear_report_67::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gear_report_67*>(&from));
}

void Gear_report_67::MergeFrom(const Gear_report_67& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Gear_report_67)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.acc_state() != 0) {
    set_acc_state(from.acc_state());
  }
  if (from.reject() != 0) {
    set_reject(from.reject());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.fltbus() != 0) {
    set_fltbus(from.fltbus());
  }
  if (from.driver() != 0) {
    set_driver(from.driver());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
}

void Gear_report_67::CopyFrom(const Gear_report_67& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Gear_report_67)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gear_report_67::IsInitialized() const {
  return true;
}

void Gear_report_67::Swap(Gear_report_67* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gear_report_67::InternalSwap(Gear_report_67* other) {
  using std::swap;
  swap(acc_state_, other->acc_state_);
  swap(reject_, other->reject_);
  swap(state_, other->state_);
  swap(fltbus_, other->fltbus_);
  swap(driver_, other->driver_);
  swap(cmd_, other->cmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gear_report_67::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Gear_report_67";
}


// ===================================================================

void Turnsignal_command_68::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Turnsignal_command_68::kTrncmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Turnsignal_command_68::Turnsignal_command_68()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Turnsignal_command_68.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Turnsignal_command_68)
}
Turnsignal_command_68::Turnsignal_command_68(const Turnsignal_command_68& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trncmd_ = from.trncmd_;
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Turnsignal_command_68)
}

void Turnsignal_command_68::SharedCtor() {
  trncmd_ = 0;
}

Turnsignal_command_68::~Turnsignal_command_68() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Turnsignal_command_68)
  SharedDtor();
}

void Turnsignal_command_68::SharedDtor() {
}

void Turnsignal_command_68::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Turnsignal_command_68& Turnsignal_command_68::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Turnsignal_command_68.base);
  return *internal_default_instance();
}


void Turnsignal_command_68::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Turnsignal_command_68)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trncmd_ = 0;
  _internal_metadata_.Clear();
}

bool Turnsignal_command_68::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Turnsignal_command_68)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.CHASIS.Turnsignal_command_68.TrncmdType trncmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_trncmd(static_cast< ::Calmcar::drivers::CHASIS::Turnsignal_command_68_TrncmdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Turnsignal_command_68)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Turnsignal_command_68)
  return false;
#undef DO_
}

void Turnsignal_command_68::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Turnsignal_command_68)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.CHASIS.Turnsignal_command_68.TrncmdType trncmd = 1;
  if (this->trncmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->trncmd(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Turnsignal_command_68)
}

size_t Turnsignal_command_68::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Turnsignal_command_68)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.CHASIS.Turnsignal_command_68.TrncmdType trncmd = 1;
  if (this->trncmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trncmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Turnsignal_command_68::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Turnsignal_command_68*>(&from));
}

void Turnsignal_command_68::MergeFrom(const Turnsignal_command_68& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Turnsignal_command_68)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trncmd() != 0) {
    set_trncmd(from.trncmd());
  }
}

void Turnsignal_command_68::CopyFrom(const Turnsignal_command_68& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Turnsignal_command_68)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Turnsignal_command_68::IsInitialized() const {
  return true;
}

void Turnsignal_command_68::Swap(Turnsignal_command_68* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Turnsignal_command_68::InternalSwap(Turnsignal_command_68* other) {
  using std::swap;
  swap(trncmd_, other->trncmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Turnsignal_command_68::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Turnsignal_command_68";
}


// ===================================================================

void Misc_report_69::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Misc_report_69::kLdupFieldNumber;
const int Misc_report_69::kLdrhtFieldNumber;
const int Misc_report_69::kLdokFieldNumber;
const int Misc_report_69::kLdlftFieldNumber;
const int Misc_report_69::kLddwnFieldNumber;
const int Misc_report_69::kCnclFieldNumber;
const int Misc_report_69::kResFieldNumber;
const int Misc_report_69::kOnFieldNumber;
const int Misc_report_69::kOffFieldNumber;
const int Misc_report_69::kBeltpFieldNumber;
const int Misc_report_69::kBeltdFieldNumber;
const int Misc_report_69::kPabagFieldNumber;
const int Misc_report_69::kPdectFieldNumber;
const int Misc_report_69::kTrunkFieldNumber;
const int Misc_report_69::kHoodFieldNumber;
const int Misc_report_69::kDoorrFieldNumber;
const int Misc_report_69::kDoorpFieldNumber;
const int Misc_report_69::kDoorlFieldNumber;
const int Misc_report_69::kDoordFieldNumber;
const int Misc_report_69::kWiperFieldNumber;
const int Misc_report_69::kTrnstatFieldNumber;
const int Misc_report_69::kSincFieldNumber;
const int Misc_report_69::kSdecFieldNumber;
const int Misc_report_69::kOnoffFieldNumber;
const int Misc_report_69::kLkaenFieldNumber;
const int Misc_report_69::kHibeamFieldNumber;
const int Misc_report_69::kGincFieldNumber;
const int Misc_report_69::kGdecFieldNumber;
const int Misc_report_69::kFltbusFieldNumber;
const int Misc_report_69::kRescnclFieldNumber;
const int Misc_report_69::kAmbientFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Misc_report_69::Misc_report_69()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Misc_report_69.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Misc_report_69)
}
Misc_report_69::Misc_report_69(const Misc_report_69& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ldup_, &from.ldup_,
    static_cast<size_t>(reinterpret_cast<char*>(&ambient_) -
    reinterpret_cast<char*>(&ldup_)) + sizeof(ambient_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Misc_report_69)
}

void Misc_report_69::SharedCtor() {
  ::memset(&ldup_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ambient_) -
      reinterpret_cast<char*>(&ldup_)) + sizeof(ambient_));
}

Misc_report_69::~Misc_report_69() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Misc_report_69)
  SharedDtor();
}

void Misc_report_69::SharedDtor() {
}

void Misc_report_69::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Misc_report_69& Misc_report_69::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Misc_report_69.base);
  return *internal_default_instance();
}


void Misc_report_69::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Misc_report_69)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ldup_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ambient_) -
      reinterpret_cast<char*>(&ldup_)) + sizeof(ambient_));
  _internal_metadata_.Clear();
}

bool Misc_report_69::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Misc_report_69)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.CHASIS.Misc_report_69.LdupType ldup = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ldup(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LdupType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.LdrhtType ldrht = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ldrht(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LdrhtType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.LdokType ldok = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ldok(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LdokType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.LdlftType ldlft = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ldlft(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LdlftType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.LddwnType lddwn = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lddwn(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LddwnType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.CnclType cncl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cncl(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_CnclType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.ResType res = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_res(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_ResType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.OnType on = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_on(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_OnType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.OffType off = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_off(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_OffType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.BeltpType beltp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_beltp(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_BeltpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.BeltdType beltd = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_beltd(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_BeltdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.PabagType pabag = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pabag(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_PabagType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.PdectType pdect = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pdect(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_PdectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.TrunkType trunk = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_trunk(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_TrunkType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.HoodType hood = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hood(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_HoodType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.DoorrType doorr = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_doorr(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_DoorrType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.DoorpType doorp = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_doorp(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_DoorpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.DoorlType doorl = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_doorl(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_DoorlType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.DoordType doord = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_doord(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_DoordType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.WiperType wiper = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_wiper(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_WiperType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.TrnstatType trnstat = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_trnstat(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_TrnstatType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.SincType sinc = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sinc(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_SincType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.SdecType sdec = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sdec(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_SdecType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.OnoffType onoff = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_onoff(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_OnoffType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.LkaenType lkaen = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lkaen(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LkaenType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.HibeamType hibeam = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hibeam(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_HibeamType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.GincType ginc = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ginc(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_GincType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.GdecType gdec = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gdec(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_GdecType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.FltbusType fltbus = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltbus(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_FltbusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.RescnclType rescncl = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rescncl(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_RescnclType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69.AmbientType ambient = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ambient(static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_AmbientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Misc_report_69)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Misc_report_69)
  return false;
#undef DO_
}

void Misc_report_69::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Misc_report_69)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdupType ldup = 1;
  if (this->ldup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ldup(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdrhtType ldrht = 2;
  if (this->ldrht() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ldrht(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdokType ldok = 3;
  if (this->ldok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ldok(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdlftType ldlft = 4;
  if (this->ldlft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->ldlft(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.LddwnType lddwn = 5;
  if (this->lddwn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->lddwn(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.CnclType cncl = 6;
  if (this->cncl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->cncl(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.ResType res = 7;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->res(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.OnType on = 8;
  if (this->on() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->on(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.OffType off = 9;
  if (this->off() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->off(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.BeltpType beltp = 10;
  if (this->beltp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->beltp(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.BeltdType beltd = 11;
  if (this->beltd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->beltd(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.PabagType pabag = 12;
  if (this->pabag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->pabag(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.PdectType pdect = 13;
  if (this->pdect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->pdect(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.TrunkType trunk = 14;
  if (this->trunk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->trunk(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.HoodType hood = 15;
  if (this->hood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->hood(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoorrType doorr = 16;
  if (this->doorr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->doorr(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoorpType doorp = 17;
  if (this->doorp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->doorp(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoorlType doorl = 18;
  if (this->doorl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      18, this->doorl(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoordType doord = 19;
  if (this->doord() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      19, this->doord(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.WiperType wiper = 20;
  if (this->wiper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      20, this->wiper(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.TrnstatType trnstat = 21;
  if (this->trnstat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->trnstat(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.SincType sinc = 22;
  if (this->sinc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->sinc(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.SdecType sdec = 23;
  if (this->sdec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      23, this->sdec(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.OnoffType onoff = 24;
  if (this->onoff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      24, this->onoff(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.LkaenType lkaen = 25;
  if (this->lkaen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      25, this->lkaen(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.HibeamType hibeam = 26;
  if (this->hibeam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      26, this->hibeam(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.GincType ginc = 27;
  if (this->ginc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      27, this->ginc(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.GdecType gdec = 28;
  if (this->gdec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      28, this->gdec(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.FltbusType fltbus = 29;
  if (this->fltbus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      29, this->fltbus(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.RescnclType rescncl = 30;
  if (this->rescncl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      30, this->rescncl(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.AmbientType ambient = 31;
  if (this->ambient() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      31, this->ambient(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Misc_report_69)
}

size_t Misc_report_69::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Misc_report_69)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdupType ldup = 1;
  if (this->ldup() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ldup());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdrhtType ldrht = 2;
  if (this->ldrht() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ldrht());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdokType ldok = 3;
  if (this->ldok() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ldok());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdlftType ldlft = 4;
  if (this->ldlft() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ldlft());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.LddwnType lddwn = 5;
  if (this->lddwn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lddwn());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.CnclType cncl = 6;
  if (this->cncl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cncl());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.ResType res = 7;
  if (this->res() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.OnType on = 8;
  if (this->on() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->on());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.OffType off = 9;
  if (this->off() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->off());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.BeltpType beltp = 10;
  if (this->beltp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->beltp());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.BeltdType beltd = 11;
  if (this->beltd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->beltd());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.PabagType pabag = 12;
  if (this->pabag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pabag());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.PdectType pdect = 13;
  if (this->pdect() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pdect());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.TrunkType trunk = 14;
  if (this->trunk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trunk());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.HoodType hood = 15;
  if (this->hood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hood());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoorrType doorr = 16;
  if (this->doorr() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->doorr());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoorpType doorp = 17;
  if (this->doorp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->doorp());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoorlType doorl = 18;
  if (this->doorl() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->doorl());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoordType doord = 19;
  if (this->doord() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->doord());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.WiperType wiper = 20;
  if (this->wiper() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->wiper());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.TrnstatType trnstat = 21;
  if (this->trnstat() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trnstat());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.SincType sinc = 22;
  if (this->sinc() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sinc());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.SdecType sdec = 23;
  if (this->sdec() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sdec());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.OnoffType onoff = 24;
  if (this->onoff() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->onoff());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.LkaenType lkaen = 25;
  if (this->lkaen() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lkaen());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.HibeamType hibeam = 26;
  if (this->hibeam() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hibeam());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.GincType ginc = 27;
  if (this->ginc() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ginc());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.GdecType gdec = 28;
  if (this->gdec() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gdec());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.FltbusType fltbus = 29;
  if (this->fltbus() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltbus());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.RescnclType rescncl = 30;
  if (this->rescncl() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rescncl());
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69.AmbientType ambient = 31;
  if (this->ambient() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ambient());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Misc_report_69::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Misc_report_69*>(&from));
}

void Misc_report_69::MergeFrom(const Misc_report_69& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Misc_report_69)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ldup() != 0) {
    set_ldup(from.ldup());
  }
  if (from.ldrht() != 0) {
    set_ldrht(from.ldrht());
  }
  if (from.ldok() != 0) {
    set_ldok(from.ldok());
  }
  if (from.ldlft() != 0) {
    set_ldlft(from.ldlft());
  }
  if (from.lddwn() != 0) {
    set_lddwn(from.lddwn());
  }
  if (from.cncl() != 0) {
    set_cncl(from.cncl());
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
  if (from.on() != 0) {
    set_on(from.on());
  }
  if (from.off() != 0) {
    set_off(from.off());
  }
  if (from.beltp() != 0) {
    set_beltp(from.beltp());
  }
  if (from.beltd() != 0) {
    set_beltd(from.beltd());
  }
  if (from.pabag() != 0) {
    set_pabag(from.pabag());
  }
  if (from.pdect() != 0) {
    set_pdect(from.pdect());
  }
  if (from.trunk() != 0) {
    set_trunk(from.trunk());
  }
  if (from.hood() != 0) {
    set_hood(from.hood());
  }
  if (from.doorr() != 0) {
    set_doorr(from.doorr());
  }
  if (from.doorp() != 0) {
    set_doorp(from.doorp());
  }
  if (from.doorl() != 0) {
    set_doorl(from.doorl());
  }
  if (from.doord() != 0) {
    set_doord(from.doord());
  }
  if (from.wiper() != 0) {
    set_wiper(from.wiper());
  }
  if (from.trnstat() != 0) {
    set_trnstat(from.trnstat());
  }
  if (from.sinc() != 0) {
    set_sinc(from.sinc());
  }
  if (from.sdec() != 0) {
    set_sdec(from.sdec());
  }
  if (from.onoff() != 0) {
    set_onoff(from.onoff());
  }
  if (from.lkaen() != 0) {
    set_lkaen(from.lkaen());
  }
  if (from.hibeam() != 0) {
    set_hibeam(from.hibeam());
  }
  if (from.ginc() != 0) {
    set_ginc(from.ginc());
  }
  if (from.gdec() != 0) {
    set_gdec(from.gdec());
  }
  if (from.fltbus() != 0) {
    set_fltbus(from.fltbus());
  }
  if (from.rescncl() != 0) {
    set_rescncl(from.rescncl());
  }
  if (from.ambient() != 0) {
    set_ambient(from.ambient());
  }
}

void Misc_report_69::CopyFrom(const Misc_report_69& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Misc_report_69)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Misc_report_69::IsInitialized() const {
  return true;
}

void Misc_report_69::Swap(Misc_report_69* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Misc_report_69::InternalSwap(Misc_report_69* other) {
  using std::swap;
  swap(ldup_, other->ldup_);
  swap(ldrht_, other->ldrht_);
  swap(ldok_, other->ldok_);
  swap(ldlft_, other->ldlft_);
  swap(lddwn_, other->lddwn_);
  swap(cncl_, other->cncl_);
  swap(res_, other->res_);
  swap(on_, other->on_);
  swap(off_, other->off_);
  swap(beltp_, other->beltp_);
  swap(beltd_, other->beltd_);
  swap(pabag_, other->pabag_);
  swap(pdect_, other->pdect_);
  swap(trunk_, other->trunk_);
  swap(hood_, other->hood_);
  swap(doorr_, other->doorr_);
  swap(doorp_, other->doorp_);
  swap(doorl_, other->doorl_);
  swap(doord_, other->doord_);
  swap(wiper_, other->wiper_);
  swap(trnstat_, other->trnstat_);
  swap(sinc_, other->sinc_);
  swap(sdec_, other->sdec_);
  swap(onoff_, other->onoff_);
  swap(lkaen_, other->lkaen_);
  swap(hibeam_, other->hibeam_);
  swap(ginc_, other->ginc_);
  swap(gdec_, other->gdec_);
  swap(fltbus_, other->fltbus_);
  swap(rescncl_, other->rescncl_);
  swap(ambient_, other->ambient_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Misc_report_69::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Misc_report_69";
}


// ===================================================================

void Pms_current_4_1c3::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pms_current_4_1c3::kCurrent1548VFieldNumber;
const int Pms_current_4_1c3::kCurrent145VFieldNumber;
const int Pms_current_4_1c3::kCurrent13HpwrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pms_current_4_1c3::Pms_current_4_1c3()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Pms_current_4_1c3.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
}
Pms_current_4_1c3::Pms_current_4_1c3(const Pms_current_4_1c3& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&current15_48v_, &from.current15_48v_,
    static_cast<size_t>(reinterpret_cast<char*>(&current13_hpwr_) -
    reinterpret_cast<char*>(&current15_48v_)) + sizeof(current13_hpwr_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
}

void Pms_current_4_1c3::SharedCtor() {
  ::memset(&current15_48v_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current13_hpwr_) -
      reinterpret_cast<char*>(&current15_48v_)) + sizeof(current13_hpwr_));
}

Pms_current_4_1c3::~Pms_current_4_1c3() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
  SharedDtor();
}

void Pms_current_4_1c3::SharedDtor() {
}

void Pms_current_4_1c3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pms_current_4_1c3& Pms_current_4_1c3::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Pms_current_4_1c3.base);
  return *internal_default_instance();
}


void Pms_current_4_1c3::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&current15_48v_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current13_hpwr_) -
      reinterpret_cast<char*>(&current15_48v_)) + sizeof(current13_hpwr_));
  _internal_metadata_.Clear();
}

bool Pms_current_4_1c3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double current15_48v = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current15_48v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current14_5v = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current14_5v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current13_hpwr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current13_hpwr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
  return false;
#undef DO_
}

void Pms_current_4_1c3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double current15_48v = 1;
  if (this->current15_48v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->current15_48v(), output);
  }

  // double current14_5v = 2;
  if (this->current14_5v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->current14_5v(), output);
  }

  // double current13_hpwr = 3;
  if (this->current13_hpwr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->current13_hpwr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
}

size_t Pms_current_4_1c3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double current15_48v = 1;
  if (this->current15_48v() != 0) {
    total_size += 1 + 8;
  }

  // double current14_5v = 2;
  if (this->current14_5v() != 0) {
    total_size += 1 + 8;
  }

  // double current13_hpwr = 3;
  if (this->current13_hpwr() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pms_current_4_1c3::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Pms_current_4_1c3*>(&from));
}

void Pms_current_4_1c3::MergeFrom(const Pms_current_4_1c3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current15_48v() != 0) {
    set_current15_48v(from.current15_48v());
  }
  if (from.current14_5v() != 0) {
    set_current14_5v(from.current14_5v());
  }
  if (from.current13_hpwr() != 0) {
    set_current13_hpwr(from.current13_hpwr());
  }
}

void Pms_current_4_1c3::CopyFrom(const Pms_current_4_1c3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pms_current_4_1c3::IsInitialized() const {
  return true;
}

void Pms_current_4_1c3::Swap(Pms_current_4_1c3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pms_current_4_1c3::InternalSwap(Pms_current_4_1c3* other) {
  using std::swap;
  swap(current15_48v_, other->current15_48v_);
  swap(current14_5v_, other->current14_5v_);
  swap(current13_hpwr_, other->current13_hpwr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Pms_current_4_1c3::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Pms_current_4_1c3";
}


// ===================================================================

void Pms_current_3_1c2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pms_current_3_1c2::kCurrent9FieldNumber;
const int Pms_current_3_1c2::kCurrent12FieldNumber;
const int Pms_current_3_1c2::kCurrent11FieldNumber;
const int Pms_current_3_1c2::kCurrent10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pms_current_3_1c2::Pms_current_3_1c2()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Pms_current_3_1c2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
}
Pms_current_3_1c2::Pms_current_3_1c2(const Pms_current_3_1c2& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&current9_, &from.current9_,
    static_cast<size_t>(reinterpret_cast<char*>(&current10_) -
    reinterpret_cast<char*>(&current9_)) + sizeof(current10_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
}

void Pms_current_3_1c2::SharedCtor() {
  ::memset(&current9_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current10_) -
      reinterpret_cast<char*>(&current9_)) + sizeof(current10_));
}

Pms_current_3_1c2::~Pms_current_3_1c2() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
  SharedDtor();
}

void Pms_current_3_1c2::SharedDtor() {
}

void Pms_current_3_1c2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pms_current_3_1c2& Pms_current_3_1c2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Pms_current_3_1c2.base);
  return *internal_default_instance();
}


void Pms_current_3_1c2::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&current9_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current10_) -
      reinterpret_cast<char*>(&current9_)) + sizeof(current10_));
  _internal_metadata_.Clear();
}

bool Pms_current_3_1c2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double current9 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current9_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current12 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current12_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current11 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current11_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current10 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
  return false;
#undef DO_
}

void Pms_current_3_1c2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double current9 = 1;
  if (this->current9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->current9(), output);
  }

  // double current12 = 2;
  if (this->current12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->current12(), output);
  }

  // double current11 = 3;
  if (this->current11() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->current11(), output);
  }

  // double current10 = 4;
  if (this->current10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->current10(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
}

size_t Pms_current_3_1c2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double current9 = 1;
  if (this->current9() != 0) {
    total_size += 1 + 8;
  }

  // double current12 = 2;
  if (this->current12() != 0) {
    total_size += 1 + 8;
  }

  // double current11 = 3;
  if (this->current11() != 0) {
    total_size += 1 + 8;
  }

  // double current10 = 4;
  if (this->current10() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pms_current_3_1c2::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Pms_current_3_1c2*>(&from));
}

void Pms_current_3_1c2::MergeFrom(const Pms_current_3_1c2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current9() != 0) {
    set_current9(from.current9());
  }
  if (from.current12() != 0) {
    set_current12(from.current12());
  }
  if (from.current11() != 0) {
    set_current11(from.current11());
  }
  if (from.current10() != 0) {
    set_current10(from.current10());
  }
}

void Pms_current_3_1c2::CopyFrom(const Pms_current_3_1c2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pms_current_3_1c2::IsInitialized() const {
  return true;
}

void Pms_current_3_1c2::Swap(Pms_current_3_1c2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pms_current_3_1c2::InternalSwap(Pms_current_3_1c2* other) {
  using std::swap;
  swap(current9_, other->current9_);
  swap(current12_, other->current12_);
  swap(current11_, other->current11_);
  swap(current10_, other->current10_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Pms_current_3_1c2::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Pms_current_3_1c2";
}


// ===================================================================

void Pms_current_2_1c1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pms_current_2_1c1::kCurrent8FieldNumber;
const int Pms_current_2_1c1::kCurrent7FieldNumber;
const int Pms_current_2_1c1::kCurrent6FieldNumber;
const int Pms_current_2_1c1::kCurrent5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pms_current_2_1c1::Pms_current_2_1c1()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Pms_current_2_1c1.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
}
Pms_current_2_1c1::Pms_current_2_1c1(const Pms_current_2_1c1& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&current8_, &from.current8_,
    static_cast<size_t>(reinterpret_cast<char*>(&current5_) -
    reinterpret_cast<char*>(&current8_)) + sizeof(current5_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
}

void Pms_current_2_1c1::SharedCtor() {
  ::memset(&current8_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current5_) -
      reinterpret_cast<char*>(&current8_)) + sizeof(current5_));
}

Pms_current_2_1c1::~Pms_current_2_1c1() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
  SharedDtor();
}

void Pms_current_2_1c1::SharedDtor() {
}

void Pms_current_2_1c1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pms_current_2_1c1& Pms_current_2_1c1::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Pms_current_2_1c1.base);
  return *internal_default_instance();
}


void Pms_current_2_1c1::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&current8_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current5_) -
      reinterpret_cast<char*>(&current8_)) + sizeof(current5_));
  _internal_metadata_.Clear();
}

bool Pms_current_2_1c1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double current8 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current7 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current6 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current5 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
  return false;
#undef DO_
}

void Pms_current_2_1c1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double current8 = 1;
  if (this->current8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->current8(), output);
  }

  // double current7 = 2;
  if (this->current7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->current7(), output);
  }

  // double current6 = 3;
  if (this->current6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->current6(), output);
  }

  // double current5 = 4;
  if (this->current5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->current5(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
}

size_t Pms_current_2_1c1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double current8 = 1;
  if (this->current8() != 0) {
    total_size += 1 + 8;
  }

  // double current7 = 2;
  if (this->current7() != 0) {
    total_size += 1 + 8;
  }

  // double current6 = 3;
  if (this->current6() != 0) {
    total_size += 1 + 8;
  }

  // double current5 = 4;
  if (this->current5() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pms_current_2_1c1::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Pms_current_2_1c1*>(&from));
}

void Pms_current_2_1c1::MergeFrom(const Pms_current_2_1c1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current8() != 0) {
    set_current8(from.current8());
  }
  if (from.current7() != 0) {
    set_current7(from.current7());
  }
  if (from.current6() != 0) {
    set_current6(from.current6());
  }
  if (from.current5() != 0) {
    set_current5(from.current5());
  }
}

void Pms_current_2_1c1::CopyFrom(const Pms_current_2_1c1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pms_current_2_1c1::IsInitialized() const {
  return true;
}

void Pms_current_2_1c1::Swap(Pms_current_2_1c1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pms_current_2_1c1::InternalSwap(Pms_current_2_1c1* other) {
  using std::swap;
  swap(current8_, other->current8_);
  swap(current7_, other->current7_);
  swap(current6_, other->current6_);
  swap(current5_, other->current5_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Pms_current_2_1c1::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Pms_current_2_1c1";
}


// ===================================================================

void Pms_current_1_1c0::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pms_current_1_1c0::kCurrent4FieldNumber;
const int Pms_current_1_1c0::kCurrent3FieldNumber;
const int Pms_current_1_1c0::kCurrent2FieldNumber;
const int Pms_current_1_1c0::kCurrent1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pms_current_1_1c0::Pms_current_1_1c0()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Pms_current_1_1c0.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
}
Pms_current_1_1c0::Pms_current_1_1c0(const Pms_current_1_1c0& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&current4_, &from.current4_,
    static_cast<size_t>(reinterpret_cast<char*>(&current1_) -
    reinterpret_cast<char*>(&current4_)) + sizeof(current1_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
}

void Pms_current_1_1c0::SharedCtor() {
  ::memset(&current4_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current1_) -
      reinterpret_cast<char*>(&current4_)) + sizeof(current1_));
}

Pms_current_1_1c0::~Pms_current_1_1c0() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
  SharedDtor();
}

void Pms_current_1_1c0::SharedDtor() {
}

void Pms_current_1_1c0::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pms_current_1_1c0& Pms_current_1_1c0::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Pms_current_1_1c0.base);
  return *internal_default_instance();
}


void Pms_current_1_1c0::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&current4_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current1_) -
      reinterpret_cast<char*>(&current4_)) + sizeof(current1_));
  _internal_metadata_.Clear();
}

bool Pms_current_1_1c0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double current4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current3 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
  return false;
#undef DO_
}

void Pms_current_1_1c0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double current4 = 1;
  if (this->current4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->current4(), output);
  }

  // double current3 = 2;
  if (this->current3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->current3(), output);
  }

  // double current2 = 3;
  if (this->current2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->current2(), output);
  }

  // double current1 = 4;
  if (this->current1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->current1(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
}

size_t Pms_current_1_1c0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double current4 = 1;
  if (this->current4() != 0) {
    total_size += 1 + 8;
  }

  // double current3 = 2;
  if (this->current3() != 0) {
    total_size += 1 + 8;
  }

  // double current2 = 3;
  if (this->current2() != 0) {
    total_size += 1 + 8;
  }

  // double current1 = 4;
  if (this->current1() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pms_current_1_1c0::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Pms_current_1_1c0*>(&from));
}

void Pms_current_1_1c0::MergeFrom(const Pms_current_1_1c0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current4() != 0) {
    set_current4(from.current4());
  }
  if (from.current3() != 0) {
    set_current3(from.current3());
  }
  if (from.current2() != 0) {
    set_current2(from.current2());
  }
  if (from.current1() != 0) {
    set_current1(from.current1());
  }
}

void Pms_current_1_1c0::CopyFrom(const Pms_current_1_1c0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pms_current_1_1c0::IsInitialized() const {
  return true;
}

void Pms_current_1_1c0::Swap(Pms_current_1_1c0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pms_current_1_1c0::InternalSwap(Pms_current_1_1c0* other) {
  using std::swap;
  swap(current4_, other->current4_);
  swap(current3_, other->current3_);
  swap(current2_, other->current2_);
  swap(current1_, other->current1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Pms_current_1_1c0::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Pms_current_1_1c0";
}


// ===================================================================

void Pms_cmd_1ba::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pms_cmd_1ba::kGate9FieldNumber;
const int Pms_cmd_1ba::kGate8FieldNumber;
const int Pms_cmd_1ba::kGate7FieldNumber;
const int Pms_cmd_1ba::kGate6FieldNumber;
const int Pms_cmd_1ba::kGate5FieldNumber;
const int Pms_cmd_1ba::kGate4FieldNumber;
const int Pms_cmd_1ba::kGate3FieldNumber;
const int Pms_cmd_1ba::kGate2FieldNumber;
const int Pms_cmd_1ba::kGate16FieldNumber;
const int Pms_cmd_1ba::kGate15FieldNumber;
const int Pms_cmd_1ba::kGate14FieldNumber;
const int Pms_cmd_1ba::kGate13FieldNumber;
const int Pms_cmd_1ba::kGate12FieldNumber;
const int Pms_cmd_1ba::kGate11FieldNumber;
const int Pms_cmd_1ba::kGate10FieldNumber;
const int Pms_cmd_1ba::kGate1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pms_cmd_1ba::Pms_cmd_1ba()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Pms_cmd_1ba.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
}
Pms_cmd_1ba::Pms_cmd_1ba(const Pms_cmd_1ba& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gate9_, &from.gate9_,
    static_cast<size_t>(reinterpret_cast<char*>(&gate1_) -
    reinterpret_cast<char*>(&gate9_)) + sizeof(gate1_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
}

void Pms_cmd_1ba::SharedCtor() {
  ::memset(&gate9_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gate1_) -
      reinterpret_cast<char*>(&gate9_)) + sizeof(gate1_));
}

Pms_cmd_1ba::~Pms_cmd_1ba() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
  SharedDtor();
}

void Pms_cmd_1ba::SharedDtor() {
}

void Pms_cmd_1ba::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pms_cmd_1ba& Pms_cmd_1ba::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Pms_cmd_1ba.base);
  return *internal_default_instance();
}


void Pms_cmd_1ba::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gate9_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gate1_) -
      reinterpret_cast<char*>(&gate9_)) + sizeof(gate1_));
  _internal_metadata_.Clear();
}

bool Pms_cmd_1ba::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool gate9 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate9_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate8 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate7 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate6 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate3 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate2 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate16 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate15 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate15_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate14 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate14_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate13 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate13_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate12 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate12_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate11 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate11_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate10 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool gate1 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gate1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
  return false;
#undef DO_
}

void Pms_cmd_1ba::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool gate9 = 1;
  if (this->gate9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->gate9(), output);
  }

  // bool gate8 = 2;
  if (this->gate8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->gate8(), output);
  }

  // bool gate7 = 3;
  if (this->gate7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->gate7(), output);
  }

  // bool gate6 = 4;
  if (this->gate6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->gate6(), output);
  }

  // bool gate5 = 5;
  if (this->gate5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->gate5(), output);
  }

  // bool gate4 = 6;
  if (this->gate4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->gate4(), output);
  }

  // bool gate3 = 7;
  if (this->gate3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->gate3(), output);
  }

  // bool gate2 = 8;
  if (this->gate2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->gate2(), output);
  }

  // bool gate16 = 9;
  if (this->gate16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->gate16(), output);
  }

  // bool gate15 = 10;
  if (this->gate15() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->gate15(), output);
  }

  // bool gate14 = 11;
  if (this->gate14() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->gate14(), output);
  }

  // bool gate13 = 12;
  if (this->gate13() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->gate13(), output);
  }

  // bool gate12 = 13;
  if (this->gate12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->gate12(), output);
  }

  // bool gate11 = 14;
  if (this->gate11() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->gate11(), output);
  }

  // bool gate10 = 15;
  if (this->gate10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->gate10(), output);
  }

  // bool gate1 = 16;
  if (this->gate1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->gate1(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
}

size_t Pms_cmd_1ba::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // bool gate9 = 1;
  if (this->gate9() != 0) {
    total_size += 1 + 1;
  }

  // bool gate8 = 2;
  if (this->gate8() != 0) {
    total_size += 1 + 1;
  }

  // bool gate7 = 3;
  if (this->gate7() != 0) {
    total_size += 1 + 1;
  }

  // bool gate6 = 4;
  if (this->gate6() != 0) {
    total_size += 1 + 1;
  }

  // bool gate5 = 5;
  if (this->gate5() != 0) {
    total_size += 1 + 1;
  }

  // bool gate4 = 6;
  if (this->gate4() != 0) {
    total_size += 1 + 1;
  }

  // bool gate3 = 7;
  if (this->gate3() != 0) {
    total_size += 1 + 1;
  }

  // bool gate2 = 8;
  if (this->gate2() != 0) {
    total_size += 1 + 1;
  }

  // bool gate16 = 9;
  if (this->gate16() != 0) {
    total_size += 1 + 1;
  }

  // bool gate15 = 10;
  if (this->gate15() != 0) {
    total_size += 1 + 1;
  }

  // bool gate14 = 11;
  if (this->gate14() != 0) {
    total_size += 1 + 1;
  }

  // bool gate13 = 12;
  if (this->gate13() != 0) {
    total_size += 1 + 1;
  }

  // bool gate12 = 13;
  if (this->gate12() != 0) {
    total_size += 1 + 1;
  }

  // bool gate11 = 14;
  if (this->gate11() != 0) {
    total_size += 1 + 1;
  }

  // bool gate10 = 15;
  if (this->gate10() != 0) {
    total_size += 1 + 1;
  }

  // bool gate1 = 16;
  if (this->gate1() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pms_cmd_1ba::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Pms_cmd_1ba*>(&from));
}

void Pms_cmd_1ba::MergeFrom(const Pms_cmd_1ba& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gate9() != 0) {
    set_gate9(from.gate9());
  }
  if (from.gate8() != 0) {
    set_gate8(from.gate8());
  }
  if (from.gate7() != 0) {
    set_gate7(from.gate7());
  }
  if (from.gate6() != 0) {
    set_gate6(from.gate6());
  }
  if (from.gate5() != 0) {
    set_gate5(from.gate5());
  }
  if (from.gate4() != 0) {
    set_gate4(from.gate4());
  }
  if (from.gate3() != 0) {
    set_gate3(from.gate3());
  }
  if (from.gate2() != 0) {
    set_gate2(from.gate2());
  }
  if (from.gate16() != 0) {
    set_gate16(from.gate16());
  }
  if (from.gate15() != 0) {
    set_gate15(from.gate15());
  }
  if (from.gate14() != 0) {
    set_gate14(from.gate14());
  }
  if (from.gate13() != 0) {
    set_gate13(from.gate13());
  }
  if (from.gate12() != 0) {
    set_gate12(from.gate12());
  }
  if (from.gate11() != 0) {
    set_gate11(from.gate11());
  }
  if (from.gate10() != 0) {
    set_gate10(from.gate10());
  }
  if (from.gate1() != 0) {
    set_gate1(from.gate1());
  }
}

void Pms_cmd_1ba::CopyFrom(const Pms_cmd_1ba& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pms_cmd_1ba::IsInitialized() const {
  return true;
}

void Pms_cmd_1ba::Swap(Pms_cmd_1ba* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pms_cmd_1ba::InternalSwap(Pms_cmd_1ba* other) {
  using std::swap;
  swap(gate9_, other->gate9_);
  swap(gate8_, other->gate8_);
  swap(gate7_, other->gate7_);
  swap(gate6_, other->gate6_);
  swap(gate5_, other->gate5_);
  swap(gate4_, other->gate4_);
  swap(gate3_, other->gate3_);
  swap(gate2_, other->gate2_);
  swap(gate16_, other->gate16_);
  swap(gate15_, other->gate15_);
  swap(gate14_, other->gate14_);
  swap(gate13_, other->gate13_);
  swap(gate12_, other->gate12_);
  swap(gate11_, other->gate11_);
  swap(gate10_, other->gate10_);
  swap(gate1_, other->gate1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Pms_cmd_1ba::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Pms_cmd_1ba";
}


// ===================================================================

void Wheelspeed_report_6a::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Wheelspeed_report_6a::kRrFieldNumber;
const int Wheelspeed_report_6a::kRlFieldNumber;
const int Wheelspeed_report_6a::kFrFieldNumber;
const int Wheelspeed_report_6a::kFlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Wheelspeed_report_6a::Wheelspeed_report_6a()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Wheelspeed_report_6a.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
}
Wheelspeed_report_6a::Wheelspeed_report_6a(const Wheelspeed_report_6a& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rr_, &from.rr_,
    static_cast<size_t>(reinterpret_cast<char*>(&fl_) -
    reinterpret_cast<char*>(&rr_)) + sizeof(fl_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
}

void Wheelspeed_report_6a::SharedCtor() {
  ::memset(&rr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fl_) -
      reinterpret_cast<char*>(&rr_)) + sizeof(fl_));
}

Wheelspeed_report_6a::~Wheelspeed_report_6a() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
  SharedDtor();
}

void Wheelspeed_report_6a::SharedDtor() {
}

void Wheelspeed_report_6a::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Wheelspeed_report_6a& Wheelspeed_report_6a::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Wheelspeed_report_6a.base);
  return *internal_default_instance();
}


void Wheelspeed_report_6a::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fl_) -
      reinterpret_cast<char*>(&rr_)) + sizeof(fl_));
  _internal_metadata_.Clear();
}

bool Wheelspeed_report_6a::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double rr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double rl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double fr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double fl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
  return false;
#undef DO_
}

void Wheelspeed_report_6a::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double rr = 1;
  if (this->rr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->rr(), output);
  }

  // double rl = 2;
  if (this->rl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->rl(), output);
  }

  // double fr = 3;
  if (this->fr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->fr(), output);
  }

  // double fl = 4;
  if (this->fl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->fl(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
}

size_t Wheelspeed_report_6a::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double rr = 1;
  if (this->rr() != 0) {
    total_size += 1 + 8;
  }

  // double rl = 2;
  if (this->rl() != 0) {
    total_size += 1 + 8;
  }

  // double fr = 3;
  if (this->fr() != 0) {
    total_size += 1 + 8;
  }

  // double fl = 4;
  if (this->fl() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Wheelspeed_report_6a::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Wheelspeed_report_6a*>(&from));
}

void Wheelspeed_report_6a::MergeFrom(const Wheelspeed_report_6a& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rr() != 0) {
    set_rr(from.rr());
  }
  if (from.rl() != 0) {
    set_rl(from.rl());
  }
  if (from.fr() != 0) {
    set_fr(from.fr());
  }
  if (from.fl() != 0) {
    set_fl(from.fl());
  }
}

void Wheelspeed_report_6a::CopyFrom(const Wheelspeed_report_6a& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Wheelspeed_report_6a::IsInitialized() const {
  return true;
}

void Wheelspeed_report_6a::Swap(Wheelspeed_report_6a* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Wheelspeed_report_6a::InternalSwap(Wheelspeed_report_6a* other) {
  using std::swap;
  swap(rr_, other->rr_);
  swap(rl_, other->rl_);
  swap(fr_, other->fr_);
  swap(fl_, other->fl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Wheelspeed_report_6a::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Wheelspeed_report_6a";
}


// ===================================================================

void Accel_report_6b::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Accel_report_6b::kVertFieldNumber;
const int Accel_report_6b::kMyLongFieldNumber;
const int Accel_report_6b::kLatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Accel_report_6b::Accel_report_6b()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Accel_report_6b.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Accel_report_6b)
}
Accel_report_6b::Accel_report_6b(const Accel_report_6b& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vert_, &from.vert_,
    static_cast<size_t>(reinterpret_cast<char*>(&lat_) -
    reinterpret_cast<char*>(&vert_)) + sizeof(lat_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Accel_report_6b)
}

void Accel_report_6b::SharedCtor() {
  ::memset(&vert_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lat_) -
      reinterpret_cast<char*>(&vert_)) + sizeof(lat_));
}

Accel_report_6b::~Accel_report_6b() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Accel_report_6b)
  SharedDtor();
}

void Accel_report_6b::SharedDtor() {
}

void Accel_report_6b::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Accel_report_6b& Accel_report_6b::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Accel_report_6b.base);
  return *internal_default_instance();
}


void Accel_report_6b::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Accel_report_6b)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vert_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lat_) -
      reinterpret_cast<char*>(&vert_)) + sizeof(lat_));
  _internal_metadata_.Clear();
}

bool Accel_report_6b::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Accel_report_6b)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double vert = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vert_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double my_long = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &my_long_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Accel_report_6b)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Accel_report_6b)
  return false;
#undef DO_
}

void Accel_report_6b::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Accel_report_6b)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double vert = 1;
  if (this->vert() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->vert(), output);
  }

  // double my_long = 2;
  if (this->my_long() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->my_long(), output);
  }

  // double lat = 3;
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->lat(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Accel_report_6b)
}

size_t Accel_report_6b::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Accel_report_6b)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double vert = 1;
  if (this->vert() != 0) {
    total_size += 1 + 8;
  }

  // double my_long = 2;
  if (this->my_long() != 0) {
    total_size += 1 + 8;
  }

  // double lat = 3;
  if (this->lat() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Accel_report_6b::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Accel_report_6b*>(&from));
}

void Accel_report_6b::MergeFrom(const Accel_report_6b& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Accel_report_6b)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vert() != 0) {
    set_vert(from.vert());
  }
  if (from.my_long() != 0) {
    set_my_long(from.my_long());
  }
  if (from.lat() != 0) {
    set_lat(from.lat());
  }
}

void Accel_report_6b::CopyFrom(const Accel_report_6b& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Accel_report_6b)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Accel_report_6b::IsInitialized() const {
  return true;
}

void Accel_report_6b::Swap(Accel_report_6b* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Accel_report_6b::InternalSwap(Accel_report_6b* other) {
  using std::swap;
  swap(vert_, other->vert_);
  swap(my_long_, other->my_long_);
  swap(lat_, other->lat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Accel_report_6b::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Accel_report_6b";
}


// ===================================================================

void Gyro_report_6c::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gyro_report_6c::kYawFieldNumber;
const int Gyro_report_6c::kRollFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gyro_report_6c::Gyro_report_6c()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Gyro_report_6c.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Gyro_report_6c)
}
Gyro_report_6c::Gyro_report_6c(const Gyro_report_6c& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&yaw_, &from.yaw_,
    static_cast<size_t>(reinterpret_cast<char*>(&roll_) -
    reinterpret_cast<char*>(&yaw_)) + sizeof(roll_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Gyro_report_6c)
}

void Gyro_report_6c::SharedCtor() {
  ::memset(&yaw_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roll_) -
      reinterpret_cast<char*>(&yaw_)) + sizeof(roll_));
}

Gyro_report_6c::~Gyro_report_6c() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Gyro_report_6c)
  SharedDtor();
}

void Gyro_report_6c::SharedDtor() {
}

void Gyro_report_6c::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gyro_report_6c& Gyro_report_6c::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Gyro_report_6c.base);
  return *internal_default_instance();
}


void Gyro_report_6c::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Gyro_report_6c)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&yaw_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roll_) -
      reinterpret_cast<char*>(&yaw_)) + sizeof(roll_));
  _internal_metadata_.Clear();
}

bool Gyro_report_6c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Gyro_report_6c)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double yaw = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double roll = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Gyro_report_6c)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Gyro_report_6c)
  return false;
#undef DO_
}

void Gyro_report_6c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Gyro_report_6c)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double yaw = 1;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->yaw(), output);
  }

  // double roll = 2;
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->roll(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Gyro_report_6c)
}

size_t Gyro_report_6c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Gyro_report_6c)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double yaw = 1;
  if (this->yaw() != 0) {
    total_size += 1 + 8;
  }

  // double roll = 2;
  if (this->roll() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gyro_report_6c::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gyro_report_6c*>(&from));
}

void Gyro_report_6c::MergeFrom(const Gyro_report_6c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Gyro_report_6c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
  if (from.roll() != 0) {
    set_roll(from.roll());
  }
}

void Gyro_report_6c::CopyFrom(const Gyro_report_6c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Gyro_report_6c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gyro_report_6c::IsInitialized() const {
  return true;
}

void Gyro_report_6c::Swap(Gyro_report_6c* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gyro_report_6c::InternalSwap(Gyro_report_6c* other) {
  using std::swap;
  swap(yaw_, other->yaw_);
  swap(roll_, other->roll_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gyro_report_6c::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Gyro_report_6c";
}


// ===================================================================

void Gps_1_report_6d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gps_1_report_6d::kValidFieldNumber;
const int Gps_1_report_6d::kLongitudeFieldNumber;
const int Gps_1_report_6d::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gps_1_report_6d::Gps_1_report_6d()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Gps_1_report_6d.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Gps_1_report_6d)
}
Gps_1_report_6d::Gps_1_report_6d(const Gps_1_report_6d& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitude_, &from.longitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&valid_) -
    reinterpret_cast<char*>(&longitude_)) + sizeof(valid_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Gps_1_report_6d)
}

void Gps_1_report_6d::SharedCtor() {
  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&valid_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(valid_));
}

Gps_1_report_6d::~Gps_1_report_6d() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Gps_1_report_6d)
  SharedDtor();
}

void Gps_1_report_6d::SharedDtor() {
}

void Gps_1_report_6d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gps_1_report_6d& Gps_1_report_6d::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Gps_1_report_6d.base);
  return *internal_default_instance();
}


void Gps_1_report_6d::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Gps_1_report_6d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&valid_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(valid_));
  _internal_metadata_.Clear();
}

bool Gps_1_report_6d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Gps_1_report_6d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.CHASIS.Gps_1_report_6d.ValidType valid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_valid(static_cast< ::Calmcar::drivers::CHASIS::Gps_1_report_6d_ValidType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double latitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Gps_1_report_6d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Gps_1_report_6d)
  return false;
#undef DO_
}

void Gps_1_report_6d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Gps_1_report_6d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.CHASIS.Gps_1_report_6d.ValidType valid = 1;
  if (this->valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->valid(), output);
  }

  // double longitude = 2;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // double latitude = 3;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->latitude(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Gps_1_report_6d)
}

size_t Gps_1_report_6d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Gps_1_report_6d)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double longitude = 2;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // double latitude = 3;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Gps_1_report_6d.ValidType valid = 1;
  if (this->valid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->valid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gps_1_report_6d::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gps_1_report_6d*>(&from));
}

void Gps_1_report_6d::MergeFrom(const Gps_1_report_6d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Gps_1_report_6d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.valid() != 0) {
    set_valid(from.valid());
  }
}

void Gps_1_report_6d::CopyFrom(const Gps_1_report_6d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Gps_1_report_6d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gps_1_report_6d::IsInitialized() const {
  return true;
}

void Gps_1_report_6d::Swap(Gps_1_report_6d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gps_1_report_6d::InternalSwap(Gps_1_report_6d* other) {
  using std::swap;
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  swap(valid_, other->valid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gps_1_report_6d::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Gps_1_report_6d";
}


// ===================================================================

void Gps_2_report_6e::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gps_2_report_6e::kInfFieldNumber;
const int Gps_2_report_6e::kFltgpsFieldNumber;
const int Gps_2_report_6e::kPdopFieldNumber;
const int Gps_2_report_6e::kCompassFieldNumber;
const int Gps_2_report_6e::kSecondsFieldNumber;
const int Gps_2_report_6e::kMinutesFieldNumber;
const int Gps_2_report_6e::kHoursFieldNumber;
const int Gps_2_report_6e::kDayFieldNumber;
const int Gps_2_report_6e::kMonthFieldNumber;
const int Gps_2_report_6e::kYearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gps_2_report_6e::Gps_2_report_6e()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Gps_2_report_6e.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Gps_2_report_6e)
}
Gps_2_report_6e::Gps_2_report_6e(const Gps_2_report_6e& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&inf_, &from.inf_,
    static_cast<size_t>(reinterpret_cast<char*>(&year_) -
    reinterpret_cast<char*>(&inf_)) + sizeof(year_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Gps_2_report_6e)
}

void Gps_2_report_6e::SharedCtor() {
  ::memset(&inf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&year_) -
      reinterpret_cast<char*>(&inf_)) + sizeof(year_));
}

Gps_2_report_6e::~Gps_2_report_6e() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Gps_2_report_6e)
  SharedDtor();
}

void Gps_2_report_6e::SharedDtor() {
}

void Gps_2_report_6e::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gps_2_report_6e& Gps_2_report_6e::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Gps_2_report_6e.base);
  return *internal_default_instance();
}


void Gps_2_report_6e::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Gps_2_report_6e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&inf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&year_) -
      reinterpret_cast<char*>(&inf_)) + sizeof(year_));
  _internal_metadata_.Clear();
}

bool Gps_2_report_6e::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Gps_2_report_6e)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.CHASIS.Gps_2_report_6e.InfType inf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_inf(static_cast< ::Calmcar::drivers::CHASIS::Gps_2_report_6e_InfType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gps_2_report_6e.FltgpsType fltgps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltgps(static_cast< ::Calmcar::drivers::CHASIS::Gps_2_report_6e_FltgpsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pdop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double compass = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &compass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 seconds = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minutes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minutes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hours = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hours_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 day = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 month = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &month_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 year = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &year_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Gps_2_report_6e)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Gps_2_report_6e)
  return false;
#undef DO_
}

void Gps_2_report_6e::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Gps_2_report_6e)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.CHASIS.Gps_2_report_6e.InfType inf = 1;
  if (this->inf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->inf(), output);
  }

  // .Calmcar.drivers.CHASIS.Gps_2_report_6e.FltgpsType fltgps = 2;
  if (this->fltgps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->fltgps(), output);
  }

  // double pdop = 3;
  if (this->pdop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->pdop(), output);
  }

  // double compass = 4;
  if (this->compass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->compass(), output);
  }

  // int32 seconds = 5;
  if (this->seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->seconds(), output);
  }

  // int32 minutes = 6;
  if (this->minutes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->minutes(), output);
  }

  // int32 hours = 7;
  if (this->hours() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->hours(), output);
  }

  // int32 day = 8;
  if (this->day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->day(), output);
  }

  // int32 month = 9;
  if (this->month() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->month(), output);
  }

  // int32 year = 10;
  if (this->year() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->year(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Gps_2_report_6e)
}

size_t Gps_2_report_6e::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Gps_2_report_6e)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.CHASIS.Gps_2_report_6e.InfType inf = 1;
  if (this->inf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->inf());
  }

  // .Calmcar.drivers.CHASIS.Gps_2_report_6e.FltgpsType fltgps = 2;
  if (this->fltgps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltgps());
  }

  // double pdop = 3;
  if (this->pdop() != 0) {
    total_size += 1 + 8;
  }

  // double compass = 4;
  if (this->compass() != 0) {
    total_size += 1 + 8;
  }

  // int32 seconds = 5;
  if (this->seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seconds());
  }

  // int32 minutes = 6;
  if (this->minutes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minutes());
  }

  // int32 hours = 7;
  if (this->hours() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hours());
  }

  // int32 day = 8;
  if (this->day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->day());
  }

  // int32 month = 9;
  if (this->month() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->month());
  }

  // int32 year = 10;
  if (this->year() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->year());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gps_2_report_6e::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gps_2_report_6e*>(&from));
}

void Gps_2_report_6e::MergeFrom(const Gps_2_report_6e& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Gps_2_report_6e)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.inf() != 0) {
    set_inf(from.inf());
  }
  if (from.fltgps() != 0) {
    set_fltgps(from.fltgps());
  }
  if (from.pdop() != 0) {
    set_pdop(from.pdop());
  }
  if (from.compass() != 0) {
    set_compass(from.compass());
  }
  if (from.seconds() != 0) {
    set_seconds(from.seconds());
  }
  if (from.minutes() != 0) {
    set_minutes(from.minutes());
  }
  if (from.hours() != 0) {
    set_hours(from.hours());
  }
  if (from.day() != 0) {
    set_day(from.day());
  }
  if (from.month() != 0) {
    set_month(from.month());
  }
  if (from.year() != 0) {
    set_year(from.year());
  }
}

void Gps_2_report_6e::CopyFrom(const Gps_2_report_6e& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Gps_2_report_6e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gps_2_report_6e::IsInitialized() const {
  return true;
}

void Gps_2_report_6e::Swap(Gps_2_report_6e* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gps_2_report_6e::InternalSwap(Gps_2_report_6e* other) {
  using std::swap;
  swap(inf_, other->inf_);
  swap(fltgps_, other->fltgps_);
  swap(pdop_, other->pdop_);
  swap(compass_, other->compass_);
  swap(seconds_, other->seconds_);
  swap(minutes_, other->minutes_);
  swap(hours_, other->hours_);
  swap(day_, other->day_);
  swap(month_, other->month_);
  swap(year_, other->year_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gps_2_report_6e::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Gps_2_report_6e";
}


// ===================================================================

void Gps_3_report_6f::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gps_3_report_6f::kNumsatFieldNumber;
const int Gps_3_report_6f::kQualityFieldNumber;
const int Gps_3_report_6f::kVdopFieldNumber;
const int Gps_3_report_6f::kHdopFieldNumber;
const int Gps_3_report_6f::kSpeedFieldNumber;
const int Gps_3_report_6f::kHeadingFieldNumber;
const int Gps_3_report_6f::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gps_3_report_6f::Gps_3_report_6f()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Gps_3_report_6f.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Gps_3_report_6f)
}
Gps_3_report_6f::Gps_3_report_6f(const Gps_3_report_6f& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&numsat_, &from.numsat_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&numsat_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Gps_3_report_6f)
}

void Gps_3_report_6f::SharedCtor() {
  ::memset(&numsat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&numsat_)) + sizeof(speed_));
}

Gps_3_report_6f::~Gps_3_report_6f() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Gps_3_report_6f)
  SharedDtor();
}

void Gps_3_report_6f::SharedDtor() {
}

void Gps_3_report_6f::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Gps_3_report_6f& Gps_3_report_6f::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Gps_3_report_6f.base);
  return *internal_default_instance();
}


void Gps_3_report_6f::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Gps_3_report_6f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&numsat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&numsat_)) + sizeof(speed_));
  _internal_metadata_.Clear();
}

bool Gps_3_report_6f::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Gps_3_report_6f)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 numsat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numsat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gps_3_report_6f.QualityType quality = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_quality(static_cast< ::Calmcar::drivers::CHASIS::Gps_3_report_6f_QualityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vdop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double hdop = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double heading = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double altitude = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Gps_3_report_6f)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Gps_3_report_6f)
  return false;
#undef DO_
}

void Gps_3_report_6f::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Gps_3_report_6f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 numsat = 1;
  if (this->numsat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->numsat(), output);
  }

  // .Calmcar.drivers.CHASIS.Gps_3_report_6f.QualityType quality = 2;
  if (this->quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->quality(), output);
  }

  // double vdop = 3;
  if (this->vdop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->vdop(), output);
  }

  // double hdop = 4;
  if (this->hdop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->hdop(), output);
  }

  // int32 speed = 5;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->speed(), output);
  }

  // double heading = 6;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->heading(), output);
  }

  // double altitude = 7;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->altitude(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Gps_3_report_6f)
}

size_t Gps_3_report_6f::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Gps_3_report_6f)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 numsat = 1;
  if (this->numsat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numsat());
  }

  // .Calmcar.drivers.CHASIS.Gps_3_report_6f.QualityType quality = 2;
  if (this->quality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->quality());
  }

  // double vdop = 3;
  if (this->vdop() != 0) {
    total_size += 1 + 8;
  }

  // double hdop = 4;
  if (this->hdop() != 0) {
    total_size += 1 + 8;
  }

  // double heading = 6;
  if (this->heading() != 0) {
    total_size += 1 + 8;
  }

  // double altitude = 7;
  if (this->altitude() != 0) {
    total_size += 1 + 8;
  }

  // int32 speed = 5;
  if (this->speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->speed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gps_3_report_6f::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Gps_3_report_6f*>(&from));
}

void Gps_3_report_6f::MergeFrom(const Gps_3_report_6f& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Gps_3_report_6f)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.numsat() != 0) {
    set_numsat(from.numsat());
  }
  if (from.quality() != 0) {
    set_quality(from.quality());
  }
  if (from.vdop() != 0) {
    set_vdop(from.vdop());
  }
  if (from.hdop() != 0) {
    set_hdop(from.hdop());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
}

void Gps_3_report_6f::CopyFrom(const Gps_3_report_6f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Gps_3_report_6f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gps_3_report_6f::IsInitialized() const {
  return true;
}

void Gps_3_report_6f::Swap(Gps_3_report_6f* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gps_3_report_6f::InternalSwap(Gps_3_report_6f* other) {
  using std::swap;
  swap(numsat_, other->numsat_);
  swap(quality_, other->quality_);
  swap(vdop_, other->vdop_);
  swap(hdop_, other->hdop_);
  swap(heading_, other->heading_);
  swap(altitude_, other->altitude_);
  swap(speed_, other->speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Gps_3_report_6f::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Gps_3_report_6f";
}


// ===================================================================

void Throttleinfo_report_75::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Throttleinfo_report_75::kOdoFieldNumber;
const int Throttleinfo_report_75::kApedrateFieldNumber;
const int Throttleinfo_report_75::kApedpcFieldNumber;
const int Throttleinfo_report_75::kRpmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Throttleinfo_report_75::Throttleinfo_report_75()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Throttleinfo_report_75.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
}
Throttleinfo_report_75::Throttleinfo_report_75(const Throttleinfo_report_75& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&apedrate_, &from.apedrate_,
    static_cast<size_t>(reinterpret_cast<char*>(&odo_) -
    reinterpret_cast<char*>(&apedrate_)) + sizeof(odo_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
}

void Throttleinfo_report_75::SharedCtor() {
  ::memset(&apedrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&odo_) -
      reinterpret_cast<char*>(&apedrate_)) + sizeof(odo_));
}

Throttleinfo_report_75::~Throttleinfo_report_75() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
  SharedDtor();
}

void Throttleinfo_report_75::SharedDtor() {
}

void Throttleinfo_report_75::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Throttleinfo_report_75& Throttleinfo_report_75::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Throttleinfo_report_75.base);
  return *internal_default_instance();
}


void Throttleinfo_report_75::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&apedrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&odo_) -
      reinterpret_cast<char*>(&apedrate_)) + sizeof(odo_));
  _internal_metadata_.Clear();
}

bool Throttleinfo_report_75::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 odo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &odo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double apedrate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &apedrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double apedpc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &apedpc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double rpm = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rpm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
  return false;
#undef DO_
}

void Throttleinfo_report_75::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 odo = 1;
  if (this->odo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->odo(), output);
  }

  // double apedrate = 2;
  if (this->apedrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->apedrate(), output);
  }

  // double apedpc = 3;
  if (this->apedpc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->apedpc(), output);
  }

  // double rpm = 4;
  if (this->rpm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->rpm(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
}

size_t Throttleinfo_report_75::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double apedrate = 2;
  if (this->apedrate() != 0) {
    total_size += 1 + 8;
  }

  // double apedpc = 3;
  if (this->apedpc() != 0) {
    total_size += 1 + 8;
  }

  // double rpm = 4;
  if (this->rpm() != 0) {
    total_size += 1 + 8;
  }

  // int32 odo = 1;
  if (this->odo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->odo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Throttleinfo_report_75::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Throttleinfo_report_75*>(&from));
}

void Throttleinfo_report_75::MergeFrom(const Throttleinfo_report_75& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apedrate() != 0) {
    set_apedrate(from.apedrate());
  }
  if (from.apedpc() != 0) {
    set_apedpc(from.apedpc());
  }
  if (from.rpm() != 0) {
    set_rpm(from.rpm());
  }
  if (from.odo() != 0) {
    set_odo(from.odo());
  }
}

void Throttleinfo_report_75::CopyFrom(const Throttleinfo_report_75& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Throttleinfo_report_75::IsInitialized() const {
  return true;
}

void Throttleinfo_report_75::Swap(Throttleinfo_report_75* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Throttleinfo_report_75::InternalSwap(Throttleinfo_report_75* other) {
  using std::swap;
  swap(apedrate_, other->apedrate_);
  swap(apedpc_, other->apedpc_);
  swap(rpm_, other->rpm_);
  swap(odo_, other->odo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Throttleinfo_report_75::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Throttleinfo_report_75";
}


// ===================================================================

void Brakeinfo_report_74::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Brakeinfo_report_74::kTraceFieldNumber;
const int Brakeinfo_report_74::kTracaFieldNumber;
const int Brakeinfo_report_74::kStabeFieldNumber;
const int Brakeinfo_report_74::kStabaFieldNumber;
const int Brakeinfo_report_74::kAogFieldNumber;
const int Brakeinfo_report_74::kAbseFieldNumber;
const int Brakeinfo_report_74::kAbsaFieldNumber;
const int Brakeinfo_report_74::kWhltrqFieldNumber;
const int Brakeinfo_report_74::kPbrakeFieldNumber;
const int Brakeinfo_report_74::kStatnryFieldNumber;
const int Brakeinfo_report_74::kHsastatFieldNumber;
const int Brakeinfo_report_74::kHsamodeFieldNumber;
const int Brakeinfo_report_74::kBrktrqrFieldNumber;
const int Brakeinfo_report_74::kBrktrqaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Brakeinfo_report_74::Brakeinfo_report_74()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Brakeinfo_report_74.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
}
Brakeinfo_report_74::Brakeinfo_report_74(const Brakeinfo_report_74& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&trace_, &from.trace_,
    static_cast<size_t>(reinterpret_cast<char*>(&brktrqa_) -
    reinterpret_cast<char*>(&trace_)) + sizeof(brktrqa_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
}

void Brakeinfo_report_74::SharedCtor() {
  ::memset(&trace_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&brktrqa_) -
      reinterpret_cast<char*>(&trace_)) + sizeof(brktrqa_));
}

Brakeinfo_report_74::~Brakeinfo_report_74() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
  SharedDtor();
}

void Brakeinfo_report_74::SharedDtor() {
}

void Brakeinfo_report_74::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Brakeinfo_report_74& Brakeinfo_report_74::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Brakeinfo_report_74.base);
  return *internal_default_instance();
}


void Brakeinfo_report_74::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&trace_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&brktrqa_) -
      reinterpret_cast<char*>(&trace_)) + sizeof(brktrqa_));
  _internal_metadata_.Clear();
}

bool Brakeinfo_report_74::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.TraceType trace = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_trace(static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TraceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.TracaType traca = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_traca(static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TracaType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StabeType stabe = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stabe(static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StabaType staba = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_staba(static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabaType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double aog = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &aog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.AbseType abse = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_abse(static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbseType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.AbsaType absa = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_absa(static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbsaType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double whltrq = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &whltrq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.PbrakeType pbrake = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pbrake(static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_PbrakeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StatnryType statnry = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_statnry(static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StatnryType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.HsastatType hsastat = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hsastat(static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsastatType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.HsamodeType hsamode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hsamode(static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsamodeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double brktrqr = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &brktrqr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double brktrqa = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &brktrqa_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
  return false;
#undef DO_
}

void Brakeinfo_report_74::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.TraceType trace = 1;
  if (this->trace() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->trace(), output);
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.TracaType traca = 2;
  if (this->traca() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->traca(), output);
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StabeType stabe = 3;
  if (this->stabe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->stabe(), output);
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StabaType staba = 4;
  if (this->staba() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->staba(), output);
  }

  // double aog = 5;
  if (this->aog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->aog(), output);
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.AbseType abse = 6;
  if (this->abse() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->abse(), output);
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.AbsaType absa = 7;
  if (this->absa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->absa(), output);
  }

  // double whltrq = 8;
  if (this->whltrq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->whltrq(), output);
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.PbrakeType pbrake = 9;
  if (this->pbrake() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->pbrake(), output);
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StatnryType statnry = 10;
  if (this->statnry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->statnry(), output);
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.HsastatType hsastat = 11;
  if (this->hsastat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->hsastat(), output);
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.HsamodeType hsamode = 12;
  if (this->hsamode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->hsamode(), output);
  }

  // double brktrqr = 13;
  if (this->brktrqr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->brktrqr(), output);
  }

  // double brktrqa = 14;
  if (this->brktrqa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->brktrqa(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
}

size_t Brakeinfo_report_74::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.TraceType trace = 1;
  if (this->trace() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trace());
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.TracaType traca = 2;
  if (this->traca() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->traca());
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StabeType stabe = 3;
  if (this->stabe() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stabe());
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StabaType staba = 4;
  if (this->staba() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->staba());
  }

  // double aog = 5;
  if (this->aog() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.AbseType abse = 6;
  if (this->abse() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->abse());
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.AbsaType absa = 7;
  if (this->absa() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->absa());
  }

  // double whltrq = 8;
  if (this->whltrq() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.PbrakeType pbrake = 9;
  if (this->pbrake() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pbrake());
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StatnryType statnry = 10;
  if (this->statnry() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->statnry());
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.HsastatType hsastat = 11;
  if (this->hsastat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hsastat());
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.HsamodeType hsamode = 12;
  if (this->hsamode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hsamode());
  }

  // double brktrqr = 13;
  if (this->brktrqr() != 0) {
    total_size += 1 + 8;
  }

  // double brktrqa = 14;
  if (this->brktrqa() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Brakeinfo_report_74::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Brakeinfo_report_74*>(&from));
}

void Brakeinfo_report_74::MergeFrom(const Brakeinfo_report_74& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trace() != 0) {
    set_trace(from.trace());
  }
  if (from.traca() != 0) {
    set_traca(from.traca());
  }
  if (from.stabe() != 0) {
    set_stabe(from.stabe());
  }
  if (from.staba() != 0) {
    set_staba(from.staba());
  }
  if (from.aog() != 0) {
    set_aog(from.aog());
  }
  if (from.abse() != 0) {
    set_abse(from.abse());
  }
  if (from.absa() != 0) {
    set_absa(from.absa());
  }
  if (from.whltrq() != 0) {
    set_whltrq(from.whltrq());
  }
  if (from.pbrake() != 0) {
    set_pbrake(from.pbrake());
  }
  if (from.statnry() != 0) {
    set_statnry(from.statnry());
  }
  if (from.hsastat() != 0) {
    set_hsastat(from.hsastat());
  }
  if (from.hsamode() != 0) {
    set_hsamode(from.hsamode());
  }
  if (from.brktrqr() != 0) {
    set_brktrqr(from.brktrqr());
  }
  if (from.brktrqa() != 0) {
    set_brktrqa(from.brktrqa());
  }
}

void Brakeinfo_report_74::CopyFrom(const Brakeinfo_report_74& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Brakeinfo_report_74::IsInitialized() const {
  return true;
}

void Brakeinfo_report_74::Swap(Brakeinfo_report_74* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Brakeinfo_report_74::InternalSwap(Brakeinfo_report_74* other) {
  using std::swap;
  swap(trace_, other->trace_);
  swap(traca_, other->traca_);
  swap(stabe_, other->stabe_);
  swap(staba_, other->staba_);
  swap(aog_, other->aog_);
  swap(abse_, other->abse_);
  swap(absa_, other->absa_);
  swap(whltrq_, other->whltrq_);
  swap(pbrake_, other->pbrake_);
  swap(statnry_, other->statnry_);
  swap(hsastat_, other->hsastat_);
  swap(hsamode_, other->hsamode_);
  swap(brktrqr_, other->brktrqr_);
  swap(brktrqa_, other->brktrqa_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Brakeinfo_report_74::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Brakeinfo_report_74";
}


// ===================================================================

void Surround_report_73::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Surround_report_73::kEnsnrFieldNumber;
const int Surround_report_73::kFltsnrFieldNumber;
const int Surround_report_73::kSonar11FieldNumber;
const int Surround_report_73::kSonar10FieldNumber;
const int Surround_report_73::kSonar09FieldNumber;
const int Surround_report_73::kSonar08FieldNumber;
const int Surround_report_73::kSonar07FieldNumber;
const int Surround_report_73::kSonar06FieldNumber;
const int Surround_report_73::kSonar05FieldNumber;
const int Surround_report_73::kSonar04FieldNumber;
const int Surround_report_73::kSonar03FieldNumber;
const int Surround_report_73::kSonar02FieldNumber;
const int Surround_report_73::kSonar01FieldNumber;
const int Surround_report_73::kSonar00FieldNumber;
const int Surround_report_73::kBlisreFieldNumber;
const int Surround_report_73::kBlisraFieldNumber;
const int Surround_report_73::kBlisleFieldNumber;
const int Surround_report_73::kBlislaFieldNumber;
const int Surround_report_73::kCtareFieldNumber;
const int Surround_report_73::kCtaraFieldNumber;
const int Surround_report_73::kCtaleFieldNumber;
const int Surround_report_73::kCtalaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Surround_report_73::Surround_report_73()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Surround_report_73.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Surround_report_73)
}
Surround_report_73::Surround_report_73(const Surround_report_73& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ensnr_, &from.ensnr_,
    static_cast<size_t>(reinterpret_cast<char*>(&ctala_) -
    reinterpret_cast<char*>(&ensnr_)) + sizeof(ctala_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Surround_report_73)
}

void Surround_report_73::SharedCtor() {
  ::memset(&ensnr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ctala_) -
      reinterpret_cast<char*>(&ensnr_)) + sizeof(ctala_));
}

Surround_report_73::~Surround_report_73() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Surround_report_73)
  SharedDtor();
}

void Surround_report_73::SharedDtor() {
}

void Surround_report_73::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Surround_report_73& Surround_report_73::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Surround_report_73.base);
  return *internal_default_instance();
}


void Surround_report_73::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Surround_report_73)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ensnr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ctala_) -
      reinterpret_cast<char*>(&ensnr_)) + sizeof(ctala_));
  _internal_metadata_.Clear();
}

bool Surround_report_73::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Surround_report_73)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.drivers.CHASIS.Surround_report_73.EnsnrType ensnr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ensnr(static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_EnsnrType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Surround_report_73.FltsnrType fltsnr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fltsnr(static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_FltsnrType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar11 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar11_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar10 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar09 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar09_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar08 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar08_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar07 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar07_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar06 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar06_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar05 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar05_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar04 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar04_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar03 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar03_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar02 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar02_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar01 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar01_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sonar00 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sonar00_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Surround_report_73.BlisreType blisre = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_blisre(static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_BlisreType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Surround_report_73.BlisraType blisra = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_blisra(static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_BlisraType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Surround_report_73.BlisleType blisle = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_blisle(static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_BlisleType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Surround_report_73.BlislaType blisla = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_blisla(static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_BlislaType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Surround_report_73.CtareType ctare = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ctare(static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_CtareType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Surround_report_73.CtaraType ctara = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ctara(static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_CtaraType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Surround_report_73.CtaleType ctale = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ctale(static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_CtaleType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Surround_report_73.CtalaType ctala = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ctala(static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_CtalaType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Surround_report_73)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Surround_report_73)
  return false;
#undef DO_
}

void Surround_report_73::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Surround_report_73)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.drivers.CHASIS.Surround_report_73.EnsnrType ensnr = 1;
  if (this->ensnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ensnr(), output);
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.FltsnrType fltsnr = 2;
  if (this->fltsnr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->fltsnr(), output);
  }

  // double sonar11 = 3;
  if (this->sonar11() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->sonar11(), output);
  }

  // double sonar10 = 4;
  if (this->sonar10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->sonar10(), output);
  }

  // double sonar09 = 5;
  if (this->sonar09() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->sonar09(), output);
  }

  // double sonar08 = 6;
  if (this->sonar08() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->sonar08(), output);
  }

  // double sonar07 = 7;
  if (this->sonar07() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->sonar07(), output);
  }

  // double sonar06 = 8;
  if (this->sonar06() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->sonar06(), output);
  }

  // double sonar05 = 9;
  if (this->sonar05() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->sonar05(), output);
  }

  // double sonar04 = 10;
  if (this->sonar04() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->sonar04(), output);
  }

  // double sonar03 = 11;
  if (this->sonar03() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->sonar03(), output);
  }

  // double sonar02 = 12;
  if (this->sonar02() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->sonar02(), output);
  }

  // double sonar01 = 13;
  if (this->sonar01() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->sonar01(), output);
  }

  // double sonar00 = 14;
  if (this->sonar00() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->sonar00(), output);
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlisreType blisre = 15;
  if (this->blisre() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->blisre(), output);
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlisraType blisra = 16;
  if (this->blisra() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->blisra(), output);
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlisleType blisle = 17;
  if (this->blisle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->blisle(), output);
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlislaType blisla = 18;
  if (this->blisla() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      18, this->blisla(), output);
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtareType ctare = 19;
  if (this->ctare() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      19, this->ctare(), output);
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtaraType ctara = 20;
  if (this->ctara() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      20, this->ctara(), output);
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtaleType ctale = 21;
  if (this->ctale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->ctale(), output);
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtalaType ctala = 22;
  if (this->ctala() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->ctala(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Surround_report_73)
}

size_t Surround_report_73::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Surround_report_73)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.drivers.CHASIS.Surround_report_73.EnsnrType ensnr = 1;
  if (this->ensnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ensnr());
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.FltsnrType fltsnr = 2;
  if (this->fltsnr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fltsnr());
  }

  // double sonar11 = 3;
  if (this->sonar11() != 0) {
    total_size += 1 + 8;
  }

  // double sonar10 = 4;
  if (this->sonar10() != 0) {
    total_size += 1 + 8;
  }

  // double sonar09 = 5;
  if (this->sonar09() != 0) {
    total_size += 1 + 8;
  }

  // double sonar08 = 6;
  if (this->sonar08() != 0) {
    total_size += 1 + 8;
  }

  // double sonar07 = 7;
  if (this->sonar07() != 0) {
    total_size += 1 + 8;
  }

  // double sonar06 = 8;
  if (this->sonar06() != 0) {
    total_size += 1 + 8;
  }

  // double sonar05 = 9;
  if (this->sonar05() != 0) {
    total_size += 1 + 8;
  }

  // double sonar04 = 10;
  if (this->sonar04() != 0) {
    total_size += 1 + 8;
  }

  // double sonar03 = 11;
  if (this->sonar03() != 0) {
    total_size += 1 + 8;
  }

  // double sonar02 = 12;
  if (this->sonar02() != 0) {
    total_size += 1 + 8;
  }

  // double sonar01 = 13;
  if (this->sonar01() != 0) {
    total_size += 1 + 8;
  }

  // double sonar00 = 14;
  if (this->sonar00() != 0) {
    total_size += 1 + 8;
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlisreType blisre = 15;
  if (this->blisre() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->blisre());
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlisraType blisra = 16;
  if (this->blisra() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->blisra());
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlisleType blisle = 17;
  if (this->blisle() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->blisle());
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlislaType blisla = 18;
  if (this->blisla() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->blisla());
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtareType ctare = 19;
  if (this->ctare() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctare());
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtaraType ctara = 20;
  if (this->ctara() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctara());
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtaleType ctale = 21;
  if (this->ctale() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctale());
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtalaType ctala = 22;
  if (this->ctala() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctala());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Surround_report_73::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Surround_report_73*>(&from));
}

void Surround_report_73::MergeFrom(const Surround_report_73& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Surround_report_73)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ensnr() != 0) {
    set_ensnr(from.ensnr());
  }
  if (from.fltsnr() != 0) {
    set_fltsnr(from.fltsnr());
  }
  if (from.sonar11() != 0) {
    set_sonar11(from.sonar11());
  }
  if (from.sonar10() != 0) {
    set_sonar10(from.sonar10());
  }
  if (from.sonar09() != 0) {
    set_sonar09(from.sonar09());
  }
  if (from.sonar08() != 0) {
    set_sonar08(from.sonar08());
  }
  if (from.sonar07() != 0) {
    set_sonar07(from.sonar07());
  }
  if (from.sonar06() != 0) {
    set_sonar06(from.sonar06());
  }
  if (from.sonar05() != 0) {
    set_sonar05(from.sonar05());
  }
  if (from.sonar04() != 0) {
    set_sonar04(from.sonar04());
  }
  if (from.sonar03() != 0) {
    set_sonar03(from.sonar03());
  }
  if (from.sonar02() != 0) {
    set_sonar02(from.sonar02());
  }
  if (from.sonar01() != 0) {
    set_sonar01(from.sonar01());
  }
  if (from.sonar00() != 0) {
    set_sonar00(from.sonar00());
  }
  if (from.blisre() != 0) {
    set_blisre(from.blisre());
  }
  if (from.blisra() != 0) {
    set_blisra(from.blisra());
  }
  if (from.blisle() != 0) {
    set_blisle(from.blisle());
  }
  if (from.blisla() != 0) {
    set_blisla(from.blisla());
  }
  if (from.ctare() != 0) {
    set_ctare(from.ctare());
  }
  if (from.ctara() != 0) {
    set_ctara(from.ctara());
  }
  if (from.ctale() != 0) {
    set_ctale(from.ctale());
  }
  if (from.ctala() != 0) {
    set_ctala(from.ctala());
  }
}

void Surround_report_73::CopyFrom(const Surround_report_73& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Surround_report_73)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Surround_report_73::IsInitialized() const {
  return true;
}

void Surround_report_73::Swap(Surround_report_73* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Surround_report_73::InternalSwap(Surround_report_73* other) {
  using std::swap;
  swap(ensnr_, other->ensnr_);
  swap(fltsnr_, other->fltsnr_);
  swap(sonar11_, other->sonar11_);
  swap(sonar10_, other->sonar10_);
  swap(sonar09_, other->sonar09_);
  swap(sonar08_, other->sonar08_);
  swap(sonar07_, other->sonar07_);
  swap(sonar06_, other->sonar06_);
  swap(sonar05_, other->sonar05_);
  swap(sonar04_, other->sonar04_);
  swap(sonar03_, other->sonar03_);
  swap(sonar02_, other->sonar02_);
  swap(sonar01_, other->sonar01_);
  swap(sonar00_, other->sonar00_);
  swap(blisre_, other->blisre_);
  swap(blisra_, other->blisra_);
  swap(blisle_, other->blisle_);
  swap(blisla_, other->blisla_);
  swap(ctare_, other->ctare_);
  swap(ctara_, other->ctara_);
  swap(ctale_, other->ctale_);
  swap(ctala_, other->ctala_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Surround_report_73::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Surround_report_73";
}


// ===================================================================

void Fuellevel_report_72::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Fuellevel_report_72::kFuelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Fuellevel_report_72::Fuellevel_report_72()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Fuellevel_report_72.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Fuellevel_report_72)
}
Fuellevel_report_72::Fuellevel_report_72(const Fuellevel_report_72& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fuel_ = from.fuel_;
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Fuellevel_report_72)
}

void Fuellevel_report_72::SharedCtor() {
  fuel_ = 0;
}

Fuellevel_report_72::~Fuellevel_report_72() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Fuellevel_report_72)
  SharedDtor();
}

void Fuellevel_report_72::SharedDtor() {
}

void Fuellevel_report_72::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Fuellevel_report_72& Fuellevel_report_72::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Fuellevel_report_72.base);
  return *internal_default_instance();
}


void Fuellevel_report_72::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Fuellevel_report_72)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fuel_ = 0;
  _internal_metadata_.Clear();
}

bool Fuellevel_report_72::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Fuellevel_report_72)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double fuel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fuel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Fuellevel_report_72)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Fuellevel_report_72)
  return false;
#undef DO_
}

void Fuellevel_report_72::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Fuellevel_report_72)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double fuel = 1;
  if (this->fuel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->fuel(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Fuellevel_report_72)
}

size_t Fuellevel_report_72::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Fuellevel_report_72)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double fuel = 1;
  if (this->fuel() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Fuellevel_report_72::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Fuellevel_report_72*>(&from));
}

void Fuellevel_report_72::MergeFrom(const Fuellevel_report_72& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Fuellevel_report_72)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fuel() != 0) {
    set_fuel(from.fuel());
  }
}

void Fuellevel_report_72::CopyFrom(const Fuellevel_report_72& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Fuellevel_report_72)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fuellevel_report_72::IsInitialized() const {
  return true;
}

void Fuellevel_report_72::Swap(Fuellevel_report_72* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Fuellevel_report_72::InternalSwap(Fuellevel_report_72* other) {
  using std::swap;
  swap(fuel_, other->fuel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Fuellevel_report_72::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Fuellevel_report_72";
}


// ===================================================================

void Tirepressure_report_71::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tirepressure_report_71::kRrFieldNumber;
const int Tirepressure_report_71::kRlFieldNumber;
const int Tirepressure_report_71::kFrFieldNumber;
const int Tirepressure_report_71::kFlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tirepressure_report_71::Tirepressure_report_71()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Tirepressure_report_71.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Tirepressure_report_71)
}
Tirepressure_report_71::Tirepressure_report_71(const Tirepressure_report_71& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rr_, &from.rr_,
    static_cast<size_t>(reinterpret_cast<char*>(&fl_) -
    reinterpret_cast<char*>(&rr_)) + sizeof(fl_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Tirepressure_report_71)
}

void Tirepressure_report_71::SharedCtor() {
  ::memset(&rr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fl_) -
      reinterpret_cast<char*>(&rr_)) + sizeof(fl_));
}

Tirepressure_report_71::~Tirepressure_report_71() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Tirepressure_report_71)
  SharedDtor();
}

void Tirepressure_report_71::SharedDtor() {
}

void Tirepressure_report_71::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Tirepressure_report_71& Tirepressure_report_71::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Tirepressure_report_71.base);
  return *internal_default_instance();
}


void Tirepressure_report_71::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Tirepressure_report_71)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fl_) -
      reinterpret_cast<char*>(&rr_)) + sizeof(fl_));
  _internal_metadata_.Clear();
}

bool Tirepressure_report_71::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Tirepressure_report_71)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Tirepressure_report_71)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Tirepressure_report_71)
  return false;
#undef DO_
}

void Tirepressure_report_71::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Tirepressure_report_71)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rr = 1;
  if (this->rr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rr(), output);
  }

  // int32 rl = 2;
  if (this->rl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rl(), output);
  }

  // int32 fr = 3;
  if (this->fr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fr(), output);
  }

  // int32 fl = 4;
  if (this->fl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->fl(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Tirepressure_report_71)
}

size_t Tirepressure_report_71::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Tirepressure_report_71)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 rr = 1;
  if (this->rr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rr());
  }

  // int32 rl = 2;
  if (this->rl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rl());
  }

  // int32 fr = 3;
  if (this->fr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fr());
  }

  // int32 fl = 4;
  if (this->fl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tirepressure_report_71::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Tirepressure_report_71*>(&from));
}

void Tirepressure_report_71::MergeFrom(const Tirepressure_report_71& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Tirepressure_report_71)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rr() != 0) {
    set_rr(from.rr());
  }
  if (from.rl() != 0) {
    set_rl(from.rl());
  }
  if (from.fr() != 0) {
    set_fr(from.fr());
  }
  if (from.fl() != 0) {
    set_fl(from.fl());
  }
}

void Tirepressure_report_71::CopyFrom(const Tirepressure_report_71& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Tirepressure_report_71)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tirepressure_report_71::IsInitialized() const {
  return true;
}

void Tirepressure_report_71::Swap(Tirepressure_report_71* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tirepressure_report_71::InternalSwap(Tirepressure_report_71* other) {
  using std::swap;
  swap(rr_, other->rr_);
  swap(rl_, other->rl_);
  swap(fr_, other->fr_);
  swap(fl_, other->fl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Tirepressure_report_71::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Tirepressure_report_71";
}


// ===================================================================

void Wheelposition_report_70::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Wheelposition_report_70::kRrFieldNumber;
const int Wheelposition_report_70::kRlFieldNumber;
const int Wheelposition_report_70::kFrFieldNumber;
const int Wheelposition_report_70::kFlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Wheelposition_report_70::Wheelposition_report_70()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Wheelposition_report_70.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Wheelposition_report_70)
}
Wheelposition_report_70::Wheelposition_report_70(const Wheelposition_report_70& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rr_, &from.rr_,
    static_cast<size_t>(reinterpret_cast<char*>(&fl_) -
    reinterpret_cast<char*>(&rr_)) + sizeof(fl_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Wheelposition_report_70)
}

void Wheelposition_report_70::SharedCtor() {
  ::memset(&rr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fl_) -
      reinterpret_cast<char*>(&rr_)) + sizeof(fl_));
}

Wheelposition_report_70::~Wheelposition_report_70() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Wheelposition_report_70)
  SharedDtor();
}

void Wheelposition_report_70::SharedDtor() {
}

void Wheelposition_report_70::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Wheelposition_report_70& Wheelposition_report_70::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Wheelposition_report_70.base);
  return *internal_default_instance();
}


void Wheelposition_report_70::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Wheelposition_report_70)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fl_) -
      reinterpret_cast<char*>(&rr_)) + sizeof(fl_));
  _internal_metadata_.Clear();
}

bool Wheelposition_report_70::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Wheelposition_report_70)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Wheelposition_report_70)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Wheelposition_report_70)
  return false;
#undef DO_
}

void Wheelposition_report_70::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Wheelposition_report_70)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rr = 1;
  if (this->rr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rr(), output);
  }

  // int32 rl = 2;
  if (this->rl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rl(), output);
  }

  // int32 fr = 3;
  if (this->fr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fr(), output);
  }

  // int32 fl = 4;
  if (this->fl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->fl(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Wheelposition_report_70)
}

size_t Wheelposition_report_70::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Wheelposition_report_70)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 rr = 1;
  if (this->rr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rr());
  }

  // int32 rl = 2;
  if (this->rl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rl());
  }

  // int32 fr = 3;
  if (this->fr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fr());
  }

  // int32 fl = 4;
  if (this->fl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Wheelposition_report_70::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Wheelposition_report_70*>(&from));
}

void Wheelposition_report_70::MergeFrom(const Wheelposition_report_70& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Wheelposition_report_70)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rr() != 0) {
    set_rr(from.rr());
  }
  if (from.rl() != 0) {
    set_rl(from.rl());
  }
  if (from.fr() != 0) {
    set_fr(from.fr());
  }
  if (from.fl() != 0) {
    set_fl(from.fl());
  }
}

void Wheelposition_report_70::CopyFrom(const Wheelposition_report_70& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Wheelposition_report_70)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Wheelposition_report_70::IsInitialized() const {
  return true;
}

void Wheelposition_report_70::Swap(Wheelposition_report_70* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Wheelposition_report_70::InternalSwap(Wheelposition_report_70* other) {
  using std::swap;
  swap(rr_, other->rr_);
  swap(rl_, other->rl_);
  swap(fr_, other->fr_);
  swap(fl_, other->fl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Wheelposition_report_70::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Wheelposition_report_70";
}


// ===================================================================

void Suspension_79::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Suspension_79::kSuspensionRrFieldNumber;
const int Suspension_79::kSuspensionRlFieldNumber;
const int Suspension_79::kSuspensionFrFieldNumber;
const int Suspension_79::kSuspensionFlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Suspension_79::Suspension_79()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Suspension_79.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Suspension_79)
}
Suspension_79::Suspension_79(const Suspension_79& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&suspension_rr_, &from.suspension_rr_,
    static_cast<size_t>(reinterpret_cast<char*>(&suspension_fl_) -
    reinterpret_cast<char*>(&suspension_rr_)) + sizeof(suspension_fl_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Suspension_79)
}

void Suspension_79::SharedCtor() {
  ::memset(&suspension_rr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suspension_fl_) -
      reinterpret_cast<char*>(&suspension_rr_)) + sizeof(suspension_fl_));
}

Suspension_79::~Suspension_79() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Suspension_79)
  SharedDtor();
}

void Suspension_79::SharedDtor() {
}

void Suspension_79::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Suspension_79& Suspension_79::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Suspension_79.base);
  return *internal_default_instance();
}


void Suspension_79::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Suspension_79)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&suspension_rr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suspension_fl_) -
      reinterpret_cast<char*>(&suspension_rr_)) + sizeof(suspension_fl_));
  _internal_metadata_.Clear();
}

bool Suspension_79::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Suspension_79)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double suspension_rr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &suspension_rr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double suspension_rl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &suspension_rl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double suspension_fr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &suspension_fr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double suspension_fl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &suspension_fl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Suspension_79)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Suspension_79)
  return false;
#undef DO_
}

void Suspension_79::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Suspension_79)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double suspension_rr = 1;
  if (this->suspension_rr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->suspension_rr(), output);
  }

  // double suspension_rl = 2;
  if (this->suspension_rl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->suspension_rl(), output);
  }

  // double suspension_fr = 3;
  if (this->suspension_fr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->suspension_fr(), output);
  }

  // double suspension_fl = 4;
  if (this->suspension_fl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->suspension_fl(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Suspension_79)
}

size_t Suspension_79::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Suspension_79)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double suspension_rr = 1;
  if (this->suspension_rr() != 0) {
    total_size += 1 + 8;
  }

  // double suspension_rl = 2;
  if (this->suspension_rl() != 0) {
    total_size += 1 + 8;
  }

  // double suspension_fr = 3;
  if (this->suspension_fr() != 0) {
    total_size += 1 + 8;
  }

  // double suspension_fl = 4;
  if (this->suspension_fl() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Suspension_79::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Suspension_79*>(&from));
}

void Suspension_79::MergeFrom(const Suspension_79& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Suspension_79)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suspension_rr() != 0) {
    set_suspension_rr(from.suspension_rr());
  }
  if (from.suspension_rl() != 0) {
    set_suspension_rl(from.suspension_rl());
  }
  if (from.suspension_fr() != 0) {
    set_suspension_fr(from.suspension_fr());
  }
  if (from.suspension_fl() != 0) {
    set_suspension_fl(from.suspension_fl());
  }
}

void Suspension_79::CopyFrom(const Suspension_79& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Suspension_79)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Suspension_79::IsInitialized() const {
  return true;
}

void Suspension_79::Swap(Suspension_79* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Suspension_79::InternalSwap(Suspension_79* other) {
  using std::swap;
  swap(suspension_rr_, other->suspension_rr_);
  swap(suspension_rl_, other->suspension_rl_);
  swap(suspension_fr_, other->suspension_fr_);
  swap(suspension_fl_, other->suspension_fl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Suspension_79::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Suspension_79";
}


// ===================================================================

void Pms_voltage_1b0::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pms_voltage_1b0::kVol35VFieldNumber;
const int Pms_voltage_1b0::kVol212VFieldNumber;
const int Pms_voltage_1b0::kVol1BatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pms_voltage_1b0::Pms_voltage_1b0()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Pms_voltage_1b0.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
}
Pms_voltage_1b0::Pms_voltage_1b0(const Pms_voltage_1b0& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vol3_5v_, &from.vol3_5v_,
    static_cast<size_t>(reinterpret_cast<char*>(&vol1_bat_) -
    reinterpret_cast<char*>(&vol3_5v_)) + sizeof(vol1_bat_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
}

void Pms_voltage_1b0::SharedCtor() {
  ::memset(&vol3_5v_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vol1_bat_) -
      reinterpret_cast<char*>(&vol3_5v_)) + sizeof(vol1_bat_));
}

Pms_voltage_1b0::~Pms_voltage_1b0() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
  SharedDtor();
}

void Pms_voltage_1b0::SharedDtor() {
}

void Pms_voltage_1b0::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pms_voltage_1b0& Pms_voltage_1b0::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Pms_voltage_1b0.base);
  return *internal_default_instance();
}


void Pms_voltage_1b0::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vol3_5v_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vol1_bat_) -
      reinterpret_cast<char*>(&vol3_5v_)) + sizeof(vol1_bat_));
  _internal_metadata_.Clear();
}

bool Pms_voltage_1b0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double vol3_5v = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vol3_5v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vol2_12v = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vol2_12v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vol1_bat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vol1_bat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
  return false;
#undef DO_
}

void Pms_voltage_1b0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double vol3_5v = 1;
  if (this->vol3_5v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->vol3_5v(), output);
  }

  // double vol2_12v = 2;
  if (this->vol2_12v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->vol2_12v(), output);
  }

  // double vol1_bat = 3;
  if (this->vol1_bat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->vol1_bat(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
}

size_t Pms_voltage_1b0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // double vol3_5v = 1;
  if (this->vol3_5v() != 0) {
    total_size += 1 + 8;
  }

  // double vol2_12v = 2;
  if (this->vol2_12v() != 0) {
    total_size += 1 + 8;
  }

  // double vol1_bat = 3;
  if (this->vol1_bat() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pms_voltage_1b0::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Pms_voltage_1b0*>(&from));
}

void Pms_voltage_1b0::MergeFrom(const Pms_voltage_1b0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vol3_5v() != 0) {
    set_vol3_5v(from.vol3_5v());
  }
  if (from.vol2_12v() != 0) {
    set_vol2_12v(from.vol2_12v());
  }
  if (from.vol1_bat() != 0) {
    set_vol1_bat(from.vol1_bat());
  }
}

void Pms_voltage_1b0::CopyFrom(const Pms_voltage_1b0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pms_voltage_1b0::IsInitialized() const {
  return true;
}

void Pms_voltage_1b0::Swap(Pms_voltage_1b0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pms_voltage_1b0::InternalSwap(Pms_voltage_1b0* other) {
  using std::swap;
  swap(vol3_5v_, other->vol3_5v_);
  swap(vol2_12v_, other->vol2_12v_);
  swap(vol1_bat_, other->vol1_bat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Pms_voltage_1b0::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Pms_voltage_1b0";
}


// ===================================================================

void Pms_sta_1e0::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pms_sta_1e0::kState9FieldNumber;
const int Pms_sta_1e0::kState8FieldNumber;
const int Pms_sta_1e0::kState7FieldNumber;
const int Pms_sta_1e0::kState6FieldNumber;
const int Pms_sta_1e0::kState5FieldNumber;
const int Pms_sta_1e0::kState4FieldNumber;
const int Pms_sta_1e0::kState3FieldNumber;
const int Pms_sta_1e0::kState2FieldNumber;
const int Pms_sta_1e0::kState16AccinFieldNumber;
const int Pms_sta_1e0::kState15BlankFieldNumber;
const int Pms_sta_1e0::kState14RelayFieldNumber;
const int Pms_sta_1e0::kState13DcdcFieldNumber;
const int Pms_sta_1e0::kState12FieldNumber;
const int Pms_sta_1e0::kState11FieldNumber;
const int Pms_sta_1e0::kState10FieldNumber;
const int Pms_sta_1e0::kState1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pms_sta_1e0::Pms_sta_1e0()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Pms_sta_1e0.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Pms_sta_1e0)
}
Pms_sta_1e0::Pms_sta_1e0(const Pms_sta_1e0& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state9_, &from.state9_,
    static_cast<size_t>(reinterpret_cast<char*>(&state1_) -
    reinterpret_cast<char*>(&state9_)) + sizeof(state1_));
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Pms_sta_1e0)
}

void Pms_sta_1e0::SharedCtor() {
  ::memset(&state9_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state1_) -
      reinterpret_cast<char*>(&state9_)) + sizeof(state1_));
}

Pms_sta_1e0::~Pms_sta_1e0() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Pms_sta_1e0)
  SharedDtor();
}

void Pms_sta_1e0::SharedDtor() {
}

void Pms_sta_1e0::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pms_sta_1e0& Pms_sta_1e0::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Pms_sta_1e0.base);
  return *internal_default_instance();
}


void Pms_sta_1e0::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Pms_sta_1e0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state9_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state1_) -
      reinterpret_cast<char*>(&state9_)) + sizeof(state1_));
  _internal_metadata_.Clear();
}

bool Pms_sta_1e0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Pms_sta_1e0)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool state9 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state9_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state8 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state7 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state6 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state3 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state2 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state16_accin = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state16_accin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state15_blank = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state15_blank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state14_relay = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state14_relay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state13_dcdc = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state13_dcdc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state12 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state12_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state11 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state11_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state10 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state1 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Pms_sta_1e0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Pms_sta_1e0)
  return false;
#undef DO_
}

void Pms_sta_1e0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Pms_sta_1e0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool state9 = 1;
  if (this->state9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->state9(), output);
  }

  // bool state8 = 2;
  if (this->state8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->state8(), output);
  }

  // bool state7 = 3;
  if (this->state7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->state7(), output);
  }

  // bool state6 = 4;
  if (this->state6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->state6(), output);
  }

  // bool state5 = 5;
  if (this->state5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->state5(), output);
  }

  // bool state4 = 6;
  if (this->state4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->state4(), output);
  }

  // bool state3 = 7;
  if (this->state3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->state3(), output);
  }

  // bool state2 = 8;
  if (this->state2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->state2(), output);
  }

  // bool state16_accin = 9;
  if (this->state16_accin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->state16_accin(), output);
  }

  // bool state15_blank = 10;
  if (this->state15_blank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->state15_blank(), output);
  }

  // bool state14_relay = 11;
  if (this->state14_relay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->state14_relay(), output);
  }

  // bool state13_dcdc = 12;
  if (this->state13_dcdc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->state13_dcdc(), output);
  }

  // bool state12 = 13;
  if (this->state12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->state12(), output);
  }

  // bool state11 = 14;
  if (this->state11() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->state11(), output);
  }

  // bool state10 = 15;
  if (this->state10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->state10(), output);
  }

  // bool state1 = 16;
  if (this->state1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->state1(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Pms_sta_1e0)
}

size_t Pms_sta_1e0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Pms_sta_1e0)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // bool state9 = 1;
  if (this->state9() != 0) {
    total_size += 1 + 1;
  }

  // bool state8 = 2;
  if (this->state8() != 0) {
    total_size += 1 + 1;
  }

  // bool state7 = 3;
  if (this->state7() != 0) {
    total_size += 1 + 1;
  }

  // bool state6 = 4;
  if (this->state6() != 0) {
    total_size += 1 + 1;
  }

  // bool state5 = 5;
  if (this->state5() != 0) {
    total_size += 1 + 1;
  }

  // bool state4 = 6;
  if (this->state4() != 0) {
    total_size += 1 + 1;
  }

  // bool state3 = 7;
  if (this->state3() != 0) {
    total_size += 1 + 1;
  }

  // bool state2 = 8;
  if (this->state2() != 0) {
    total_size += 1 + 1;
  }

  // bool state16_accin = 9;
  if (this->state16_accin() != 0) {
    total_size += 1 + 1;
  }

  // bool state15_blank = 10;
  if (this->state15_blank() != 0) {
    total_size += 1 + 1;
  }

  // bool state14_relay = 11;
  if (this->state14_relay() != 0) {
    total_size += 1 + 1;
  }

  // bool state13_dcdc = 12;
  if (this->state13_dcdc() != 0) {
    total_size += 1 + 1;
  }

  // bool state12 = 13;
  if (this->state12() != 0) {
    total_size += 1 + 1;
  }

  // bool state11 = 14;
  if (this->state11() != 0) {
    total_size += 1 + 1;
  }

  // bool state10 = 15;
  if (this->state10() != 0) {
    total_size += 1 + 1;
  }

  // bool state1 = 16;
  if (this->state1() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pms_sta_1e0::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Pms_sta_1e0*>(&from));
}

void Pms_sta_1e0::MergeFrom(const Pms_sta_1e0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Pms_sta_1e0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state9() != 0) {
    set_state9(from.state9());
  }
  if (from.state8() != 0) {
    set_state8(from.state8());
  }
  if (from.state7() != 0) {
    set_state7(from.state7());
  }
  if (from.state6() != 0) {
    set_state6(from.state6());
  }
  if (from.state5() != 0) {
    set_state5(from.state5());
  }
  if (from.state4() != 0) {
    set_state4(from.state4());
  }
  if (from.state3() != 0) {
    set_state3(from.state3());
  }
  if (from.state2() != 0) {
    set_state2(from.state2());
  }
  if (from.state16_accin() != 0) {
    set_state16_accin(from.state16_accin());
  }
  if (from.state15_blank() != 0) {
    set_state15_blank(from.state15_blank());
  }
  if (from.state14_relay() != 0) {
    set_state14_relay(from.state14_relay());
  }
  if (from.state13_dcdc() != 0) {
    set_state13_dcdc(from.state13_dcdc());
  }
  if (from.state12() != 0) {
    set_state12(from.state12());
  }
  if (from.state11() != 0) {
    set_state11(from.state11());
  }
  if (from.state10() != 0) {
    set_state10(from.state10());
  }
  if (from.state1() != 0) {
    set_state1(from.state1());
  }
}

void Pms_sta_1e0::CopyFrom(const Pms_sta_1e0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Pms_sta_1e0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pms_sta_1e0::IsInitialized() const {
  return true;
}

void Pms_sta_1e0::Swap(Pms_sta_1e0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pms_sta_1e0::InternalSwap(Pms_sta_1e0* other) {
  using std::swap;
  swap(state9_, other->state9_);
  swap(state8_, other->state8_);
  swap(state7_, other->state7_);
  swap(state6_, other->state6_);
  swap(state5_, other->state5_);
  swap(state4_, other->state4_);
  swap(state3_, other->state3_);
  swap(state2_, other->state2_);
  swap(state16_accin_, other->state16_accin_);
  swap(state15_blank_, other->state15_blank_);
  swap(state14_relay_, other->state14_relay_);
  swap(state13_dcdc_, other->state13_dcdc_);
  swap(state12_, other->state12_);
  swap(state11_, other->state11_);
  swap(state10_, other->state10_);
  swap(state1_, other->state1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Pms_sta_1e0::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Pms_sta_1e0";
}


// ===================================================================

void Chasis::InitAsDefaultInstance() {
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->header_ = const_cast< ::Calmcar::common::Header*>(
      ::Calmcar::common::Header::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->version_ss_7f_ = const_cast< ::Calmcar::drivers::CHASIS::Version_ss_7f*>(
      ::Calmcar::drivers::CHASIS::Version_ss_7f::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->version_bt_7e_ = const_cast< ::Calmcar::drivers::CHASIS::Version_bt_7e*>(
      ::Calmcar::drivers::CHASIS::Version_bt_7e::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->misc_report_ss_7b_ = const_cast< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b*>(
      ::Calmcar::drivers::CHASIS::Misc_report_ss_7b::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->brake_command_60_ = const_cast< ::Calmcar::drivers::CHASIS::Brake_command_60*>(
      ::Calmcar::drivers::CHASIS::Brake_command_60::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->brake_report_61_ = const_cast< ::Calmcar::drivers::CHASIS::Brake_report_61*>(
      ::Calmcar::drivers::CHASIS::Brake_report_61::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->throttle_command_62_ = const_cast< ::Calmcar::drivers::CHASIS::Throttle_command_62*>(
      ::Calmcar::drivers::CHASIS::Throttle_command_62::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->throttle_report_63_ = const_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63*>(
      ::Calmcar::drivers::CHASIS::Throttle_report_63::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->steering_command_64_ = const_cast< ::Calmcar::drivers::CHASIS::Steering_command_64*>(
      ::Calmcar::drivers::CHASIS::Steering_command_64::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->steering_report_65_ = const_cast< ::Calmcar::drivers::CHASIS::Steering_report_65*>(
      ::Calmcar::drivers::CHASIS::Steering_report_65::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->gear_command_66_ = const_cast< ::Calmcar::drivers::CHASIS::Gear_command_66*>(
      ::Calmcar::drivers::CHASIS::Gear_command_66::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->gear_report_67_ = const_cast< ::Calmcar::drivers::CHASIS::Gear_report_67*>(
      ::Calmcar::drivers::CHASIS::Gear_report_67::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->turnsignal_command_68_ = const_cast< ::Calmcar::drivers::CHASIS::Turnsignal_command_68*>(
      ::Calmcar::drivers::CHASIS::Turnsignal_command_68::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->misc_report_69_ = const_cast< ::Calmcar::drivers::CHASIS::Misc_report_69*>(
      ::Calmcar::drivers::CHASIS::Misc_report_69::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->pms_current_4_1c3_ = const_cast< ::Calmcar::drivers::CHASIS::Pms_current_4_1c3*>(
      ::Calmcar::drivers::CHASIS::Pms_current_4_1c3::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->pms_current_3_1c2_ = const_cast< ::Calmcar::drivers::CHASIS::Pms_current_3_1c2*>(
      ::Calmcar::drivers::CHASIS::Pms_current_3_1c2::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->pms_current_2_1c1_ = const_cast< ::Calmcar::drivers::CHASIS::Pms_current_2_1c1*>(
      ::Calmcar::drivers::CHASIS::Pms_current_2_1c1::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->pms_current_1_1c0_ = const_cast< ::Calmcar::drivers::CHASIS::Pms_current_1_1c0*>(
      ::Calmcar::drivers::CHASIS::Pms_current_1_1c0::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->pms_cmd_1ba_ = const_cast< ::Calmcar::drivers::CHASIS::Pms_cmd_1ba*>(
      ::Calmcar::drivers::CHASIS::Pms_cmd_1ba::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->wheelspeed_report_6a_ = const_cast< ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a*>(
      ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->accel_report_6b_ = const_cast< ::Calmcar::drivers::CHASIS::Accel_report_6b*>(
      ::Calmcar::drivers::CHASIS::Accel_report_6b::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->gyro_report_6c_ = const_cast< ::Calmcar::drivers::CHASIS::Gyro_report_6c*>(
      ::Calmcar::drivers::CHASIS::Gyro_report_6c::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->gps_1_report_6d_ = const_cast< ::Calmcar::drivers::CHASIS::Gps_1_report_6d*>(
      ::Calmcar::drivers::CHASIS::Gps_1_report_6d::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->gps_2_report_6e_ = const_cast< ::Calmcar::drivers::CHASIS::Gps_2_report_6e*>(
      ::Calmcar::drivers::CHASIS::Gps_2_report_6e::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->gps_3_report_6f_ = const_cast< ::Calmcar::drivers::CHASIS::Gps_3_report_6f*>(
      ::Calmcar::drivers::CHASIS::Gps_3_report_6f::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->throttleinfo_report_75_ = const_cast< ::Calmcar::drivers::CHASIS::Throttleinfo_report_75*>(
      ::Calmcar::drivers::CHASIS::Throttleinfo_report_75::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->brakeinfo_report_74_ = const_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74*>(
      ::Calmcar::drivers::CHASIS::Brakeinfo_report_74::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->surround_report_73_ = const_cast< ::Calmcar::drivers::CHASIS::Surround_report_73*>(
      ::Calmcar::drivers::CHASIS::Surround_report_73::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->fuellevel_report_72_ = const_cast< ::Calmcar::drivers::CHASIS::Fuellevel_report_72*>(
      ::Calmcar::drivers::CHASIS::Fuellevel_report_72::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->tirepressure_report_71_ = const_cast< ::Calmcar::drivers::CHASIS::Tirepressure_report_71*>(
      ::Calmcar::drivers::CHASIS::Tirepressure_report_71::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->wheelposition_report_70_ = const_cast< ::Calmcar::drivers::CHASIS::Wheelposition_report_70*>(
      ::Calmcar::drivers::CHASIS::Wheelposition_report_70::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->suspension_79_ = const_cast< ::Calmcar::drivers::CHASIS::Suspension_79*>(
      ::Calmcar::drivers::CHASIS::Suspension_79::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->pms_voltage_1b0_ = const_cast< ::Calmcar::drivers::CHASIS::Pms_voltage_1b0*>(
      ::Calmcar::drivers::CHASIS::Pms_voltage_1b0::internal_default_instance());
  ::Calmcar::drivers::CHASIS::_Chasis_default_instance_._instance.get_mutable()->pms_sta_1e0_ = const_cast< ::Calmcar::drivers::CHASIS::Pms_sta_1e0*>(
      ::Calmcar::drivers::CHASIS::Pms_sta_1e0::internal_default_instance());
}
void Chasis::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Chasis::kHeaderFieldNumber;
const int Chasis::kVersionSs7FFieldNumber;
const int Chasis::kVersionBt7EFieldNumber;
const int Chasis::kMiscReportSs7BFieldNumber;
const int Chasis::kBrakeCommand60FieldNumber;
const int Chasis::kBrakeReport61FieldNumber;
const int Chasis::kThrottleCommand62FieldNumber;
const int Chasis::kThrottleReport63FieldNumber;
const int Chasis::kSteeringCommand64FieldNumber;
const int Chasis::kSteeringReport65FieldNumber;
const int Chasis::kGearCommand66FieldNumber;
const int Chasis::kGearReport67FieldNumber;
const int Chasis::kTurnsignalCommand68FieldNumber;
const int Chasis::kMiscReport69FieldNumber;
const int Chasis::kPmsCurrent41C3FieldNumber;
const int Chasis::kPmsCurrent31C2FieldNumber;
const int Chasis::kPmsCurrent21C1FieldNumber;
const int Chasis::kPmsCurrent11C0FieldNumber;
const int Chasis::kPmsCmd1BaFieldNumber;
const int Chasis::kWheelspeedReport6AFieldNumber;
const int Chasis::kAccelReport6BFieldNumber;
const int Chasis::kGyroReport6CFieldNumber;
const int Chasis::kGps1Report6DFieldNumber;
const int Chasis::kGps2Report6EFieldNumber;
const int Chasis::kGps3Report6FFieldNumber;
const int Chasis::kThrottleinfoReport75FieldNumber;
const int Chasis::kBrakeinfoReport74FieldNumber;
const int Chasis::kSurroundReport73FieldNumber;
const int Chasis::kFuellevelReport72FieldNumber;
const int Chasis::kTirepressureReport71FieldNumber;
const int Chasis::kWheelpositionReport70FieldNumber;
const int Chasis::kSuspension79FieldNumber;
const int Chasis::kPmsVoltage1B0FieldNumber;
const int Chasis::kPmsSta1E0FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Chasis::Chasis()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chasis_2eproto::scc_info_Chasis.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calmcar.drivers.CHASIS.Chasis)
}
Chasis::Chasis(const Chasis& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::Calmcar::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_version_ss_7f()) {
    version_ss_7f_ = new ::Calmcar::drivers::CHASIS::Version_ss_7f(*from.version_ss_7f_);
  } else {
    version_ss_7f_ = NULL;
  }
  if (from.has_version_bt_7e()) {
    version_bt_7e_ = new ::Calmcar::drivers::CHASIS::Version_bt_7e(*from.version_bt_7e_);
  } else {
    version_bt_7e_ = NULL;
  }
  if (from.has_misc_report_ss_7b()) {
    misc_report_ss_7b_ = new ::Calmcar::drivers::CHASIS::Misc_report_ss_7b(*from.misc_report_ss_7b_);
  } else {
    misc_report_ss_7b_ = NULL;
  }
  if (from.has_brake_command_60()) {
    brake_command_60_ = new ::Calmcar::drivers::CHASIS::Brake_command_60(*from.brake_command_60_);
  } else {
    brake_command_60_ = NULL;
  }
  if (from.has_brake_report_61()) {
    brake_report_61_ = new ::Calmcar::drivers::CHASIS::Brake_report_61(*from.brake_report_61_);
  } else {
    brake_report_61_ = NULL;
  }
  if (from.has_throttle_command_62()) {
    throttle_command_62_ = new ::Calmcar::drivers::CHASIS::Throttle_command_62(*from.throttle_command_62_);
  } else {
    throttle_command_62_ = NULL;
  }
  if (from.has_throttle_report_63()) {
    throttle_report_63_ = new ::Calmcar::drivers::CHASIS::Throttle_report_63(*from.throttle_report_63_);
  } else {
    throttle_report_63_ = NULL;
  }
  if (from.has_steering_command_64()) {
    steering_command_64_ = new ::Calmcar::drivers::CHASIS::Steering_command_64(*from.steering_command_64_);
  } else {
    steering_command_64_ = NULL;
  }
  if (from.has_steering_report_65()) {
    steering_report_65_ = new ::Calmcar::drivers::CHASIS::Steering_report_65(*from.steering_report_65_);
  } else {
    steering_report_65_ = NULL;
  }
  if (from.has_gear_command_66()) {
    gear_command_66_ = new ::Calmcar::drivers::CHASIS::Gear_command_66(*from.gear_command_66_);
  } else {
    gear_command_66_ = NULL;
  }
  if (from.has_gear_report_67()) {
    gear_report_67_ = new ::Calmcar::drivers::CHASIS::Gear_report_67(*from.gear_report_67_);
  } else {
    gear_report_67_ = NULL;
  }
  if (from.has_turnsignal_command_68()) {
    turnsignal_command_68_ = new ::Calmcar::drivers::CHASIS::Turnsignal_command_68(*from.turnsignal_command_68_);
  } else {
    turnsignal_command_68_ = NULL;
  }
  if (from.has_misc_report_69()) {
    misc_report_69_ = new ::Calmcar::drivers::CHASIS::Misc_report_69(*from.misc_report_69_);
  } else {
    misc_report_69_ = NULL;
  }
  if (from.has_pms_current_4_1c3()) {
    pms_current_4_1c3_ = new ::Calmcar::drivers::CHASIS::Pms_current_4_1c3(*from.pms_current_4_1c3_);
  } else {
    pms_current_4_1c3_ = NULL;
  }
  if (from.has_pms_current_3_1c2()) {
    pms_current_3_1c2_ = new ::Calmcar::drivers::CHASIS::Pms_current_3_1c2(*from.pms_current_3_1c2_);
  } else {
    pms_current_3_1c2_ = NULL;
  }
  if (from.has_pms_current_2_1c1()) {
    pms_current_2_1c1_ = new ::Calmcar::drivers::CHASIS::Pms_current_2_1c1(*from.pms_current_2_1c1_);
  } else {
    pms_current_2_1c1_ = NULL;
  }
  if (from.has_pms_current_1_1c0()) {
    pms_current_1_1c0_ = new ::Calmcar::drivers::CHASIS::Pms_current_1_1c0(*from.pms_current_1_1c0_);
  } else {
    pms_current_1_1c0_ = NULL;
  }
  if (from.has_pms_cmd_1ba()) {
    pms_cmd_1ba_ = new ::Calmcar::drivers::CHASIS::Pms_cmd_1ba(*from.pms_cmd_1ba_);
  } else {
    pms_cmd_1ba_ = NULL;
  }
  if (from.has_wheelspeed_report_6a()) {
    wheelspeed_report_6a_ = new ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a(*from.wheelspeed_report_6a_);
  } else {
    wheelspeed_report_6a_ = NULL;
  }
  if (from.has_accel_report_6b()) {
    accel_report_6b_ = new ::Calmcar::drivers::CHASIS::Accel_report_6b(*from.accel_report_6b_);
  } else {
    accel_report_6b_ = NULL;
  }
  if (from.has_gyro_report_6c()) {
    gyro_report_6c_ = new ::Calmcar::drivers::CHASIS::Gyro_report_6c(*from.gyro_report_6c_);
  } else {
    gyro_report_6c_ = NULL;
  }
  if (from.has_gps_1_report_6d()) {
    gps_1_report_6d_ = new ::Calmcar::drivers::CHASIS::Gps_1_report_6d(*from.gps_1_report_6d_);
  } else {
    gps_1_report_6d_ = NULL;
  }
  if (from.has_gps_2_report_6e()) {
    gps_2_report_6e_ = new ::Calmcar::drivers::CHASIS::Gps_2_report_6e(*from.gps_2_report_6e_);
  } else {
    gps_2_report_6e_ = NULL;
  }
  if (from.has_gps_3_report_6f()) {
    gps_3_report_6f_ = new ::Calmcar::drivers::CHASIS::Gps_3_report_6f(*from.gps_3_report_6f_);
  } else {
    gps_3_report_6f_ = NULL;
  }
  if (from.has_throttleinfo_report_75()) {
    throttleinfo_report_75_ = new ::Calmcar::drivers::CHASIS::Throttleinfo_report_75(*from.throttleinfo_report_75_);
  } else {
    throttleinfo_report_75_ = NULL;
  }
  if (from.has_brakeinfo_report_74()) {
    brakeinfo_report_74_ = new ::Calmcar::drivers::CHASIS::Brakeinfo_report_74(*from.brakeinfo_report_74_);
  } else {
    brakeinfo_report_74_ = NULL;
  }
  if (from.has_surround_report_73()) {
    surround_report_73_ = new ::Calmcar::drivers::CHASIS::Surround_report_73(*from.surround_report_73_);
  } else {
    surround_report_73_ = NULL;
  }
  if (from.has_fuellevel_report_72()) {
    fuellevel_report_72_ = new ::Calmcar::drivers::CHASIS::Fuellevel_report_72(*from.fuellevel_report_72_);
  } else {
    fuellevel_report_72_ = NULL;
  }
  if (from.has_tirepressure_report_71()) {
    tirepressure_report_71_ = new ::Calmcar::drivers::CHASIS::Tirepressure_report_71(*from.tirepressure_report_71_);
  } else {
    tirepressure_report_71_ = NULL;
  }
  if (from.has_wheelposition_report_70()) {
    wheelposition_report_70_ = new ::Calmcar::drivers::CHASIS::Wheelposition_report_70(*from.wheelposition_report_70_);
  } else {
    wheelposition_report_70_ = NULL;
  }
  if (from.has_suspension_79()) {
    suspension_79_ = new ::Calmcar::drivers::CHASIS::Suspension_79(*from.suspension_79_);
  } else {
    suspension_79_ = NULL;
  }
  if (from.has_pms_voltage_1b0()) {
    pms_voltage_1b0_ = new ::Calmcar::drivers::CHASIS::Pms_voltage_1b0(*from.pms_voltage_1b0_);
  } else {
    pms_voltage_1b0_ = NULL;
  }
  if (from.has_pms_sta_1e0()) {
    pms_sta_1e0_ = new ::Calmcar::drivers::CHASIS::Pms_sta_1e0(*from.pms_sta_1e0_);
  } else {
    pms_sta_1e0_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Calmcar.drivers.CHASIS.Chasis)
}

void Chasis::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pms_sta_1e0_) -
      reinterpret_cast<char*>(&header_)) + sizeof(pms_sta_1e0_));
}

Chasis::~Chasis() {
  // @@protoc_insertion_point(destructor:Calmcar.drivers.CHASIS.Chasis)
  SharedDtor();
}

void Chasis::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete version_ss_7f_;
  if (this != internal_default_instance()) delete version_bt_7e_;
  if (this != internal_default_instance()) delete misc_report_ss_7b_;
  if (this != internal_default_instance()) delete brake_command_60_;
  if (this != internal_default_instance()) delete brake_report_61_;
  if (this != internal_default_instance()) delete throttle_command_62_;
  if (this != internal_default_instance()) delete throttle_report_63_;
  if (this != internal_default_instance()) delete steering_command_64_;
  if (this != internal_default_instance()) delete steering_report_65_;
  if (this != internal_default_instance()) delete gear_command_66_;
  if (this != internal_default_instance()) delete gear_report_67_;
  if (this != internal_default_instance()) delete turnsignal_command_68_;
  if (this != internal_default_instance()) delete misc_report_69_;
  if (this != internal_default_instance()) delete pms_current_4_1c3_;
  if (this != internal_default_instance()) delete pms_current_3_1c2_;
  if (this != internal_default_instance()) delete pms_current_2_1c1_;
  if (this != internal_default_instance()) delete pms_current_1_1c0_;
  if (this != internal_default_instance()) delete pms_cmd_1ba_;
  if (this != internal_default_instance()) delete wheelspeed_report_6a_;
  if (this != internal_default_instance()) delete accel_report_6b_;
  if (this != internal_default_instance()) delete gyro_report_6c_;
  if (this != internal_default_instance()) delete gps_1_report_6d_;
  if (this != internal_default_instance()) delete gps_2_report_6e_;
  if (this != internal_default_instance()) delete gps_3_report_6f_;
  if (this != internal_default_instance()) delete throttleinfo_report_75_;
  if (this != internal_default_instance()) delete brakeinfo_report_74_;
  if (this != internal_default_instance()) delete surround_report_73_;
  if (this != internal_default_instance()) delete fuellevel_report_72_;
  if (this != internal_default_instance()) delete tirepressure_report_71_;
  if (this != internal_default_instance()) delete wheelposition_report_70_;
  if (this != internal_default_instance()) delete suspension_79_;
  if (this != internal_default_instance()) delete pms_voltage_1b0_;
  if (this != internal_default_instance()) delete pms_sta_1e0_;
}

void Chasis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Chasis& Chasis::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chasis_2eproto::scc_info_Chasis.base);
  return *internal_default_instance();
}


void Chasis::Clear() {
// @@protoc_insertion_point(message_clear_start:Calmcar.drivers.CHASIS.Chasis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && version_ss_7f_ != NULL) {
    delete version_ss_7f_;
  }
  version_ss_7f_ = NULL;
  if (GetArenaNoVirtual() == NULL && version_bt_7e_ != NULL) {
    delete version_bt_7e_;
  }
  version_bt_7e_ = NULL;
  if (GetArenaNoVirtual() == NULL && misc_report_ss_7b_ != NULL) {
    delete misc_report_ss_7b_;
  }
  misc_report_ss_7b_ = NULL;
  if (GetArenaNoVirtual() == NULL && brake_command_60_ != NULL) {
    delete brake_command_60_;
  }
  brake_command_60_ = NULL;
  if (GetArenaNoVirtual() == NULL && brake_report_61_ != NULL) {
    delete brake_report_61_;
  }
  brake_report_61_ = NULL;
  if (GetArenaNoVirtual() == NULL && throttle_command_62_ != NULL) {
    delete throttle_command_62_;
  }
  throttle_command_62_ = NULL;
  if (GetArenaNoVirtual() == NULL && throttle_report_63_ != NULL) {
    delete throttle_report_63_;
  }
  throttle_report_63_ = NULL;
  if (GetArenaNoVirtual() == NULL && steering_command_64_ != NULL) {
    delete steering_command_64_;
  }
  steering_command_64_ = NULL;
  if (GetArenaNoVirtual() == NULL && steering_report_65_ != NULL) {
    delete steering_report_65_;
  }
  steering_report_65_ = NULL;
  if (GetArenaNoVirtual() == NULL && gear_command_66_ != NULL) {
    delete gear_command_66_;
  }
  gear_command_66_ = NULL;
  if (GetArenaNoVirtual() == NULL && gear_report_67_ != NULL) {
    delete gear_report_67_;
  }
  gear_report_67_ = NULL;
  if (GetArenaNoVirtual() == NULL && turnsignal_command_68_ != NULL) {
    delete turnsignal_command_68_;
  }
  turnsignal_command_68_ = NULL;
  if (GetArenaNoVirtual() == NULL && misc_report_69_ != NULL) {
    delete misc_report_69_;
  }
  misc_report_69_ = NULL;
  if (GetArenaNoVirtual() == NULL && pms_current_4_1c3_ != NULL) {
    delete pms_current_4_1c3_;
  }
  pms_current_4_1c3_ = NULL;
  if (GetArenaNoVirtual() == NULL && pms_current_3_1c2_ != NULL) {
    delete pms_current_3_1c2_;
  }
  pms_current_3_1c2_ = NULL;
  if (GetArenaNoVirtual() == NULL && pms_current_2_1c1_ != NULL) {
    delete pms_current_2_1c1_;
  }
  pms_current_2_1c1_ = NULL;
  if (GetArenaNoVirtual() == NULL && pms_current_1_1c0_ != NULL) {
    delete pms_current_1_1c0_;
  }
  pms_current_1_1c0_ = NULL;
  if (GetArenaNoVirtual() == NULL && pms_cmd_1ba_ != NULL) {
    delete pms_cmd_1ba_;
  }
  pms_cmd_1ba_ = NULL;
  if (GetArenaNoVirtual() == NULL && wheelspeed_report_6a_ != NULL) {
    delete wheelspeed_report_6a_;
  }
  wheelspeed_report_6a_ = NULL;
  if (GetArenaNoVirtual() == NULL && accel_report_6b_ != NULL) {
    delete accel_report_6b_;
  }
  accel_report_6b_ = NULL;
  if (GetArenaNoVirtual() == NULL && gyro_report_6c_ != NULL) {
    delete gyro_report_6c_;
  }
  gyro_report_6c_ = NULL;
  if (GetArenaNoVirtual() == NULL && gps_1_report_6d_ != NULL) {
    delete gps_1_report_6d_;
  }
  gps_1_report_6d_ = NULL;
  if (GetArenaNoVirtual() == NULL && gps_2_report_6e_ != NULL) {
    delete gps_2_report_6e_;
  }
  gps_2_report_6e_ = NULL;
  if (GetArenaNoVirtual() == NULL && gps_3_report_6f_ != NULL) {
    delete gps_3_report_6f_;
  }
  gps_3_report_6f_ = NULL;
  if (GetArenaNoVirtual() == NULL && throttleinfo_report_75_ != NULL) {
    delete throttleinfo_report_75_;
  }
  throttleinfo_report_75_ = NULL;
  if (GetArenaNoVirtual() == NULL && brakeinfo_report_74_ != NULL) {
    delete brakeinfo_report_74_;
  }
  brakeinfo_report_74_ = NULL;
  if (GetArenaNoVirtual() == NULL && surround_report_73_ != NULL) {
    delete surround_report_73_;
  }
  surround_report_73_ = NULL;
  if (GetArenaNoVirtual() == NULL && fuellevel_report_72_ != NULL) {
    delete fuellevel_report_72_;
  }
  fuellevel_report_72_ = NULL;
  if (GetArenaNoVirtual() == NULL && tirepressure_report_71_ != NULL) {
    delete tirepressure_report_71_;
  }
  tirepressure_report_71_ = NULL;
  if (GetArenaNoVirtual() == NULL && wheelposition_report_70_ != NULL) {
    delete wheelposition_report_70_;
  }
  wheelposition_report_70_ = NULL;
  if (GetArenaNoVirtual() == NULL && suspension_79_ != NULL) {
    delete suspension_79_;
  }
  suspension_79_ = NULL;
  if (GetArenaNoVirtual() == NULL && pms_voltage_1b0_ != NULL) {
    delete pms_voltage_1b0_;
  }
  pms_voltage_1b0_ = NULL;
  if (GetArenaNoVirtual() == NULL && pms_sta_1e0_ != NULL) {
    delete pms_sta_1e0_;
  }
  pms_sta_1e0_ = NULL;
  _internal_metadata_.Clear();
}

bool Chasis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Calmcar.drivers.CHASIS.Chasis)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Calmcar.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Version_ss_7f version_ss_7f = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version_ss_7f()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Version_bt_7e version_bt_7e = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version_bt_7e()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_ss_7b misc_report_ss_7b = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_misc_report_ss_7b()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_command_60 brake_command_60 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_brake_command_60()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brake_report_61 brake_report_61 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_brake_report_61()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Throttle_command_62 throttle_command_62 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_throttle_command_62()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Throttle_report_63 throttle_report_63 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_throttle_report_63()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Steering_command_64 steering_command_64 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_steering_command_64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Steering_report_65 steering_report_65 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_steering_report_65()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gear_command_66 gear_command_66 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gear_command_66()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gear_report_67 gear_report_67 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gear_report_67()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Turnsignal_command_68 turnsignal_command_68 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_turnsignal_command_68()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Misc_report_69 misc_report_69 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_misc_report_69()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Pms_current_4_1c3 pms_current_4_1c3 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pms_current_4_1c3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Pms_current_3_1c2 pms_current_3_1c2 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pms_current_3_1c2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Pms_current_2_1c1 pms_current_2_1c1 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pms_current_2_1c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Pms_current_1_1c0 pms_current_1_1c0 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pms_current_1_1c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Pms_cmd_1ba pms_cmd_1ba = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pms_cmd_1ba()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Wheelspeed_report_6a wheelspeed_report_6a = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wheelspeed_report_6a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Accel_report_6b accel_report_6b = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_accel_report_6b()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gyro_report_6c gyro_report_6c = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gyro_report_6c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gps_1_report_6d gps_1_report_6d = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gps_1_report_6d()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gps_2_report_6e gps_2_report_6e = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gps_2_report_6e()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Gps_3_report_6f gps_3_report_6f = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gps_3_report_6f()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Throttleinfo_report_75 throttleinfo_report_75 = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_throttleinfo_report_75()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Brakeinfo_report_74 brakeinfo_report_74 = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_brakeinfo_report_74()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Surround_report_73 surround_report_73 = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_surround_report_73()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Fuellevel_report_72 fuellevel_report_72 = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fuellevel_report_72()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Tirepressure_report_71 tirepressure_report_71 = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tirepressure_report_71()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Wheelposition_report_70 wheelposition_report_70 = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wheelposition_report_70()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Suspension_79 suspension_79 = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_suspension_79()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Pms_voltage_1b0 pms_voltage_1b0 = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pms_voltage_1b0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Calmcar.drivers.CHASIS.Pms_sta_1e0 pms_sta_1e0 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pms_sta_1e0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calmcar.drivers.CHASIS.Chasis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calmcar.drivers.CHASIS.Chasis)
  return false;
#undef DO_
}

void Chasis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calmcar.drivers.CHASIS.Chasis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Calmcar.common.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .Calmcar.drivers.CHASIS.Version_ss_7f version_ss_7f = 2;
  if (this->has_version_ss_7f()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_version_ss_7f(), output);
  }

  // .Calmcar.drivers.CHASIS.Version_bt_7e version_bt_7e = 3;
  if (this->has_version_bt_7e()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_version_bt_7e(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b misc_report_ss_7b = 4;
  if (this->has_misc_report_ss_7b()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_misc_report_ss_7b(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_command_60 brake_command_60 = 5;
  if (this->has_brake_command_60()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->_internal_brake_command_60(), output);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61 brake_report_61 = 6;
  if (this->has_brake_report_61()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->_internal_brake_report_61(), output);
  }

  // .Calmcar.drivers.CHASIS.Throttle_command_62 throttle_command_62 = 7;
  if (this->has_throttle_command_62()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->_internal_throttle_command_62(), output);
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63 throttle_report_63 = 8;
  if (this->has_throttle_report_63()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8, this->_internal_throttle_report_63(), output);
  }

  // .Calmcar.drivers.CHASIS.Steering_command_64 steering_command_64 = 9;
  if (this->has_steering_command_64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      9, this->_internal_steering_command_64(), output);
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65 steering_report_65 = 10;
  if (this->has_steering_report_65()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, this->_internal_steering_report_65(), output);
  }

  // .Calmcar.drivers.CHASIS.Gear_command_66 gear_command_66 = 11;
  if (this->has_gear_command_66()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, this->_internal_gear_command_66(), output);
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67 gear_report_67 = 12;
  if (this->has_gear_report_67()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, this->_internal_gear_report_67(), output);
  }

  // .Calmcar.drivers.CHASIS.Turnsignal_command_68 turnsignal_command_68 = 13;
  if (this->has_turnsignal_command_68()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, this->_internal_turnsignal_command_68(), output);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69 misc_report_69 = 14;
  if (this->has_misc_report_69()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      14, this->_internal_misc_report_69(), output);
  }

  // .Calmcar.drivers.CHASIS.Pms_current_4_1c3 pms_current_4_1c3 = 15;
  if (this->has_pms_current_4_1c3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      15, this->_internal_pms_current_4_1c3(), output);
  }

  // .Calmcar.drivers.CHASIS.Pms_current_3_1c2 pms_current_3_1c2 = 16;
  if (this->has_pms_current_3_1c2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      16, this->_internal_pms_current_3_1c2(), output);
  }

  // .Calmcar.drivers.CHASIS.Pms_current_2_1c1 pms_current_2_1c1 = 17;
  if (this->has_pms_current_2_1c1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      17, this->_internal_pms_current_2_1c1(), output);
  }

  // .Calmcar.drivers.CHASIS.Pms_current_1_1c0 pms_current_1_1c0 = 18;
  if (this->has_pms_current_1_1c0()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      18, this->_internal_pms_current_1_1c0(), output);
  }

  // .Calmcar.drivers.CHASIS.Pms_cmd_1ba pms_cmd_1ba = 19;
  if (this->has_pms_cmd_1ba()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      19, this->_internal_pms_cmd_1ba(), output);
  }

  // .Calmcar.drivers.CHASIS.Wheelspeed_report_6a wheelspeed_report_6a = 20;
  if (this->has_wheelspeed_report_6a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      20, this->_internal_wheelspeed_report_6a(), output);
  }

  // .Calmcar.drivers.CHASIS.Accel_report_6b accel_report_6b = 21;
  if (this->has_accel_report_6b()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      21, this->_internal_accel_report_6b(), output);
  }

  // .Calmcar.drivers.CHASIS.Gyro_report_6c gyro_report_6c = 22;
  if (this->has_gyro_report_6c()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      22, this->_internal_gyro_report_6c(), output);
  }

  // .Calmcar.drivers.CHASIS.Gps_1_report_6d gps_1_report_6d = 23;
  if (this->has_gps_1_report_6d()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      23, this->_internal_gps_1_report_6d(), output);
  }

  // .Calmcar.drivers.CHASIS.Gps_2_report_6e gps_2_report_6e = 24;
  if (this->has_gps_2_report_6e()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      24, this->_internal_gps_2_report_6e(), output);
  }

  // .Calmcar.drivers.CHASIS.Gps_3_report_6f gps_3_report_6f = 25;
  if (this->has_gps_3_report_6f()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      25, this->_internal_gps_3_report_6f(), output);
  }

  // .Calmcar.drivers.CHASIS.Throttleinfo_report_75 throttleinfo_report_75 = 26;
  if (this->has_throttleinfo_report_75()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      26, this->_internal_throttleinfo_report_75(), output);
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74 brakeinfo_report_74 = 27;
  if (this->has_brakeinfo_report_74()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      27, this->_internal_brakeinfo_report_74(), output);
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73 surround_report_73 = 28;
  if (this->has_surround_report_73()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      28, this->_internal_surround_report_73(), output);
  }

  // .Calmcar.drivers.CHASIS.Fuellevel_report_72 fuellevel_report_72 = 29;
  if (this->has_fuellevel_report_72()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      29, this->_internal_fuellevel_report_72(), output);
  }

  // .Calmcar.drivers.CHASIS.Tirepressure_report_71 tirepressure_report_71 = 30;
  if (this->has_tirepressure_report_71()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      30, this->_internal_tirepressure_report_71(), output);
  }

  // .Calmcar.drivers.CHASIS.Wheelposition_report_70 wheelposition_report_70 = 31;
  if (this->has_wheelposition_report_70()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      31, this->_internal_wheelposition_report_70(), output);
  }

  // .Calmcar.drivers.CHASIS.Suspension_79 suspension_79 = 32;
  if (this->has_suspension_79()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      32, this->_internal_suspension_79(), output);
  }

  // .Calmcar.drivers.CHASIS.Pms_voltage_1b0 pms_voltage_1b0 = 33;
  if (this->has_pms_voltage_1b0()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      33, this->_internal_pms_voltage_1b0(), output);
  }

  // .Calmcar.drivers.CHASIS.Pms_sta_1e0 pms_sta_1e0 = 34;
  if (this->has_pms_sta_1e0()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      34, this->_internal_pms_sta_1e0(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:Calmcar.drivers.CHASIS.Chasis)
}

size_t Chasis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Calmcar.drivers.CHASIS.Chasis)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .Calmcar.common.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .Calmcar.drivers.CHASIS.Version_ss_7f version_ss_7f = 2;
  if (this->has_version_ss_7f()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_ss_7f_);
  }

  // .Calmcar.drivers.CHASIS.Version_bt_7e version_bt_7e = 3;
  if (this->has_version_bt_7e()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_bt_7e_);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b misc_report_ss_7b = 4;
  if (this->has_misc_report_ss_7b()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *misc_report_ss_7b_);
  }

  // .Calmcar.drivers.CHASIS.Brake_command_60 brake_command_60 = 5;
  if (this->has_brake_command_60()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *brake_command_60_);
  }

  // .Calmcar.drivers.CHASIS.Brake_report_61 brake_report_61 = 6;
  if (this->has_brake_report_61()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *brake_report_61_);
  }

  // .Calmcar.drivers.CHASIS.Throttle_command_62 throttle_command_62 = 7;
  if (this->has_throttle_command_62()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *throttle_command_62_);
  }

  // .Calmcar.drivers.CHASIS.Throttle_report_63 throttle_report_63 = 8;
  if (this->has_throttle_report_63()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *throttle_report_63_);
  }

  // .Calmcar.drivers.CHASIS.Steering_command_64 steering_command_64 = 9;
  if (this->has_steering_command_64()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *steering_command_64_);
  }

  // .Calmcar.drivers.CHASIS.Steering_report_65 steering_report_65 = 10;
  if (this->has_steering_report_65()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *steering_report_65_);
  }

  // .Calmcar.drivers.CHASIS.Gear_command_66 gear_command_66 = 11;
  if (this->has_gear_command_66()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gear_command_66_);
  }

  // .Calmcar.drivers.CHASIS.Gear_report_67 gear_report_67 = 12;
  if (this->has_gear_report_67()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gear_report_67_);
  }

  // .Calmcar.drivers.CHASIS.Turnsignal_command_68 turnsignal_command_68 = 13;
  if (this->has_turnsignal_command_68()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *turnsignal_command_68_);
  }

  // .Calmcar.drivers.CHASIS.Misc_report_69 misc_report_69 = 14;
  if (this->has_misc_report_69()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *misc_report_69_);
  }

  // .Calmcar.drivers.CHASIS.Pms_current_4_1c3 pms_current_4_1c3 = 15;
  if (this->has_pms_current_4_1c3()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pms_current_4_1c3_);
  }

  // .Calmcar.drivers.CHASIS.Pms_current_3_1c2 pms_current_3_1c2 = 16;
  if (this->has_pms_current_3_1c2()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pms_current_3_1c2_);
  }

  // .Calmcar.drivers.CHASIS.Pms_current_2_1c1 pms_current_2_1c1 = 17;
  if (this->has_pms_current_2_1c1()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pms_current_2_1c1_);
  }

  // .Calmcar.drivers.CHASIS.Pms_current_1_1c0 pms_current_1_1c0 = 18;
  if (this->has_pms_current_1_1c0()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pms_current_1_1c0_);
  }

  // .Calmcar.drivers.CHASIS.Pms_cmd_1ba pms_cmd_1ba = 19;
  if (this->has_pms_cmd_1ba()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pms_cmd_1ba_);
  }

  // .Calmcar.drivers.CHASIS.Wheelspeed_report_6a wheelspeed_report_6a = 20;
  if (this->has_wheelspeed_report_6a()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *wheelspeed_report_6a_);
  }

  // .Calmcar.drivers.CHASIS.Accel_report_6b accel_report_6b = 21;
  if (this->has_accel_report_6b()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *accel_report_6b_);
  }

  // .Calmcar.drivers.CHASIS.Gyro_report_6c gyro_report_6c = 22;
  if (this->has_gyro_report_6c()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gyro_report_6c_);
  }

  // .Calmcar.drivers.CHASIS.Gps_1_report_6d gps_1_report_6d = 23;
  if (this->has_gps_1_report_6d()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gps_1_report_6d_);
  }

  // .Calmcar.drivers.CHASIS.Gps_2_report_6e gps_2_report_6e = 24;
  if (this->has_gps_2_report_6e()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gps_2_report_6e_);
  }

  // .Calmcar.drivers.CHASIS.Gps_3_report_6f gps_3_report_6f = 25;
  if (this->has_gps_3_report_6f()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gps_3_report_6f_);
  }

  // .Calmcar.drivers.CHASIS.Throttleinfo_report_75 throttleinfo_report_75 = 26;
  if (this->has_throttleinfo_report_75()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *throttleinfo_report_75_);
  }

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74 brakeinfo_report_74 = 27;
  if (this->has_brakeinfo_report_74()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *brakeinfo_report_74_);
  }

  // .Calmcar.drivers.CHASIS.Surround_report_73 surround_report_73 = 28;
  if (this->has_surround_report_73()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *surround_report_73_);
  }

  // .Calmcar.drivers.CHASIS.Fuellevel_report_72 fuellevel_report_72 = 29;
  if (this->has_fuellevel_report_72()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fuellevel_report_72_);
  }

  // .Calmcar.drivers.CHASIS.Tirepressure_report_71 tirepressure_report_71 = 30;
  if (this->has_tirepressure_report_71()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tirepressure_report_71_);
  }

  // .Calmcar.drivers.CHASIS.Wheelposition_report_70 wheelposition_report_70 = 31;
  if (this->has_wheelposition_report_70()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *wheelposition_report_70_);
  }

  // .Calmcar.drivers.CHASIS.Suspension_79 suspension_79 = 32;
  if (this->has_suspension_79()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *suspension_79_);
  }

  // .Calmcar.drivers.CHASIS.Pms_voltage_1b0 pms_voltage_1b0 = 33;
  if (this->has_pms_voltage_1b0()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pms_voltage_1b0_);
  }

  // .Calmcar.drivers.CHASIS.Pms_sta_1e0 pms_sta_1e0 = 34;
  if (this->has_pms_sta_1e0()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pms_sta_1e0_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Chasis::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Chasis*>(&from));
}

void Chasis::MergeFrom(const Chasis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Calmcar.drivers.CHASIS.Chasis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::Calmcar::common::Header::MergeFrom(from.header());
  }
  if (from.has_version_ss_7f()) {
    mutable_version_ss_7f()->::Calmcar::drivers::CHASIS::Version_ss_7f::MergeFrom(from.version_ss_7f());
  }
  if (from.has_version_bt_7e()) {
    mutable_version_bt_7e()->::Calmcar::drivers::CHASIS::Version_bt_7e::MergeFrom(from.version_bt_7e());
  }
  if (from.has_misc_report_ss_7b()) {
    mutable_misc_report_ss_7b()->::Calmcar::drivers::CHASIS::Misc_report_ss_7b::MergeFrom(from.misc_report_ss_7b());
  }
  if (from.has_brake_command_60()) {
    mutable_brake_command_60()->::Calmcar::drivers::CHASIS::Brake_command_60::MergeFrom(from.brake_command_60());
  }
  if (from.has_brake_report_61()) {
    mutable_brake_report_61()->::Calmcar::drivers::CHASIS::Brake_report_61::MergeFrom(from.brake_report_61());
  }
  if (from.has_throttle_command_62()) {
    mutable_throttle_command_62()->::Calmcar::drivers::CHASIS::Throttle_command_62::MergeFrom(from.throttle_command_62());
  }
  if (from.has_throttle_report_63()) {
    mutable_throttle_report_63()->::Calmcar::drivers::CHASIS::Throttle_report_63::MergeFrom(from.throttle_report_63());
  }
  if (from.has_steering_command_64()) {
    mutable_steering_command_64()->::Calmcar::drivers::CHASIS::Steering_command_64::MergeFrom(from.steering_command_64());
  }
  if (from.has_steering_report_65()) {
    mutable_steering_report_65()->::Calmcar::drivers::CHASIS::Steering_report_65::MergeFrom(from.steering_report_65());
  }
  if (from.has_gear_command_66()) {
    mutable_gear_command_66()->::Calmcar::drivers::CHASIS::Gear_command_66::MergeFrom(from.gear_command_66());
  }
  if (from.has_gear_report_67()) {
    mutable_gear_report_67()->::Calmcar::drivers::CHASIS::Gear_report_67::MergeFrom(from.gear_report_67());
  }
  if (from.has_turnsignal_command_68()) {
    mutable_turnsignal_command_68()->::Calmcar::drivers::CHASIS::Turnsignal_command_68::MergeFrom(from.turnsignal_command_68());
  }
  if (from.has_misc_report_69()) {
    mutable_misc_report_69()->::Calmcar::drivers::CHASIS::Misc_report_69::MergeFrom(from.misc_report_69());
  }
  if (from.has_pms_current_4_1c3()) {
    mutable_pms_current_4_1c3()->::Calmcar::drivers::CHASIS::Pms_current_4_1c3::MergeFrom(from.pms_current_4_1c3());
  }
  if (from.has_pms_current_3_1c2()) {
    mutable_pms_current_3_1c2()->::Calmcar::drivers::CHASIS::Pms_current_3_1c2::MergeFrom(from.pms_current_3_1c2());
  }
  if (from.has_pms_current_2_1c1()) {
    mutable_pms_current_2_1c1()->::Calmcar::drivers::CHASIS::Pms_current_2_1c1::MergeFrom(from.pms_current_2_1c1());
  }
  if (from.has_pms_current_1_1c0()) {
    mutable_pms_current_1_1c0()->::Calmcar::drivers::CHASIS::Pms_current_1_1c0::MergeFrom(from.pms_current_1_1c0());
  }
  if (from.has_pms_cmd_1ba()) {
    mutable_pms_cmd_1ba()->::Calmcar::drivers::CHASIS::Pms_cmd_1ba::MergeFrom(from.pms_cmd_1ba());
  }
  if (from.has_wheelspeed_report_6a()) {
    mutable_wheelspeed_report_6a()->::Calmcar::drivers::CHASIS::Wheelspeed_report_6a::MergeFrom(from.wheelspeed_report_6a());
  }
  if (from.has_accel_report_6b()) {
    mutable_accel_report_6b()->::Calmcar::drivers::CHASIS::Accel_report_6b::MergeFrom(from.accel_report_6b());
  }
  if (from.has_gyro_report_6c()) {
    mutable_gyro_report_6c()->::Calmcar::drivers::CHASIS::Gyro_report_6c::MergeFrom(from.gyro_report_6c());
  }
  if (from.has_gps_1_report_6d()) {
    mutable_gps_1_report_6d()->::Calmcar::drivers::CHASIS::Gps_1_report_6d::MergeFrom(from.gps_1_report_6d());
  }
  if (from.has_gps_2_report_6e()) {
    mutable_gps_2_report_6e()->::Calmcar::drivers::CHASIS::Gps_2_report_6e::MergeFrom(from.gps_2_report_6e());
  }
  if (from.has_gps_3_report_6f()) {
    mutable_gps_3_report_6f()->::Calmcar::drivers::CHASIS::Gps_3_report_6f::MergeFrom(from.gps_3_report_6f());
  }
  if (from.has_throttleinfo_report_75()) {
    mutable_throttleinfo_report_75()->::Calmcar::drivers::CHASIS::Throttleinfo_report_75::MergeFrom(from.throttleinfo_report_75());
  }
  if (from.has_brakeinfo_report_74()) {
    mutable_brakeinfo_report_74()->::Calmcar::drivers::CHASIS::Brakeinfo_report_74::MergeFrom(from.brakeinfo_report_74());
  }
  if (from.has_surround_report_73()) {
    mutable_surround_report_73()->::Calmcar::drivers::CHASIS::Surround_report_73::MergeFrom(from.surround_report_73());
  }
  if (from.has_fuellevel_report_72()) {
    mutable_fuellevel_report_72()->::Calmcar::drivers::CHASIS::Fuellevel_report_72::MergeFrom(from.fuellevel_report_72());
  }
  if (from.has_tirepressure_report_71()) {
    mutable_tirepressure_report_71()->::Calmcar::drivers::CHASIS::Tirepressure_report_71::MergeFrom(from.tirepressure_report_71());
  }
  if (from.has_wheelposition_report_70()) {
    mutable_wheelposition_report_70()->::Calmcar::drivers::CHASIS::Wheelposition_report_70::MergeFrom(from.wheelposition_report_70());
  }
  if (from.has_suspension_79()) {
    mutable_suspension_79()->::Calmcar::drivers::CHASIS::Suspension_79::MergeFrom(from.suspension_79());
  }
  if (from.has_pms_voltage_1b0()) {
    mutable_pms_voltage_1b0()->::Calmcar::drivers::CHASIS::Pms_voltage_1b0::MergeFrom(from.pms_voltage_1b0());
  }
  if (from.has_pms_sta_1e0()) {
    mutable_pms_sta_1e0()->::Calmcar::drivers::CHASIS::Pms_sta_1e0::MergeFrom(from.pms_sta_1e0());
  }
}

void Chasis::CopyFrom(const Chasis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Calmcar.drivers.CHASIS.Chasis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Chasis::IsInitialized() const {
  return true;
}

void Chasis::Swap(Chasis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Chasis::InternalSwap(Chasis* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(version_ss_7f_, other->version_ss_7f_);
  swap(version_bt_7e_, other->version_bt_7e_);
  swap(misc_report_ss_7b_, other->misc_report_ss_7b_);
  swap(brake_command_60_, other->brake_command_60_);
  swap(brake_report_61_, other->brake_report_61_);
  swap(throttle_command_62_, other->throttle_command_62_);
  swap(throttle_report_63_, other->throttle_report_63_);
  swap(steering_command_64_, other->steering_command_64_);
  swap(steering_report_65_, other->steering_report_65_);
  swap(gear_command_66_, other->gear_command_66_);
  swap(gear_report_67_, other->gear_report_67_);
  swap(turnsignal_command_68_, other->turnsignal_command_68_);
  swap(misc_report_69_, other->misc_report_69_);
  swap(pms_current_4_1c3_, other->pms_current_4_1c3_);
  swap(pms_current_3_1c2_, other->pms_current_3_1c2_);
  swap(pms_current_2_1c1_, other->pms_current_2_1c1_);
  swap(pms_current_1_1c0_, other->pms_current_1_1c0_);
  swap(pms_cmd_1ba_, other->pms_cmd_1ba_);
  swap(wheelspeed_report_6a_, other->wheelspeed_report_6a_);
  swap(accel_report_6b_, other->accel_report_6b_);
  swap(gyro_report_6c_, other->gyro_report_6c_);
  swap(gps_1_report_6d_, other->gps_1_report_6d_);
  swap(gps_2_report_6e_, other->gps_2_report_6e_);
  swap(gps_3_report_6f_, other->gps_3_report_6f_);
  swap(throttleinfo_report_75_, other->throttleinfo_report_75_);
  swap(brakeinfo_report_74_, other->brakeinfo_report_74_);
  swap(surround_report_73_, other->surround_report_73_);
  swap(fuellevel_report_72_, other->fuellevel_report_72_);
  swap(tirepressure_report_71_, other->tirepressure_report_71_);
  swap(wheelposition_report_70_, other->wheelposition_report_70_);
  swap(suspension_79_, other->suspension_79_);
  swap(pms_voltage_1b0_, other->pms_voltage_1b0_);
  swap(pms_sta_1e0_, other->pms_sta_1e0_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Chasis::GetTypeName() const {
  return "Calmcar.drivers.CHASIS.Chasis";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CHASIS
}  // namespace drivers
}  // namespace Calmcar
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Version_ss_7f* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Version_ss_7f >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Version_ss_7f >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Version_bt_7e* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Version_bt_7e >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Version_bt_7e >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Misc_report_ss_7b* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Brake_command_60* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Brake_command_60 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Brake_command_60 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Brake_report_61* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Brake_report_61 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Brake_report_61 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Throttle_command_62* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Throttle_command_62 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Throttle_command_62 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Throttle_report_63* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Throttle_report_63 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Throttle_report_63 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Steering_command_64* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Steering_command_64 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Steering_command_64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Steering_report_65* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Steering_report_65 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Steering_report_65 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Gear_command_66* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Gear_command_66 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Gear_command_66 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Gear_report_67* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Gear_report_67 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Gear_report_67 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Turnsignal_command_68* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Turnsignal_command_68 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Turnsignal_command_68 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Misc_report_69* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Misc_report_69 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Misc_report_69 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Pms_current_4_1c3* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Pms_current_4_1c3 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Pms_current_4_1c3 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Pms_current_3_1c2* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Pms_current_3_1c2 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Pms_current_3_1c2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Pms_current_2_1c1* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Pms_current_2_1c1 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Pms_current_2_1c1 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Pms_current_1_1c0* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Pms_current_1_1c0 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Pms_current_1_1c0 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Pms_cmd_1ba* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Pms_cmd_1ba >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Pms_cmd_1ba >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Accel_report_6b* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Accel_report_6b >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Accel_report_6b >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Gyro_report_6c* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Gyro_report_6c >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Gyro_report_6c >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Gps_1_report_6d* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Gps_1_report_6d >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Gps_1_report_6d >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Gps_2_report_6e* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Gps_2_report_6e >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Gps_2_report_6e >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Gps_3_report_6f* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Gps_3_report_6f >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Gps_3_report_6f >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Throttleinfo_report_75* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Throttleinfo_report_75 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Throttleinfo_report_75 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Brakeinfo_report_74* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Surround_report_73* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Surround_report_73 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Surround_report_73 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Fuellevel_report_72* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Fuellevel_report_72 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Fuellevel_report_72 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Tirepressure_report_71* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Tirepressure_report_71 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Tirepressure_report_71 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Wheelposition_report_70* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Wheelposition_report_70 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Wheelposition_report_70 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Suspension_79* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Suspension_79 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Suspension_79 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Pms_voltage_1b0* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Pms_voltage_1b0 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Pms_voltage_1b0 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Pms_sta_1e0* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Pms_sta_1e0 >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Pms_sta_1e0 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Calmcar::drivers::CHASIS::Chasis* Arena::CreateMaybeMessage< ::Calmcar::drivers::CHASIS::Chasis >(Arena* arena) {
  return Arena::CreateInternal< ::Calmcar::drivers::CHASIS::Chasis >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
