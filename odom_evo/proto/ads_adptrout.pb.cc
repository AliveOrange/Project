// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ads_adptrout.proto

#include "ads_adptrout.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ads_5fadptrout_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fadptrout_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ApdtrOut_Lat_0xEA;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fadptrout_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ApdtrOut_Lgt_0x20A;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fadptrout_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ApdtrOut_Lgt_0x216;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fadptrout_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ApdtrOut_Lgt_0x219;
}  // namespace protobuf_ads_5fadptrout_2eproto
namespace protobuf_ads_5fcom_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Brake_Command_60_st;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Gear_Command_66_st;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_LatCtrl_State_st;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_LonCtrl_State_st;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Steering_Command_64_st;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_Throttle_Command_62_st;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ads_5fcom_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_B_Adptrout_TurnSignal_Command_68_st;
}  // namespace protobuf_ads_5fcom_2eproto
namespace ads_adptrout {
class ApdtrOut_Lat_0xEADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApdtrOut_Lat_0xEA>
      _instance;
} _ApdtrOut_Lat_0xEA_default_instance_;
class ApdtrOut_Lgt_0x216DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApdtrOut_Lgt_0x216>
      _instance;
} _ApdtrOut_Lgt_0x216_default_instance_;
class ApdtrOut_Lgt_0x219DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApdtrOut_Lgt_0x219>
      _instance;
} _ApdtrOut_Lgt_0x219_default_instance_;
class ApdtrOut_Lgt_0x20ADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApdtrOut_Lgt_0x20A>
      _instance;
} _ApdtrOut_Lgt_0x20A_default_instance_;
class AdptrOut_Cruising_OutputsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdptrOut_Cruising_Outputs>
      _instance;
} _AdptrOut_Cruising_Outputs_default_instance_;
}  // namespace ads_adptrout
namespace protobuf_ads_5fadptrout_2eproto {
static void InitDefaultsApdtrOut_Lat_0xEA() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_adptrout::_ApdtrOut_Lat_0xEA_default_instance_;
    new (ptr) ::ads_adptrout::ApdtrOut_Lat_0xEA();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_adptrout::ApdtrOut_Lat_0xEA::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApdtrOut_Lat_0xEA =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApdtrOut_Lat_0xEA}, {}};

static void InitDefaultsApdtrOut_Lgt_0x216() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_adptrout::_ApdtrOut_Lgt_0x216_default_instance_;
    new (ptr) ::ads_adptrout::ApdtrOut_Lgt_0x216();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_adptrout::ApdtrOut_Lgt_0x216::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApdtrOut_Lgt_0x216 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApdtrOut_Lgt_0x216}, {}};

static void InitDefaultsApdtrOut_Lgt_0x219() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_adptrout::_ApdtrOut_Lgt_0x219_default_instance_;
    new (ptr) ::ads_adptrout::ApdtrOut_Lgt_0x219();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_adptrout::ApdtrOut_Lgt_0x219::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApdtrOut_Lgt_0x219 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApdtrOut_Lgt_0x219}, {}};

static void InitDefaultsApdtrOut_Lgt_0x20A() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_adptrout::_ApdtrOut_Lgt_0x20A_default_instance_;
    new (ptr) ::ads_adptrout::ApdtrOut_Lgt_0x20A();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_adptrout::ApdtrOut_Lgt_0x20A::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApdtrOut_Lgt_0x20A =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApdtrOut_Lgt_0x20A}, {}};

static void InitDefaultsAdptrOut_Cruising_Outputs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_;
    new (ptr) ::ads_adptrout::AdptrOut_Cruising_Outputs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ads_adptrout::AdptrOut_Cruising_Outputs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<11> scc_info_AdptrOut_Cruising_Outputs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 11, InitDefaultsAdptrOut_Cruising_Outputs}, {
      &protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lat_0xEA.base,
      &protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lgt_0x216.base,
      &protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lgt_0x219.base,
      &protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lgt_0x20A.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Brake_Command_60_st.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Throttle_Command_62_st.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Steering_Command_64_st.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_Gear_Command_66_st.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_TurnSignal_Command_68_st.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_LatCtrl_State_st.base,
      &protobuf_ads_5fcom_2eproto::scc_info_B_Adptrout_LonCtrl_State_st.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ApdtrOut_Lat_0xEA.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApdtrOut_Lgt_0x216.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApdtrOut_Lgt_0x219.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApdtrOut_Lgt_0x20A.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdptrOut_Cruising_Outputs.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_adas_sndctrl_lka_onoff_fbk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_fr01_checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_fr01_msgcounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_ldwlka_lhwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_ldwlka_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_ldwlka_rhwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_ldwlka_recog_sysstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_ldwlka_symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_ldwlka_warnsetsta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_lka_handsoffsndwaring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_lka_handsoffwarning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_lka_strtoqreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_lka_toiact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_lka_toifault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_tja_sysstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lat_0xEA, adptr_out_flc_tja_syswarning_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x216, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x216, apdtr_out_flr_acc_comfortbandlower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x216, apdtr_out_flr_acc_comfortbandupper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x216, apdtr_out_flr_acc_jerklowerlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x216, apdtr_out_flr_acc_jerkupperlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x216, apdtr_out_flr_acc_requiredaccel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x216, apdtr_out_flr_acc_stopreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x216, apdtr_out_flr_sndctrl_acc_onoff_fbk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x216, apdtr_out_flr_fr01_checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x216, apdtr_out_flr_acc_msgcntr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x216, apdtr_out_flr_sndctrlaccactivtdriver_fdk_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_flr_acc_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_flr_acc_setdistance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_flr_acc_setspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_flr_acc_sysfailure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_flr_acc_sysinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_flr_acc_systemstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_flr_acc_targetvalidity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_flr_fr02_checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_flr_acc_msgcntr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_flr_ihusndctrlaccactivtreqt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_scc_objrelspd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x219, apdtr_out_scc_objstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_aeb_dbslevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_aeb_deccmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_aeb_failinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_aeb_fullact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_aeb_onoffsta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_aeb_partialact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_aeb_prefill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_aeb_stopreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_aeb_warn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_aeb_warnsetsta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_fr03_checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_fr03_msgcounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_scc_objdist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::ApdtrOut_Lgt_0x20A, apdtr_out_flr_scc_objlatpos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, apdtrout_lat_ea_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, apdtrout_lgt_216_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, apdtrout_lgt_219_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, apdtrout_lgt_20a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, adptrout_brake_command_60_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, adptrout_throttle_command_62_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, adptrout_steering_command_64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, adptrout_gear_command_66_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, adptrout_turnsignal_command_68_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, adptrout_latctrl_state_st_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ads_adptrout::AdptrOut_Cruising_Outputs, adptrout_lonctrl_state_st_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ads_adptrout::ApdtrOut_Lat_0xEA)},
  { 22, -1, sizeof(::ads_adptrout::ApdtrOut_Lgt_0x216)},
  { 37, -1, sizeof(::ads_adptrout::ApdtrOut_Lgt_0x219)},
  { 54, -1, sizeof(::ads_adptrout::ApdtrOut_Lgt_0x20A)},
  { 73, -1, sizeof(::ads_adptrout::AdptrOut_Cruising_Outputs)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_adptrout::_ApdtrOut_Lat_0xEA_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_adptrout::_ApdtrOut_Lgt_0x216_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_adptrout::_ApdtrOut_Lgt_0x219_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_adptrout::_ApdtrOut_Lgt_0x20A_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ads_adptrout.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022ads_adptrout.proto\022\014ads_adptrout\032\rads_"
      "com.proto\"\252\005\n\021ApdtrOut_Lat_0xEA\0220\n(Adptr"
      "_Out_FLC_ADAS_SndCtrl_LKA_OnOff_fbk\030\001 \001("
      "\005\022#\n\033Adptr_Out_FLC_Fr01_Checksum\030\002 \001(\005\022%"
      "\n\035Adptr_Out_FLC_Fr01_MsgCounter\030\003 \001(\005\022&\n"
      "\036Adptr_Out_FLC_LDWLKA_LHWarning\030\004 \001(\005\022!\n"
      "\031Adptr_Out_FLC_LDWLKA_Mode\030\005 \001(\005\022&\n\036Adpt"
      "r_Out_FLC_LDWLKA_RHWarning\030\006 \001(\005\022+\n#Adpt"
      "r_Out_FLC_LDWLKA_Recog_SysState\030\007 \001(\005\022#\n"
      "\033Adptr_Out_FLC_LDWLKA_Symbol\030\010 \001(\005\022\'\n\037Ad"
      "ptr_Out_FLC_LDWLKA_WarnSetSta\030\t \001(\005\022+\n#A"
      "dptr_Out_FLC_LKA_HandsOffSndWaring\030\n \001(\005"
      "\022)\n!Adptr_Out_FLC_LKA_HandsOffWarning\030\013 "
      "\001(\005\022#\n\033Adptr_Out_FLC_LKA_StrToqReq\030\014 \001(\002"
      "\022 \n\030Adptr_Out_FLC_LKA_TOIAct\030\r \001(\005\022\"\n\032Ad"
      "ptr_Out_FLC_LKA_TOIFault\030\016 \001(\005\022\034\n\024Adptr_"
      "Out_FLC_Status\030\017 \001(\005\022\"\n\032Adptr_Out_FLC_TJ"
      "A_SysState\030\020 \001(\005\022$\n\034Adptr_Out_FLC_TJA_Sy"
      "sWarning\030\021 \001(\005\"\263\003\n\022ApdtrOut_Lgt_0x216\022*\n"
      "\"Apdtr_Out_FLR_ACC_ComfortBandLower\030\001 \001("
      "\002\022*\n\"Apdtr_Out_FLR_ACC_ComfortBandUpper\030"
      "\002 \001(\002\022(\n Apdtr_Out_FLR_ACC_JerkLowerLimi"
      "t\030\003 \001(\002\022(\n Apdtr_Out_FLR_ACC_JerkUpperLi"
      "mit\030\004 \001(\002\022\'\n\037Apdtr_Out_FLR_ACC_RequiredA"
      "ccel\030\005 \001(\002\022!\n\031Apdtr_Out_FLR_ACC_StopReq\030"
      "\006 \001(\005\022+\n#Apdtr_Out_FLR_SndCtrl_ACC_OnOff"
      "_fbk\030\007 \001(\005\022#\n\033Apdtr_Out_FLR_Fr01_Checksu"
      "m\030\010 \001(\005\022!\n\031Apdtr_Out_FLR_ACC_msgCntr\030\t \001"
      "(\005\0220\n(Apdtr_Out_FLR_SndCtrlAccActivtDriv"
      "er_fdk\030\n \001(\005\"\322\003\n\022ApdtrOut_Lgt_0x219\022\036\n\026A"
      "pdtr_Out_FLR_ACC_Mode\030\001 \001(\005\022%\n\035Apdtr_Out"
      "_FLR_ACC_SetDistance\030\002 \001(\005\022\"\n\032Apdtr_Out_"
      "FLR_ACC_SetSpeed\030\003 \001(\005\022$\n\034Apdtr_Out_FLR_"
      "ACC_SysFailure\030\004 \001(\005\022!\n\031Apdtr_Out_FLR_AC"
      "C_SysInfo\030\005 \001(\005\022%\n\035Apdtr_Out_FLR_ACC_Sys"
      "temState\030\006 \001(\005\022(\n Apdtr_Out_FLR_ACC_Targ"
      "etValidity\030\007 \001(\005\022#\n\033Apdtr_Out_FLR_Fr02_C"
      "hecksum\030\010 \001(\005\022!\n\031Apdtr_Out_FLR_ACC_msgCn"
      "tr\030\t \001(\005\022-\n%Apdtr_Out_FLR_IHUSndCtrlACCA"
      "ctivtReqt\030\n \001(\005\022\037\n\027Apdtr_Out_SCC_ObjRelS"
      "pd\030\013 \001(\002\022\037\n\027Apdtr_Out_SCC_ObjStatus\030\014 \001("
      "\005\"\213\004\n\022ApdtrOut_Lgt_0x20A\022\"\n\032Apdtr_Out_FL"
      "R_AEB_DBSLevel\030\001 \001(\005\022 \n\030Apdtr_Out_FLR_AE"
      "B_DecCmd\030\002 \001(\002\022\"\n\032Apdtr_Out_FLR_AEB_Fail"
      "info\030\003 \001(\005\022!\n\031Apdtr_Out_FLR_AEB_FullAct\030"
      "\004 \001(\005\022\"\n\032Apdtr_Out_FLR_AEB_OnOffSta\030\005 \001("
      "\005\022$\n\034Apdtr_Out_FLR_AEB_PartialAct\030\006 \001(\005\022"
      "!\n\031Apdtr_Out_FLR_AEB_Prefill\030\007 \001(\005\022!\n\031Ap"
      "dtr_Out_FLR_AEB_StopReq\030\010 \001(\005\022\036\n\026Apdtr_O"
      "ut_FLR_AEB_Warn\030\t \001(\005\022$\n\034Apdtr_Out_FLR_A"
      "EB_WarnSetSta\030\n \001(\005\022#\n\033Apdtr_Out_FLR_Fr0"
      "3_Checksum\030\013 \001(\005\022%\n\035Apdtr_Out_FLR_Fr03_M"
      "sgCounter\030\014 \001(\005\022!\n\031Apdtr_Out_FLR_SCC_Obj"
      "Dist\030\r \001(\002\022#\n\033Apdtr_Out_FLR_SCC_ObjLatPo"
      "s\030\016 \001(\002\"\300\006\n\031AdptrOut_Cruising_Outputs\0228\n"
      "\017ApdtrOut_Lat_EA\030\001 \001(\0132\037.ads_adptrout.Ap"
      "dtrOut_Lat_0xEA\022:\n\020ApdtrOut_Lgt_216\030\002 \001("
      "\0132 .ads_adptrout.ApdtrOut_Lgt_0x216\022:\n\020A"
      "pdtrOut_Lgt_219\030\003 \001(\0132 .ads_adptrout.Apd"
      "trOut_Lgt_0x219\022:\n\020ApdtrOut_Lgt_20A\030\004 \001("
      "\0132 .ads_adptrout.ApdtrOut_Lgt_0x20A\022M\n\031A"
      "dptrout_Brake_Command_60\030\005 \001(\0132*.ads_com"
      "mon.B_Adptrout_Brake_Command_60_st\022S\n\034Ad"
      "ptrout_Throttle_Command_62\030\006 \001(\0132-.ads_c"
      "ommon.B_Adptrout_Throttle_Command_62_st\022"
      "S\n\034Adptrout_Steering_Command_64\030\007 \001(\0132-."
      "ads_common.B_Adptrout_Steering_Command_6"
      "4_st\022K\n\030Adptrout_Gear_Command_66\030\010 \001(\0132)"
      ".ads_common.B_Adptrout_Gear_Command_66_s"
      "t\022W\n\036Adptrout_TurnSignal_Command_68\030\t \001("
      "\0132/.ads_common.B_Adptrout_TurnSignal_Com"
      "mand_68_st\022J\n\031Adptrout_LatCtrl_State_st\030"
      "\n \001(\0132\'.ads_common.B_Adptrout_LatCtrl_St"
      "ate_st\022J\n\031Adptrout_LonCtrl_State_st\030\013 \001("
      "\0132\'.ads_common.B_Adptrout_LonCtrl_State_"
      "stb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3010);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ads_adptrout.proto", &protobuf_RegisterTypes);
  ::protobuf_ads_5fcom_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ads_5fadptrout_2eproto
namespace ads_adptrout {

// ===================================================================

void ApdtrOut_Lat_0xEA::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCADASSndCtrlLKAOnOffFbkFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCFr01ChecksumFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCFr01MsgCounterFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCLDWLKALHWarningFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCLDWLKAModeFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCLDWLKARHWarningFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCLDWLKARecogSysStateFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCLDWLKASymbolFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCLDWLKAWarnSetStaFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCLKAHandsOffSndWaringFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCLKAHandsOffWarningFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCLKAStrToqReqFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCLKATOIActFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCLKATOIFaultFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCStatusFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCTJASysStateFieldNumber;
const int ApdtrOut_Lat_0xEA::kAdptrOutFLCTJASysWarningFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApdtrOut_Lat_0xEA::ApdtrOut_Lat_0xEA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lat_0xEA.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_adptrout.ApdtrOut_Lat_0xEA)
}
ApdtrOut_Lat_0xEA::ApdtrOut_Lat_0xEA(const ApdtrOut_Lat_0xEA& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adptr_out_flc_adas_sndctrl_lka_onoff_fbk_, &from.adptr_out_flc_adas_sndctrl_lka_onoff_fbk_,
    static_cast<size_t>(reinterpret_cast<char*>(&adptr_out_flc_tja_syswarning_) -
    reinterpret_cast<char*>(&adptr_out_flc_adas_sndctrl_lka_onoff_fbk_)) + sizeof(adptr_out_flc_tja_syswarning_));
  // @@protoc_insertion_point(copy_constructor:ads_adptrout.ApdtrOut_Lat_0xEA)
}

void ApdtrOut_Lat_0xEA::SharedCtor() {
  ::memset(&adptr_out_flc_adas_sndctrl_lka_onoff_fbk_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adptr_out_flc_tja_syswarning_) -
      reinterpret_cast<char*>(&adptr_out_flc_adas_sndctrl_lka_onoff_fbk_)) + sizeof(adptr_out_flc_tja_syswarning_));
}

ApdtrOut_Lat_0xEA::~ApdtrOut_Lat_0xEA() {
  // @@protoc_insertion_point(destructor:ads_adptrout.ApdtrOut_Lat_0xEA)
  SharedDtor();
}

void ApdtrOut_Lat_0xEA::SharedDtor() {
}

void ApdtrOut_Lat_0xEA::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ApdtrOut_Lat_0xEA::descriptor() {
  ::protobuf_ads_5fadptrout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fadptrout_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApdtrOut_Lat_0xEA& ApdtrOut_Lat_0xEA::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lat_0xEA.base);
  return *internal_default_instance();
}


void ApdtrOut_Lat_0xEA::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_adptrout.ApdtrOut_Lat_0xEA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&adptr_out_flc_adas_sndctrl_lka_onoff_fbk_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adptr_out_flc_tja_syswarning_) -
      reinterpret_cast<char*>(&adptr_out_flc_adas_sndctrl_lka_onoff_fbk_)) + sizeof(adptr_out_flc_tja_syswarning_));
  _internal_metadata_.Clear();
}

bool ApdtrOut_Lat_0xEA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_adptrout.ApdtrOut_Lat_0xEA)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Adptr_Out_FLC_ADAS_SndCtrl_LKA_OnOff_fbk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_adas_sndctrl_lka_onoff_fbk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_Fr01_Checksum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_fr01_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_Fr01_MsgCounter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_fr01_msgcounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_LDWLKA_LHWarning = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_ldwlka_lhwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_LDWLKA_Mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_ldwlka_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_LDWLKA_RHWarning = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_ldwlka_rhwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_LDWLKA_Recog_SysState = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_ldwlka_recog_sysstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_LDWLKA_Symbol = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_ldwlka_symbol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_LDWLKA_WarnSetSta = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_ldwlka_warnsetsta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_LKA_HandsOffSndWaring = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_lka_handsoffsndwaring_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_LKA_HandsOffWarning = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_lka_handsoffwarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Adptr_Out_FLC_LKA_StrToqReq = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &adptr_out_flc_lka_strtoqreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_LKA_TOIAct = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_lka_toiact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_LKA_TOIFault = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_lka_toifault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_Status = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_TJA_SysState = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_tja_sysstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Adptr_Out_FLC_TJA_SysWarning = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adptr_out_flc_tja_syswarning_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_adptrout.ApdtrOut_Lat_0xEA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_adptrout.ApdtrOut_Lat_0xEA)
  return false;
#undef DO_
}

void ApdtrOut_Lat_0xEA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_adptrout.ApdtrOut_Lat_0xEA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Adptr_Out_FLC_ADAS_SndCtrl_LKA_OnOff_fbk = 1;
  if (this->adptr_out_flc_adas_sndctrl_lka_onoff_fbk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->adptr_out_flc_adas_sndctrl_lka_onoff_fbk(), output);
  }

  // int32 Adptr_Out_FLC_Fr01_Checksum = 2;
  if (this->adptr_out_flc_fr01_checksum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->adptr_out_flc_fr01_checksum(), output);
  }

  // int32 Adptr_Out_FLC_Fr01_MsgCounter = 3;
  if (this->adptr_out_flc_fr01_msgcounter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->adptr_out_flc_fr01_msgcounter(), output);
  }

  // int32 Adptr_Out_FLC_LDWLKA_LHWarning = 4;
  if (this->adptr_out_flc_ldwlka_lhwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->adptr_out_flc_ldwlka_lhwarning(), output);
  }

  // int32 Adptr_Out_FLC_LDWLKA_Mode = 5;
  if (this->adptr_out_flc_ldwlka_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->adptr_out_flc_ldwlka_mode(), output);
  }

  // int32 Adptr_Out_FLC_LDWLKA_RHWarning = 6;
  if (this->adptr_out_flc_ldwlka_rhwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->adptr_out_flc_ldwlka_rhwarning(), output);
  }

  // int32 Adptr_Out_FLC_LDWLKA_Recog_SysState = 7;
  if (this->adptr_out_flc_ldwlka_recog_sysstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->adptr_out_flc_ldwlka_recog_sysstate(), output);
  }

  // int32 Adptr_Out_FLC_LDWLKA_Symbol = 8;
  if (this->adptr_out_flc_ldwlka_symbol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->adptr_out_flc_ldwlka_symbol(), output);
  }

  // int32 Adptr_Out_FLC_LDWLKA_WarnSetSta = 9;
  if (this->adptr_out_flc_ldwlka_warnsetsta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->adptr_out_flc_ldwlka_warnsetsta(), output);
  }

  // int32 Adptr_Out_FLC_LKA_HandsOffSndWaring = 10;
  if (this->adptr_out_flc_lka_handsoffsndwaring() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->adptr_out_flc_lka_handsoffsndwaring(), output);
  }

  // int32 Adptr_Out_FLC_LKA_HandsOffWarning = 11;
  if (this->adptr_out_flc_lka_handsoffwarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->adptr_out_flc_lka_handsoffwarning(), output);
  }

  // float Adptr_Out_FLC_LKA_StrToqReq = 12;
  if (this->adptr_out_flc_lka_strtoqreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->adptr_out_flc_lka_strtoqreq(), output);
  }

  // int32 Adptr_Out_FLC_LKA_TOIAct = 13;
  if (this->adptr_out_flc_lka_toiact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->adptr_out_flc_lka_toiact(), output);
  }

  // int32 Adptr_Out_FLC_LKA_TOIFault = 14;
  if (this->adptr_out_flc_lka_toifault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->adptr_out_flc_lka_toifault(), output);
  }

  // int32 Adptr_Out_FLC_Status = 15;
  if (this->adptr_out_flc_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->adptr_out_flc_status(), output);
  }

  // int32 Adptr_Out_FLC_TJA_SysState = 16;
  if (this->adptr_out_flc_tja_sysstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->adptr_out_flc_tja_sysstate(), output);
  }

  // int32 Adptr_Out_FLC_TJA_SysWarning = 17;
  if (this->adptr_out_flc_tja_syswarning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->adptr_out_flc_tja_syswarning(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_adptrout.ApdtrOut_Lat_0xEA)
}

::google::protobuf::uint8* ApdtrOut_Lat_0xEA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_adptrout.ApdtrOut_Lat_0xEA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Adptr_Out_FLC_ADAS_SndCtrl_LKA_OnOff_fbk = 1;
  if (this->adptr_out_flc_adas_sndctrl_lka_onoff_fbk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->adptr_out_flc_adas_sndctrl_lka_onoff_fbk(), target);
  }

  // int32 Adptr_Out_FLC_Fr01_Checksum = 2;
  if (this->adptr_out_flc_fr01_checksum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->adptr_out_flc_fr01_checksum(), target);
  }

  // int32 Adptr_Out_FLC_Fr01_MsgCounter = 3;
  if (this->adptr_out_flc_fr01_msgcounter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->adptr_out_flc_fr01_msgcounter(), target);
  }

  // int32 Adptr_Out_FLC_LDWLKA_LHWarning = 4;
  if (this->adptr_out_flc_ldwlka_lhwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->adptr_out_flc_ldwlka_lhwarning(), target);
  }

  // int32 Adptr_Out_FLC_LDWLKA_Mode = 5;
  if (this->adptr_out_flc_ldwlka_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->adptr_out_flc_ldwlka_mode(), target);
  }

  // int32 Adptr_Out_FLC_LDWLKA_RHWarning = 6;
  if (this->adptr_out_flc_ldwlka_rhwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->adptr_out_flc_ldwlka_rhwarning(), target);
  }

  // int32 Adptr_Out_FLC_LDWLKA_Recog_SysState = 7;
  if (this->adptr_out_flc_ldwlka_recog_sysstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->adptr_out_flc_ldwlka_recog_sysstate(), target);
  }

  // int32 Adptr_Out_FLC_LDWLKA_Symbol = 8;
  if (this->adptr_out_flc_ldwlka_symbol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->adptr_out_flc_ldwlka_symbol(), target);
  }

  // int32 Adptr_Out_FLC_LDWLKA_WarnSetSta = 9;
  if (this->adptr_out_flc_ldwlka_warnsetsta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->adptr_out_flc_ldwlka_warnsetsta(), target);
  }

  // int32 Adptr_Out_FLC_LKA_HandsOffSndWaring = 10;
  if (this->adptr_out_flc_lka_handsoffsndwaring() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->adptr_out_flc_lka_handsoffsndwaring(), target);
  }

  // int32 Adptr_Out_FLC_LKA_HandsOffWarning = 11;
  if (this->adptr_out_flc_lka_handsoffwarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->adptr_out_flc_lka_handsoffwarning(), target);
  }

  // float Adptr_Out_FLC_LKA_StrToqReq = 12;
  if (this->adptr_out_flc_lka_strtoqreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->adptr_out_flc_lka_strtoqreq(), target);
  }

  // int32 Adptr_Out_FLC_LKA_TOIAct = 13;
  if (this->adptr_out_flc_lka_toiact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->adptr_out_flc_lka_toiact(), target);
  }

  // int32 Adptr_Out_FLC_LKA_TOIFault = 14;
  if (this->adptr_out_flc_lka_toifault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->adptr_out_flc_lka_toifault(), target);
  }

  // int32 Adptr_Out_FLC_Status = 15;
  if (this->adptr_out_flc_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->adptr_out_flc_status(), target);
  }

  // int32 Adptr_Out_FLC_TJA_SysState = 16;
  if (this->adptr_out_flc_tja_sysstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->adptr_out_flc_tja_sysstate(), target);
  }

  // int32 Adptr_Out_FLC_TJA_SysWarning = 17;
  if (this->adptr_out_flc_tja_syswarning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->adptr_out_flc_tja_syswarning(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_adptrout.ApdtrOut_Lat_0xEA)
  return target;
}

size_t ApdtrOut_Lat_0xEA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_adptrout.ApdtrOut_Lat_0xEA)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Adptr_Out_FLC_ADAS_SndCtrl_LKA_OnOff_fbk = 1;
  if (this->adptr_out_flc_adas_sndctrl_lka_onoff_fbk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_adas_sndctrl_lka_onoff_fbk());
  }

  // int32 Adptr_Out_FLC_Fr01_Checksum = 2;
  if (this->adptr_out_flc_fr01_checksum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_fr01_checksum());
  }

  // int32 Adptr_Out_FLC_Fr01_MsgCounter = 3;
  if (this->adptr_out_flc_fr01_msgcounter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_fr01_msgcounter());
  }

  // int32 Adptr_Out_FLC_LDWLKA_LHWarning = 4;
  if (this->adptr_out_flc_ldwlka_lhwarning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_ldwlka_lhwarning());
  }

  // int32 Adptr_Out_FLC_LDWLKA_Mode = 5;
  if (this->adptr_out_flc_ldwlka_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_ldwlka_mode());
  }

  // int32 Adptr_Out_FLC_LDWLKA_RHWarning = 6;
  if (this->adptr_out_flc_ldwlka_rhwarning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_ldwlka_rhwarning());
  }

  // int32 Adptr_Out_FLC_LDWLKA_Recog_SysState = 7;
  if (this->adptr_out_flc_ldwlka_recog_sysstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_ldwlka_recog_sysstate());
  }

  // int32 Adptr_Out_FLC_LDWLKA_Symbol = 8;
  if (this->adptr_out_flc_ldwlka_symbol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_ldwlka_symbol());
  }

  // int32 Adptr_Out_FLC_LDWLKA_WarnSetSta = 9;
  if (this->adptr_out_flc_ldwlka_warnsetsta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_ldwlka_warnsetsta());
  }

  // int32 Adptr_Out_FLC_LKA_HandsOffSndWaring = 10;
  if (this->adptr_out_flc_lka_handsoffsndwaring() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_lka_handsoffsndwaring());
  }

  // int32 Adptr_Out_FLC_LKA_HandsOffWarning = 11;
  if (this->adptr_out_flc_lka_handsoffwarning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_lka_handsoffwarning());
  }

  // float Adptr_Out_FLC_LKA_StrToqReq = 12;
  if (this->adptr_out_flc_lka_strtoqreq() != 0) {
    total_size += 1 + 4;
  }

  // int32 Adptr_Out_FLC_LKA_TOIAct = 13;
  if (this->adptr_out_flc_lka_toiact() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_lka_toiact());
  }

  // int32 Adptr_Out_FLC_LKA_TOIFault = 14;
  if (this->adptr_out_flc_lka_toifault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_lka_toifault());
  }

  // int32 Adptr_Out_FLC_Status = 15;
  if (this->adptr_out_flc_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_status());
  }

  // int32 Adptr_Out_FLC_TJA_SysState = 16;
  if (this->adptr_out_flc_tja_sysstate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_tja_sysstate());
  }

  // int32 Adptr_Out_FLC_TJA_SysWarning = 17;
  if (this->adptr_out_flc_tja_syswarning() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adptr_out_flc_tja_syswarning());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApdtrOut_Lat_0xEA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_adptrout.ApdtrOut_Lat_0xEA)
  GOOGLE_DCHECK_NE(&from, this);
  const ApdtrOut_Lat_0xEA* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApdtrOut_Lat_0xEA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_adptrout.ApdtrOut_Lat_0xEA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_adptrout.ApdtrOut_Lat_0xEA)
    MergeFrom(*source);
  }
}

void ApdtrOut_Lat_0xEA::MergeFrom(const ApdtrOut_Lat_0xEA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_adptrout.ApdtrOut_Lat_0xEA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.adptr_out_flc_adas_sndctrl_lka_onoff_fbk() != 0) {
    set_adptr_out_flc_adas_sndctrl_lka_onoff_fbk(from.adptr_out_flc_adas_sndctrl_lka_onoff_fbk());
  }
  if (from.adptr_out_flc_fr01_checksum() != 0) {
    set_adptr_out_flc_fr01_checksum(from.adptr_out_flc_fr01_checksum());
  }
  if (from.adptr_out_flc_fr01_msgcounter() != 0) {
    set_adptr_out_flc_fr01_msgcounter(from.adptr_out_flc_fr01_msgcounter());
  }
  if (from.adptr_out_flc_ldwlka_lhwarning() != 0) {
    set_adptr_out_flc_ldwlka_lhwarning(from.adptr_out_flc_ldwlka_lhwarning());
  }
  if (from.adptr_out_flc_ldwlka_mode() != 0) {
    set_adptr_out_flc_ldwlka_mode(from.adptr_out_flc_ldwlka_mode());
  }
  if (from.adptr_out_flc_ldwlka_rhwarning() != 0) {
    set_adptr_out_flc_ldwlka_rhwarning(from.adptr_out_flc_ldwlka_rhwarning());
  }
  if (from.adptr_out_flc_ldwlka_recog_sysstate() != 0) {
    set_adptr_out_flc_ldwlka_recog_sysstate(from.adptr_out_flc_ldwlka_recog_sysstate());
  }
  if (from.adptr_out_flc_ldwlka_symbol() != 0) {
    set_adptr_out_flc_ldwlka_symbol(from.adptr_out_flc_ldwlka_symbol());
  }
  if (from.adptr_out_flc_ldwlka_warnsetsta() != 0) {
    set_adptr_out_flc_ldwlka_warnsetsta(from.adptr_out_flc_ldwlka_warnsetsta());
  }
  if (from.adptr_out_flc_lka_handsoffsndwaring() != 0) {
    set_adptr_out_flc_lka_handsoffsndwaring(from.adptr_out_flc_lka_handsoffsndwaring());
  }
  if (from.adptr_out_flc_lka_handsoffwarning() != 0) {
    set_adptr_out_flc_lka_handsoffwarning(from.adptr_out_flc_lka_handsoffwarning());
  }
  if (from.adptr_out_flc_lka_strtoqreq() != 0) {
    set_adptr_out_flc_lka_strtoqreq(from.adptr_out_flc_lka_strtoqreq());
  }
  if (from.adptr_out_flc_lka_toiact() != 0) {
    set_adptr_out_flc_lka_toiact(from.adptr_out_flc_lka_toiact());
  }
  if (from.adptr_out_flc_lka_toifault() != 0) {
    set_adptr_out_flc_lka_toifault(from.adptr_out_flc_lka_toifault());
  }
  if (from.adptr_out_flc_status() != 0) {
    set_adptr_out_flc_status(from.adptr_out_flc_status());
  }
  if (from.adptr_out_flc_tja_sysstate() != 0) {
    set_adptr_out_flc_tja_sysstate(from.adptr_out_flc_tja_sysstate());
  }
  if (from.adptr_out_flc_tja_syswarning() != 0) {
    set_adptr_out_flc_tja_syswarning(from.adptr_out_flc_tja_syswarning());
  }
}

void ApdtrOut_Lat_0xEA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_adptrout.ApdtrOut_Lat_0xEA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApdtrOut_Lat_0xEA::CopyFrom(const ApdtrOut_Lat_0xEA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_adptrout.ApdtrOut_Lat_0xEA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApdtrOut_Lat_0xEA::IsInitialized() const {
  return true;
}

void ApdtrOut_Lat_0xEA::Swap(ApdtrOut_Lat_0xEA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApdtrOut_Lat_0xEA::InternalSwap(ApdtrOut_Lat_0xEA* other) {
  using std::swap;
  swap(adptr_out_flc_adas_sndctrl_lka_onoff_fbk_, other->adptr_out_flc_adas_sndctrl_lka_onoff_fbk_);
  swap(adptr_out_flc_fr01_checksum_, other->adptr_out_flc_fr01_checksum_);
  swap(adptr_out_flc_fr01_msgcounter_, other->adptr_out_flc_fr01_msgcounter_);
  swap(adptr_out_flc_ldwlka_lhwarning_, other->adptr_out_flc_ldwlka_lhwarning_);
  swap(adptr_out_flc_ldwlka_mode_, other->adptr_out_flc_ldwlka_mode_);
  swap(adptr_out_flc_ldwlka_rhwarning_, other->adptr_out_flc_ldwlka_rhwarning_);
  swap(adptr_out_flc_ldwlka_recog_sysstate_, other->adptr_out_flc_ldwlka_recog_sysstate_);
  swap(adptr_out_flc_ldwlka_symbol_, other->adptr_out_flc_ldwlka_symbol_);
  swap(adptr_out_flc_ldwlka_warnsetsta_, other->adptr_out_flc_ldwlka_warnsetsta_);
  swap(adptr_out_flc_lka_handsoffsndwaring_, other->adptr_out_flc_lka_handsoffsndwaring_);
  swap(adptr_out_flc_lka_handsoffwarning_, other->adptr_out_flc_lka_handsoffwarning_);
  swap(adptr_out_flc_lka_strtoqreq_, other->adptr_out_flc_lka_strtoqreq_);
  swap(adptr_out_flc_lka_toiact_, other->adptr_out_flc_lka_toiact_);
  swap(adptr_out_flc_lka_toifault_, other->adptr_out_flc_lka_toifault_);
  swap(adptr_out_flc_status_, other->adptr_out_flc_status_);
  swap(adptr_out_flc_tja_sysstate_, other->adptr_out_flc_tja_sysstate_);
  swap(adptr_out_flc_tja_syswarning_, other->adptr_out_flc_tja_syswarning_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ApdtrOut_Lat_0xEA::GetMetadata() const {
  protobuf_ads_5fadptrout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fadptrout_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApdtrOut_Lgt_0x216::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApdtrOut_Lgt_0x216::kApdtrOutFLRACCComfortBandLowerFieldNumber;
const int ApdtrOut_Lgt_0x216::kApdtrOutFLRACCComfortBandUpperFieldNumber;
const int ApdtrOut_Lgt_0x216::kApdtrOutFLRACCJerkLowerLimitFieldNumber;
const int ApdtrOut_Lgt_0x216::kApdtrOutFLRACCJerkUpperLimitFieldNumber;
const int ApdtrOut_Lgt_0x216::kApdtrOutFLRACCRequiredAccelFieldNumber;
const int ApdtrOut_Lgt_0x216::kApdtrOutFLRACCStopReqFieldNumber;
const int ApdtrOut_Lgt_0x216::kApdtrOutFLRSndCtrlACCOnOffFbkFieldNumber;
const int ApdtrOut_Lgt_0x216::kApdtrOutFLRFr01ChecksumFieldNumber;
const int ApdtrOut_Lgt_0x216::kApdtrOutFLRACCMsgCntrFieldNumber;
const int ApdtrOut_Lgt_0x216::kApdtrOutFLRSndCtrlAccActivtDriverFdkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApdtrOut_Lgt_0x216::ApdtrOut_Lgt_0x216()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lgt_0x216.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_adptrout.ApdtrOut_Lgt_0x216)
}
ApdtrOut_Lgt_0x216::ApdtrOut_Lgt_0x216(const ApdtrOut_Lgt_0x216& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&apdtr_out_flr_acc_comfortbandlower_, &from.apdtr_out_flr_acc_comfortbandlower_,
    static_cast<size_t>(reinterpret_cast<char*>(&apdtr_out_flr_sndctrlaccactivtdriver_fdk_) -
    reinterpret_cast<char*>(&apdtr_out_flr_acc_comfortbandlower_)) + sizeof(apdtr_out_flr_sndctrlaccactivtdriver_fdk_));
  // @@protoc_insertion_point(copy_constructor:ads_adptrout.ApdtrOut_Lgt_0x216)
}

void ApdtrOut_Lgt_0x216::SharedCtor() {
  ::memset(&apdtr_out_flr_acc_comfortbandlower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apdtr_out_flr_sndctrlaccactivtdriver_fdk_) -
      reinterpret_cast<char*>(&apdtr_out_flr_acc_comfortbandlower_)) + sizeof(apdtr_out_flr_sndctrlaccactivtdriver_fdk_));
}

ApdtrOut_Lgt_0x216::~ApdtrOut_Lgt_0x216() {
  // @@protoc_insertion_point(destructor:ads_adptrout.ApdtrOut_Lgt_0x216)
  SharedDtor();
}

void ApdtrOut_Lgt_0x216::SharedDtor() {
}

void ApdtrOut_Lgt_0x216::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ApdtrOut_Lgt_0x216::descriptor() {
  ::protobuf_ads_5fadptrout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fadptrout_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApdtrOut_Lgt_0x216& ApdtrOut_Lgt_0x216::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lgt_0x216.base);
  return *internal_default_instance();
}


void ApdtrOut_Lgt_0x216::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_adptrout.ApdtrOut_Lgt_0x216)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&apdtr_out_flr_acc_comfortbandlower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apdtr_out_flr_sndctrlaccactivtdriver_fdk_) -
      reinterpret_cast<char*>(&apdtr_out_flr_acc_comfortbandlower_)) + sizeof(apdtr_out_flr_sndctrlaccactivtdriver_fdk_));
  _internal_metadata_.Clear();
}

bool ApdtrOut_Lgt_0x216::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_adptrout.ApdtrOut_Lgt_0x216)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float Apdtr_Out_FLR_ACC_ComfortBandLower = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &apdtr_out_flr_acc_comfortbandlower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Apdtr_Out_FLR_ACC_ComfortBandUpper = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &apdtr_out_flr_acc_comfortbandupper_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Apdtr_Out_FLR_ACC_JerkLowerLimit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &apdtr_out_flr_acc_jerklowerlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Apdtr_Out_FLR_ACC_JerkUpperLimit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &apdtr_out_flr_acc_jerkupperlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Apdtr_Out_FLR_ACC_RequiredAccel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &apdtr_out_flr_acc_requiredaccel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_ACC_StopReq = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_acc_stopreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_SndCtrl_ACC_OnOff_fbk = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_sndctrl_acc_onoff_fbk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_Fr01_Checksum = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_fr01_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_ACC_msgCntr = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_acc_msgcntr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_SndCtrlAccActivtDriver_fdk = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_sndctrlaccactivtdriver_fdk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_adptrout.ApdtrOut_Lgt_0x216)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_adptrout.ApdtrOut_Lgt_0x216)
  return false;
#undef DO_
}

void ApdtrOut_Lgt_0x216::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_adptrout.ApdtrOut_Lgt_0x216)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float Apdtr_Out_FLR_ACC_ComfortBandLower = 1;
  if (this->apdtr_out_flr_acc_comfortbandlower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->apdtr_out_flr_acc_comfortbandlower(), output);
  }

  // float Apdtr_Out_FLR_ACC_ComfortBandUpper = 2;
  if (this->apdtr_out_flr_acc_comfortbandupper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->apdtr_out_flr_acc_comfortbandupper(), output);
  }

  // float Apdtr_Out_FLR_ACC_JerkLowerLimit = 3;
  if (this->apdtr_out_flr_acc_jerklowerlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->apdtr_out_flr_acc_jerklowerlimit(), output);
  }

  // float Apdtr_Out_FLR_ACC_JerkUpperLimit = 4;
  if (this->apdtr_out_flr_acc_jerkupperlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->apdtr_out_flr_acc_jerkupperlimit(), output);
  }

  // float Apdtr_Out_FLR_ACC_RequiredAccel = 5;
  if (this->apdtr_out_flr_acc_requiredaccel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->apdtr_out_flr_acc_requiredaccel(), output);
  }

  // int32 Apdtr_Out_FLR_ACC_StopReq = 6;
  if (this->apdtr_out_flr_acc_stopreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->apdtr_out_flr_acc_stopreq(), output);
  }

  // int32 Apdtr_Out_FLR_SndCtrl_ACC_OnOff_fbk = 7;
  if (this->apdtr_out_flr_sndctrl_acc_onoff_fbk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->apdtr_out_flr_sndctrl_acc_onoff_fbk(), output);
  }

  // int32 Apdtr_Out_FLR_Fr01_Checksum = 8;
  if (this->apdtr_out_flr_fr01_checksum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->apdtr_out_flr_fr01_checksum(), output);
  }

  // int32 Apdtr_Out_FLR_ACC_msgCntr = 9;
  if (this->apdtr_out_flr_acc_msgcntr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->apdtr_out_flr_acc_msgcntr(), output);
  }

  // int32 Apdtr_Out_FLR_SndCtrlAccActivtDriver_fdk = 10;
  if (this->apdtr_out_flr_sndctrlaccactivtdriver_fdk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->apdtr_out_flr_sndctrlaccactivtdriver_fdk(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_adptrout.ApdtrOut_Lgt_0x216)
}

::google::protobuf::uint8* ApdtrOut_Lgt_0x216::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_adptrout.ApdtrOut_Lgt_0x216)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float Apdtr_Out_FLR_ACC_ComfortBandLower = 1;
  if (this->apdtr_out_flr_acc_comfortbandlower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->apdtr_out_flr_acc_comfortbandlower(), target);
  }

  // float Apdtr_Out_FLR_ACC_ComfortBandUpper = 2;
  if (this->apdtr_out_flr_acc_comfortbandupper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->apdtr_out_flr_acc_comfortbandupper(), target);
  }

  // float Apdtr_Out_FLR_ACC_JerkLowerLimit = 3;
  if (this->apdtr_out_flr_acc_jerklowerlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->apdtr_out_flr_acc_jerklowerlimit(), target);
  }

  // float Apdtr_Out_FLR_ACC_JerkUpperLimit = 4;
  if (this->apdtr_out_flr_acc_jerkupperlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->apdtr_out_flr_acc_jerkupperlimit(), target);
  }

  // float Apdtr_Out_FLR_ACC_RequiredAccel = 5;
  if (this->apdtr_out_flr_acc_requiredaccel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->apdtr_out_flr_acc_requiredaccel(), target);
  }

  // int32 Apdtr_Out_FLR_ACC_StopReq = 6;
  if (this->apdtr_out_flr_acc_stopreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->apdtr_out_flr_acc_stopreq(), target);
  }

  // int32 Apdtr_Out_FLR_SndCtrl_ACC_OnOff_fbk = 7;
  if (this->apdtr_out_flr_sndctrl_acc_onoff_fbk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->apdtr_out_flr_sndctrl_acc_onoff_fbk(), target);
  }

  // int32 Apdtr_Out_FLR_Fr01_Checksum = 8;
  if (this->apdtr_out_flr_fr01_checksum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->apdtr_out_flr_fr01_checksum(), target);
  }

  // int32 Apdtr_Out_FLR_ACC_msgCntr = 9;
  if (this->apdtr_out_flr_acc_msgcntr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->apdtr_out_flr_acc_msgcntr(), target);
  }

  // int32 Apdtr_Out_FLR_SndCtrlAccActivtDriver_fdk = 10;
  if (this->apdtr_out_flr_sndctrlaccactivtdriver_fdk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->apdtr_out_flr_sndctrlaccactivtdriver_fdk(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_adptrout.ApdtrOut_Lgt_0x216)
  return target;
}

size_t ApdtrOut_Lgt_0x216::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_adptrout.ApdtrOut_Lgt_0x216)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float Apdtr_Out_FLR_ACC_ComfortBandLower = 1;
  if (this->apdtr_out_flr_acc_comfortbandlower() != 0) {
    total_size += 1 + 4;
  }

  // float Apdtr_Out_FLR_ACC_ComfortBandUpper = 2;
  if (this->apdtr_out_flr_acc_comfortbandupper() != 0) {
    total_size += 1 + 4;
  }

  // float Apdtr_Out_FLR_ACC_JerkLowerLimit = 3;
  if (this->apdtr_out_flr_acc_jerklowerlimit() != 0) {
    total_size += 1 + 4;
  }

  // float Apdtr_Out_FLR_ACC_JerkUpperLimit = 4;
  if (this->apdtr_out_flr_acc_jerkupperlimit() != 0) {
    total_size += 1 + 4;
  }

  // float Apdtr_Out_FLR_ACC_RequiredAccel = 5;
  if (this->apdtr_out_flr_acc_requiredaccel() != 0) {
    total_size += 1 + 4;
  }

  // int32 Apdtr_Out_FLR_ACC_StopReq = 6;
  if (this->apdtr_out_flr_acc_stopreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_acc_stopreq());
  }

  // int32 Apdtr_Out_FLR_SndCtrl_ACC_OnOff_fbk = 7;
  if (this->apdtr_out_flr_sndctrl_acc_onoff_fbk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_sndctrl_acc_onoff_fbk());
  }

  // int32 Apdtr_Out_FLR_Fr01_Checksum = 8;
  if (this->apdtr_out_flr_fr01_checksum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_fr01_checksum());
  }

  // int32 Apdtr_Out_FLR_ACC_msgCntr = 9;
  if (this->apdtr_out_flr_acc_msgcntr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_acc_msgcntr());
  }

  // int32 Apdtr_Out_FLR_SndCtrlAccActivtDriver_fdk = 10;
  if (this->apdtr_out_flr_sndctrlaccactivtdriver_fdk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_sndctrlaccactivtdriver_fdk());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApdtrOut_Lgt_0x216::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_adptrout.ApdtrOut_Lgt_0x216)
  GOOGLE_DCHECK_NE(&from, this);
  const ApdtrOut_Lgt_0x216* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApdtrOut_Lgt_0x216>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_adptrout.ApdtrOut_Lgt_0x216)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_adptrout.ApdtrOut_Lgt_0x216)
    MergeFrom(*source);
  }
}

void ApdtrOut_Lgt_0x216::MergeFrom(const ApdtrOut_Lgt_0x216& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_adptrout.ApdtrOut_Lgt_0x216)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apdtr_out_flr_acc_comfortbandlower() != 0) {
    set_apdtr_out_flr_acc_comfortbandlower(from.apdtr_out_flr_acc_comfortbandlower());
  }
  if (from.apdtr_out_flr_acc_comfortbandupper() != 0) {
    set_apdtr_out_flr_acc_comfortbandupper(from.apdtr_out_flr_acc_comfortbandupper());
  }
  if (from.apdtr_out_flr_acc_jerklowerlimit() != 0) {
    set_apdtr_out_flr_acc_jerklowerlimit(from.apdtr_out_flr_acc_jerklowerlimit());
  }
  if (from.apdtr_out_flr_acc_jerkupperlimit() != 0) {
    set_apdtr_out_flr_acc_jerkupperlimit(from.apdtr_out_flr_acc_jerkupperlimit());
  }
  if (from.apdtr_out_flr_acc_requiredaccel() != 0) {
    set_apdtr_out_flr_acc_requiredaccel(from.apdtr_out_flr_acc_requiredaccel());
  }
  if (from.apdtr_out_flr_acc_stopreq() != 0) {
    set_apdtr_out_flr_acc_stopreq(from.apdtr_out_flr_acc_stopreq());
  }
  if (from.apdtr_out_flr_sndctrl_acc_onoff_fbk() != 0) {
    set_apdtr_out_flr_sndctrl_acc_onoff_fbk(from.apdtr_out_flr_sndctrl_acc_onoff_fbk());
  }
  if (from.apdtr_out_flr_fr01_checksum() != 0) {
    set_apdtr_out_flr_fr01_checksum(from.apdtr_out_flr_fr01_checksum());
  }
  if (from.apdtr_out_flr_acc_msgcntr() != 0) {
    set_apdtr_out_flr_acc_msgcntr(from.apdtr_out_flr_acc_msgcntr());
  }
  if (from.apdtr_out_flr_sndctrlaccactivtdriver_fdk() != 0) {
    set_apdtr_out_flr_sndctrlaccactivtdriver_fdk(from.apdtr_out_flr_sndctrlaccactivtdriver_fdk());
  }
}

void ApdtrOut_Lgt_0x216::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_adptrout.ApdtrOut_Lgt_0x216)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApdtrOut_Lgt_0x216::CopyFrom(const ApdtrOut_Lgt_0x216& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_adptrout.ApdtrOut_Lgt_0x216)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApdtrOut_Lgt_0x216::IsInitialized() const {
  return true;
}

void ApdtrOut_Lgt_0x216::Swap(ApdtrOut_Lgt_0x216* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApdtrOut_Lgt_0x216::InternalSwap(ApdtrOut_Lgt_0x216* other) {
  using std::swap;
  swap(apdtr_out_flr_acc_comfortbandlower_, other->apdtr_out_flr_acc_comfortbandlower_);
  swap(apdtr_out_flr_acc_comfortbandupper_, other->apdtr_out_flr_acc_comfortbandupper_);
  swap(apdtr_out_flr_acc_jerklowerlimit_, other->apdtr_out_flr_acc_jerklowerlimit_);
  swap(apdtr_out_flr_acc_jerkupperlimit_, other->apdtr_out_flr_acc_jerkupperlimit_);
  swap(apdtr_out_flr_acc_requiredaccel_, other->apdtr_out_flr_acc_requiredaccel_);
  swap(apdtr_out_flr_acc_stopreq_, other->apdtr_out_flr_acc_stopreq_);
  swap(apdtr_out_flr_sndctrl_acc_onoff_fbk_, other->apdtr_out_flr_sndctrl_acc_onoff_fbk_);
  swap(apdtr_out_flr_fr01_checksum_, other->apdtr_out_flr_fr01_checksum_);
  swap(apdtr_out_flr_acc_msgcntr_, other->apdtr_out_flr_acc_msgcntr_);
  swap(apdtr_out_flr_sndctrlaccactivtdriver_fdk_, other->apdtr_out_flr_sndctrlaccactivtdriver_fdk_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ApdtrOut_Lgt_0x216::GetMetadata() const {
  protobuf_ads_5fadptrout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fadptrout_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApdtrOut_Lgt_0x219::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApdtrOut_Lgt_0x219::kApdtrOutFLRACCModeFieldNumber;
const int ApdtrOut_Lgt_0x219::kApdtrOutFLRACCSetDistanceFieldNumber;
const int ApdtrOut_Lgt_0x219::kApdtrOutFLRACCSetSpeedFieldNumber;
const int ApdtrOut_Lgt_0x219::kApdtrOutFLRACCSysFailureFieldNumber;
const int ApdtrOut_Lgt_0x219::kApdtrOutFLRACCSysInfoFieldNumber;
const int ApdtrOut_Lgt_0x219::kApdtrOutFLRACCSystemStateFieldNumber;
const int ApdtrOut_Lgt_0x219::kApdtrOutFLRACCTargetValidityFieldNumber;
const int ApdtrOut_Lgt_0x219::kApdtrOutFLRFr02ChecksumFieldNumber;
const int ApdtrOut_Lgt_0x219::kApdtrOutFLRACCMsgCntrFieldNumber;
const int ApdtrOut_Lgt_0x219::kApdtrOutFLRIHUSndCtrlACCActivtReqtFieldNumber;
const int ApdtrOut_Lgt_0x219::kApdtrOutSCCObjRelSpdFieldNumber;
const int ApdtrOut_Lgt_0x219::kApdtrOutSCCObjStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApdtrOut_Lgt_0x219::ApdtrOut_Lgt_0x219()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lgt_0x219.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_adptrout.ApdtrOut_Lgt_0x219)
}
ApdtrOut_Lgt_0x219::ApdtrOut_Lgt_0x219(const ApdtrOut_Lgt_0x219& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&apdtr_out_flr_acc_mode_, &from.apdtr_out_flr_acc_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&apdtr_out_scc_objstatus_) -
    reinterpret_cast<char*>(&apdtr_out_flr_acc_mode_)) + sizeof(apdtr_out_scc_objstatus_));
  // @@protoc_insertion_point(copy_constructor:ads_adptrout.ApdtrOut_Lgt_0x219)
}

void ApdtrOut_Lgt_0x219::SharedCtor() {
  ::memset(&apdtr_out_flr_acc_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apdtr_out_scc_objstatus_) -
      reinterpret_cast<char*>(&apdtr_out_flr_acc_mode_)) + sizeof(apdtr_out_scc_objstatus_));
}

ApdtrOut_Lgt_0x219::~ApdtrOut_Lgt_0x219() {
  // @@protoc_insertion_point(destructor:ads_adptrout.ApdtrOut_Lgt_0x219)
  SharedDtor();
}

void ApdtrOut_Lgt_0x219::SharedDtor() {
}

void ApdtrOut_Lgt_0x219::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ApdtrOut_Lgt_0x219::descriptor() {
  ::protobuf_ads_5fadptrout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fadptrout_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApdtrOut_Lgt_0x219& ApdtrOut_Lgt_0x219::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lgt_0x219.base);
  return *internal_default_instance();
}


void ApdtrOut_Lgt_0x219::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_adptrout.ApdtrOut_Lgt_0x219)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&apdtr_out_flr_acc_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apdtr_out_scc_objstatus_) -
      reinterpret_cast<char*>(&apdtr_out_flr_acc_mode_)) + sizeof(apdtr_out_scc_objstatus_));
  _internal_metadata_.Clear();
}

bool ApdtrOut_Lgt_0x219::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_adptrout.ApdtrOut_Lgt_0x219)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Apdtr_Out_FLR_ACC_Mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_acc_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_ACC_SetDistance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_acc_setdistance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_ACC_SetSpeed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_acc_setspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_ACC_SysFailure = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_acc_sysfailure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_ACC_SysInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_acc_sysinfo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_ACC_SystemState = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_acc_systemstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_ACC_TargetValidity = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_acc_targetvalidity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_Fr02_Checksum = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_fr02_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_ACC_msgCntr = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_acc_msgcntr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_IHUSndCtrlACCActivtReqt = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_ihusndctrlaccactivtreqt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Apdtr_Out_SCC_ObjRelSpd = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &apdtr_out_scc_objrelspd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_SCC_ObjStatus = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_scc_objstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_adptrout.ApdtrOut_Lgt_0x219)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_adptrout.ApdtrOut_Lgt_0x219)
  return false;
#undef DO_
}

void ApdtrOut_Lgt_0x219::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_adptrout.ApdtrOut_Lgt_0x219)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Apdtr_Out_FLR_ACC_Mode = 1;
  if (this->apdtr_out_flr_acc_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->apdtr_out_flr_acc_mode(), output);
  }

  // int32 Apdtr_Out_FLR_ACC_SetDistance = 2;
  if (this->apdtr_out_flr_acc_setdistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->apdtr_out_flr_acc_setdistance(), output);
  }

  // int32 Apdtr_Out_FLR_ACC_SetSpeed = 3;
  if (this->apdtr_out_flr_acc_setspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->apdtr_out_flr_acc_setspeed(), output);
  }

  // int32 Apdtr_Out_FLR_ACC_SysFailure = 4;
  if (this->apdtr_out_flr_acc_sysfailure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->apdtr_out_flr_acc_sysfailure(), output);
  }

  // int32 Apdtr_Out_FLR_ACC_SysInfo = 5;
  if (this->apdtr_out_flr_acc_sysinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->apdtr_out_flr_acc_sysinfo(), output);
  }

  // int32 Apdtr_Out_FLR_ACC_SystemState = 6;
  if (this->apdtr_out_flr_acc_systemstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->apdtr_out_flr_acc_systemstate(), output);
  }

  // int32 Apdtr_Out_FLR_ACC_TargetValidity = 7;
  if (this->apdtr_out_flr_acc_targetvalidity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->apdtr_out_flr_acc_targetvalidity(), output);
  }

  // int32 Apdtr_Out_FLR_Fr02_Checksum = 8;
  if (this->apdtr_out_flr_fr02_checksum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->apdtr_out_flr_fr02_checksum(), output);
  }

  // int32 Apdtr_Out_FLR_ACC_msgCntr = 9;
  if (this->apdtr_out_flr_acc_msgcntr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->apdtr_out_flr_acc_msgcntr(), output);
  }

  // int32 Apdtr_Out_FLR_IHUSndCtrlACCActivtReqt = 10;
  if (this->apdtr_out_flr_ihusndctrlaccactivtreqt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->apdtr_out_flr_ihusndctrlaccactivtreqt(), output);
  }

  // float Apdtr_Out_SCC_ObjRelSpd = 11;
  if (this->apdtr_out_scc_objrelspd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->apdtr_out_scc_objrelspd(), output);
  }

  // int32 Apdtr_Out_SCC_ObjStatus = 12;
  if (this->apdtr_out_scc_objstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->apdtr_out_scc_objstatus(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_adptrout.ApdtrOut_Lgt_0x219)
}

::google::protobuf::uint8* ApdtrOut_Lgt_0x219::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_adptrout.ApdtrOut_Lgt_0x219)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Apdtr_Out_FLR_ACC_Mode = 1;
  if (this->apdtr_out_flr_acc_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->apdtr_out_flr_acc_mode(), target);
  }

  // int32 Apdtr_Out_FLR_ACC_SetDistance = 2;
  if (this->apdtr_out_flr_acc_setdistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->apdtr_out_flr_acc_setdistance(), target);
  }

  // int32 Apdtr_Out_FLR_ACC_SetSpeed = 3;
  if (this->apdtr_out_flr_acc_setspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->apdtr_out_flr_acc_setspeed(), target);
  }

  // int32 Apdtr_Out_FLR_ACC_SysFailure = 4;
  if (this->apdtr_out_flr_acc_sysfailure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->apdtr_out_flr_acc_sysfailure(), target);
  }

  // int32 Apdtr_Out_FLR_ACC_SysInfo = 5;
  if (this->apdtr_out_flr_acc_sysinfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->apdtr_out_flr_acc_sysinfo(), target);
  }

  // int32 Apdtr_Out_FLR_ACC_SystemState = 6;
  if (this->apdtr_out_flr_acc_systemstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->apdtr_out_flr_acc_systemstate(), target);
  }

  // int32 Apdtr_Out_FLR_ACC_TargetValidity = 7;
  if (this->apdtr_out_flr_acc_targetvalidity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->apdtr_out_flr_acc_targetvalidity(), target);
  }

  // int32 Apdtr_Out_FLR_Fr02_Checksum = 8;
  if (this->apdtr_out_flr_fr02_checksum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->apdtr_out_flr_fr02_checksum(), target);
  }

  // int32 Apdtr_Out_FLR_ACC_msgCntr = 9;
  if (this->apdtr_out_flr_acc_msgcntr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->apdtr_out_flr_acc_msgcntr(), target);
  }

  // int32 Apdtr_Out_FLR_IHUSndCtrlACCActivtReqt = 10;
  if (this->apdtr_out_flr_ihusndctrlaccactivtreqt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->apdtr_out_flr_ihusndctrlaccactivtreqt(), target);
  }

  // float Apdtr_Out_SCC_ObjRelSpd = 11;
  if (this->apdtr_out_scc_objrelspd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->apdtr_out_scc_objrelspd(), target);
  }

  // int32 Apdtr_Out_SCC_ObjStatus = 12;
  if (this->apdtr_out_scc_objstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->apdtr_out_scc_objstatus(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_adptrout.ApdtrOut_Lgt_0x219)
  return target;
}

size_t ApdtrOut_Lgt_0x219::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_adptrout.ApdtrOut_Lgt_0x219)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Apdtr_Out_FLR_ACC_Mode = 1;
  if (this->apdtr_out_flr_acc_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_acc_mode());
  }

  // int32 Apdtr_Out_FLR_ACC_SetDistance = 2;
  if (this->apdtr_out_flr_acc_setdistance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_acc_setdistance());
  }

  // int32 Apdtr_Out_FLR_ACC_SetSpeed = 3;
  if (this->apdtr_out_flr_acc_setspeed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_acc_setspeed());
  }

  // int32 Apdtr_Out_FLR_ACC_SysFailure = 4;
  if (this->apdtr_out_flr_acc_sysfailure() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_acc_sysfailure());
  }

  // int32 Apdtr_Out_FLR_ACC_SysInfo = 5;
  if (this->apdtr_out_flr_acc_sysinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_acc_sysinfo());
  }

  // int32 Apdtr_Out_FLR_ACC_SystemState = 6;
  if (this->apdtr_out_flr_acc_systemstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_acc_systemstate());
  }

  // int32 Apdtr_Out_FLR_ACC_TargetValidity = 7;
  if (this->apdtr_out_flr_acc_targetvalidity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_acc_targetvalidity());
  }

  // int32 Apdtr_Out_FLR_Fr02_Checksum = 8;
  if (this->apdtr_out_flr_fr02_checksum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_fr02_checksum());
  }

  // int32 Apdtr_Out_FLR_ACC_msgCntr = 9;
  if (this->apdtr_out_flr_acc_msgcntr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_acc_msgcntr());
  }

  // int32 Apdtr_Out_FLR_IHUSndCtrlACCActivtReqt = 10;
  if (this->apdtr_out_flr_ihusndctrlaccactivtreqt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_ihusndctrlaccactivtreqt());
  }

  // float Apdtr_Out_SCC_ObjRelSpd = 11;
  if (this->apdtr_out_scc_objrelspd() != 0) {
    total_size += 1 + 4;
  }

  // int32 Apdtr_Out_SCC_ObjStatus = 12;
  if (this->apdtr_out_scc_objstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_scc_objstatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApdtrOut_Lgt_0x219::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_adptrout.ApdtrOut_Lgt_0x219)
  GOOGLE_DCHECK_NE(&from, this);
  const ApdtrOut_Lgt_0x219* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApdtrOut_Lgt_0x219>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_adptrout.ApdtrOut_Lgt_0x219)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_adptrout.ApdtrOut_Lgt_0x219)
    MergeFrom(*source);
  }
}

void ApdtrOut_Lgt_0x219::MergeFrom(const ApdtrOut_Lgt_0x219& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_adptrout.ApdtrOut_Lgt_0x219)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apdtr_out_flr_acc_mode() != 0) {
    set_apdtr_out_flr_acc_mode(from.apdtr_out_flr_acc_mode());
  }
  if (from.apdtr_out_flr_acc_setdistance() != 0) {
    set_apdtr_out_flr_acc_setdistance(from.apdtr_out_flr_acc_setdistance());
  }
  if (from.apdtr_out_flr_acc_setspeed() != 0) {
    set_apdtr_out_flr_acc_setspeed(from.apdtr_out_flr_acc_setspeed());
  }
  if (from.apdtr_out_flr_acc_sysfailure() != 0) {
    set_apdtr_out_flr_acc_sysfailure(from.apdtr_out_flr_acc_sysfailure());
  }
  if (from.apdtr_out_flr_acc_sysinfo() != 0) {
    set_apdtr_out_flr_acc_sysinfo(from.apdtr_out_flr_acc_sysinfo());
  }
  if (from.apdtr_out_flr_acc_systemstate() != 0) {
    set_apdtr_out_flr_acc_systemstate(from.apdtr_out_flr_acc_systemstate());
  }
  if (from.apdtr_out_flr_acc_targetvalidity() != 0) {
    set_apdtr_out_flr_acc_targetvalidity(from.apdtr_out_flr_acc_targetvalidity());
  }
  if (from.apdtr_out_flr_fr02_checksum() != 0) {
    set_apdtr_out_flr_fr02_checksum(from.apdtr_out_flr_fr02_checksum());
  }
  if (from.apdtr_out_flr_acc_msgcntr() != 0) {
    set_apdtr_out_flr_acc_msgcntr(from.apdtr_out_flr_acc_msgcntr());
  }
  if (from.apdtr_out_flr_ihusndctrlaccactivtreqt() != 0) {
    set_apdtr_out_flr_ihusndctrlaccactivtreqt(from.apdtr_out_flr_ihusndctrlaccactivtreqt());
  }
  if (from.apdtr_out_scc_objrelspd() != 0) {
    set_apdtr_out_scc_objrelspd(from.apdtr_out_scc_objrelspd());
  }
  if (from.apdtr_out_scc_objstatus() != 0) {
    set_apdtr_out_scc_objstatus(from.apdtr_out_scc_objstatus());
  }
}

void ApdtrOut_Lgt_0x219::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_adptrout.ApdtrOut_Lgt_0x219)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApdtrOut_Lgt_0x219::CopyFrom(const ApdtrOut_Lgt_0x219& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_adptrout.ApdtrOut_Lgt_0x219)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApdtrOut_Lgt_0x219::IsInitialized() const {
  return true;
}

void ApdtrOut_Lgt_0x219::Swap(ApdtrOut_Lgt_0x219* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApdtrOut_Lgt_0x219::InternalSwap(ApdtrOut_Lgt_0x219* other) {
  using std::swap;
  swap(apdtr_out_flr_acc_mode_, other->apdtr_out_flr_acc_mode_);
  swap(apdtr_out_flr_acc_setdistance_, other->apdtr_out_flr_acc_setdistance_);
  swap(apdtr_out_flr_acc_setspeed_, other->apdtr_out_flr_acc_setspeed_);
  swap(apdtr_out_flr_acc_sysfailure_, other->apdtr_out_flr_acc_sysfailure_);
  swap(apdtr_out_flr_acc_sysinfo_, other->apdtr_out_flr_acc_sysinfo_);
  swap(apdtr_out_flr_acc_systemstate_, other->apdtr_out_flr_acc_systemstate_);
  swap(apdtr_out_flr_acc_targetvalidity_, other->apdtr_out_flr_acc_targetvalidity_);
  swap(apdtr_out_flr_fr02_checksum_, other->apdtr_out_flr_fr02_checksum_);
  swap(apdtr_out_flr_acc_msgcntr_, other->apdtr_out_flr_acc_msgcntr_);
  swap(apdtr_out_flr_ihusndctrlaccactivtreqt_, other->apdtr_out_flr_ihusndctrlaccactivtreqt_);
  swap(apdtr_out_scc_objrelspd_, other->apdtr_out_scc_objrelspd_);
  swap(apdtr_out_scc_objstatus_, other->apdtr_out_scc_objstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ApdtrOut_Lgt_0x219::GetMetadata() const {
  protobuf_ads_5fadptrout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fadptrout_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApdtrOut_Lgt_0x20A::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRAEBDBSLevelFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRAEBDecCmdFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRAEBFailinfoFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRAEBFullActFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRAEBOnOffStaFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRAEBPartialActFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRAEBPrefillFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRAEBStopReqFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRAEBWarnFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRAEBWarnSetStaFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRFr03ChecksumFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRFr03MsgCounterFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRSCCObjDistFieldNumber;
const int ApdtrOut_Lgt_0x20A::kApdtrOutFLRSCCObjLatPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApdtrOut_Lgt_0x20A::ApdtrOut_Lgt_0x20A()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lgt_0x20A.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_adptrout.ApdtrOut_Lgt_0x20A)
}
ApdtrOut_Lgt_0x20A::ApdtrOut_Lgt_0x20A(const ApdtrOut_Lgt_0x20A& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&apdtr_out_flr_aeb_dbslevel_, &from.apdtr_out_flr_aeb_dbslevel_,
    static_cast<size_t>(reinterpret_cast<char*>(&apdtr_out_flr_scc_objlatpos_) -
    reinterpret_cast<char*>(&apdtr_out_flr_aeb_dbslevel_)) + sizeof(apdtr_out_flr_scc_objlatpos_));
  // @@protoc_insertion_point(copy_constructor:ads_adptrout.ApdtrOut_Lgt_0x20A)
}

void ApdtrOut_Lgt_0x20A::SharedCtor() {
  ::memset(&apdtr_out_flr_aeb_dbslevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apdtr_out_flr_scc_objlatpos_) -
      reinterpret_cast<char*>(&apdtr_out_flr_aeb_dbslevel_)) + sizeof(apdtr_out_flr_scc_objlatpos_));
}

ApdtrOut_Lgt_0x20A::~ApdtrOut_Lgt_0x20A() {
  // @@protoc_insertion_point(destructor:ads_adptrout.ApdtrOut_Lgt_0x20A)
  SharedDtor();
}

void ApdtrOut_Lgt_0x20A::SharedDtor() {
}

void ApdtrOut_Lgt_0x20A::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ApdtrOut_Lgt_0x20A::descriptor() {
  ::protobuf_ads_5fadptrout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fadptrout_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApdtrOut_Lgt_0x20A& ApdtrOut_Lgt_0x20A::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fadptrout_2eproto::scc_info_ApdtrOut_Lgt_0x20A.base);
  return *internal_default_instance();
}


void ApdtrOut_Lgt_0x20A::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_adptrout.ApdtrOut_Lgt_0x20A)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&apdtr_out_flr_aeb_dbslevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apdtr_out_flr_scc_objlatpos_) -
      reinterpret_cast<char*>(&apdtr_out_flr_aeb_dbslevel_)) + sizeof(apdtr_out_flr_scc_objlatpos_));
  _internal_metadata_.Clear();
}

bool ApdtrOut_Lgt_0x20A::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_adptrout.ApdtrOut_Lgt_0x20A)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Apdtr_Out_FLR_AEB_DBSLevel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_aeb_dbslevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Apdtr_Out_FLR_AEB_DecCmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &apdtr_out_flr_aeb_deccmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_AEB_Failinfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_aeb_failinfo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_AEB_FullAct = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_aeb_fullact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_AEB_OnOffSta = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_aeb_onoffsta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_AEB_PartialAct = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_aeb_partialact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_AEB_Prefill = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_aeb_prefill_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_AEB_StopReq = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_aeb_stopreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_AEB_Warn = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_aeb_warn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_AEB_WarnSetSta = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_aeb_warnsetsta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_Fr03_Checksum = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_fr03_checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Apdtr_Out_FLR_Fr03_MsgCounter = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apdtr_out_flr_fr03_msgcounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Apdtr_Out_FLR_SCC_ObjDist = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &apdtr_out_flr_scc_objdist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Apdtr_Out_FLR_SCC_ObjLatPos = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &apdtr_out_flr_scc_objlatpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_adptrout.ApdtrOut_Lgt_0x20A)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_adptrout.ApdtrOut_Lgt_0x20A)
  return false;
#undef DO_
}

void ApdtrOut_Lgt_0x20A::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_adptrout.ApdtrOut_Lgt_0x20A)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Apdtr_Out_FLR_AEB_DBSLevel = 1;
  if (this->apdtr_out_flr_aeb_dbslevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->apdtr_out_flr_aeb_dbslevel(), output);
  }

  // float Apdtr_Out_FLR_AEB_DecCmd = 2;
  if (this->apdtr_out_flr_aeb_deccmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->apdtr_out_flr_aeb_deccmd(), output);
  }

  // int32 Apdtr_Out_FLR_AEB_Failinfo = 3;
  if (this->apdtr_out_flr_aeb_failinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->apdtr_out_flr_aeb_failinfo(), output);
  }

  // int32 Apdtr_Out_FLR_AEB_FullAct = 4;
  if (this->apdtr_out_flr_aeb_fullact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->apdtr_out_flr_aeb_fullact(), output);
  }

  // int32 Apdtr_Out_FLR_AEB_OnOffSta = 5;
  if (this->apdtr_out_flr_aeb_onoffsta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->apdtr_out_flr_aeb_onoffsta(), output);
  }

  // int32 Apdtr_Out_FLR_AEB_PartialAct = 6;
  if (this->apdtr_out_flr_aeb_partialact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->apdtr_out_flr_aeb_partialact(), output);
  }

  // int32 Apdtr_Out_FLR_AEB_Prefill = 7;
  if (this->apdtr_out_flr_aeb_prefill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->apdtr_out_flr_aeb_prefill(), output);
  }

  // int32 Apdtr_Out_FLR_AEB_StopReq = 8;
  if (this->apdtr_out_flr_aeb_stopreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->apdtr_out_flr_aeb_stopreq(), output);
  }

  // int32 Apdtr_Out_FLR_AEB_Warn = 9;
  if (this->apdtr_out_flr_aeb_warn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->apdtr_out_flr_aeb_warn(), output);
  }

  // int32 Apdtr_Out_FLR_AEB_WarnSetSta = 10;
  if (this->apdtr_out_flr_aeb_warnsetsta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->apdtr_out_flr_aeb_warnsetsta(), output);
  }

  // int32 Apdtr_Out_FLR_Fr03_Checksum = 11;
  if (this->apdtr_out_flr_fr03_checksum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->apdtr_out_flr_fr03_checksum(), output);
  }

  // int32 Apdtr_Out_FLR_Fr03_MsgCounter = 12;
  if (this->apdtr_out_flr_fr03_msgcounter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->apdtr_out_flr_fr03_msgcounter(), output);
  }

  // float Apdtr_Out_FLR_SCC_ObjDist = 13;
  if (this->apdtr_out_flr_scc_objdist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->apdtr_out_flr_scc_objdist(), output);
  }

  // float Apdtr_Out_FLR_SCC_ObjLatPos = 14;
  if (this->apdtr_out_flr_scc_objlatpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->apdtr_out_flr_scc_objlatpos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_adptrout.ApdtrOut_Lgt_0x20A)
}

::google::protobuf::uint8* ApdtrOut_Lgt_0x20A::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_adptrout.ApdtrOut_Lgt_0x20A)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Apdtr_Out_FLR_AEB_DBSLevel = 1;
  if (this->apdtr_out_flr_aeb_dbslevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->apdtr_out_flr_aeb_dbslevel(), target);
  }

  // float Apdtr_Out_FLR_AEB_DecCmd = 2;
  if (this->apdtr_out_flr_aeb_deccmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->apdtr_out_flr_aeb_deccmd(), target);
  }

  // int32 Apdtr_Out_FLR_AEB_Failinfo = 3;
  if (this->apdtr_out_flr_aeb_failinfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->apdtr_out_flr_aeb_failinfo(), target);
  }

  // int32 Apdtr_Out_FLR_AEB_FullAct = 4;
  if (this->apdtr_out_flr_aeb_fullact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->apdtr_out_flr_aeb_fullact(), target);
  }

  // int32 Apdtr_Out_FLR_AEB_OnOffSta = 5;
  if (this->apdtr_out_flr_aeb_onoffsta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->apdtr_out_flr_aeb_onoffsta(), target);
  }

  // int32 Apdtr_Out_FLR_AEB_PartialAct = 6;
  if (this->apdtr_out_flr_aeb_partialact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->apdtr_out_flr_aeb_partialact(), target);
  }

  // int32 Apdtr_Out_FLR_AEB_Prefill = 7;
  if (this->apdtr_out_flr_aeb_prefill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->apdtr_out_flr_aeb_prefill(), target);
  }

  // int32 Apdtr_Out_FLR_AEB_StopReq = 8;
  if (this->apdtr_out_flr_aeb_stopreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->apdtr_out_flr_aeb_stopreq(), target);
  }

  // int32 Apdtr_Out_FLR_AEB_Warn = 9;
  if (this->apdtr_out_flr_aeb_warn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->apdtr_out_flr_aeb_warn(), target);
  }

  // int32 Apdtr_Out_FLR_AEB_WarnSetSta = 10;
  if (this->apdtr_out_flr_aeb_warnsetsta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->apdtr_out_flr_aeb_warnsetsta(), target);
  }

  // int32 Apdtr_Out_FLR_Fr03_Checksum = 11;
  if (this->apdtr_out_flr_fr03_checksum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->apdtr_out_flr_fr03_checksum(), target);
  }

  // int32 Apdtr_Out_FLR_Fr03_MsgCounter = 12;
  if (this->apdtr_out_flr_fr03_msgcounter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->apdtr_out_flr_fr03_msgcounter(), target);
  }

  // float Apdtr_Out_FLR_SCC_ObjDist = 13;
  if (this->apdtr_out_flr_scc_objdist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->apdtr_out_flr_scc_objdist(), target);
  }

  // float Apdtr_Out_FLR_SCC_ObjLatPos = 14;
  if (this->apdtr_out_flr_scc_objlatpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->apdtr_out_flr_scc_objlatpos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_adptrout.ApdtrOut_Lgt_0x20A)
  return target;
}

size_t ApdtrOut_Lgt_0x20A::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_adptrout.ApdtrOut_Lgt_0x20A)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Apdtr_Out_FLR_AEB_DBSLevel = 1;
  if (this->apdtr_out_flr_aeb_dbslevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_aeb_dbslevel());
  }

  // float Apdtr_Out_FLR_AEB_DecCmd = 2;
  if (this->apdtr_out_flr_aeb_deccmd() != 0) {
    total_size += 1 + 4;
  }

  // int32 Apdtr_Out_FLR_AEB_Failinfo = 3;
  if (this->apdtr_out_flr_aeb_failinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_aeb_failinfo());
  }

  // int32 Apdtr_Out_FLR_AEB_FullAct = 4;
  if (this->apdtr_out_flr_aeb_fullact() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_aeb_fullact());
  }

  // int32 Apdtr_Out_FLR_AEB_OnOffSta = 5;
  if (this->apdtr_out_flr_aeb_onoffsta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_aeb_onoffsta());
  }

  // int32 Apdtr_Out_FLR_AEB_PartialAct = 6;
  if (this->apdtr_out_flr_aeb_partialact() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_aeb_partialact());
  }

  // int32 Apdtr_Out_FLR_AEB_Prefill = 7;
  if (this->apdtr_out_flr_aeb_prefill() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_aeb_prefill());
  }

  // int32 Apdtr_Out_FLR_AEB_StopReq = 8;
  if (this->apdtr_out_flr_aeb_stopreq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_aeb_stopreq());
  }

  // int32 Apdtr_Out_FLR_AEB_Warn = 9;
  if (this->apdtr_out_flr_aeb_warn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_aeb_warn());
  }

  // int32 Apdtr_Out_FLR_AEB_WarnSetSta = 10;
  if (this->apdtr_out_flr_aeb_warnsetsta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_aeb_warnsetsta());
  }

  // int32 Apdtr_Out_FLR_Fr03_Checksum = 11;
  if (this->apdtr_out_flr_fr03_checksum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_fr03_checksum());
  }

  // int32 Apdtr_Out_FLR_Fr03_MsgCounter = 12;
  if (this->apdtr_out_flr_fr03_msgcounter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apdtr_out_flr_fr03_msgcounter());
  }

  // float Apdtr_Out_FLR_SCC_ObjDist = 13;
  if (this->apdtr_out_flr_scc_objdist() != 0) {
    total_size += 1 + 4;
  }

  // float Apdtr_Out_FLR_SCC_ObjLatPos = 14;
  if (this->apdtr_out_flr_scc_objlatpos() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApdtrOut_Lgt_0x20A::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_adptrout.ApdtrOut_Lgt_0x20A)
  GOOGLE_DCHECK_NE(&from, this);
  const ApdtrOut_Lgt_0x20A* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApdtrOut_Lgt_0x20A>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_adptrout.ApdtrOut_Lgt_0x20A)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_adptrout.ApdtrOut_Lgt_0x20A)
    MergeFrom(*source);
  }
}

void ApdtrOut_Lgt_0x20A::MergeFrom(const ApdtrOut_Lgt_0x20A& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_adptrout.ApdtrOut_Lgt_0x20A)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apdtr_out_flr_aeb_dbslevel() != 0) {
    set_apdtr_out_flr_aeb_dbslevel(from.apdtr_out_flr_aeb_dbslevel());
  }
  if (from.apdtr_out_flr_aeb_deccmd() != 0) {
    set_apdtr_out_flr_aeb_deccmd(from.apdtr_out_flr_aeb_deccmd());
  }
  if (from.apdtr_out_flr_aeb_failinfo() != 0) {
    set_apdtr_out_flr_aeb_failinfo(from.apdtr_out_flr_aeb_failinfo());
  }
  if (from.apdtr_out_flr_aeb_fullact() != 0) {
    set_apdtr_out_flr_aeb_fullact(from.apdtr_out_flr_aeb_fullact());
  }
  if (from.apdtr_out_flr_aeb_onoffsta() != 0) {
    set_apdtr_out_flr_aeb_onoffsta(from.apdtr_out_flr_aeb_onoffsta());
  }
  if (from.apdtr_out_flr_aeb_partialact() != 0) {
    set_apdtr_out_flr_aeb_partialact(from.apdtr_out_flr_aeb_partialact());
  }
  if (from.apdtr_out_flr_aeb_prefill() != 0) {
    set_apdtr_out_flr_aeb_prefill(from.apdtr_out_flr_aeb_prefill());
  }
  if (from.apdtr_out_flr_aeb_stopreq() != 0) {
    set_apdtr_out_flr_aeb_stopreq(from.apdtr_out_flr_aeb_stopreq());
  }
  if (from.apdtr_out_flr_aeb_warn() != 0) {
    set_apdtr_out_flr_aeb_warn(from.apdtr_out_flr_aeb_warn());
  }
  if (from.apdtr_out_flr_aeb_warnsetsta() != 0) {
    set_apdtr_out_flr_aeb_warnsetsta(from.apdtr_out_flr_aeb_warnsetsta());
  }
  if (from.apdtr_out_flr_fr03_checksum() != 0) {
    set_apdtr_out_flr_fr03_checksum(from.apdtr_out_flr_fr03_checksum());
  }
  if (from.apdtr_out_flr_fr03_msgcounter() != 0) {
    set_apdtr_out_flr_fr03_msgcounter(from.apdtr_out_flr_fr03_msgcounter());
  }
  if (from.apdtr_out_flr_scc_objdist() != 0) {
    set_apdtr_out_flr_scc_objdist(from.apdtr_out_flr_scc_objdist());
  }
  if (from.apdtr_out_flr_scc_objlatpos() != 0) {
    set_apdtr_out_flr_scc_objlatpos(from.apdtr_out_flr_scc_objlatpos());
  }
}

void ApdtrOut_Lgt_0x20A::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_adptrout.ApdtrOut_Lgt_0x20A)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApdtrOut_Lgt_0x20A::CopyFrom(const ApdtrOut_Lgt_0x20A& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_adptrout.ApdtrOut_Lgt_0x20A)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApdtrOut_Lgt_0x20A::IsInitialized() const {
  return true;
}

void ApdtrOut_Lgt_0x20A::Swap(ApdtrOut_Lgt_0x20A* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApdtrOut_Lgt_0x20A::InternalSwap(ApdtrOut_Lgt_0x20A* other) {
  using std::swap;
  swap(apdtr_out_flr_aeb_dbslevel_, other->apdtr_out_flr_aeb_dbslevel_);
  swap(apdtr_out_flr_aeb_deccmd_, other->apdtr_out_flr_aeb_deccmd_);
  swap(apdtr_out_flr_aeb_failinfo_, other->apdtr_out_flr_aeb_failinfo_);
  swap(apdtr_out_flr_aeb_fullact_, other->apdtr_out_flr_aeb_fullact_);
  swap(apdtr_out_flr_aeb_onoffsta_, other->apdtr_out_flr_aeb_onoffsta_);
  swap(apdtr_out_flr_aeb_partialact_, other->apdtr_out_flr_aeb_partialact_);
  swap(apdtr_out_flr_aeb_prefill_, other->apdtr_out_flr_aeb_prefill_);
  swap(apdtr_out_flr_aeb_stopreq_, other->apdtr_out_flr_aeb_stopreq_);
  swap(apdtr_out_flr_aeb_warn_, other->apdtr_out_flr_aeb_warn_);
  swap(apdtr_out_flr_aeb_warnsetsta_, other->apdtr_out_flr_aeb_warnsetsta_);
  swap(apdtr_out_flr_fr03_checksum_, other->apdtr_out_flr_fr03_checksum_);
  swap(apdtr_out_flr_fr03_msgcounter_, other->apdtr_out_flr_fr03_msgcounter_);
  swap(apdtr_out_flr_scc_objdist_, other->apdtr_out_flr_scc_objdist_);
  swap(apdtr_out_flr_scc_objlatpos_, other->apdtr_out_flr_scc_objlatpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ApdtrOut_Lgt_0x20A::GetMetadata() const {
  protobuf_ads_5fadptrout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fadptrout_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AdptrOut_Cruising_Outputs::InitAsDefaultInstance() {
  ::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_._instance.get_mutable()->apdtrout_lat_ea_ = const_cast< ::ads_adptrout::ApdtrOut_Lat_0xEA*>(
      ::ads_adptrout::ApdtrOut_Lat_0xEA::internal_default_instance());
  ::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_._instance.get_mutable()->apdtrout_lgt_216_ = const_cast< ::ads_adptrout::ApdtrOut_Lgt_0x216*>(
      ::ads_adptrout::ApdtrOut_Lgt_0x216::internal_default_instance());
  ::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_._instance.get_mutable()->apdtrout_lgt_219_ = const_cast< ::ads_adptrout::ApdtrOut_Lgt_0x219*>(
      ::ads_adptrout::ApdtrOut_Lgt_0x219::internal_default_instance());
  ::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_._instance.get_mutable()->apdtrout_lgt_20a_ = const_cast< ::ads_adptrout::ApdtrOut_Lgt_0x20A*>(
      ::ads_adptrout::ApdtrOut_Lgt_0x20A::internal_default_instance());
  ::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_._instance.get_mutable()->adptrout_brake_command_60_ = const_cast< ::ads_common::B_Adptrout_Brake_Command_60_st*>(
      ::ads_common::B_Adptrout_Brake_Command_60_st::internal_default_instance());
  ::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_._instance.get_mutable()->adptrout_throttle_command_62_ = const_cast< ::ads_common::B_Adptrout_Throttle_Command_62_st*>(
      ::ads_common::B_Adptrout_Throttle_Command_62_st::internal_default_instance());
  ::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_._instance.get_mutable()->adptrout_steering_command_64_ = const_cast< ::ads_common::B_Adptrout_Steering_Command_64_st*>(
      ::ads_common::B_Adptrout_Steering_Command_64_st::internal_default_instance());
  ::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_._instance.get_mutable()->adptrout_gear_command_66_ = const_cast< ::ads_common::B_Adptrout_Gear_Command_66_st*>(
      ::ads_common::B_Adptrout_Gear_Command_66_st::internal_default_instance());
  ::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_._instance.get_mutable()->adptrout_turnsignal_command_68_ = const_cast< ::ads_common::B_Adptrout_TurnSignal_Command_68_st*>(
      ::ads_common::B_Adptrout_TurnSignal_Command_68_st::internal_default_instance());
  ::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_._instance.get_mutable()->adptrout_latctrl_state_st_ = const_cast< ::ads_common::B_Adptrout_LatCtrl_State_st*>(
      ::ads_common::B_Adptrout_LatCtrl_State_st::internal_default_instance());
  ::ads_adptrout::_AdptrOut_Cruising_Outputs_default_instance_._instance.get_mutable()->adptrout_lonctrl_state_st_ = const_cast< ::ads_common::B_Adptrout_LonCtrl_State_st*>(
      ::ads_common::B_Adptrout_LonCtrl_State_st::internal_default_instance());
}
void AdptrOut_Cruising_Outputs::clear_adptrout_brake_command_60() {
  if (GetArenaNoVirtual() == NULL && adptrout_brake_command_60_ != NULL) {
    delete adptrout_brake_command_60_;
  }
  adptrout_brake_command_60_ = NULL;
}
void AdptrOut_Cruising_Outputs::clear_adptrout_throttle_command_62() {
  if (GetArenaNoVirtual() == NULL && adptrout_throttle_command_62_ != NULL) {
    delete adptrout_throttle_command_62_;
  }
  adptrout_throttle_command_62_ = NULL;
}
void AdptrOut_Cruising_Outputs::clear_adptrout_steering_command_64() {
  if (GetArenaNoVirtual() == NULL && adptrout_steering_command_64_ != NULL) {
    delete adptrout_steering_command_64_;
  }
  adptrout_steering_command_64_ = NULL;
}
void AdptrOut_Cruising_Outputs::clear_adptrout_gear_command_66() {
  if (GetArenaNoVirtual() == NULL && adptrout_gear_command_66_ != NULL) {
    delete adptrout_gear_command_66_;
  }
  adptrout_gear_command_66_ = NULL;
}
void AdptrOut_Cruising_Outputs::clear_adptrout_turnsignal_command_68() {
  if (GetArenaNoVirtual() == NULL && adptrout_turnsignal_command_68_ != NULL) {
    delete adptrout_turnsignal_command_68_;
  }
  adptrout_turnsignal_command_68_ = NULL;
}
void AdptrOut_Cruising_Outputs::clear_adptrout_latctrl_state_st() {
  if (GetArenaNoVirtual() == NULL && adptrout_latctrl_state_st_ != NULL) {
    delete adptrout_latctrl_state_st_;
  }
  adptrout_latctrl_state_st_ = NULL;
}
void AdptrOut_Cruising_Outputs::clear_adptrout_lonctrl_state_st() {
  if (GetArenaNoVirtual() == NULL && adptrout_lonctrl_state_st_ != NULL) {
    delete adptrout_lonctrl_state_st_;
  }
  adptrout_lonctrl_state_st_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdptrOut_Cruising_Outputs::kApdtrOutLatEAFieldNumber;
const int AdptrOut_Cruising_Outputs::kApdtrOutLgt216FieldNumber;
const int AdptrOut_Cruising_Outputs::kApdtrOutLgt219FieldNumber;
const int AdptrOut_Cruising_Outputs::kApdtrOutLgt20AFieldNumber;
const int AdptrOut_Cruising_Outputs::kAdptroutBrakeCommand60FieldNumber;
const int AdptrOut_Cruising_Outputs::kAdptroutThrottleCommand62FieldNumber;
const int AdptrOut_Cruising_Outputs::kAdptroutSteeringCommand64FieldNumber;
const int AdptrOut_Cruising_Outputs::kAdptroutGearCommand66FieldNumber;
const int AdptrOut_Cruising_Outputs::kAdptroutTurnSignalCommand68FieldNumber;
const int AdptrOut_Cruising_Outputs::kAdptroutLatCtrlStateStFieldNumber;
const int AdptrOut_Cruising_Outputs::kAdptroutLonCtrlStateStFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdptrOut_Cruising_Outputs::AdptrOut_Cruising_Outputs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ads_5fadptrout_2eproto::scc_info_AdptrOut_Cruising_Outputs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ads_adptrout.AdptrOut_Cruising_Outputs)
}
AdptrOut_Cruising_Outputs::AdptrOut_Cruising_Outputs(const AdptrOut_Cruising_Outputs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_apdtrout_lat_ea()) {
    apdtrout_lat_ea_ = new ::ads_adptrout::ApdtrOut_Lat_0xEA(*from.apdtrout_lat_ea_);
  } else {
    apdtrout_lat_ea_ = NULL;
  }
  if (from.has_apdtrout_lgt_216()) {
    apdtrout_lgt_216_ = new ::ads_adptrout::ApdtrOut_Lgt_0x216(*from.apdtrout_lgt_216_);
  } else {
    apdtrout_lgt_216_ = NULL;
  }
  if (from.has_apdtrout_lgt_219()) {
    apdtrout_lgt_219_ = new ::ads_adptrout::ApdtrOut_Lgt_0x219(*from.apdtrout_lgt_219_);
  } else {
    apdtrout_lgt_219_ = NULL;
  }
  if (from.has_apdtrout_lgt_20a()) {
    apdtrout_lgt_20a_ = new ::ads_adptrout::ApdtrOut_Lgt_0x20A(*from.apdtrout_lgt_20a_);
  } else {
    apdtrout_lgt_20a_ = NULL;
  }
  if (from.has_adptrout_brake_command_60()) {
    adptrout_brake_command_60_ = new ::ads_common::B_Adptrout_Brake_Command_60_st(*from.adptrout_brake_command_60_);
  } else {
    adptrout_brake_command_60_ = NULL;
  }
  if (from.has_adptrout_throttle_command_62()) {
    adptrout_throttle_command_62_ = new ::ads_common::B_Adptrout_Throttle_Command_62_st(*from.adptrout_throttle_command_62_);
  } else {
    adptrout_throttle_command_62_ = NULL;
  }
  if (from.has_adptrout_steering_command_64()) {
    adptrout_steering_command_64_ = new ::ads_common::B_Adptrout_Steering_Command_64_st(*from.adptrout_steering_command_64_);
  } else {
    adptrout_steering_command_64_ = NULL;
  }
  if (from.has_adptrout_gear_command_66()) {
    adptrout_gear_command_66_ = new ::ads_common::B_Adptrout_Gear_Command_66_st(*from.adptrout_gear_command_66_);
  } else {
    adptrout_gear_command_66_ = NULL;
  }
  if (from.has_adptrout_turnsignal_command_68()) {
    adptrout_turnsignal_command_68_ = new ::ads_common::B_Adptrout_TurnSignal_Command_68_st(*from.adptrout_turnsignal_command_68_);
  } else {
    adptrout_turnsignal_command_68_ = NULL;
  }
  if (from.has_adptrout_latctrl_state_st()) {
    adptrout_latctrl_state_st_ = new ::ads_common::B_Adptrout_LatCtrl_State_st(*from.adptrout_latctrl_state_st_);
  } else {
    adptrout_latctrl_state_st_ = NULL;
  }
  if (from.has_adptrout_lonctrl_state_st()) {
    adptrout_lonctrl_state_st_ = new ::ads_common::B_Adptrout_LonCtrl_State_st(*from.adptrout_lonctrl_state_st_);
  } else {
    adptrout_lonctrl_state_st_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ads_adptrout.AdptrOut_Cruising_Outputs)
}

void AdptrOut_Cruising_Outputs::SharedCtor() {
  ::memset(&apdtrout_lat_ea_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adptrout_lonctrl_state_st_) -
      reinterpret_cast<char*>(&apdtrout_lat_ea_)) + sizeof(adptrout_lonctrl_state_st_));
}

AdptrOut_Cruising_Outputs::~AdptrOut_Cruising_Outputs() {
  // @@protoc_insertion_point(destructor:ads_adptrout.AdptrOut_Cruising_Outputs)
  SharedDtor();
}

void AdptrOut_Cruising_Outputs::SharedDtor() {
  if (this != internal_default_instance()) delete apdtrout_lat_ea_;
  if (this != internal_default_instance()) delete apdtrout_lgt_216_;
  if (this != internal_default_instance()) delete apdtrout_lgt_219_;
  if (this != internal_default_instance()) delete apdtrout_lgt_20a_;
  if (this != internal_default_instance()) delete adptrout_brake_command_60_;
  if (this != internal_default_instance()) delete adptrout_throttle_command_62_;
  if (this != internal_default_instance()) delete adptrout_steering_command_64_;
  if (this != internal_default_instance()) delete adptrout_gear_command_66_;
  if (this != internal_default_instance()) delete adptrout_turnsignal_command_68_;
  if (this != internal_default_instance()) delete adptrout_latctrl_state_st_;
  if (this != internal_default_instance()) delete adptrout_lonctrl_state_st_;
}

void AdptrOut_Cruising_Outputs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdptrOut_Cruising_Outputs::descriptor() {
  ::protobuf_ads_5fadptrout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fadptrout_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdptrOut_Cruising_Outputs& AdptrOut_Cruising_Outputs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ads_5fadptrout_2eproto::scc_info_AdptrOut_Cruising_Outputs.base);
  return *internal_default_instance();
}


void AdptrOut_Cruising_Outputs::Clear() {
// @@protoc_insertion_point(message_clear_start:ads_adptrout.AdptrOut_Cruising_Outputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && apdtrout_lat_ea_ != NULL) {
    delete apdtrout_lat_ea_;
  }
  apdtrout_lat_ea_ = NULL;
  if (GetArenaNoVirtual() == NULL && apdtrout_lgt_216_ != NULL) {
    delete apdtrout_lgt_216_;
  }
  apdtrout_lgt_216_ = NULL;
  if (GetArenaNoVirtual() == NULL && apdtrout_lgt_219_ != NULL) {
    delete apdtrout_lgt_219_;
  }
  apdtrout_lgt_219_ = NULL;
  if (GetArenaNoVirtual() == NULL && apdtrout_lgt_20a_ != NULL) {
    delete apdtrout_lgt_20a_;
  }
  apdtrout_lgt_20a_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_brake_command_60_ != NULL) {
    delete adptrout_brake_command_60_;
  }
  adptrout_brake_command_60_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_throttle_command_62_ != NULL) {
    delete adptrout_throttle_command_62_;
  }
  adptrout_throttle_command_62_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_steering_command_64_ != NULL) {
    delete adptrout_steering_command_64_;
  }
  adptrout_steering_command_64_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_gear_command_66_ != NULL) {
    delete adptrout_gear_command_66_;
  }
  adptrout_gear_command_66_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_turnsignal_command_68_ != NULL) {
    delete adptrout_turnsignal_command_68_;
  }
  adptrout_turnsignal_command_68_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_latctrl_state_st_ != NULL) {
    delete adptrout_latctrl_state_st_;
  }
  adptrout_latctrl_state_st_ = NULL;
  if (GetArenaNoVirtual() == NULL && adptrout_lonctrl_state_st_ != NULL) {
    delete adptrout_lonctrl_state_st_;
  }
  adptrout_lonctrl_state_st_ = NULL;
  _internal_metadata_.Clear();
}

bool AdptrOut_Cruising_Outputs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ads_adptrout.AdptrOut_Cruising_Outputs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ads_adptrout.ApdtrOut_Lat_0xEA ApdtrOut_Lat_EA = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_apdtrout_lat_ea()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_adptrout.ApdtrOut_Lgt_0x216 ApdtrOut_Lgt_216 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_apdtrout_lgt_216()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_adptrout.ApdtrOut_Lgt_0x219 ApdtrOut_Lgt_219 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_apdtrout_lgt_219()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_adptrout.ApdtrOut_Lgt_0x20A ApdtrOut_Lgt_20A = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_apdtrout_lgt_20a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_Brake_Command_60_st Adptrout_Brake_Command_60 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_brake_command_60()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_Throttle_Command_62_st Adptrout_Throttle_Command_62 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_throttle_command_62()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_Steering_Command_64_st Adptrout_Steering_Command_64 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_steering_command_64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_Gear_Command_66_st Adptrout_Gear_Command_66 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_gear_command_66()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_TurnSignal_Command_68_st Adptrout_TurnSignal_Command_68 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_turnsignal_command_68()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_LatCtrl_State_st Adptrout_LatCtrl_State_st = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_latctrl_state_st()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ads_common.B_Adptrout_LonCtrl_State_st Adptrout_LonCtrl_State_st = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adptrout_lonctrl_state_st()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ads_adptrout.AdptrOut_Cruising_Outputs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ads_adptrout.AdptrOut_Cruising_Outputs)
  return false;
#undef DO_
}

void AdptrOut_Cruising_Outputs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ads_adptrout.AdptrOut_Cruising_Outputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ads_adptrout.ApdtrOut_Lat_0xEA ApdtrOut_Lat_EA = 1;
  if (this->has_apdtrout_lat_ea()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_apdtrout_lat_ea(), output);
  }

  // .ads_adptrout.ApdtrOut_Lgt_0x216 ApdtrOut_Lgt_216 = 2;
  if (this->has_apdtrout_lgt_216()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_apdtrout_lgt_216(), output);
  }

  // .ads_adptrout.ApdtrOut_Lgt_0x219 ApdtrOut_Lgt_219 = 3;
  if (this->has_apdtrout_lgt_219()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_apdtrout_lgt_219(), output);
  }

  // .ads_adptrout.ApdtrOut_Lgt_0x20A ApdtrOut_Lgt_20A = 4;
  if (this->has_apdtrout_lgt_20a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_apdtrout_lgt_20a(), output);
  }

  // .ads_common.B_Adptrout_Brake_Command_60_st Adptrout_Brake_Command_60 = 5;
  if (this->has_adptrout_brake_command_60()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_adptrout_brake_command_60(), output);
  }

  // .ads_common.B_Adptrout_Throttle_Command_62_st Adptrout_Throttle_Command_62 = 6;
  if (this->has_adptrout_throttle_command_62()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_adptrout_throttle_command_62(), output);
  }

  // .ads_common.B_Adptrout_Steering_Command_64_st Adptrout_Steering_Command_64 = 7;
  if (this->has_adptrout_steering_command_64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_adptrout_steering_command_64(), output);
  }

  // .ads_common.B_Adptrout_Gear_Command_66_st Adptrout_Gear_Command_66 = 8;
  if (this->has_adptrout_gear_command_66()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_adptrout_gear_command_66(), output);
  }

  // .ads_common.B_Adptrout_TurnSignal_Command_68_st Adptrout_TurnSignal_Command_68 = 9;
  if (this->has_adptrout_turnsignal_command_68()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_adptrout_turnsignal_command_68(), output);
  }

  // .ads_common.B_Adptrout_LatCtrl_State_st Adptrout_LatCtrl_State_st = 10;
  if (this->has_adptrout_latctrl_state_st()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_adptrout_latctrl_state_st(), output);
  }

  // .ads_common.B_Adptrout_LonCtrl_State_st Adptrout_LonCtrl_State_st = 11;
  if (this->has_adptrout_lonctrl_state_st()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_adptrout_lonctrl_state_st(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ads_adptrout.AdptrOut_Cruising_Outputs)
}

::google::protobuf::uint8* AdptrOut_Cruising_Outputs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ads_adptrout.AdptrOut_Cruising_Outputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ads_adptrout.ApdtrOut_Lat_0xEA ApdtrOut_Lat_EA = 1;
  if (this->has_apdtrout_lat_ea()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_apdtrout_lat_ea(), deterministic, target);
  }

  // .ads_adptrout.ApdtrOut_Lgt_0x216 ApdtrOut_Lgt_216 = 2;
  if (this->has_apdtrout_lgt_216()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_apdtrout_lgt_216(), deterministic, target);
  }

  // .ads_adptrout.ApdtrOut_Lgt_0x219 ApdtrOut_Lgt_219 = 3;
  if (this->has_apdtrout_lgt_219()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_apdtrout_lgt_219(), deterministic, target);
  }

  // .ads_adptrout.ApdtrOut_Lgt_0x20A ApdtrOut_Lgt_20A = 4;
  if (this->has_apdtrout_lgt_20a()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_apdtrout_lgt_20a(), deterministic, target);
  }

  // .ads_common.B_Adptrout_Brake_Command_60_st Adptrout_Brake_Command_60 = 5;
  if (this->has_adptrout_brake_command_60()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_adptrout_brake_command_60(), deterministic, target);
  }

  // .ads_common.B_Adptrout_Throttle_Command_62_st Adptrout_Throttle_Command_62 = 6;
  if (this->has_adptrout_throttle_command_62()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_adptrout_throttle_command_62(), deterministic, target);
  }

  // .ads_common.B_Adptrout_Steering_Command_64_st Adptrout_Steering_Command_64 = 7;
  if (this->has_adptrout_steering_command_64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_adptrout_steering_command_64(), deterministic, target);
  }

  // .ads_common.B_Adptrout_Gear_Command_66_st Adptrout_Gear_Command_66 = 8;
  if (this->has_adptrout_gear_command_66()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_adptrout_gear_command_66(), deterministic, target);
  }

  // .ads_common.B_Adptrout_TurnSignal_Command_68_st Adptrout_TurnSignal_Command_68 = 9;
  if (this->has_adptrout_turnsignal_command_68()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_adptrout_turnsignal_command_68(), deterministic, target);
  }

  // .ads_common.B_Adptrout_LatCtrl_State_st Adptrout_LatCtrl_State_st = 10;
  if (this->has_adptrout_latctrl_state_st()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_adptrout_latctrl_state_st(), deterministic, target);
  }

  // .ads_common.B_Adptrout_LonCtrl_State_st Adptrout_LonCtrl_State_st = 11;
  if (this->has_adptrout_lonctrl_state_st()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_adptrout_lonctrl_state_st(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ads_adptrout.AdptrOut_Cruising_Outputs)
  return target;
}

size_t AdptrOut_Cruising_Outputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ads_adptrout.AdptrOut_Cruising_Outputs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ads_adptrout.ApdtrOut_Lat_0xEA ApdtrOut_Lat_EA = 1;
  if (this->has_apdtrout_lat_ea()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *apdtrout_lat_ea_);
  }

  // .ads_adptrout.ApdtrOut_Lgt_0x216 ApdtrOut_Lgt_216 = 2;
  if (this->has_apdtrout_lgt_216()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *apdtrout_lgt_216_);
  }

  // .ads_adptrout.ApdtrOut_Lgt_0x219 ApdtrOut_Lgt_219 = 3;
  if (this->has_apdtrout_lgt_219()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *apdtrout_lgt_219_);
  }

  // .ads_adptrout.ApdtrOut_Lgt_0x20A ApdtrOut_Lgt_20A = 4;
  if (this->has_apdtrout_lgt_20a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *apdtrout_lgt_20a_);
  }

  // .ads_common.B_Adptrout_Brake_Command_60_st Adptrout_Brake_Command_60 = 5;
  if (this->has_adptrout_brake_command_60()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_brake_command_60_);
  }

  // .ads_common.B_Adptrout_Throttle_Command_62_st Adptrout_Throttle_Command_62 = 6;
  if (this->has_adptrout_throttle_command_62()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_throttle_command_62_);
  }

  // .ads_common.B_Adptrout_Steering_Command_64_st Adptrout_Steering_Command_64 = 7;
  if (this->has_adptrout_steering_command_64()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_steering_command_64_);
  }

  // .ads_common.B_Adptrout_Gear_Command_66_st Adptrout_Gear_Command_66 = 8;
  if (this->has_adptrout_gear_command_66()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_gear_command_66_);
  }

  // .ads_common.B_Adptrout_TurnSignal_Command_68_st Adptrout_TurnSignal_Command_68 = 9;
  if (this->has_adptrout_turnsignal_command_68()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_turnsignal_command_68_);
  }

  // .ads_common.B_Adptrout_LatCtrl_State_st Adptrout_LatCtrl_State_st = 10;
  if (this->has_adptrout_latctrl_state_st()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_latctrl_state_st_);
  }

  // .ads_common.B_Adptrout_LonCtrl_State_st Adptrout_LonCtrl_State_st = 11;
  if (this->has_adptrout_lonctrl_state_st()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adptrout_lonctrl_state_st_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdptrOut_Cruising_Outputs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ads_adptrout.AdptrOut_Cruising_Outputs)
  GOOGLE_DCHECK_NE(&from, this);
  const AdptrOut_Cruising_Outputs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdptrOut_Cruising_Outputs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ads_adptrout.AdptrOut_Cruising_Outputs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ads_adptrout.AdptrOut_Cruising_Outputs)
    MergeFrom(*source);
  }
}

void AdptrOut_Cruising_Outputs::MergeFrom(const AdptrOut_Cruising_Outputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ads_adptrout.AdptrOut_Cruising_Outputs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_apdtrout_lat_ea()) {
    mutable_apdtrout_lat_ea()->::ads_adptrout::ApdtrOut_Lat_0xEA::MergeFrom(from.apdtrout_lat_ea());
  }
  if (from.has_apdtrout_lgt_216()) {
    mutable_apdtrout_lgt_216()->::ads_adptrout::ApdtrOut_Lgt_0x216::MergeFrom(from.apdtrout_lgt_216());
  }
  if (from.has_apdtrout_lgt_219()) {
    mutable_apdtrout_lgt_219()->::ads_adptrout::ApdtrOut_Lgt_0x219::MergeFrom(from.apdtrout_lgt_219());
  }
  if (from.has_apdtrout_lgt_20a()) {
    mutable_apdtrout_lgt_20a()->::ads_adptrout::ApdtrOut_Lgt_0x20A::MergeFrom(from.apdtrout_lgt_20a());
  }
  if (from.has_adptrout_brake_command_60()) {
    mutable_adptrout_brake_command_60()->::ads_common::B_Adptrout_Brake_Command_60_st::MergeFrom(from.adptrout_brake_command_60());
  }
  if (from.has_adptrout_throttle_command_62()) {
    mutable_adptrout_throttle_command_62()->::ads_common::B_Adptrout_Throttle_Command_62_st::MergeFrom(from.adptrout_throttle_command_62());
  }
  if (from.has_adptrout_steering_command_64()) {
    mutable_adptrout_steering_command_64()->::ads_common::B_Adptrout_Steering_Command_64_st::MergeFrom(from.adptrout_steering_command_64());
  }
  if (from.has_adptrout_gear_command_66()) {
    mutable_adptrout_gear_command_66()->::ads_common::B_Adptrout_Gear_Command_66_st::MergeFrom(from.adptrout_gear_command_66());
  }
  if (from.has_adptrout_turnsignal_command_68()) {
    mutable_adptrout_turnsignal_command_68()->::ads_common::B_Adptrout_TurnSignal_Command_68_st::MergeFrom(from.adptrout_turnsignal_command_68());
  }
  if (from.has_adptrout_latctrl_state_st()) {
    mutable_adptrout_latctrl_state_st()->::ads_common::B_Adptrout_LatCtrl_State_st::MergeFrom(from.adptrout_latctrl_state_st());
  }
  if (from.has_adptrout_lonctrl_state_st()) {
    mutable_adptrout_lonctrl_state_st()->::ads_common::B_Adptrout_LonCtrl_State_st::MergeFrom(from.adptrout_lonctrl_state_st());
  }
}

void AdptrOut_Cruising_Outputs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ads_adptrout.AdptrOut_Cruising_Outputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdptrOut_Cruising_Outputs::CopyFrom(const AdptrOut_Cruising_Outputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ads_adptrout.AdptrOut_Cruising_Outputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdptrOut_Cruising_Outputs::IsInitialized() const {
  return true;
}

void AdptrOut_Cruising_Outputs::Swap(AdptrOut_Cruising_Outputs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdptrOut_Cruising_Outputs::InternalSwap(AdptrOut_Cruising_Outputs* other) {
  using std::swap;
  swap(apdtrout_lat_ea_, other->apdtrout_lat_ea_);
  swap(apdtrout_lgt_216_, other->apdtrout_lgt_216_);
  swap(apdtrout_lgt_219_, other->apdtrout_lgt_219_);
  swap(apdtrout_lgt_20a_, other->apdtrout_lgt_20a_);
  swap(adptrout_brake_command_60_, other->adptrout_brake_command_60_);
  swap(adptrout_throttle_command_62_, other->adptrout_throttle_command_62_);
  swap(adptrout_steering_command_64_, other->adptrout_steering_command_64_);
  swap(adptrout_gear_command_66_, other->adptrout_gear_command_66_);
  swap(adptrout_turnsignal_command_68_, other->adptrout_turnsignal_command_68_);
  swap(adptrout_latctrl_state_st_, other->adptrout_latctrl_state_st_);
  swap(adptrout_lonctrl_state_st_, other->adptrout_lonctrl_state_st_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdptrOut_Cruising_Outputs::GetMetadata() const {
  protobuf_ads_5fadptrout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ads_5fadptrout_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ads_adptrout
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_adptrout::ApdtrOut_Lat_0xEA* Arena::CreateMaybeMessage< ::ads_adptrout::ApdtrOut_Lat_0xEA >(Arena* arena) {
  return Arena::CreateInternal< ::ads_adptrout::ApdtrOut_Lat_0xEA >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_adptrout::ApdtrOut_Lgt_0x216* Arena::CreateMaybeMessage< ::ads_adptrout::ApdtrOut_Lgt_0x216 >(Arena* arena) {
  return Arena::CreateInternal< ::ads_adptrout::ApdtrOut_Lgt_0x216 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_adptrout::ApdtrOut_Lgt_0x219* Arena::CreateMaybeMessage< ::ads_adptrout::ApdtrOut_Lgt_0x219 >(Arena* arena) {
  return Arena::CreateInternal< ::ads_adptrout::ApdtrOut_Lgt_0x219 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_adptrout::ApdtrOut_Lgt_0x20A* Arena::CreateMaybeMessage< ::ads_adptrout::ApdtrOut_Lgt_0x20A >(Arena* arena) {
  return Arena::CreateInternal< ::ads_adptrout::ApdtrOut_Lgt_0x20A >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ads_adptrout::AdptrOut_Cruising_Outputs* Arena::CreateMaybeMessage< ::ads_adptrout::AdptrOut_Cruising_Outputs >(Arena* arena) {
  return Arena::CreateInternal< ::ads_adptrout::AdptrOut_Cruising_Outputs >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
