// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fusion_od_out_v1_0.proto

#include "fusion_od_out_v1_0.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectInfo;
}  // namespace protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto
namespace fusion_od_out {
namespace proto {
class ObjectHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectHeader>
      _instance;
} _ObjectHeader_default_instance_;
class ObjectInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectInfo>
      _instance;
} _ObjectInfo_default_instance_;
class ObjFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjFrame>
      _instance;
} _ObjFrame_default_instance_;
}  // namespace proto
}  // namespace fusion_od_out
namespace protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto {
static void InitDefaultsObjectHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fusion_od_out::proto::_ObjectHeader_default_instance_;
    new (ptr) ::fusion_od_out::proto::ObjectHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fusion_od_out::proto::ObjectHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectHeader}, {}};

static void InitDefaultsObjectInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fusion_od_out::proto::_ObjectInfo_default_instance_;
    new (ptr) ::fusion_od_out::proto::ObjectInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fusion_od_out::proto::ObjectInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectInfo}, {}};

static void InitDefaultsObjFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fusion_od_out::proto::_ObjFrame_default_instance_;
    new (ptr) ::fusion_od_out::proto::ObjFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fusion_od_out::proto::ObjFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjFrame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjFrame}, {
      &protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::scc_info_ObjectHeader.base,
      &protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::scc_info_ObjectInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjFrame.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectHeader, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectHeader, rolling_counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectHeader, sensor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectHeader, obj_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, obj_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, class_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, life_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, motion_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, dist_long_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, dist_lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, vrel_long_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, vrel_lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, arel_long_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, arel_lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, yaw_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, orientation_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, meas_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, dist_long_rms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, dist_lat_rms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, vrel_long_rms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, vrel_lat_rms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, arel_long_rms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, arel_lat_rms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjectInfo, orientation_rms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjFrame, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjFrame, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fusion_od_out::proto::ObjFrame, objects_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::fusion_od_out::proto::ObjectHeader)},
  { 9, -1, sizeof(::fusion_od_out::proto::ObjectInfo)},
  { 38, -1, sizeof(::fusion_od_out::proto::ObjFrame)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::fusion_od_out::proto::_ObjectHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fusion_od_out::proto::_ObjectInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fusion_od_out::proto::_ObjFrame_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "fusion_od_out_v1_0.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030fusion_od_out_v1_0.proto\022\023fusion_od_ou"
      "t.proto\"^\n\014ObjectHeader\022\021\n\ttimestamp\030\001 \001"
      "(\004\022\027\n\017rolling_counter\030\002 \001(\r\022\021\n\tsensor_id"
      "\030\003 \001(\r\022\017\n\007obj_num\030\004 \001(\r\"\356\003\n\nObjectInfo\022\016"
      "\n\006obj_id\030\001 \001(\r\022\022\n\nclass_type\030\002 \001(\r\022\022\n\nco"
      "nfidence\030\003 \001(\001\022\021\n\tlife_time\030\004 \001(\r\022\025\n\rmot"
      "ion_status\030\005 \001(\r\022\016\n\006height\030\006 \001(\001\022\r\n\005widt"
      "h\030\007 \001(\001\022\016\n\006length\030\010 \001(\001\022\021\n\tdist_long\030\t \001"
      "(\001\022\020\n\010dist_lat\030\n \001(\001\022\021\n\tvrel_long\030\013 \001(\001\022"
      "\020\n\010vrel_lat\030\014 \001(\001\022\021\n\tarel_long\030\r \001(\001\022\020\n\010"
      "arel_lat\030\016 \001(\001\022\021\n\tyaw_angle\030\017 \001(\001\022\031\n\021ori"
      "entation_angle\030\020 \001(\001\022\022\n\nmeas_state\030\021 \001(\r"
      "\022\025\n\rdist_long_rms\030\022 \001(\001\022\024\n\014dist_lat_rms\030"
      "\023 \001(\001\022\025\n\rvrel_long_rms\030\024 \001(\001\022\024\n\014vrel_lat"
      "_rms\030\025 \001(\001\022\025\n\rarel_long_rms\030\026 \001(\001\022\024\n\014are"
      "l_lat_rms\030\027 \001(\001\022\027\n\017orientation_rms\030\030 \001(\001"
      "\"\202\001\n\010ObjFrame\0221\n\006header\030\001 \001(\0132!.fusion_o"
      "d_out.proto.ObjectHeader\022\021\n\ttimestamp\030\002 "
      "\001(\004\0220\n\007objects\030\003 \003(\0132\037.fusion_od_out.pro"
      "to.ObjectInfob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 781);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fusion_od_out_v1_0.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto
namespace fusion_od_out {
namespace proto {

// ===================================================================

void ObjectHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectHeader::kTimestampFieldNumber;
const int ObjectHeader::kRollingCounterFieldNumber;
const int ObjectHeader::kSensorIdFieldNumber;
const int ObjectHeader::kObjNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectHeader::ObjectHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::scc_info_ObjectHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fusion_od_out.proto.ObjectHeader)
}
ObjectHeader::ObjectHeader(const ObjectHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&obj_num_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(obj_num_));
  // @@protoc_insertion_point(copy_constructor:fusion_od_out.proto.ObjectHeader)
}

void ObjectHeader::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_num_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(obj_num_));
}

ObjectHeader::~ObjectHeader() {
  // @@protoc_insertion_point(destructor:fusion_od_out.proto.ObjectHeader)
  SharedDtor();
}

void ObjectHeader::SharedDtor() {
}

void ObjectHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectHeader::descriptor() {
  ::protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectHeader& ObjectHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::scc_info_ObjectHeader.base);
  return *internal_default_instance();
}


void ObjectHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:fusion_od_out.proto.ObjectHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_num_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(obj_num_));
  _internal_metadata_.Clear();
}

bool ObjectHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fusion_od_out.proto.ObjectHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rolling_counter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rolling_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sensor_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sensor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 obj_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &obj_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fusion_od_out.proto.ObjectHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fusion_od_out.proto.ObjectHeader)
  return false;
#undef DO_
}

void ObjectHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fusion_od_out.proto.ObjectHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // uint32 rolling_counter = 2;
  if (this->rolling_counter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rolling_counter(), output);
  }

  // uint32 sensor_id = 3;
  if (this->sensor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sensor_id(), output);
  }

  // uint32 obj_num = 4;
  if (this->obj_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->obj_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fusion_od_out.proto.ObjectHeader)
}

::google::protobuf::uint8* ObjectHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fusion_od_out.proto.ObjectHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  // uint32 rolling_counter = 2;
  if (this->rolling_counter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rolling_counter(), target);
  }

  // uint32 sensor_id = 3;
  if (this->sensor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sensor_id(), target);
  }

  // uint32 obj_num = 4;
  if (this->obj_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->obj_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fusion_od_out.proto.ObjectHeader)
  return target;
}

size_t ObjectHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fusion_od_out.proto.ObjectHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // uint32 rolling_counter = 2;
  if (this->rolling_counter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rolling_counter());
  }

  // uint32 sensor_id = 3;
  if (this->sensor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sensor_id());
  }

  // uint32 obj_num = 4;
  if (this->obj_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->obj_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fusion_od_out.proto.ObjectHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fusion_od_out.proto.ObjectHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fusion_od_out.proto.ObjectHeader)
    MergeFrom(*source);
  }
}

void ObjectHeader::MergeFrom(const ObjectHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fusion_od_out.proto.ObjectHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.rolling_counter() != 0) {
    set_rolling_counter(from.rolling_counter());
  }
  if (from.sensor_id() != 0) {
    set_sensor_id(from.sensor_id());
  }
  if (from.obj_num() != 0) {
    set_obj_num(from.obj_num());
  }
}

void ObjectHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fusion_od_out.proto.ObjectHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectHeader::CopyFrom(const ObjectHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fusion_od_out.proto.ObjectHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectHeader::IsInitialized() const {
  return true;
}

void ObjectHeader::Swap(ObjectHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectHeader::InternalSwap(ObjectHeader* other) {
  using std::swap;
  swap(timestamp_, other->timestamp_);
  swap(rolling_counter_, other->rolling_counter_);
  swap(sensor_id_, other->sensor_id_);
  swap(obj_num_, other->obj_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectHeader::GetMetadata() const {
  protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectInfo::kObjIdFieldNumber;
const int ObjectInfo::kClassTypeFieldNumber;
const int ObjectInfo::kConfidenceFieldNumber;
const int ObjectInfo::kLifeTimeFieldNumber;
const int ObjectInfo::kMotionStatusFieldNumber;
const int ObjectInfo::kHeightFieldNumber;
const int ObjectInfo::kWidthFieldNumber;
const int ObjectInfo::kLengthFieldNumber;
const int ObjectInfo::kDistLongFieldNumber;
const int ObjectInfo::kDistLatFieldNumber;
const int ObjectInfo::kVrelLongFieldNumber;
const int ObjectInfo::kVrelLatFieldNumber;
const int ObjectInfo::kArelLongFieldNumber;
const int ObjectInfo::kArelLatFieldNumber;
const int ObjectInfo::kYawAngleFieldNumber;
const int ObjectInfo::kOrientationAngleFieldNumber;
const int ObjectInfo::kMeasStateFieldNumber;
const int ObjectInfo::kDistLongRmsFieldNumber;
const int ObjectInfo::kDistLatRmsFieldNumber;
const int ObjectInfo::kVrelLongRmsFieldNumber;
const int ObjectInfo::kVrelLatRmsFieldNumber;
const int ObjectInfo::kArelLongRmsFieldNumber;
const int ObjectInfo::kArelLatRmsFieldNumber;
const int ObjectInfo::kOrientationRmsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectInfo::ObjectInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::scc_info_ObjectInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fusion_od_out.proto.ObjectInfo)
}
ObjectInfo::ObjectInfo(const ObjectInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obj_id_, &from.obj_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&meas_state_) -
    reinterpret_cast<char*>(&obj_id_)) + sizeof(meas_state_));
  // @@protoc_insertion_point(copy_constructor:fusion_od_out.proto.ObjectInfo)
}

void ObjectInfo::SharedCtor() {
  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&meas_state_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(meas_state_));
}

ObjectInfo::~ObjectInfo() {
  // @@protoc_insertion_point(destructor:fusion_od_out.proto.ObjectInfo)
  SharedDtor();
}

void ObjectInfo::SharedDtor() {
}

void ObjectInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectInfo::descriptor() {
  ::protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectInfo& ObjectInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::scc_info_ObjectInfo.base);
  return *internal_default_instance();
}


void ObjectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:fusion_od_out.proto.ObjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&meas_state_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(meas_state_));
  _internal_metadata_.Clear();
}

bool ObjectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fusion_od_out.proto.ObjectInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 obj_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &obj_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 class_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &class_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double confidence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 life_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &life_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 motion_status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motion_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double width = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double length = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dist_long = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dist_long_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dist_lat = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dist_lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vrel_long = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vrel_long_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vrel_lat = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vrel_lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double arel_long = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &arel_long_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double arel_lat = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &arel_lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yaw_angle = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double orientation_angle = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &orientation_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 meas_state = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &meas_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dist_long_rms = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dist_long_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dist_lat_rms = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dist_lat_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vrel_long_rms = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vrel_long_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vrel_lat_rms = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vrel_lat_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double arel_long_rms = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 177 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &arel_long_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double arel_lat_rms = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &arel_lat_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double orientation_rms = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &orientation_rms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fusion_od_out.proto.ObjectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fusion_od_out.proto.ObjectInfo)
  return false;
#undef DO_
}

void ObjectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fusion_od_out.proto.ObjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 obj_id = 1;
  if (this->obj_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->obj_id(), output);
  }

  // uint32 class_type = 2;
  if (this->class_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->class_type(), output);
  }

  // double confidence = 3;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->confidence(), output);
  }

  // uint32 life_time = 4;
  if (this->life_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->life_time(), output);
  }

  // uint32 motion_status = 5;
  if (this->motion_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->motion_status(), output);
  }

  // double height = 6;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->height(), output);
  }

  // double width = 7;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->width(), output);
  }

  // double length = 8;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->length(), output);
  }

  // double dist_long = 9;
  if (this->dist_long() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->dist_long(), output);
  }

  // double dist_lat = 10;
  if (this->dist_lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->dist_lat(), output);
  }

  // double vrel_long = 11;
  if (this->vrel_long() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->vrel_long(), output);
  }

  // double vrel_lat = 12;
  if (this->vrel_lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->vrel_lat(), output);
  }

  // double arel_long = 13;
  if (this->arel_long() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->arel_long(), output);
  }

  // double arel_lat = 14;
  if (this->arel_lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->arel_lat(), output);
  }

  // double yaw_angle = 15;
  if (this->yaw_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->yaw_angle(), output);
  }

  // double orientation_angle = 16;
  if (this->orientation_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->orientation_angle(), output);
  }

  // uint32 meas_state = 17;
  if (this->meas_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->meas_state(), output);
  }

  // double dist_long_rms = 18;
  if (this->dist_long_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->dist_long_rms(), output);
  }

  // double dist_lat_rms = 19;
  if (this->dist_lat_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->dist_lat_rms(), output);
  }

  // double vrel_long_rms = 20;
  if (this->vrel_long_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->vrel_long_rms(), output);
  }

  // double vrel_lat_rms = 21;
  if (this->vrel_lat_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->vrel_lat_rms(), output);
  }

  // double arel_long_rms = 22;
  if (this->arel_long_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->arel_long_rms(), output);
  }

  // double arel_lat_rms = 23;
  if (this->arel_lat_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->arel_lat_rms(), output);
  }

  // double orientation_rms = 24;
  if (this->orientation_rms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->orientation_rms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fusion_od_out.proto.ObjectInfo)
}

::google::protobuf::uint8* ObjectInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fusion_od_out.proto.ObjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 obj_id = 1;
  if (this->obj_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->obj_id(), target);
  }

  // uint32 class_type = 2;
  if (this->class_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->class_type(), target);
  }

  // double confidence = 3;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->confidence(), target);
  }

  // uint32 life_time = 4;
  if (this->life_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->life_time(), target);
  }

  // uint32 motion_status = 5;
  if (this->motion_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->motion_status(), target);
  }

  // double height = 6;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->height(), target);
  }

  // double width = 7;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->width(), target);
  }

  // double length = 8;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->length(), target);
  }

  // double dist_long = 9;
  if (this->dist_long() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->dist_long(), target);
  }

  // double dist_lat = 10;
  if (this->dist_lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->dist_lat(), target);
  }

  // double vrel_long = 11;
  if (this->vrel_long() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->vrel_long(), target);
  }

  // double vrel_lat = 12;
  if (this->vrel_lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->vrel_lat(), target);
  }

  // double arel_long = 13;
  if (this->arel_long() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->arel_long(), target);
  }

  // double arel_lat = 14;
  if (this->arel_lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->arel_lat(), target);
  }

  // double yaw_angle = 15;
  if (this->yaw_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->yaw_angle(), target);
  }

  // double orientation_angle = 16;
  if (this->orientation_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->orientation_angle(), target);
  }

  // uint32 meas_state = 17;
  if (this->meas_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->meas_state(), target);
  }

  // double dist_long_rms = 18;
  if (this->dist_long_rms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->dist_long_rms(), target);
  }

  // double dist_lat_rms = 19;
  if (this->dist_lat_rms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->dist_lat_rms(), target);
  }

  // double vrel_long_rms = 20;
  if (this->vrel_long_rms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->vrel_long_rms(), target);
  }

  // double vrel_lat_rms = 21;
  if (this->vrel_lat_rms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->vrel_lat_rms(), target);
  }

  // double arel_long_rms = 22;
  if (this->arel_long_rms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->arel_long_rms(), target);
  }

  // double arel_lat_rms = 23;
  if (this->arel_lat_rms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->arel_lat_rms(), target);
  }

  // double orientation_rms = 24;
  if (this->orientation_rms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->orientation_rms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fusion_od_out.proto.ObjectInfo)
  return target;
}

size_t ObjectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fusion_od_out.proto.ObjectInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->obj_id());
  }

  // uint32 class_type = 2;
  if (this->class_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->class_type());
  }

  // double confidence = 3;
  if (this->confidence() != 0) {
    total_size += 1 + 8;
  }

  // uint32 life_time = 4;
  if (this->life_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->life_time());
  }

  // uint32 motion_status = 5;
  if (this->motion_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motion_status());
  }

  // double height = 6;
  if (this->height() != 0) {
    total_size += 1 + 8;
  }

  // double width = 7;
  if (this->width() != 0) {
    total_size += 1 + 8;
  }

  // double length = 8;
  if (this->length() != 0) {
    total_size += 1 + 8;
  }

  // double dist_long = 9;
  if (this->dist_long() != 0) {
    total_size += 1 + 8;
  }

  // double dist_lat = 10;
  if (this->dist_lat() != 0) {
    total_size += 1 + 8;
  }

  // double vrel_long = 11;
  if (this->vrel_long() != 0) {
    total_size += 1 + 8;
  }

  // double vrel_lat = 12;
  if (this->vrel_lat() != 0) {
    total_size += 1 + 8;
  }

  // double arel_long = 13;
  if (this->arel_long() != 0) {
    total_size += 1 + 8;
  }

  // double arel_lat = 14;
  if (this->arel_lat() != 0) {
    total_size += 1 + 8;
  }

  // double yaw_angle = 15;
  if (this->yaw_angle() != 0) {
    total_size += 1 + 8;
  }

  // double orientation_angle = 16;
  if (this->orientation_angle() != 0) {
    total_size += 2 + 8;
  }

  // double dist_long_rms = 18;
  if (this->dist_long_rms() != 0) {
    total_size += 2 + 8;
  }

  // double dist_lat_rms = 19;
  if (this->dist_lat_rms() != 0) {
    total_size += 2 + 8;
  }

  // double vrel_long_rms = 20;
  if (this->vrel_long_rms() != 0) {
    total_size += 2 + 8;
  }

  // double vrel_lat_rms = 21;
  if (this->vrel_lat_rms() != 0) {
    total_size += 2 + 8;
  }

  // double arel_long_rms = 22;
  if (this->arel_long_rms() != 0) {
    total_size += 2 + 8;
  }

  // double arel_lat_rms = 23;
  if (this->arel_lat_rms() != 0) {
    total_size += 2 + 8;
  }

  // double orientation_rms = 24;
  if (this->orientation_rms() != 0) {
    total_size += 2 + 8;
  }

  // uint32 meas_state = 17;
  if (this->meas_state() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->meas_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fusion_od_out.proto.ObjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fusion_od_out.proto.ObjectInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fusion_od_out.proto.ObjectInfo)
    MergeFrom(*source);
  }
}

void ObjectInfo::MergeFrom(const ObjectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fusion_od_out.proto.ObjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    set_obj_id(from.obj_id());
  }
  if (from.class_type() != 0) {
    set_class_type(from.class_type());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.life_time() != 0) {
    set_life_time(from.life_time());
  }
  if (from.motion_status() != 0) {
    set_motion_status(from.motion_status());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.dist_long() != 0) {
    set_dist_long(from.dist_long());
  }
  if (from.dist_lat() != 0) {
    set_dist_lat(from.dist_lat());
  }
  if (from.vrel_long() != 0) {
    set_vrel_long(from.vrel_long());
  }
  if (from.vrel_lat() != 0) {
    set_vrel_lat(from.vrel_lat());
  }
  if (from.arel_long() != 0) {
    set_arel_long(from.arel_long());
  }
  if (from.arel_lat() != 0) {
    set_arel_lat(from.arel_lat());
  }
  if (from.yaw_angle() != 0) {
    set_yaw_angle(from.yaw_angle());
  }
  if (from.orientation_angle() != 0) {
    set_orientation_angle(from.orientation_angle());
  }
  if (from.dist_long_rms() != 0) {
    set_dist_long_rms(from.dist_long_rms());
  }
  if (from.dist_lat_rms() != 0) {
    set_dist_lat_rms(from.dist_lat_rms());
  }
  if (from.vrel_long_rms() != 0) {
    set_vrel_long_rms(from.vrel_long_rms());
  }
  if (from.vrel_lat_rms() != 0) {
    set_vrel_lat_rms(from.vrel_lat_rms());
  }
  if (from.arel_long_rms() != 0) {
    set_arel_long_rms(from.arel_long_rms());
  }
  if (from.arel_lat_rms() != 0) {
    set_arel_lat_rms(from.arel_lat_rms());
  }
  if (from.orientation_rms() != 0) {
    set_orientation_rms(from.orientation_rms());
  }
  if (from.meas_state() != 0) {
    set_meas_state(from.meas_state());
  }
}

void ObjectInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fusion_od_out.proto.ObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectInfo::CopyFrom(const ObjectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fusion_od_out.proto.ObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectInfo::IsInitialized() const {
  return true;
}

void ObjectInfo::Swap(ObjectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectInfo::InternalSwap(ObjectInfo* other) {
  using std::swap;
  swap(obj_id_, other->obj_id_);
  swap(class_type_, other->class_type_);
  swap(confidence_, other->confidence_);
  swap(life_time_, other->life_time_);
  swap(motion_status_, other->motion_status_);
  swap(height_, other->height_);
  swap(width_, other->width_);
  swap(length_, other->length_);
  swap(dist_long_, other->dist_long_);
  swap(dist_lat_, other->dist_lat_);
  swap(vrel_long_, other->vrel_long_);
  swap(vrel_lat_, other->vrel_lat_);
  swap(arel_long_, other->arel_long_);
  swap(arel_lat_, other->arel_lat_);
  swap(yaw_angle_, other->yaw_angle_);
  swap(orientation_angle_, other->orientation_angle_);
  swap(dist_long_rms_, other->dist_long_rms_);
  swap(dist_lat_rms_, other->dist_lat_rms_);
  swap(vrel_long_rms_, other->vrel_long_rms_);
  swap(vrel_lat_rms_, other->vrel_lat_rms_);
  swap(arel_long_rms_, other->arel_long_rms_);
  swap(arel_lat_rms_, other->arel_lat_rms_);
  swap(orientation_rms_, other->orientation_rms_);
  swap(meas_state_, other->meas_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectInfo::GetMetadata() const {
  protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjFrame::InitAsDefaultInstance() {
  ::fusion_od_out::proto::_ObjFrame_default_instance_._instance.get_mutable()->header_ = const_cast< ::fusion_od_out::proto::ObjectHeader*>(
      ::fusion_od_out::proto::ObjectHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjFrame::kHeaderFieldNumber;
const int ObjFrame::kTimestampFieldNumber;
const int ObjFrame::kObjectsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjFrame::ObjFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::scc_info_ObjFrame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fusion_od_out.proto.ObjFrame)
}
ObjFrame::ObjFrame(const ObjFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objects_(from.objects_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::fusion_od_out::proto::ObjectHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:fusion_od_out.proto.ObjFrame)
}

void ObjFrame::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&header_)) + sizeof(timestamp_));
}

ObjFrame::~ObjFrame() {
  // @@protoc_insertion_point(destructor:fusion_od_out.proto.ObjFrame)
  SharedDtor();
}

void ObjFrame::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void ObjFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjFrame::descriptor() {
  ::protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjFrame& ObjFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::scc_info_ObjFrame.base);
  return *internal_default_instance();
}


void ObjFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:fusion_od_out.proto.ObjFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objects_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ObjFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fusion_od_out.proto.ObjFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .fusion_od_out.proto.ObjectHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fusion_od_out.proto.ObjectInfo objects = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_objects()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fusion_od_out.proto.ObjFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fusion_od_out.proto.ObjFrame)
  return false;
#undef DO_
}

void ObjFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fusion_od_out.proto.ObjFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fusion_od_out.proto.ObjectHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp(), output);
  }

  // repeated .fusion_od_out.proto.ObjectInfo objects = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->objects(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fusion_od_out.proto.ObjFrame)
}

::google::protobuf::uint8* ObjFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fusion_od_out.proto.ObjFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fusion_od_out.proto.ObjectHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp(), target);
  }

  // repeated .fusion_od_out.proto.ObjectInfo objects = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->objects(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fusion_od_out.proto.ObjFrame)
  return target;
}

size_t ObjFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fusion_od_out.proto.ObjFrame)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .fusion_od_out.proto.ObjectInfo objects = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->objects_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objects(static_cast<int>(i)));
    }
  }

  // .fusion_od_out.proto.ObjectHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // uint64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fusion_od_out.proto.ObjFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fusion_od_out.proto.ObjFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fusion_od_out.proto.ObjFrame)
    MergeFrom(*source);
  }
}

void ObjFrame::MergeFrom(const ObjFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fusion_od_out.proto.ObjFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objects_.MergeFrom(from.objects_);
  if (from.has_header()) {
    mutable_header()->::fusion_od_out::proto::ObjectHeader::MergeFrom(from.header());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void ObjFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fusion_od_out.proto.ObjFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjFrame::CopyFrom(const ObjFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fusion_od_out.proto.ObjFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjFrame::IsInitialized() const {
  return true;
}

void ObjFrame::Swap(ObjFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjFrame::InternalSwap(ObjFrame* other) {
  using std::swap;
  CastToBase(&objects_)->InternalSwap(CastToBase(&other->objects_));
  swap(header_, other->header_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjFrame::GetMetadata() const {
  protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5fod_5fout_5fv1_5f0_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace fusion_od_out
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fusion_od_out::proto::ObjectHeader* Arena::CreateMaybeMessage< ::fusion_od_out::proto::ObjectHeader >(Arena* arena) {
  return Arena::CreateInternal< ::fusion_od_out::proto::ObjectHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fusion_od_out::proto::ObjectInfo* Arena::CreateMaybeMessage< ::fusion_od_out::proto::ObjectInfo >(Arena* arena) {
  return Arena::CreateInternal< ::fusion_od_out::proto::ObjectInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fusion_od_out::proto::ObjFrame* Arena::CreateMaybeMessage< ::fusion_od_out::proto::ObjFrame >(Arena* arena) {
  return Arena::CreateInternal< ::fusion_od_out::proto::ObjFrame >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
