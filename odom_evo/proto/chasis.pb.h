// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chasis.proto

#ifndef PROTOBUF_INCLUDED_chasis_2eproto
#define PROTOBUF_INCLUDED_chasis_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "header.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_chasis_2eproto 

namespace protobuf_chasis_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[34];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_chasis_2eproto
namespace Calmcar {
namespace drivers {
namespace CHASIS {
class Accel_report_6b;
class Accel_report_6bDefaultTypeInternal;
extern Accel_report_6bDefaultTypeInternal _Accel_report_6b_default_instance_;
class Brake_command_60;
class Brake_command_60DefaultTypeInternal;
extern Brake_command_60DefaultTypeInternal _Brake_command_60_default_instance_;
class Brake_report_61;
class Brake_report_61DefaultTypeInternal;
extern Brake_report_61DefaultTypeInternal _Brake_report_61_default_instance_;
class Brakeinfo_report_74;
class Brakeinfo_report_74DefaultTypeInternal;
extern Brakeinfo_report_74DefaultTypeInternal _Brakeinfo_report_74_default_instance_;
class Chasis;
class ChasisDefaultTypeInternal;
extern ChasisDefaultTypeInternal _Chasis_default_instance_;
class Fuellevel_report_72;
class Fuellevel_report_72DefaultTypeInternal;
extern Fuellevel_report_72DefaultTypeInternal _Fuellevel_report_72_default_instance_;
class Gear_command_66;
class Gear_command_66DefaultTypeInternal;
extern Gear_command_66DefaultTypeInternal _Gear_command_66_default_instance_;
class Gear_report_67;
class Gear_report_67DefaultTypeInternal;
extern Gear_report_67DefaultTypeInternal _Gear_report_67_default_instance_;
class Gps_1_report_6d;
class Gps_1_report_6dDefaultTypeInternal;
extern Gps_1_report_6dDefaultTypeInternal _Gps_1_report_6d_default_instance_;
class Gps_2_report_6e;
class Gps_2_report_6eDefaultTypeInternal;
extern Gps_2_report_6eDefaultTypeInternal _Gps_2_report_6e_default_instance_;
class Gps_3_report_6f;
class Gps_3_report_6fDefaultTypeInternal;
extern Gps_3_report_6fDefaultTypeInternal _Gps_3_report_6f_default_instance_;
class Gyro_report_6c;
class Gyro_report_6cDefaultTypeInternal;
extern Gyro_report_6cDefaultTypeInternal _Gyro_report_6c_default_instance_;
class Misc_report_69;
class Misc_report_69DefaultTypeInternal;
extern Misc_report_69DefaultTypeInternal _Misc_report_69_default_instance_;
class Misc_report_ss_7b;
class Misc_report_ss_7bDefaultTypeInternal;
extern Misc_report_ss_7bDefaultTypeInternal _Misc_report_ss_7b_default_instance_;
class Pms_cmd_1ba;
class Pms_cmd_1baDefaultTypeInternal;
extern Pms_cmd_1baDefaultTypeInternal _Pms_cmd_1ba_default_instance_;
class Pms_current_1_1c0;
class Pms_current_1_1c0DefaultTypeInternal;
extern Pms_current_1_1c0DefaultTypeInternal _Pms_current_1_1c0_default_instance_;
class Pms_current_2_1c1;
class Pms_current_2_1c1DefaultTypeInternal;
extern Pms_current_2_1c1DefaultTypeInternal _Pms_current_2_1c1_default_instance_;
class Pms_current_3_1c2;
class Pms_current_3_1c2DefaultTypeInternal;
extern Pms_current_3_1c2DefaultTypeInternal _Pms_current_3_1c2_default_instance_;
class Pms_current_4_1c3;
class Pms_current_4_1c3DefaultTypeInternal;
extern Pms_current_4_1c3DefaultTypeInternal _Pms_current_4_1c3_default_instance_;
class Pms_sta_1e0;
class Pms_sta_1e0DefaultTypeInternal;
extern Pms_sta_1e0DefaultTypeInternal _Pms_sta_1e0_default_instance_;
class Pms_voltage_1b0;
class Pms_voltage_1b0DefaultTypeInternal;
extern Pms_voltage_1b0DefaultTypeInternal _Pms_voltage_1b0_default_instance_;
class Steering_command_64;
class Steering_command_64DefaultTypeInternal;
extern Steering_command_64DefaultTypeInternal _Steering_command_64_default_instance_;
class Steering_report_65;
class Steering_report_65DefaultTypeInternal;
extern Steering_report_65DefaultTypeInternal _Steering_report_65_default_instance_;
class Surround_report_73;
class Surround_report_73DefaultTypeInternal;
extern Surround_report_73DefaultTypeInternal _Surround_report_73_default_instance_;
class Suspension_79;
class Suspension_79DefaultTypeInternal;
extern Suspension_79DefaultTypeInternal _Suspension_79_default_instance_;
class Throttle_command_62;
class Throttle_command_62DefaultTypeInternal;
extern Throttle_command_62DefaultTypeInternal _Throttle_command_62_default_instance_;
class Throttle_report_63;
class Throttle_report_63DefaultTypeInternal;
extern Throttle_report_63DefaultTypeInternal _Throttle_report_63_default_instance_;
class Throttleinfo_report_75;
class Throttleinfo_report_75DefaultTypeInternal;
extern Throttleinfo_report_75DefaultTypeInternal _Throttleinfo_report_75_default_instance_;
class Tirepressure_report_71;
class Tirepressure_report_71DefaultTypeInternal;
extern Tirepressure_report_71DefaultTypeInternal _Tirepressure_report_71_default_instance_;
class Turnsignal_command_68;
class Turnsignal_command_68DefaultTypeInternal;
extern Turnsignal_command_68DefaultTypeInternal _Turnsignal_command_68_default_instance_;
class Version_bt_7e;
class Version_bt_7eDefaultTypeInternal;
extern Version_bt_7eDefaultTypeInternal _Version_bt_7e_default_instance_;
class Version_ss_7f;
class Version_ss_7fDefaultTypeInternal;
extern Version_ss_7fDefaultTypeInternal _Version_ss_7f_default_instance_;
class Wheelposition_report_70;
class Wheelposition_report_70DefaultTypeInternal;
extern Wheelposition_report_70DefaultTypeInternal _Wheelposition_report_70_default_instance_;
class Wheelspeed_report_6a;
class Wheelspeed_report_6aDefaultTypeInternal;
extern Wheelspeed_report_6aDefaultTypeInternal _Wheelspeed_report_6a_default_instance_;
}  // namespace CHASIS
}  // namespace drivers
}  // namespace Calmcar
namespace google {
namespace protobuf {
template<> ::Calmcar::drivers::CHASIS::Accel_report_6b* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Accel_report_6b>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Brake_command_60* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Brake_command_60>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Brake_report_61* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Brake_report_61>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Brakeinfo_report_74* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Brakeinfo_report_74>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Chasis* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Chasis>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Fuellevel_report_72* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Fuellevel_report_72>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Gear_command_66* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gear_command_66>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Gear_report_67* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gear_report_67>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Gps_1_report_6d* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gps_1_report_6d>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Gps_2_report_6e* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gps_2_report_6e>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Gps_3_report_6f* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gps_3_report_6f>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Gyro_report_6c* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gyro_report_6c>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Misc_report_69* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Misc_report_69>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Misc_report_ss_7b* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Misc_report_ss_7b>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Pms_cmd_1ba* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_cmd_1ba>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Pms_current_1_1c0* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_current_1_1c0>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Pms_current_2_1c1* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_current_2_1c1>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Pms_current_3_1c2* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_current_3_1c2>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Pms_current_4_1c3* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_current_4_1c3>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Pms_sta_1e0* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_sta_1e0>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Pms_voltage_1b0* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_voltage_1b0>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Steering_command_64* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Steering_command_64>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Steering_report_65* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Steering_report_65>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Surround_report_73* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Surround_report_73>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Suspension_79* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Suspension_79>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Throttle_command_62* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Throttle_command_62>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Throttle_report_63* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Throttle_report_63>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Throttleinfo_report_75* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Throttleinfo_report_75>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Tirepressure_report_71* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Tirepressure_report_71>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Turnsignal_command_68* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Turnsignal_command_68>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Version_bt_7e* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Version_bt_7e>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Version_ss_7f* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Version_ss_7f>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Wheelposition_report_70* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Wheelposition_report_70>(Arena*);
template<> ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a* Arena::CreateMaybeMessage<::Calmcar::drivers::CHASIS::Wheelspeed_report_6a>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Calmcar {
namespace drivers {
namespace CHASIS {

enum Version_ss_7f_ModuleType {
  Version_ss_7f_ModuleType_MODULE_BT = 0,
  Version_ss_7f_ModuleType_MODULE_SS = 1,
  Version_ss_7f_ModuleType_Version_ss_7f_ModuleType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Version_ss_7f_ModuleType_Version_ss_7f_ModuleType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Version_ss_7f_ModuleType_IsValid(int value);
const Version_ss_7f_ModuleType Version_ss_7f_ModuleType_ModuleType_MIN = Version_ss_7f_ModuleType_MODULE_BT;
const Version_ss_7f_ModuleType Version_ss_7f_ModuleType_ModuleType_MAX = Version_ss_7f_ModuleType_MODULE_SS;
const int Version_ss_7f_ModuleType_ModuleType_ARRAYSIZE = Version_ss_7f_ModuleType_ModuleType_MAX + 1;

enum Version_bt_7e_ModuleType {
  Version_bt_7e_ModuleType_MODULE_BT = 0,
  Version_bt_7e_ModuleType_MODULE_SS = 1,
  Version_bt_7e_ModuleType_Version_bt_7e_ModuleType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Version_bt_7e_ModuleType_Version_bt_7e_ModuleType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Version_bt_7e_ModuleType_IsValid(int value);
const Version_bt_7e_ModuleType Version_bt_7e_ModuleType_ModuleType_MIN = Version_bt_7e_ModuleType_MODULE_BT;
const Version_bt_7e_ModuleType Version_bt_7e_ModuleType_ModuleType_MAX = Version_bt_7e_ModuleType_MODULE_SS;
const int Version_bt_7e_ModuleType_ModuleType_ARRAYSIZE = Version_bt_7e_ModuleType_ModuleType_MAX + 1;

enum Misc_report_ss_7b_LdupType {
  Misc_report_ss_7b_LdupType_LDUP_NOT_PRESSED = 0,
  Misc_report_ss_7b_LdupType_LDUP_PRESSED = 1,
  Misc_report_ss_7b_LdupType_Misc_report_ss_7b_LdupType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_ss_7b_LdupType_Misc_report_ss_7b_LdupType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_ss_7b_LdupType_IsValid(int value);
const Misc_report_ss_7b_LdupType Misc_report_ss_7b_LdupType_LdupType_MIN = Misc_report_ss_7b_LdupType_LDUP_NOT_PRESSED;
const Misc_report_ss_7b_LdupType Misc_report_ss_7b_LdupType_LdupType_MAX = Misc_report_ss_7b_LdupType_LDUP_PRESSED;
const int Misc_report_ss_7b_LdupType_LdupType_ARRAYSIZE = Misc_report_ss_7b_LdupType_LdupType_MAX + 1;

enum Misc_report_ss_7b_LdrhtType {
  Misc_report_ss_7b_LdrhtType_LDRHT_NOT_PRESSED = 0,
  Misc_report_ss_7b_LdrhtType_LDRHT_PRESSED = 1,
  Misc_report_ss_7b_LdrhtType_Misc_report_ss_7b_LdrhtType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_ss_7b_LdrhtType_Misc_report_ss_7b_LdrhtType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_ss_7b_LdrhtType_IsValid(int value);
const Misc_report_ss_7b_LdrhtType Misc_report_ss_7b_LdrhtType_LdrhtType_MIN = Misc_report_ss_7b_LdrhtType_LDRHT_NOT_PRESSED;
const Misc_report_ss_7b_LdrhtType Misc_report_ss_7b_LdrhtType_LdrhtType_MAX = Misc_report_ss_7b_LdrhtType_LDRHT_PRESSED;
const int Misc_report_ss_7b_LdrhtType_LdrhtType_ARRAYSIZE = Misc_report_ss_7b_LdrhtType_LdrhtType_MAX + 1;

enum Misc_report_ss_7b_LdokType {
  Misc_report_ss_7b_LdokType_LDOK_NOT_PRESSED = 0,
  Misc_report_ss_7b_LdokType_LDOK_PRESSED = 1,
  Misc_report_ss_7b_LdokType_Misc_report_ss_7b_LdokType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_ss_7b_LdokType_Misc_report_ss_7b_LdokType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_ss_7b_LdokType_IsValid(int value);
const Misc_report_ss_7b_LdokType Misc_report_ss_7b_LdokType_LdokType_MIN = Misc_report_ss_7b_LdokType_LDOK_NOT_PRESSED;
const Misc_report_ss_7b_LdokType Misc_report_ss_7b_LdokType_LdokType_MAX = Misc_report_ss_7b_LdokType_LDOK_PRESSED;
const int Misc_report_ss_7b_LdokType_LdokType_ARRAYSIZE = Misc_report_ss_7b_LdokType_LdokType_MAX + 1;

enum Misc_report_ss_7b_LdlftType {
  Misc_report_ss_7b_LdlftType_LDLFT_NOT_PRESSED = 0,
  Misc_report_ss_7b_LdlftType_LDLFT_PRESSED = 1,
  Misc_report_ss_7b_LdlftType_Misc_report_ss_7b_LdlftType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_ss_7b_LdlftType_Misc_report_ss_7b_LdlftType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_ss_7b_LdlftType_IsValid(int value);
const Misc_report_ss_7b_LdlftType Misc_report_ss_7b_LdlftType_LdlftType_MIN = Misc_report_ss_7b_LdlftType_LDLFT_NOT_PRESSED;
const Misc_report_ss_7b_LdlftType Misc_report_ss_7b_LdlftType_LdlftType_MAX = Misc_report_ss_7b_LdlftType_LDLFT_PRESSED;
const int Misc_report_ss_7b_LdlftType_LdlftType_ARRAYSIZE = Misc_report_ss_7b_LdlftType_LdlftType_MAX + 1;

enum Misc_report_ss_7b_LddwnType {
  Misc_report_ss_7b_LddwnType_LDDWN_NOT_PRESSED = 0,
  Misc_report_ss_7b_LddwnType_LDDWN_PRESSED = 1,
  Misc_report_ss_7b_LddwnType_Misc_report_ss_7b_LddwnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_ss_7b_LddwnType_Misc_report_ss_7b_LddwnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_ss_7b_LddwnType_IsValid(int value);
const Misc_report_ss_7b_LddwnType Misc_report_ss_7b_LddwnType_LddwnType_MIN = Misc_report_ss_7b_LddwnType_LDDWN_NOT_PRESSED;
const Misc_report_ss_7b_LddwnType Misc_report_ss_7b_LddwnType_LddwnType_MAX = Misc_report_ss_7b_LddwnType_LDDWN_PRESSED;
const int Misc_report_ss_7b_LddwnType_LddwnType_ARRAYSIZE = Misc_report_ss_7b_LddwnType_LddwnType_MAX + 1;

enum Brake_command_60_EnType {
  Brake_command_60_EnType_EN_DISABLE = 0,
  Brake_command_60_EnType_EN_ENABLED = 1,
  Brake_command_60_EnType_Brake_command_60_EnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_command_60_EnType_Brake_command_60_EnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_command_60_EnType_IsValid(int value);
const Brake_command_60_EnType Brake_command_60_EnType_EnType_MIN = Brake_command_60_EnType_EN_DISABLE;
const Brake_command_60_EnType Brake_command_60_EnType_EnType_MAX = Brake_command_60_EnType_EN_ENABLED;
const int Brake_command_60_EnType_EnType_ARRAYSIZE = Brake_command_60_EnType_EnType_MAX + 1;

enum Brake_command_60_BcmdType {
  Brake_command_60_BcmdType_BCMD_OFF = 0,
  Brake_command_60_BcmdType_BCMD_ON = 1,
  Brake_command_60_BcmdType_Brake_command_60_BcmdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_command_60_BcmdType_Brake_command_60_BcmdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_command_60_BcmdType_IsValid(int value);
const Brake_command_60_BcmdType Brake_command_60_BcmdType_BcmdType_MIN = Brake_command_60_BcmdType_BCMD_OFF;
const Brake_command_60_BcmdType Brake_command_60_BcmdType_BcmdType_MAX = Brake_command_60_BcmdType_BCMD_ON;
const int Brake_command_60_BcmdType_BcmdType_ARRAYSIZE = Brake_command_60_BcmdType_BcmdType_MAX + 1;

enum Brake_report_61_WdcsrcType {
  Brake_report_61_WdcsrcType_WDCSRC_NONE = 0,
  Brake_report_61_WdcsrcType_WDCSRC_OTHER_BRAKE = 1,
  Brake_report_61_WdcsrcType_WDCSRC_OTHER_THROTTLE = 2,
  Brake_report_61_WdcsrcType_WDCSRC_OTHER_STEERING = 3,
  Brake_report_61_WdcsrcType_WDCSRC_BRAKE_COUNTER = 4,
  Brake_report_61_WdcsrcType_WDCSRC_BRAKE_DISABLED = 5,
  Brake_report_61_WdcsrcType_WDCSRC_BRAKE_COMMAND = 6,
  Brake_report_61_WdcsrcType_WDCSRC_BRAKE_REPORT = 7,
  Brake_report_61_WdcsrcType_WDCSRC_THROTTLE_COUNTER = 8,
  Brake_report_61_WdcsrcType_WDCSRC_THROTTLE_DISABLED = 9,
  Brake_report_61_WdcsrcType_WDCSRC_THROTTLE_COMMAND = 10,
  Brake_report_61_WdcsrcType_WDCSRC_THROTTLE_REPORT = 11,
  Brake_report_61_WdcsrcType_WDCSRC_STEERING_COUNTER = 12,
  Brake_report_61_WdcsrcType_WDCSRC_STEERING_DISABLED = 13,
  Brake_report_61_WdcsrcType_WDCSRC_STEERING_COMMAND = 14,
  Brake_report_61_WdcsrcType_WDCSRC_STEERING_REPORT = 15,
  Brake_report_61_WdcsrcType_Brake_report_61_WdcsrcType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_WdcsrcType_Brake_report_61_WdcsrcType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_WdcsrcType_IsValid(int value);
const Brake_report_61_WdcsrcType Brake_report_61_WdcsrcType_WdcsrcType_MIN = Brake_report_61_WdcsrcType_WDCSRC_NONE;
const Brake_report_61_WdcsrcType Brake_report_61_WdcsrcType_WdcsrcType_MAX = Brake_report_61_WdcsrcType_WDCSRC_STEERING_REPORT;
const int Brake_report_61_WdcsrcType_WdcsrcType_ARRAYSIZE = Brake_report_61_WdcsrcType_WdcsrcType_MAX + 1;

enum Brake_report_61_WdcbrkType {
  Brake_report_61_WdcbrkType_WDCBRK_NORMAL = 0,
  Brake_report_61_WdcbrkType_WDCBRK_WDC_APPLYING_BRAKES = 1,
  Brake_report_61_WdcbrkType_Brake_report_61_WdcbrkType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_WdcbrkType_Brake_report_61_WdcbrkType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_WdcbrkType_IsValid(int value);
const Brake_report_61_WdcbrkType Brake_report_61_WdcbrkType_WdcbrkType_MIN = Brake_report_61_WdcbrkType_WDCBRK_NORMAL;
const Brake_report_61_WdcbrkType Brake_report_61_WdcbrkType_WdcbrkType_MAX = Brake_report_61_WdcbrkType_WDCBRK_WDC_APPLYING_BRAKES;
const int Brake_report_61_WdcbrkType_WdcbrkType_ARRAYSIZE = Brake_report_61_WdcbrkType_WdcbrkType_MAX + 1;

enum Brake_report_61_DriverType {
  Brake_report_61_DriverType_DRIVER_NO_ACTIVITY = 0,
  Brake_report_61_DriverType_DRIVER_DRIVER_ACTIVITY = 1,
  Brake_report_61_DriverType_Brake_report_61_DriverType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_DriverType_Brake_report_61_DriverType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_DriverType_IsValid(int value);
const Brake_report_61_DriverType Brake_report_61_DriverType_DriverType_MIN = Brake_report_61_DriverType_DRIVER_NO_ACTIVITY;
const Brake_report_61_DriverType Brake_report_61_DriverType_DriverType_MAX = Brake_report_61_DriverType_DRIVER_DRIVER_ACTIVITY;
const int Brake_report_61_DriverType_DriverType_ARRAYSIZE = Brake_report_61_DriverType_DriverType_MAX + 1;

enum Brake_report_61_FltwdcType {
  Brake_report_61_FltwdcType_FLTWDC_NO_FAULT = 0,
  Brake_report_61_FltwdcType_FLTWDC_FAULT = 1,
  Brake_report_61_FltwdcType_Brake_report_61_FltwdcType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_FltwdcType_Brake_report_61_FltwdcType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_FltwdcType_IsValid(int value);
const Brake_report_61_FltwdcType Brake_report_61_FltwdcType_FltwdcType_MIN = Brake_report_61_FltwdcType_FLTWDC_NO_FAULT;
const Brake_report_61_FltwdcType Brake_report_61_FltwdcType_FltwdcType_MAX = Brake_report_61_FltwdcType_FLTWDC_FAULT;
const int Brake_report_61_FltwdcType_FltwdcType_ARRAYSIZE = Brake_report_61_FltwdcType_FltwdcType_MAX + 1;

enum Brake_report_61_TmoutType {
  Brake_report_61_TmoutType_TMOUT_VALID = 0,
  Brake_report_61_TmoutType_TMOUT_TIMEOUT = 1,
  Brake_report_61_TmoutType_Brake_report_61_TmoutType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_TmoutType_Brake_report_61_TmoutType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_TmoutType_IsValid(int value);
const Brake_report_61_TmoutType Brake_report_61_TmoutType_TmoutType_MIN = Brake_report_61_TmoutType_TMOUT_VALID;
const Brake_report_61_TmoutType Brake_report_61_TmoutType_TmoutType_MAX = Brake_report_61_TmoutType_TMOUT_TIMEOUT;
const int Brake_report_61_TmoutType_TmoutType_ARRAYSIZE = Brake_report_61_TmoutType_TmoutType_MAX + 1;

enum Brake_report_61_FltbooType {
  Brake_report_61_FltbooType_FLTBOO_NO_FAULT = 0,
  Brake_report_61_FltbooType_FLTBOO_FAULT = 1,
  Brake_report_61_FltbooType_Brake_report_61_FltbooType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_FltbooType_Brake_report_61_FltbooType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_FltbooType_IsValid(int value);
const Brake_report_61_FltbooType Brake_report_61_FltbooType_FltbooType_MIN = Brake_report_61_FltbooType_FLTBOO_NO_FAULT;
const Brake_report_61_FltbooType Brake_report_61_FltbooType_FltbooType_MAX = Brake_report_61_FltbooType_FLTBOO_FAULT;
const int Brake_report_61_FltbooType_FltbooType_ARRAYSIZE = Brake_report_61_FltbooType_FltbooType_MAX + 1;

enum Brake_report_61_Flt2Type {
  Brake_report_61_Flt2Type_FLT2_NO_FAULT = 0,
  Brake_report_61_Flt2Type_FLT2_FAULT = 1,
  Brake_report_61_Flt2Type_Brake_report_61_Flt2Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_Flt2Type_Brake_report_61_Flt2Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_Flt2Type_IsValid(int value);
const Brake_report_61_Flt2Type Brake_report_61_Flt2Type_Flt2Type_MIN = Brake_report_61_Flt2Type_FLT2_NO_FAULT;
const Brake_report_61_Flt2Type Brake_report_61_Flt2Type_Flt2Type_MAX = Brake_report_61_Flt2Type_FLT2_FAULT;
const int Brake_report_61_Flt2Type_Flt2Type_ARRAYSIZE = Brake_report_61_Flt2Type_Flt2Type_MAX + 1;

enum Brake_report_61_Flt1Type {
  Brake_report_61_Flt1Type_FLT1_NO_FAULT = 0,
  Brake_report_61_Flt1Type_FLT1_FAULT = 1,
  Brake_report_61_Flt1Type_Brake_report_61_Flt1Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_Flt1Type_Brake_report_61_Flt1Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_Flt1Type_IsValid(int value);
const Brake_report_61_Flt1Type Brake_report_61_Flt1Type_Flt1Type_MIN = Brake_report_61_Flt1Type_FLT1_NO_FAULT;
const Brake_report_61_Flt1Type Brake_report_61_Flt1Type_Flt1Type_MAX = Brake_report_61_Flt1Type_FLT1_FAULT;
const int Brake_report_61_Flt1Type_Flt1Type_ARRAYSIZE = Brake_report_61_Flt1Type_Flt1Type_MAX + 1;

enum Brake_report_61_EnType {
  Brake_report_61_EnType_EN_DISABLED = 0,
  Brake_report_61_EnType_EN_ENABLED = 1,
  Brake_report_61_EnType_Brake_report_61_EnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_EnType_Brake_report_61_EnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_EnType_IsValid(int value);
const Brake_report_61_EnType Brake_report_61_EnType_EnType_MIN = Brake_report_61_EnType_EN_DISABLED;
const Brake_report_61_EnType Brake_report_61_EnType_EnType_MAX = Brake_report_61_EnType_EN_ENABLED;
const int Brake_report_61_EnType_EnType_ARRAYSIZE = Brake_report_61_EnType_EnType_MAX + 1;

enum Brake_report_61_OverrideType {
  Brake_report_61_OverrideType_OVERRIDE_NO_OVERRIDE = 0,
  Brake_report_61_OverrideType_OVERRIDE_DRIVER_OVERRIDE = 1,
  Brake_report_61_OverrideType_Brake_report_61_OverrideType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_OverrideType_Brake_report_61_OverrideType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_OverrideType_IsValid(int value);
const Brake_report_61_OverrideType Brake_report_61_OverrideType_OverrideType_MIN = Brake_report_61_OverrideType_OVERRIDE_NO_OVERRIDE;
const Brake_report_61_OverrideType Brake_report_61_OverrideType_OverrideType_MAX = Brake_report_61_OverrideType_OVERRIDE_DRIVER_OVERRIDE;
const int Brake_report_61_OverrideType_OverrideType_ARRAYSIZE = Brake_report_61_OverrideType_OverrideType_MAX + 1;

enum Brake_report_61_BoType {
  Brake_report_61_BoType_BO_OFF = 0,
  Brake_report_61_BoType_BO_ON = 1,
  Brake_report_61_BoType_Brake_report_61_BoType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_BoType_Brake_report_61_BoType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_BoType_IsValid(int value);
const Brake_report_61_BoType Brake_report_61_BoType_BoType_MIN = Brake_report_61_BoType_BO_OFF;
const Brake_report_61_BoType Brake_report_61_BoType_BoType_MAX = Brake_report_61_BoType_BO_ON;
const int Brake_report_61_BoType_BoType_ARRAYSIZE = Brake_report_61_BoType_BoType_MAX + 1;

enum Brake_report_61_BiType {
  Brake_report_61_BiType_BI_OFF = 0,
  Brake_report_61_BiType_BI_ON = 1,
  Brake_report_61_BiType_Brake_report_61_BiType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_BiType_Brake_report_61_BiType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_BiType_IsValid(int value);
const Brake_report_61_BiType Brake_report_61_BiType_BiType_MIN = Brake_report_61_BiType_BI_OFF;
const Brake_report_61_BiType Brake_report_61_BiType_BiType_MAX = Brake_report_61_BiType_BI_ON;
const int Brake_report_61_BiType_BiType_ARRAYSIZE = Brake_report_61_BiType_BiType_MAX + 1;

enum Brake_report_61_BcType {
  Brake_report_61_BcType_BC_OFF = 0,
  Brake_report_61_BcType_BC_ON = 1,
  Brake_report_61_BcType_Brake_report_61_BcType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brake_report_61_BcType_Brake_report_61_BcType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brake_report_61_BcType_IsValid(int value);
const Brake_report_61_BcType Brake_report_61_BcType_BcType_MIN = Brake_report_61_BcType_BC_OFF;
const Brake_report_61_BcType Brake_report_61_BcType_BcType_MAX = Brake_report_61_BcType_BC_ON;
const int Brake_report_61_BcType_BcType_ARRAYSIZE = Brake_report_61_BcType_BcType_MAX + 1;

enum Throttle_command_62_EnType {
  Throttle_command_62_EnType_EN_DISABLE = 0,
  Throttle_command_62_EnType_EN_ENABLED = 1,
  Throttle_command_62_EnType_Throttle_command_62_EnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Throttle_command_62_EnType_Throttle_command_62_EnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Throttle_command_62_EnType_IsValid(int value);
const Throttle_command_62_EnType Throttle_command_62_EnType_EnType_MIN = Throttle_command_62_EnType_EN_DISABLE;
const Throttle_command_62_EnType Throttle_command_62_EnType_EnType_MAX = Throttle_command_62_EnType_EN_ENABLED;
const int Throttle_command_62_EnType_EnType_ARRAYSIZE = Throttle_command_62_EnType_EnType_MAX + 1;

enum Throttle_report_63_WdcsrcType {
  Throttle_report_63_WdcsrcType_WDCSRC_NONE = 0,
  Throttle_report_63_WdcsrcType_WDCSRC_OTHER_BRAKE = 1,
  Throttle_report_63_WdcsrcType_WDCSRC_OTHER_THROTTLE = 2,
  Throttle_report_63_WdcsrcType_WDCSRC_OTHER_STEERING = 3,
  Throttle_report_63_WdcsrcType_WDCSRC_BRAKE_COUNTER = 4,
  Throttle_report_63_WdcsrcType_WDCSRC_BRAKE_DISABLED = 5,
  Throttle_report_63_WdcsrcType_WDCSRC_BRAKE_COMMAND = 6,
  Throttle_report_63_WdcsrcType_WDCSRC_BRAKE_REPORT = 7,
  Throttle_report_63_WdcsrcType_WDCSRC_THROTTLE_COUNTER = 8,
  Throttle_report_63_WdcsrcType_WDCSRC_THROTTLE_DISABLED = 9,
  Throttle_report_63_WdcsrcType_WDCSRC_THROTTLE_COMMAND = 10,
  Throttle_report_63_WdcsrcType_WDCSRC_THROTTLE_REPORT = 11,
  Throttle_report_63_WdcsrcType_WDCSRC_STEERING_COUNTER = 12,
  Throttle_report_63_WdcsrcType_WDCSRC_STEERING_DISABLED = 13,
  Throttle_report_63_WdcsrcType_WDCSRC_STEERING_COMMAND = 14,
  Throttle_report_63_WdcsrcType_WDCSRC_STEERING_REPORT = 15,
  Throttle_report_63_WdcsrcType_Throttle_report_63_WdcsrcType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Throttle_report_63_WdcsrcType_Throttle_report_63_WdcsrcType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Throttle_report_63_WdcsrcType_IsValid(int value);
const Throttle_report_63_WdcsrcType Throttle_report_63_WdcsrcType_WdcsrcType_MIN = Throttle_report_63_WdcsrcType_WDCSRC_NONE;
const Throttle_report_63_WdcsrcType Throttle_report_63_WdcsrcType_WdcsrcType_MAX = Throttle_report_63_WdcsrcType_WDCSRC_STEERING_REPORT;
const int Throttle_report_63_WdcsrcType_WdcsrcType_ARRAYSIZE = Throttle_report_63_WdcsrcType_WdcsrcType_MAX + 1;

enum Throttle_report_63_DriverType {
  Throttle_report_63_DriverType_DRIVER_NO_ACTIVITY = 0,
  Throttle_report_63_DriverType_DRIVER_DRIVER_ACTIVITY = 1,
  Throttle_report_63_DriverType_Throttle_report_63_DriverType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Throttle_report_63_DriverType_Throttle_report_63_DriverType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Throttle_report_63_DriverType_IsValid(int value);
const Throttle_report_63_DriverType Throttle_report_63_DriverType_DriverType_MIN = Throttle_report_63_DriverType_DRIVER_NO_ACTIVITY;
const Throttle_report_63_DriverType Throttle_report_63_DriverType_DriverType_MAX = Throttle_report_63_DriverType_DRIVER_DRIVER_ACTIVITY;
const int Throttle_report_63_DriverType_DriverType_ARRAYSIZE = Throttle_report_63_DriverType_DriverType_MAX + 1;

enum Throttle_report_63_FltwdcType {
  Throttle_report_63_FltwdcType_FLTWDC_NO_FAULT = 0,
  Throttle_report_63_FltwdcType_FLTWDC_FAULT = 1,
  Throttle_report_63_FltwdcType_Throttle_report_63_FltwdcType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Throttle_report_63_FltwdcType_Throttle_report_63_FltwdcType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Throttle_report_63_FltwdcType_IsValid(int value);
const Throttle_report_63_FltwdcType Throttle_report_63_FltwdcType_FltwdcType_MIN = Throttle_report_63_FltwdcType_FLTWDC_NO_FAULT;
const Throttle_report_63_FltwdcType Throttle_report_63_FltwdcType_FltwdcType_MAX = Throttle_report_63_FltwdcType_FLTWDC_FAULT;
const int Throttle_report_63_FltwdcType_FltwdcType_ARRAYSIZE = Throttle_report_63_FltwdcType_FltwdcType_MAX + 1;

enum Throttle_report_63_TmoutType {
  Throttle_report_63_TmoutType_TMOUT_VALID = 0,
  Throttle_report_63_TmoutType_TMOUT_TIMEOUT = 1,
  Throttle_report_63_TmoutType_Throttle_report_63_TmoutType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Throttle_report_63_TmoutType_Throttle_report_63_TmoutType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Throttle_report_63_TmoutType_IsValid(int value);
const Throttle_report_63_TmoutType Throttle_report_63_TmoutType_TmoutType_MIN = Throttle_report_63_TmoutType_TMOUT_VALID;
const Throttle_report_63_TmoutType Throttle_report_63_TmoutType_TmoutType_MAX = Throttle_report_63_TmoutType_TMOUT_TIMEOUT;
const int Throttle_report_63_TmoutType_TmoutType_ARRAYSIZE = Throttle_report_63_TmoutType_TmoutType_MAX + 1;

enum Throttle_report_63_Flt2Type {
  Throttle_report_63_Flt2Type_FLT2_NO_FAULT = 0,
  Throttle_report_63_Flt2Type_FLT2_FAULT = 1,
  Throttle_report_63_Flt2Type_Throttle_report_63_Flt2Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Throttle_report_63_Flt2Type_Throttle_report_63_Flt2Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Throttle_report_63_Flt2Type_IsValid(int value);
const Throttle_report_63_Flt2Type Throttle_report_63_Flt2Type_Flt2Type_MIN = Throttle_report_63_Flt2Type_FLT2_NO_FAULT;
const Throttle_report_63_Flt2Type Throttle_report_63_Flt2Type_Flt2Type_MAX = Throttle_report_63_Flt2Type_FLT2_FAULT;
const int Throttle_report_63_Flt2Type_Flt2Type_ARRAYSIZE = Throttle_report_63_Flt2Type_Flt2Type_MAX + 1;

enum Throttle_report_63_Flt1Type {
  Throttle_report_63_Flt1Type_FLT1_NO_FAULT = 0,
  Throttle_report_63_Flt1Type_FLT1_FAULT = 1,
  Throttle_report_63_Flt1Type_Throttle_report_63_Flt1Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Throttle_report_63_Flt1Type_Throttle_report_63_Flt1Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Throttle_report_63_Flt1Type_IsValid(int value);
const Throttle_report_63_Flt1Type Throttle_report_63_Flt1Type_Flt1Type_MIN = Throttle_report_63_Flt1Type_FLT1_NO_FAULT;
const Throttle_report_63_Flt1Type Throttle_report_63_Flt1Type_Flt1Type_MAX = Throttle_report_63_Flt1Type_FLT1_FAULT;
const int Throttle_report_63_Flt1Type_Flt1Type_ARRAYSIZE = Throttle_report_63_Flt1Type_Flt1Type_MAX + 1;

enum Throttle_report_63_EnType {
  Throttle_report_63_EnType_EN_DISABLED = 0,
  Throttle_report_63_EnType_EN_ENABLED = 1,
  Throttle_report_63_EnType_Throttle_report_63_EnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Throttle_report_63_EnType_Throttle_report_63_EnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Throttle_report_63_EnType_IsValid(int value);
const Throttle_report_63_EnType Throttle_report_63_EnType_EnType_MIN = Throttle_report_63_EnType_EN_DISABLED;
const Throttle_report_63_EnType Throttle_report_63_EnType_EnType_MAX = Throttle_report_63_EnType_EN_ENABLED;
const int Throttle_report_63_EnType_EnType_ARRAYSIZE = Throttle_report_63_EnType_EnType_MAX + 1;

enum Throttle_report_63_OverrideType {
  Throttle_report_63_OverrideType_OVERRIDE_NO_OVERRIDE = 0,
  Throttle_report_63_OverrideType_OVERRIDE_DRIVER_OVERRIDE = 1,
  Throttle_report_63_OverrideType_Throttle_report_63_OverrideType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Throttle_report_63_OverrideType_Throttle_report_63_OverrideType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Throttle_report_63_OverrideType_IsValid(int value);
const Throttle_report_63_OverrideType Throttle_report_63_OverrideType_OverrideType_MIN = Throttle_report_63_OverrideType_OVERRIDE_NO_OVERRIDE;
const Throttle_report_63_OverrideType Throttle_report_63_OverrideType_OverrideType_MAX = Throttle_report_63_OverrideType_OVERRIDE_DRIVER_OVERRIDE;
const int Throttle_report_63_OverrideType_OverrideType_ARRAYSIZE = Throttle_report_63_OverrideType_OverrideType_MAX + 1;

enum Steering_command_64_EnType {
  Steering_command_64_EnType_EN_DISABLE = 0,
  Steering_command_64_EnType_EN_ENABLED = 1,
  Steering_command_64_EnType_Steering_command_64_EnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_command_64_EnType_Steering_command_64_EnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_command_64_EnType_IsValid(int value);
const Steering_command_64_EnType Steering_command_64_EnType_EnType_MIN = Steering_command_64_EnType_EN_DISABLE;
const Steering_command_64_EnType Steering_command_64_EnType_EnType_MAX = Steering_command_64_EnType_EN_ENABLED;
const int Steering_command_64_EnType_EnType_ARRAYSIZE = Steering_command_64_EnType_EnType_MAX + 1;

enum Steering_report_65_FltwdcType {
  Steering_report_65_FltwdcType_FLTWDC_NO_FAULT = 0,
  Steering_report_65_FltwdcType_FLTWDC_FAULT = 1,
  Steering_report_65_FltwdcType_Steering_report_65_FltwdcType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_FltwdcType_Steering_report_65_FltwdcType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_FltwdcType_IsValid(int value);
const Steering_report_65_FltwdcType Steering_report_65_FltwdcType_FltwdcType_MIN = Steering_report_65_FltwdcType_FLTWDC_NO_FAULT;
const Steering_report_65_FltwdcType Steering_report_65_FltwdcType_FltwdcType_MAX = Steering_report_65_FltwdcType_FLTWDC_FAULT;
const int Steering_report_65_FltwdcType_FltwdcType_ARRAYSIZE = Steering_report_65_FltwdcType_FltwdcType_MAX + 1;

enum Steering_report_65_FltcalType {
  Steering_report_65_FltcalType_FLTCAL_NO_FAULT = 0,
  Steering_report_65_FltcalType_FLTCAL_FAULT = 1,
  Steering_report_65_FltcalType_Steering_report_65_FltcalType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_FltcalType_Steering_report_65_FltcalType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_FltcalType_IsValid(int value);
const Steering_report_65_FltcalType Steering_report_65_FltcalType_FltcalType_MIN = Steering_report_65_FltcalType_FLTCAL_NO_FAULT;
const Steering_report_65_FltcalType Steering_report_65_FltcalType_FltcalType_MAX = Steering_report_65_FltcalType_FLTCAL_FAULT;
const int Steering_report_65_FltcalType_FltcalType_ARRAYSIZE = Steering_report_65_FltcalType_FltcalType_MAX + 1;

enum Steering_report_65_TmoutType {
  Steering_report_65_TmoutType_TMOUT_VALID = 0,
  Steering_report_65_TmoutType_TMOUT_TIMEOUT = 1,
  Steering_report_65_TmoutType_Steering_report_65_TmoutType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_TmoutType_Steering_report_65_TmoutType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_TmoutType_IsValid(int value);
const Steering_report_65_TmoutType Steering_report_65_TmoutType_TmoutType_MIN = Steering_report_65_TmoutType_TMOUT_VALID;
const Steering_report_65_TmoutType Steering_report_65_TmoutType_TmoutType_MAX = Steering_report_65_TmoutType_TMOUT_TIMEOUT;
const int Steering_report_65_TmoutType_TmoutType_ARRAYSIZE = Steering_report_65_TmoutType_TmoutType_MAX + 1;

enum Steering_report_65_Flt2Type {
  Steering_report_65_Flt2Type_FLT2_NO_FAULT = 0,
  Steering_report_65_Flt2Type_FLT2_FAULT = 1,
  Steering_report_65_Flt2Type_Steering_report_65_Flt2Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_Flt2Type_Steering_report_65_Flt2Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_Flt2Type_IsValid(int value);
const Steering_report_65_Flt2Type Steering_report_65_Flt2Type_Flt2Type_MIN = Steering_report_65_Flt2Type_FLT2_NO_FAULT;
const Steering_report_65_Flt2Type Steering_report_65_Flt2Type_Flt2Type_MAX = Steering_report_65_Flt2Type_FLT2_FAULT;
const int Steering_report_65_Flt2Type_Flt2Type_ARRAYSIZE = Steering_report_65_Flt2Type_Flt2Type_MAX + 1;

enum Steering_report_65_Flt1Type {
  Steering_report_65_Flt1Type_FLT1_NO_FAULT = 0,
  Steering_report_65_Flt1Type_FLT1_FAULT = 1,
  Steering_report_65_Flt1Type_Steering_report_65_Flt1Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_Flt1Type_Steering_report_65_Flt1Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_Flt1Type_IsValid(int value);
const Steering_report_65_Flt1Type Steering_report_65_Flt1Type_Flt1Type_MIN = Steering_report_65_Flt1Type_FLT1_NO_FAULT;
const Steering_report_65_Flt1Type Steering_report_65_Flt1Type_Flt1Type_MAX = Steering_report_65_Flt1Type_FLT1_FAULT;
const int Steering_report_65_Flt1Type_Flt1Type_ARRAYSIZE = Steering_report_65_Flt1Type_Flt1Type_MAX + 1;

enum Steering_report_65_EnType {
  Steering_report_65_EnType_EN_DISABLED = 0,
  Steering_report_65_EnType_EN_ENABLED = 1,
  Steering_report_65_EnType_Steering_report_65_EnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_EnType_Steering_report_65_EnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_EnType_IsValid(int value);
const Steering_report_65_EnType Steering_report_65_EnType_EnType_MIN = Steering_report_65_EnType_EN_DISABLED;
const Steering_report_65_EnType Steering_report_65_EnType_EnType_MAX = Steering_report_65_EnType_EN_ENABLED;
const int Steering_report_65_EnType_EnType_ARRAYSIZE = Steering_report_65_EnType_EnType_MAX + 1;

enum Steering_report_65_OverrideType {
  Steering_report_65_OverrideType_OVERRIDE_NO_OVERRIDE = 0,
  Steering_report_65_OverrideType_OVERRIDE_DRIVER_OVERRIDE = 1,
  Steering_report_65_OverrideType_Steering_report_65_OverrideType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_OverrideType_Steering_report_65_OverrideType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_OverrideType_IsValid(int value);
const Steering_report_65_OverrideType Steering_report_65_OverrideType_OverrideType_MIN = Steering_report_65_OverrideType_OVERRIDE_NO_OVERRIDE;
const Steering_report_65_OverrideType Steering_report_65_OverrideType_OverrideType_MAX = Steering_report_65_OverrideType_OVERRIDE_DRIVER_OVERRIDE;
const int Steering_report_65_OverrideType_OverrideType_ARRAYSIZE = Steering_report_65_OverrideType_OverrideType_MAX + 1;

enum Gear_command_66_EnType {
  Gear_command_66_EnType_EN_DISABLE = 0,
  Gear_command_66_EnType_EN_ENABLED = 1,
  Gear_command_66_EnType_Gear_command_66_EnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_command_66_EnType_Gear_command_66_EnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_command_66_EnType_IsValid(int value);
const Gear_command_66_EnType Gear_command_66_EnType_EnType_MIN = Gear_command_66_EnType_EN_DISABLE;
const Gear_command_66_EnType Gear_command_66_EnType_EnType_MAX = Gear_command_66_EnType_EN_ENABLED;
const int Gear_command_66_EnType_EnType_ARRAYSIZE = Gear_command_66_EnType_EnType_MAX + 1;

enum Gear_command_66_GcmdType {
  Gear_command_66_GcmdType_GCMD_NONE = 0,
  Gear_command_66_GcmdType_GCMD_PARK = 1,
  Gear_command_66_GcmdType_GCMD_REVERSE = 2,
  Gear_command_66_GcmdType_GCMD_NEUTRAL = 3,
  Gear_command_66_GcmdType_GCMD_DRIVE = 4,
  Gear_command_66_GcmdType_GCMD_LOW = 5,
  Gear_command_66_GcmdType_Gear_command_66_GcmdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_command_66_GcmdType_Gear_command_66_GcmdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_command_66_GcmdType_IsValid(int value);
const Gear_command_66_GcmdType Gear_command_66_GcmdType_GcmdType_MIN = Gear_command_66_GcmdType_GCMD_NONE;
const Gear_command_66_GcmdType Gear_command_66_GcmdType_GcmdType_MAX = Gear_command_66_GcmdType_GCMD_LOW;
const int Gear_command_66_GcmdType_GcmdType_ARRAYSIZE = Gear_command_66_GcmdType_GcmdType_MAX + 1;

enum Gear_report_67_RejectType {
  Gear_report_67_RejectType_REJECT_NOT_REJECTED = 0,
  Gear_report_67_RejectType_REJECT_OVERRIDE = 1,
  Gear_report_67_RejectType_REJECT_SHIFT_IN_PROGRESS = 2,
  Gear_report_67_RejectType_REJECT_REPEAT = 3,
  Gear_report_67_RejectType_REJECT_CMD_ILLEGAL = 4,
  Gear_report_67_RejectType_REJECT_SPEED_NOT_2KPH = 5,
  Gear_report_67_RejectType_REJECT_REJECTED_BY_VEHICLE_TIMEOUT = 6,
  Gear_report_67_RejectType_Gear_report_67_RejectType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_report_67_RejectType_Gear_report_67_RejectType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_report_67_RejectType_IsValid(int value);
const Gear_report_67_RejectType Gear_report_67_RejectType_RejectType_MIN = Gear_report_67_RejectType_REJECT_NOT_REJECTED;
const Gear_report_67_RejectType Gear_report_67_RejectType_RejectType_MAX = Gear_report_67_RejectType_REJECT_REJECTED_BY_VEHICLE_TIMEOUT;
const int Gear_report_67_RejectType_RejectType_ARRAYSIZE = Gear_report_67_RejectType_RejectType_MAX + 1;

enum Gear_report_67_StateType {
  Gear_report_67_StateType_STATE_NONE = 0,
  Gear_report_67_StateType_STATE_PARK = 1,
  Gear_report_67_StateType_STATE_REVERSE = 2,
  Gear_report_67_StateType_STATE_NEUTRAL = 3,
  Gear_report_67_StateType_STATE_DRIVE = 4,
  Gear_report_67_StateType_STATE_LOW = 5,
  Gear_report_67_StateType_Gear_report_67_StateType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_report_67_StateType_Gear_report_67_StateType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_report_67_StateType_IsValid(int value);
const Gear_report_67_StateType Gear_report_67_StateType_StateType_MIN = Gear_report_67_StateType_STATE_NONE;
const Gear_report_67_StateType Gear_report_67_StateType_StateType_MAX = Gear_report_67_StateType_STATE_LOW;
const int Gear_report_67_StateType_StateType_ARRAYSIZE = Gear_report_67_StateType_StateType_MAX + 1;

enum Gear_report_67_FltbusType {
  Gear_report_67_FltbusType_FLTBUS_NO_FAULT = 0,
  Gear_report_67_FltbusType_FLTBUS_FAULT = 1,
  Gear_report_67_FltbusType_Gear_report_67_FltbusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_report_67_FltbusType_Gear_report_67_FltbusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_report_67_FltbusType_IsValid(int value);
const Gear_report_67_FltbusType Gear_report_67_FltbusType_FltbusType_MIN = Gear_report_67_FltbusType_FLTBUS_NO_FAULT;
const Gear_report_67_FltbusType Gear_report_67_FltbusType_FltbusType_MAX = Gear_report_67_FltbusType_FLTBUS_FAULT;
const int Gear_report_67_FltbusType_FltbusType_ARRAYSIZE = Gear_report_67_FltbusType_FltbusType_MAX + 1;

enum Gear_report_67_DriverType {
  Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_WIRE = 0,
  Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_DRIVER = 1,
  Gear_report_67_DriverType_Gear_report_67_DriverType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_report_67_DriverType_Gear_report_67_DriverType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_report_67_DriverType_IsValid(int value);
const Gear_report_67_DriverType Gear_report_67_DriverType_DriverType_MIN = Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_WIRE;
const Gear_report_67_DriverType Gear_report_67_DriverType_DriverType_MAX = Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_DRIVER;
const int Gear_report_67_DriverType_DriverType_ARRAYSIZE = Gear_report_67_DriverType_DriverType_MAX + 1;

enum Gear_report_67_CmdType {
  Gear_report_67_CmdType_CMD_NONE = 0,
  Gear_report_67_CmdType_CMD_PARK = 1,
  Gear_report_67_CmdType_CMD_REVERSE = 2,
  Gear_report_67_CmdType_CMD_NEUTRAL = 3,
  Gear_report_67_CmdType_CMD_DRIVE = 4,
  Gear_report_67_CmdType_CMD_LOW = 5,
  Gear_report_67_CmdType_Gear_report_67_CmdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_report_67_CmdType_Gear_report_67_CmdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_report_67_CmdType_IsValid(int value);
const Gear_report_67_CmdType Gear_report_67_CmdType_CmdType_MIN = Gear_report_67_CmdType_CMD_NONE;
const Gear_report_67_CmdType Gear_report_67_CmdType_CmdType_MAX = Gear_report_67_CmdType_CMD_LOW;
const int Gear_report_67_CmdType_CmdType_ARRAYSIZE = Gear_report_67_CmdType_CmdType_MAX + 1;

enum Turnsignal_command_68_TrncmdType {
  Turnsignal_command_68_TrncmdType_TRNCMD_NONE = 0,
  Turnsignal_command_68_TrncmdType_TRNCMD_LEFT = 1,
  Turnsignal_command_68_TrncmdType_TRNCMD_RIGHT = 2,
  Turnsignal_command_68_TrncmdType_TRNCMD_DOUBLEFLASH = 3,
  Turnsignal_command_68_TrncmdType_Turnsignal_command_68_TrncmdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Turnsignal_command_68_TrncmdType_Turnsignal_command_68_TrncmdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Turnsignal_command_68_TrncmdType_IsValid(int value);
const Turnsignal_command_68_TrncmdType Turnsignal_command_68_TrncmdType_TrncmdType_MIN = Turnsignal_command_68_TrncmdType_TRNCMD_NONE;
const Turnsignal_command_68_TrncmdType Turnsignal_command_68_TrncmdType_TrncmdType_MAX = Turnsignal_command_68_TrncmdType_TRNCMD_DOUBLEFLASH;
const int Turnsignal_command_68_TrncmdType_TrncmdType_ARRAYSIZE = Turnsignal_command_68_TrncmdType_TrncmdType_MAX + 1;

enum Misc_report_69_LdupType {
  Misc_report_69_LdupType_LDUP_NOT_PRESSED = 0,
  Misc_report_69_LdupType_LDUP_PRESSED = 1,
  Misc_report_69_LdupType_Misc_report_69_LdupType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_LdupType_Misc_report_69_LdupType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_LdupType_IsValid(int value);
const Misc_report_69_LdupType Misc_report_69_LdupType_LdupType_MIN = Misc_report_69_LdupType_LDUP_NOT_PRESSED;
const Misc_report_69_LdupType Misc_report_69_LdupType_LdupType_MAX = Misc_report_69_LdupType_LDUP_PRESSED;
const int Misc_report_69_LdupType_LdupType_ARRAYSIZE = Misc_report_69_LdupType_LdupType_MAX + 1;

enum Misc_report_69_LdrhtType {
  Misc_report_69_LdrhtType_LDRHT_NOT_PRESSED = 0,
  Misc_report_69_LdrhtType_LDRHT_PRESSED = 1,
  Misc_report_69_LdrhtType_Misc_report_69_LdrhtType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_LdrhtType_Misc_report_69_LdrhtType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_LdrhtType_IsValid(int value);
const Misc_report_69_LdrhtType Misc_report_69_LdrhtType_LdrhtType_MIN = Misc_report_69_LdrhtType_LDRHT_NOT_PRESSED;
const Misc_report_69_LdrhtType Misc_report_69_LdrhtType_LdrhtType_MAX = Misc_report_69_LdrhtType_LDRHT_PRESSED;
const int Misc_report_69_LdrhtType_LdrhtType_ARRAYSIZE = Misc_report_69_LdrhtType_LdrhtType_MAX + 1;

enum Misc_report_69_LdokType {
  Misc_report_69_LdokType_LDOK_NOT_PRESSED = 0,
  Misc_report_69_LdokType_LDOK_PRESSED = 1,
  Misc_report_69_LdokType_Misc_report_69_LdokType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_LdokType_Misc_report_69_LdokType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_LdokType_IsValid(int value);
const Misc_report_69_LdokType Misc_report_69_LdokType_LdokType_MIN = Misc_report_69_LdokType_LDOK_NOT_PRESSED;
const Misc_report_69_LdokType Misc_report_69_LdokType_LdokType_MAX = Misc_report_69_LdokType_LDOK_PRESSED;
const int Misc_report_69_LdokType_LdokType_ARRAYSIZE = Misc_report_69_LdokType_LdokType_MAX + 1;

enum Misc_report_69_LdlftType {
  Misc_report_69_LdlftType_LDLFT_NOT_PRESSED = 0,
  Misc_report_69_LdlftType_LDLFT_PRESSED = 1,
  Misc_report_69_LdlftType_Misc_report_69_LdlftType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_LdlftType_Misc_report_69_LdlftType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_LdlftType_IsValid(int value);
const Misc_report_69_LdlftType Misc_report_69_LdlftType_LdlftType_MIN = Misc_report_69_LdlftType_LDLFT_NOT_PRESSED;
const Misc_report_69_LdlftType Misc_report_69_LdlftType_LdlftType_MAX = Misc_report_69_LdlftType_LDLFT_PRESSED;
const int Misc_report_69_LdlftType_LdlftType_ARRAYSIZE = Misc_report_69_LdlftType_LdlftType_MAX + 1;

enum Misc_report_69_LddwnType {
  Misc_report_69_LddwnType_LDDWN_NOT_PRESSED = 0,
  Misc_report_69_LddwnType_LDDWN_PRESSED = 1,
  Misc_report_69_LddwnType_Misc_report_69_LddwnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_LddwnType_Misc_report_69_LddwnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_LddwnType_IsValid(int value);
const Misc_report_69_LddwnType Misc_report_69_LddwnType_LddwnType_MIN = Misc_report_69_LddwnType_LDDWN_NOT_PRESSED;
const Misc_report_69_LddwnType Misc_report_69_LddwnType_LddwnType_MAX = Misc_report_69_LddwnType_LDDWN_PRESSED;
const int Misc_report_69_LddwnType_LddwnType_ARRAYSIZE = Misc_report_69_LddwnType_LddwnType_MAX + 1;

enum Misc_report_69_CnclType {
  Misc_report_69_CnclType_CNCL_NOT_PRESSED = 0,
  Misc_report_69_CnclType_CNCL_PRESSED = 1,
  Misc_report_69_CnclType_Misc_report_69_CnclType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_CnclType_Misc_report_69_CnclType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_CnclType_IsValid(int value);
const Misc_report_69_CnclType Misc_report_69_CnclType_CnclType_MIN = Misc_report_69_CnclType_CNCL_NOT_PRESSED;
const Misc_report_69_CnclType Misc_report_69_CnclType_CnclType_MAX = Misc_report_69_CnclType_CNCL_PRESSED;
const int Misc_report_69_CnclType_CnclType_ARRAYSIZE = Misc_report_69_CnclType_CnclType_MAX + 1;

enum Misc_report_69_ResType {
  Misc_report_69_ResType_RES_NOT_PRESSED = 0,
  Misc_report_69_ResType_RES_PRESSED = 1,
  Misc_report_69_ResType_Misc_report_69_ResType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_ResType_Misc_report_69_ResType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_ResType_IsValid(int value);
const Misc_report_69_ResType Misc_report_69_ResType_ResType_MIN = Misc_report_69_ResType_RES_NOT_PRESSED;
const Misc_report_69_ResType Misc_report_69_ResType_ResType_MAX = Misc_report_69_ResType_RES_PRESSED;
const int Misc_report_69_ResType_ResType_ARRAYSIZE = Misc_report_69_ResType_ResType_MAX + 1;

enum Misc_report_69_OnType {
  Misc_report_69_OnType_ON_NOT_PRESSED = 0,
  Misc_report_69_OnType_ON_PRESSED = 1,
  Misc_report_69_OnType_Misc_report_69_OnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_OnType_Misc_report_69_OnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_OnType_IsValid(int value);
const Misc_report_69_OnType Misc_report_69_OnType_OnType_MIN = Misc_report_69_OnType_ON_NOT_PRESSED;
const Misc_report_69_OnType Misc_report_69_OnType_OnType_MAX = Misc_report_69_OnType_ON_PRESSED;
const int Misc_report_69_OnType_OnType_ARRAYSIZE = Misc_report_69_OnType_OnType_MAX + 1;

enum Misc_report_69_OffType {
  Misc_report_69_OffType_OFF_NOT_PRESSED = 0,
  Misc_report_69_OffType_OFF_PRESSED = 1,
  Misc_report_69_OffType_Misc_report_69_OffType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_OffType_Misc_report_69_OffType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_OffType_IsValid(int value);
const Misc_report_69_OffType Misc_report_69_OffType_OffType_MIN = Misc_report_69_OffType_OFF_NOT_PRESSED;
const Misc_report_69_OffType Misc_report_69_OffType_OffType_MAX = Misc_report_69_OffType_OFF_PRESSED;
const int Misc_report_69_OffType_OffType_ARRAYSIZE = Misc_report_69_OffType_OffType_MAX + 1;

enum Misc_report_69_BeltpType {
  Misc_report_69_BeltpType_BELTP_UNBUCKLED = 0,
  Misc_report_69_BeltpType_BELTP_BUCKLED = 1,
  Misc_report_69_BeltpType_Misc_report_69_BeltpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_BeltpType_Misc_report_69_BeltpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_BeltpType_IsValid(int value);
const Misc_report_69_BeltpType Misc_report_69_BeltpType_BeltpType_MIN = Misc_report_69_BeltpType_BELTP_UNBUCKLED;
const Misc_report_69_BeltpType Misc_report_69_BeltpType_BeltpType_MAX = Misc_report_69_BeltpType_BELTP_BUCKLED;
const int Misc_report_69_BeltpType_BeltpType_ARRAYSIZE = Misc_report_69_BeltpType_BeltpType_MAX + 1;

enum Misc_report_69_BeltdType {
  Misc_report_69_BeltdType_BELTD_UNBUCKLED = 0,
  Misc_report_69_BeltdType_BELTD_BUCKLED = 1,
  Misc_report_69_BeltdType_Misc_report_69_BeltdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_BeltdType_Misc_report_69_BeltdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_BeltdType_IsValid(int value);
const Misc_report_69_BeltdType Misc_report_69_BeltdType_BeltdType_MIN = Misc_report_69_BeltdType_BELTD_UNBUCKLED;
const Misc_report_69_BeltdType Misc_report_69_BeltdType_BeltdType_MAX = Misc_report_69_BeltdType_BELTD_BUCKLED;
const int Misc_report_69_BeltdType_BeltdType_ARRAYSIZE = Misc_report_69_BeltdType_BeltdType_MAX + 1;

enum Misc_report_69_PabagType {
  Misc_report_69_PabagType_PABAG_DISABLED = 0,
  Misc_report_69_PabagType_PABAG_ENABLED = 1,
  Misc_report_69_PabagType_Misc_report_69_PabagType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_PabagType_Misc_report_69_PabagType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_PabagType_IsValid(int value);
const Misc_report_69_PabagType Misc_report_69_PabagType_PabagType_MIN = Misc_report_69_PabagType_PABAG_DISABLED;
const Misc_report_69_PabagType Misc_report_69_PabagType_PabagType_MAX = Misc_report_69_PabagType_PABAG_ENABLED;
const int Misc_report_69_PabagType_PabagType_ARRAYSIZE = Misc_report_69_PabagType_PabagType_MAX + 1;

enum Misc_report_69_PdectType {
  Misc_report_69_PdectType_PDECT_NO_PASSENGER = 0,
  Misc_report_69_PdectType_PDECT_PASSENGER = 1,
  Misc_report_69_PdectType_Misc_report_69_PdectType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_PdectType_Misc_report_69_PdectType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_PdectType_IsValid(int value);
const Misc_report_69_PdectType Misc_report_69_PdectType_PdectType_MIN = Misc_report_69_PdectType_PDECT_NO_PASSENGER;
const Misc_report_69_PdectType Misc_report_69_PdectType_PdectType_MAX = Misc_report_69_PdectType_PDECT_PASSENGER;
const int Misc_report_69_PdectType_PdectType_ARRAYSIZE = Misc_report_69_PdectType_PdectType_MAX + 1;

enum Misc_report_69_TrunkType {
  Misc_report_69_TrunkType_TRUNK_CLOSED = 0,
  Misc_report_69_TrunkType_TRUNK_OPEN = 1,
  Misc_report_69_TrunkType_Misc_report_69_TrunkType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_TrunkType_Misc_report_69_TrunkType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_TrunkType_IsValid(int value);
const Misc_report_69_TrunkType Misc_report_69_TrunkType_TrunkType_MIN = Misc_report_69_TrunkType_TRUNK_CLOSED;
const Misc_report_69_TrunkType Misc_report_69_TrunkType_TrunkType_MAX = Misc_report_69_TrunkType_TRUNK_OPEN;
const int Misc_report_69_TrunkType_TrunkType_ARRAYSIZE = Misc_report_69_TrunkType_TrunkType_MAX + 1;

enum Misc_report_69_HoodType {
  Misc_report_69_HoodType_HOOD_CLOSED = 0,
  Misc_report_69_HoodType_HOOD_OPEN = 1,
  Misc_report_69_HoodType_Misc_report_69_HoodType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_HoodType_Misc_report_69_HoodType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_HoodType_IsValid(int value);
const Misc_report_69_HoodType Misc_report_69_HoodType_HoodType_MIN = Misc_report_69_HoodType_HOOD_CLOSED;
const Misc_report_69_HoodType Misc_report_69_HoodType_HoodType_MAX = Misc_report_69_HoodType_HOOD_OPEN;
const int Misc_report_69_HoodType_HoodType_ARRAYSIZE = Misc_report_69_HoodType_HoodType_MAX + 1;

enum Misc_report_69_DoorrType {
  Misc_report_69_DoorrType_DOORR_CLOSED = 0,
  Misc_report_69_DoorrType_DOORR_OPEN = 1,
  Misc_report_69_DoorrType_Misc_report_69_DoorrType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_DoorrType_Misc_report_69_DoorrType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_DoorrType_IsValid(int value);
const Misc_report_69_DoorrType Misc_report_69_DoorrType_DoorrType_MIN = Misc_report_69_DoorrType_DOORR_CLOSED;
const Misc_report_69_DoorrType Misc_report_69_DoorrType_DoorrType_MAX = Misc_report_69_DoorrType_DOORR_OPEN;
const int Misc_report_69_DoorrType_DoorrType_ARRAYSIZE = Misc_report_69_DoorrType_DoorrType_MAX + 1;

enum Misc_report_69_DoorpType {
  Misc_report_69_DoorpType_DOORP_CLOSED = 0,
  Misc_report_69_DoorpType_DOORP_OPEN = 1,
  Misc_report_69_DoorpType_Misc_report_69_DoorpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_DoorpType_Misc_report_69_DoorpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_DoorpType_IsValid(int value);
const Misc_report_69_DoorpType Misc_report_69_DoorpType_DoorpType_MIN = Misc_report_69_DoorpType_DOORP_CLOSED;
const Misc_report_69_DoorpType Misc_report_69_DoorpType_DoorpType_MAX = Misc_report_69_DoorpType_DOORP_OPEN;
const int Misc_report_69_DoorpType_DoorpType_ARRAYSIZE = Misc_report_69_DoorpType_DoorpType_MAX + 1;

enum Misc_report_69_DoorlType {
  Misc_report_69_DoorlType_DOORL_CLOSED = 0,
  Misc_report_69_DoorlType_DOORL_OPEN = 1,
  Misc_report_69_DoorlType_Misc_report_69_DoorlType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_DoorlType_Misc_report_69_DoorlType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_DoorlType_IsValid(int value);
const Misc_report_69_DoorlType Misc_report_69_DoorlType_DoorlType_MIN = Misc_report_69_DoorlType_DOORL_CLOSED;
const Misc_report_69_DoorlType Misc_report_69_DoorlType_DoorlType_MAX = Misc_report_69_DoorlType_DOORL_OPEN;
const int Misc_report_69_DoorlType_DoorlType_ARRAYSIZE = Misc_report_69_DoorlType_DoorlType_MAX + 1;

enum Misc_report_69_DoordType {
  Misc_report_69_DoordType_DOORD_CLOSED = 0,
  Misc_report_69_DoordType_DOORD_OPEN = 1,
  Misc_report_69_DoordType_Misc_report_69_DoordType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_DoordType_Misc_report_69_DoordType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_DoordType_IsValid(int value);
const Misc_report_69_DoordType Misc_report_69_DoordType_DoordType_MIN = Misc_report_69_DoordType_DOORD_CLOSED;
const Misc_report_69_DoordType Misc_report_69_DoordType_DoordType_MAX = Misc_report_69_DoordType_DOORD_OPEN;
const int Misc_report_69_DoordType_DoordType_ARRAYSIZE = Misc_report_69_DoordType_DoordType_MAX + 1;

enum Misc_report_69_WiperType {
  Misc_report_69_WiperType_WIPER_OFF = 0,
  Misc_report_69_WiperType_WIPER_AUTO_OFF = 1,
  Misc_report_69_WiperType_WIPER_OFF_MOVING = 2,
  Misc_report_69_WiperType_WIPER_MANUAL_OFF = 3,
  Misc_report_69_WiperType_WIPER_MANUAL_ON = 4,
  Misc_report_69_WiperType_WIPER_MANUAL_LOW = 5,
  Misc_report_69_WiperType_WIPER_MANUAL_HIGH = 6,
  Misc_report_69_WiperType_WIPER_MIST_FLICK = 7,
  Misc_report_69_WiperType_WIPER_WASH = 8,
  Misc_report_69_WiperType_WIPER_AUTO_LOW = 9,
  Misc_report_69_WiperType_WIPER_AUTO_HIGH = 10,
  Misc_report_69_WiperType_WIPER_COURTESY_WIPE = 11,
  Misc_report_69_WiperType_WIPER_AUTO_ADJUST = 12,
  Misc_report_69_WiperType_WIPER_RESERVED = 13,
  Misc_report_69_WiperType_WIPER_STALLED = 14,
  Misc_report_69_WiperType_WIPER_NO_DATA = 15,
  Misc_report_69_WiperType_Misc_report_69_WiperType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_WiperType_Misc_report_69_WiperType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_WiperType_IsValid(int value);
const Misc_report_69_WiperType Misc_report_69_WiperType_WiperType_MIN = Misc_report_69_WiperType_WIPER_OFF;
const Misc_report_69_WiperType Misc_report_69_WiperType_WiperType_MAX = Misc_report_69_WiperType_WIPER_NO_DATA;
const int Misc_report_69_WiperType_WiperType_ARRAYSIZE = Misc_report_69_WiperType_WiperType_MAX + 1;

enum Misc_report_69_TrnstatType {
  Misc_report_69_TrnstatType_TRNSTAT_NONE = 0,
  Misc_report_69_TrnstatType_TRNSTAT_LEFT = 1,
  Misc_report_69_TrnstatType_TRNSTAT_RIGHT = 2,
  Misc_report_69_TrnstatType_Misc_report_69_TrnstatType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_TrnstatType_Misc_report_69_TrnstatType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_TrnstatType_IsValid(int value);
const Misc_report_69_TrnstatType Misc_report_69_TrnstatType_TrnstatType_MIN = Misc_report_69_TrnstatType_TRNSTAT_NONE;
const Misc_report_69_TrnstatType Misc_report_69_TrnstatType_TrnstatType_MAX = Misc_report_69_TrnstatType_TRNSTAT_RIGHT;
const int Misc_report_69_TrnstatType_TrnstatType_ARRAYSIZE = Misc_report_69_TrnstatType_TrnstatType_MAX + 1;

enum Misc_report_69_SincType {
  Misc_report_69_SincType_SINC_NOT_PRESSED = 0,
  Misc_report_69_SincType_SINC_PRESSED = 1,
  Misc_report_69_SincType_Misc_report_69_SincType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_SincType_Misc_report_69_SincType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_SincType_IsValid(int value);
const Misc_report_69_SincType Misc_report_69_SincType_SincType_MIN = Misc_report_69_SincType_SINC_NOT_PRESSED;
const Misc_report_69_SincType Misc_report_69_SincType_SincType_MAX = Misc_report_69_SincType_SINC_PRESSED;
const int Misc_report_69_SincType_SincType_ARRAYSIZE = Misc_report_69_SincType_SincType_MAX + 1;

enum Misc_report_69_SdecType {
  Misc_report_69_SdecType_SDEC_NOT_PRESSED = 0,
  Misc_report_69_SdecType_SDEC_PRESSED = 1,
  Misc_report_69_SdecType_Misc_report_69_SdecType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_SdecType_Misc_report_69_SdecType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_SdecType_IsValid(int value);
const Misc_report_69_SdecType Misc_report_69_SdecType_SdecType_MIN = Misc_report_69_SdecType_SDEC_NOT_PRESSED;
const Misc_report_69_SdecType Misc_report_69_SdecType_SdecType_MAX = Misc_report_69_SdecType_SDEC_PRESSED;
const int Misc_report_69_SdecType_SdecType_ARRAYSIZE = Misc_report_69_SdecType_SdecType_MAX + 1;

enum Misc_report_69_OnoffType {
  Misc_report_69_OnoffType_ONOFF_NOT_PRESSED = 0,
  Misc_report_69_OnoffType_ONOFF_PRESSED = 1,
  Misc_report_69_OnoffType_Misc_report_69_OnoffType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_OnoffType_Misc_report_69_OnoffType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_OnoffType_IsValid(int value);
const Misc_report_69_OnoffType Misc_report_69_OnoffType_OnoffType_MIN = Misc_report_69_OnoffType_ONOFF_NOT_PRESSED;
const Misc_report_69_OnoffType Misc_report_69_OnoffType_OnoffType_MAX = Misc_report_69_OnoffType_ONOFF_PRESSED;
const int Misc_report_69_OnoffType_OnoffType_ARRAYSIZE = Misc_report_69_OnoffType_OnoffType_MAX + 1;

enum Misc_report_69_LkaenType {
  Misc_report_69_LkaenType_LKAEN_NOT_PRESSED = 0,
  Misc_report_69_LkaenType_LKAEN_PRESSED = 1,
  Misc_report_69_LkaenType_Misc_report_69_LkaenType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_LkaenType_Misc_report_69_LkaenType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_LkaenType_IsValid(int value);
const Misc_report_69_LkaenType Misc_report_69_LkaenType_LkaenType_MIN = Misc_report_69_LkaenType_LKAEN_NOT_PRESSED;
const Misc_report_69_LkaenType Misc_report_69_LkaenType_LkaenType_MAX = Misc_report_69_LkaenType_LKAEN_PRESSED;
const int Misc_report_69_LkaenType_LkaenType_ARRAYSIZE = Misc_report_69_LkaenType_LkaenType_MAX + 1;

enum Misc_report_69_HibeamType {
  Misc_report_69_HibeamType_HIBEAM_NULL = 0,
  Misc_report_69_HibeamType_HIBEAM_FLASH_TO_PASS = 1,
  Misc_report_69_HibeamType_HIBEAM_HIGH = 2,
  Misc_report_69_HibeamType_Misc_report_69_HibeamType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_HibeamType_Misc_report_69_HibeamType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_HibeamType_IsValid(int value);
const Misc_report_69_HibeamType Misc_report_69_HibeamType_HibeamType_MIN = Misc_report_69_HibeamType_HIBEAM_NULL;
const Misc_report_69_HibeamType Misc_report_69_HibeamType_HibeamType_MAX = Misc_report_69_HibeamType_HIBEAM_HIGH;
const int Misc_report_69_HibeamType_HibeamType_ARRAYSIZE = Misc_report_69_HibeamType_HibeamType_MAX + 1;

enum Misc_report_69_GincType {
  Misc_report_69_GincType_GINC_NOT_PRESSED = 0,
  Misc_report_69_GincType_GINC_PRESSED = 1,
  Misc_report_69_GincType_Misc_report_69_GincType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_GincType_Misc_report_69_GincType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_GincType_IsValid(int value);
const Misc_report_69_GincType Misc_report_69_GincType_GincType_MIN = Misc_report_69_GincType_GINC_NOT_PRESSED;
const Misc_report_69_GincType Misc_report_69_GincType_GincType_MAX = Misc_report_69_GincType_GINC_PRESSED;
const int Misc_report_69_GincType_GincType_ARRAYSIZE = Misc_report_69_GincType_GincType_MAX + 1;

enum Misc_report_69_GdecType {
  Misc_report_69_GdecType_GDEC_NOT_PRESSED = 0,
  Misc_report_69_GdecType_GDEC_PRESSED = 1,
  Misc_report_69_GdecType_Misc_report_69_GdecType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_GdecType_Misc_report_69_GdecType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_GdecType_IsValid(int value);
const Misc_report_69_GdecType Misc_report_69_GdecType_GdecType_MIN = Misc_report_69_GdecType_GDEC_NOT_PRESSED;
const Misc_report_69_GdecType Misc_report_69_GdecType_GdecType_MAX = Misc_report_69_GdecType_GDEC_PRESSED;
const int Misc_report_69_GdecType_GdecType_ARRAYSIZE = Misc_report_69_GdecType_GdecType_MAX + 1;

enum Misc_report_69_FltbusType {
  Misc_report_69_FltbusType_FLTBUS_NO_FAULT = 0,
  Misc_report_69_FltbusType_FLTBUS_FAULT = 1,
  Misc_report_69_FltbusType_Misc_report_69_FltbusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_FltbusType_Misc_report_69_FltbusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_FltbusType_IsValid(int value);
const Misc_report_69_FltbusType Misc_report_69_FltbusType_FltbusType_MIN = Misc_report_69_FltbusType_FLTBUS_NO_FAULT;
const Misc_report_69_FltbusType Misc_report_69_FltbusType_FltbusType_MAX = Misc_report_69_FltbusType_FLTBUS_FAULT;
const int Misc_report_69_FltbusType_FltbusType_ARRAYSIZE = Misc_report_69_FltbusType_FltbusType_MAX + 1;

enum Misc_report_69_RescnclType {
  Misc_report_69_RescnclType_RESCNCL_NOT_PRESSED = 0,
  Misc_report_69_RescnclType_RESCNCL_PRESSED = 1,
  Misc_report_69_RescnclType_Misc_report_69_RescnclType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_RescnclType_Misc_report_69_RescnclType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_RescnclType_IsValid(int value);
const Misc_report_69_RescnclType Misc_report_69_RescnclType_RescnclType_MIN = Misc_report_69_RescnclType_RESCNCL_NOT_PRESSED;
const Misc_report_69_RescnclType Misc_report_69_RescnclType_RescnclType_MAX = Misc_report_69_RescnclType_RESCNCL_PRESSED;
const int Misc_report_69_RescnclType_RescnclType_ARRAYSIZE = Misc_report_69_RescnclType_RescnclType_MAX + 1;

enum Misc_report_69_AmbientType {
  Misc_report_69_AmbientType_AMBIENT_DARK = 0,
  Misc_report_69_AmbientType_AMBIENT_LIGHT = 1,
  Misc_report_69_AmbientType_AMBIENT_TWILIGHT = 2,
  Misc_report_69_AmbientType_AMBIENT_TUNNEL_ON = 3,
  Misc_report_69_AmbientType_AMBIENT_TUNNEL_OFF = 4,
  Misc_report_69_AmbientType_AMBIENT_NO_DATA = 7,
  Misc_report_69_AmbientType_Misc_report_69_AmbientType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Misc_report_69_AmbientType_Misc_report_69_AmbientType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Misc_report_69_AmbientType_IsValid(int value);
const Misc_report_69_AmbientType Misc_report_69_AmbientType_AmbientType_MIN = Misc_report_69_AmbientType_AMBIENT_DARK;
const Misc_report_69_AmbientType Misc_report_69_AmbientType_AmbientType_MAX = Misc_report_69_AmbientType_AMBIENT_NO_DATA;
const int Misc_report_69_AmbientType_AmbientType_ARRAYSIZE = Misc_report_69_AmbientType_AmbientType_MAX + 1;

enum Gps_1_report_6d_ValidType {
  Gps_1_report_6d_ValidType_VALID_INVALID = 0,
  Gps_1_report_6d_ValidType_VALID_VALID = 1,
  Gps_1_report_6d_ValidType_Gps_1_report_6d_ValidType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gps_1_report_6d_ValidType_Gps_1_report_6d_ValidType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gps_1_report_6d_ValidType_IsValid(int value);
const Gps_1_report_6d_ValidType Gps_1_report_6d_ValidType_ValidType_MIN = Gps_1_report_6d_ValidType_VALID_INVALID;
const Gps_1_report_6d_ValidType Gps_1_report_6d_ValidType_ValidType_MAX = Gps_1_report_6d_ValidType_VALID_VALID;
const int Gps_1_report_6d_ValidType_ValidType_ARRAYSIZE = Gps_1_report_6d_ValidType_ValidType_MAX + 1;

enum Gps_2_report_6e_InfType {
  Gps_2_report_6e_InfType_INF_ACTUAL_POSITION = 0,
  Gps_2_report_6e_InfType_INF_INFERRED_POSITION = 1,
  Gps_2_report_6e_InfType_Gps_2_report_6e_InfType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gps_2_report_6e_InfType_Gps_2_report_6e_InfType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gps_2_report_6e_InfType_IsValid(int value);
const Gps_2_report_6e_InfType Gps_2_report_6e_InfType_InfType_MIN = Gps_2_report_6e_InfType_INF_ACTUAL_POSITION;
const Gps_2_report_6e_InfType Gps_2_report_6e_InfType_InfType_MAX = Gps_2_report_6e_InfType_INF_INFERRED_POSITION;
const int Gps_2_report_6e_InfType_InfType_ARRAYSIZE = Gps_2_report_6e_InfType_InfType_MAX + 1;

enum Gps_2_report_6e_FltgpsType {
  Gps_2_report_6e_FltgpsType_FLTGPS_NO_FAULT = 0,
  Gps_2_report_6e_FltgpsType_FLTGPS_FAULT = 1,
  Gps_2_report_6e_FltgpsType_Gps_2_report_6e_FltgpsType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gps_2_report_6e_FltgpsType_Gps_2_report_6e_FltgpsType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gps_2_report_6e_FltgpsType_IsValid(int value);
const Gps_2_report_6e_FltgpsType Gps_2_report_6e_FltgpsType_FltgpsType_MIN = Gps_2_report_6e_FltgpsType_FLTGPS_NO_FAULT;
const Gps_2_report_6e_FltgpsType Gps_2_report_6e_FltgpsType_FltgpsType_MAX = Gps_2_report_6e_FltgpsType_FLTGPS_FAULT;
const int Gps_2_report_6e_FltgpsType_FltgpsType_ARRAYSIZE = Gps_2_report_6e_FltgpsType_FltgpsType_MAX + 1;

enum Gps_3_report_6f_QualityType {
  Gps_3_report_6f_QualityType_QUALITY_NO_FIX = 0,
  Gps_3_report_6f_QualityType_QUALITY_2D_FIX = 1,
  Gps_3_report_6f_QualityType_QUALITY_3D_FIX = 2,
  Gps_3_report_6f_QualityType_Gps_3_report_6f_QualityType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gps_3_report_6f_QualityType_Gps_3_report_6f_QualityType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gps_3_report_6f_QualityType_IsValid(int value);
const Gps_3_report_6f_QualityType Gps_3_report_6f_QualityType_QualityType_MIN = Gps_3_report_6f_QualityType_QUALITY_NO_FIX;
const Gps_3_report_6f_QualityType Gps_3_report_6f_QualityType_QualityType_MAX = Gps_3_report_6f_QualityType_QUALITY_3D_FIX;
const int Gps_3_report_6f_QualityType_QualityType_ARRAYSIZE = Gps_3_report_6f_QualityType_QualityType_MAX + 1;

enum Brakeinfo_report_74_TraceType {
  Brakeinfo_report_74_TraceType_TRACE_DISABLED = 0,
  Brakeinfo_report_74_TraceType_TRACE_ENABLED = 1,
  Brakeinfo_report_74_TraceType_Brakeinfo_report_74_TraceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brakeinfo_report_74_TraceType_Brakeinfo_report_74_TraceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brakeinfo_report_74_TraceType_IsValid(int value);
const Brakeinfo_report_74_TraceType Brakeinfo_report_74_TraceType_TraceType_MIN = Brakeinfo_report_74_TraceType_TRACE_DISABLED;
const Brakeinfo_report_74_TraceType Brakeinfo_report_74_TraceType_TraceType_MAX = Brakeinfo_report_74_TraceType_TRACE_ENABLED;
const int Brakeinfo_report_74_TraceType_TraceType_ARRAYSIZE = Brakeinfo_report_74_TraceType_TraceType_MAX + 1;

enum Brakeinfo_report_74_TracaType {
  Brakeinfo_report_74_TracaType_TRACA_INACTIVE = 0,
  Brakeinfo_report_74_TracaType_TRACA_ACTIVE = 1,
  Brakeinfo_report_74_TracaType_Brakeinfo_report_74_TracaType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brakeinfo_report_74_TracaType_Brakeinfo_report_74_TracaType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brakeinfo_report_74_TracaType_IsValid(int value);
const Brakeinfo_report_74_TracaType Brakeinfo_report_74_TracaType_TracaType_MIN = Brakeinfo_report_74_TracaType_TRACA_INACTIVE;
const Brakeinfo_report_74_TracaType Brakeinfo_report_74_TracaType_TracaType_MAX = Brakeinfo_report_74_TracaType_TRACA_ACTIVE;
const int Brakeinfo_report_74_TracaType_TracaType_ARRAYSIZE = Brakeinfo_report_74_TracaType_TracaType_MAX + 1;

enum Brakeinfo_report_74_StabeType {
  Brakeinfo_report_74_StabeType_STABE_DISABLED = 0,
  Brakeinfo_report_74_StabeType_STABE_ENABLED = 1,
  Brakeinfo_report_74_StabeType_Brakeinfo_report_74_StabeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brakeinfo_report_74_StabeType_Brakeinfo_report_74_StabeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brakeinfo_report_74_StabeType_IsValid(int value);
const Brakeinfo_report_74_StabeType Brakeinfo_report_74_StabeType_StabeType_MIN = Brakeinfo_report_74_StabeType_STABE_DISABLED;
const Brakeinfo_report_74_StabeType Brakeinfo_report_74_StabeType_StabeType_MAX = Brakeinfo_report_74_StabeType_STABE_ENABLED;
const int Brakeinfo_report_74_StabeType_StabeType_ARRAYSIZE = Brakeinfo_report_74_StabeType_StabeType_MAX + 1;

enum Brakeinfo_report_74_StabaType {
  Brakeinfo_report_74_StabaType_STABA_INACTIVE = 0,
  Brakeinfo_report_74_StabaType_STABA_ACTIVE = 1,
  Brakeinfo_report_74_StabaType_Brakeinfo_report_74_StabaType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brakeinfo_report_74_StabaType_Brakeinfo_report_74_StabaType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brakeinfo_report_74_StabaType_IsValid(int value);
const Brakeinfo_report_74_StabaType Brakeinfo_report_74_StabaType_StabaType_MIN = Brakeinfo_report_74_StabaType_STABA_INACTIVE;
const Brakeinfo_report_74_StabaType Brakeinfo_report_74_StabaType_StabaType_MAX = Brakeinfo_report_74_StabaType_STABA_ACTIVE;
const int Brakeinfo_report_74_StabaType_StabaType_ARRAYSIZE = Brakeinfo_report_74_StabaType_StabaType_MAX + 1;

enum Brakeinfo_report_74_AbseType {
  Brakeinfo_report_74_AbseType_ABSE_DISABLED = 0,
  Brakeinfo_report_74_AbseType_ABSE_ENABLED = 1,
  Brakeinfo_report_74_AbseType_Brakeinfo_report_74_AbseType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brakeinfo_report_74_AbseType_Brakeinfo_report_74_AbseType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brakeinfo_report_74_AbseType_IsValid(int value);
const Brakeinfo_report_74_AbseType Brakeinfo_report_74_AbseType_AbseType_MIN = Brakeinfo_report_74_AbseType_ABSE_DISABLED;
const Brakeinfo_report_74_AbseType Brakeinfo_report_74_AbseType_AbseType_MAX = Brakeinfo_report_74_AbseType_ABSE_ENABLED;
const int Brakeinfo_report_74_AbseType_AbseType_ARRAYSIZE = Brakeinfo_report_74_AbseType_AbseType_MAX + 1;

enum Brakeinfo_report_74_AbsaType {
  Brakeinfo_report_74_AbsaType_ABSA_INACTIVE = 0,
  Brakeinfo_report_74_AbsaType_ABSA_ACTIVE = 1,
  Brakeinfo_report_74_AbsaType_Brakeinfo_report_74_AbsaType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brakeinfo_report_74_AbsaType_Brakeinfo_report_74_AbsaType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brakeinfo_report_74_AbsaType_IsValid(int value);
const Brakeinfo_report_74_AbsaType Brakeinfo_report_74_AbsaType_AbsaType_MIN = Brakeinfo_report_74_AbsaType_ABSA_INACTIVE;
const Brakeinfo_report_74_AbsaType Brakeinfo_report_74_AbsaType_AbsaType_MAX = Brakeinfo_report_74_AbsaType_ABSA_ACTIVE;
const int Brakeinfo_report_74_AbsaType_AbsaType_ARRAYSIZE = Brakeinfo_report_74_AbsaType_AbsaType_MAX + 1;

enum Brakeinfo_report_74_PbrakeType {
  Brakeinfo_report_74_PbrakeType_PBRAKE_OFF = 0,
  Brakeinfo_report_74_PbrakeType_PBRAKE_TRANSITION = 1,
  Brakeinfo_report_74_PbrakeType_PBRAKE_ON = 2,
  Brakeinfo_report_74_PbrakeType_PBRAKE_FAULT = 3,
  Brakeinfo_report_74_PbrakeType_Brakeinfo_report_74_PbrakeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brakeinfo_report_74_PbrakeType_Brakeinfo_report_74_PbrakeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brakeinfo_report_74_PbrakeType_IsValid(int value);
const Brakeinfo_report_74_PbrakeType Brakeinfo_report_74_PbrakeType_PbrakeType_MIN = Brakeinfo_report_74_PbrakeType_PBRAKE_OFF;
const Brakeinfo_report_74_PbrakeType Brakeinfo_report_74_PbrakeType_PbrakeType_MAX = Brakeinfo_report_74_PbrakeType_PBRAKE_FAULT;
const int Brakeinfo_report_74_PbrakeType_PbrakeType_ARRAYSIZE = Brakeinfo_report_74_PbrakeType_PbrakeType_MAX + 1;

enum Brakeinfo_report_74_StatnryType {
  Brakeinfo_report_74_StatnryType_STATNRY_MOVING = 0,
  Brakeinfo_report_74_StatnryType_STATNRY_STATIONARY = 1,
  Brakeinfo_report_74_StatnryType_Brakeinfo_report_74_StatnryType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brakeinfo_report_74_StatnryType_Brakeinfo_report_74_StatnryType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brakeinfo_report_74_StatnryType_IsValid(int value);
const Brakeinfo_report_74_StatnryType Brakeinfo_report_74_StatnryType_StatnryType_MIN = Brakeinfo_report_74_StatnryType_STATNRY_MOVING;
const Brakeinfo_report_74_StatnryType Brakeinfo_report_74_StatnryType_StatnryType_MAX = Brakeinfo_report_74_StatnryType_STATNRY_STATIONARY;
const int Brakeinfo_report_74_StatnryType_StatnryType_ARRAYSIZE = Brakeinfo_report_74_StatnryType_StatnryType_MAX + 1;

enum Brakeinfo_report_74_HsastatType {
  Brakeinfo_report_74_HsastatType_HSASTAT_INACTIVE = 0,
  Brakeinfo_report_74_HsastatType_HSASTAT_FINDING_GRADIENT = 1,
  Brakeinfo_report_74_HsastatType_HSASTAT_ACTIVE_PRESSED = 2,
  Brakeinfo_report_74_HsastatType_HSASTAT_ACTIVE_RELEASED = 3,
  Brakeinfo_report_74_HsastatType_HSASTAT_FAST_RELEASE = 4,
  Brakeinfo_report_74_HsastatType_HSASTAT_SLOW_RELEASE = 5,
  Brakeinfo_report_74_HsastatType_HSASTAT_FAILED = 6,
  Brakeinfo_report_74_HsastatType_HSASTAT_UNDEFINED = 7,
  Brakeinfo_report_74_HsastatType_Brakeinfo_report_74_HsastatType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brakeinfo_report_74_HsastatType_Brakeinfo_report_74_HsastatType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brakeinfo_report_74_HsastatType_IsValid(int value);
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74_HsastatType_HsastatType_MIN = Brakeinfo_report_74_HsastatType_HSASTAT_INACTIVE;
const Brakeinfo_report_74_HsastatType Brakeinfo_report_74_HsastatType_HsastatType_MAX = Brakeinfo_report_74_HsastatType_HSASTAT_UNDEFINED;
const int Brakeinfo_report_74_HsastatType_HsastatType_ARRAYSIZE = Brakeinfo_report_74_HsastatType_HsastatType_MAX + 1;

enum Brakeinfo_report_74_HsamodeType {
  Brakeinfo_report_74_HsamodeType_HSAMODE_OFF = 0,
  Brakeinfo_report_74_HsamodeType_HSAMODE_AUTO = 1,
  Brakeinfo_report_74_HsamodeType_HSAMODE_MANUAL = 2,
  Brakeinfo_report_74_HsamodeType_HSAMODE_UNDEFINED = 3,
  Brakeinfo_report_74_HsamodeType_Brakeinfo_report_74_HsamodeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Brakeinfo_report_74_HsamodeType_Brakeinfo_report_74_HsamodeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Brakeinfo_report_74_HsamodeType_IsValid(int value);
const Brakeinfo_report_74_HsamodeType Brakeinfo_report_74_HsamodeType_HsamodeType_MIN = Brakeinfo_report_74_HsamodeType_HSAMODE_OFF;
const Brakeinfo_report_74_HsamodeType Brakeinfo_report_74_HsamodeType_HsamodeType_MAX = Brakeinfo_report_74_HsamodeType_HSAMODE_UNDEFINED;
const int Brakeinfo_report_74_HsamodeType_HsamodeType_ARRAYSIZE = Brakeinfo_report_74_HsamodeType_HsamodeType_MAX + 1;

enum Surround_report_73_EnsnrType {
  Surround_report_73_EnsnrType_ENSNR_DISABLED = 0,
  Surround_report_73_EnsnrType_ENSNR_ENABLED = 1,
  Surround_report_73_EnsnrType_Surround_report_73_EnsnrType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_EnsnrType_Surround_report_73_EnsnrType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_EnsnrType_IsValid(int value);
const Surround_report_73_EnsnrType Surround_report_73_EnsnrType_EnsnrType_MIN = Surround_report_73_EnsnrType_ENSNR_DISABLED;
const Surround_report_73_EnsnrType Surround_report_73_EnsnrType_EnsnrType_MAX = Surround_report_73_EnsnrType_ENSNR_ENABLED;
const int Surround_report_73_EnsnrType_EnsnrType_ARRAYSIZE = Surround_report_73_EnsnrType_EnsnrType_MAX + 1;

enum Surround_report_73_FltsnrType {
  Surround_report_73_FltsnrType_FLTSNR_NO_FAULT = 0,
  Surround_report_73_FltsnrType_FLTSNR_FAULT = 1,
  Surround_report_73_FltsnrType_Surround_report_73_FltsnrType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_FltsnrType_Surround_report_73_FltsnrType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_FltsnrType_IsValid(int value);
const Surround_report_73_FltsnrType Surround_report_73_FltsnrType_FltsnrType_MIN = Surround_report_73_FltsnrType_FLTSNR_NO_FAULT;
const Surround_report_73_FltsnrType Surround_report_73_FltsnrType_FltsnrType_MAX = Surround_report_73_FltsnrType_FLTSNR_FAULT;
const int Surround_report_73_FltsnrType_FltsnrType_ARRAYSIZE = Surround_report_73_FltsnrType_FltsnrType_MAX + 1;

enum Surround_report_73_Sonar11Type {
  Surround_report_73_Sonar11Type_SONAR11_NO_DETECTION = 0,
  Surround_report_73_Sonar11Type_Surround_report_73_Sonar11Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar11Type_Surround_report_73_Sonar11Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar11Type_IsValid(int value);
const Surround_report_73_Sonar11Type Surround_report_73_Sonar11Type_Sonar11Type_MIN = Surround_report_73_Sonar11Type_SONAR11_NO_DETECTION;
const Surround_report_73_Sonar11Type Surround_report_73_Sonar11Type_Sonar11Type_MAX = Surround_report_73_Sonar11Type_SONAR11_NO_DETECTION;
const int Surround_report_73_Sonar11Type_Sonar11Type_ARRAYSIZE = Surround_report_73_Sonar11Type_Sonar11Type_MAX + 1;

enum Surround_report_73_Sonar10Type {
  Surround_report_73_Sonar10Type_SONAR10_NO_DETECTION = 0,
  Surround_report_73_Sonar10Type_Surround_report_73_Sonar10Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar10Type_Surround_report_73_Sonar10Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar10Type_IsValid(int value);
const Surround_report_73_Sonar10Type Surround_report_73_Sonar10Type_Sonar10Type_MIN = Surround_report_73_Sonar10Type_SONAR10_NO_DETECTION;
const Surround_report_73_Sonar10Type Surround_report_73_Sonar10Type_Sonar10Type_MAX = Surround_report_73_Sonar10Type_SONAR10_NO_DETECTION;
const int Surround_report_73_Sonar10Type_Sonar10Type_ARRAYSIZE = Surround_report_73_Sonar10Type_Sonar10Type_MAX + 1;

enum Surround_report_73_Sonar09Type {
  Surround_report_73_Sonar09Type_SONAR09_NO_DETECTION = 0,
  Surround_report_73_Sonar09Type_Surround_report_73_Sonar09Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar09Type_Surround_report_73_Sonar09Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar09Type_IsValid(int value);
const Surround_report_73_Sonar09Type Surround_report_73_Sonar09Type_Sonar09Type_MIN = Surround_report_73_Sonar09Type_SONAR09_NO_DETECTION;
const Surround_report_73_Sonar09Type Surround_report_73_Sonar09Type_Sonar09Type_MAX = Surround_report_73_Sonar09Type_SONAR09_NO_DETECTION;
const int Surround_report_73_Sonar09Type_Sonar09Type_ARRAYSIZE = Surround_report_73_Sonar09Type_Sonar09Type_MAX + 1;

enum Surround_report_73_Sonar08Type {
  Surround_report_73_Sonar08Type_SONAR08_NO_DETECTION = 0,
  Surround_report_73_Sonar08Type_Surround_report_73_Sonar08Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar08Type_Surround_report_73_Sonar08Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar08Type_IsValid(int value);
const Surround_report_73_Sonar08Type Surround_report_73_Sonar08Type_Sonar08Type_MIN = Surround_report_73_Sonar08Type_SONAR08_NO_DETECTION;
const Surround_report_73_Sonar08Type Surround_report_73_Sonar08Type_Sonar08Type_MAX = Surround_report_73_Sonar08Type_SONAR08_NO_DETECTION;
const int Surround_report_73_Sonar08Type_Sonar08Type_ARRAYSIZE = Surround_report_73_Sonar08Type_Sonar08Type_MAX + 1;

enum Surround_report_73_Sonar07Type {
  Surround_report_73_Sonar07Type_SONAR07_NO_DETECTION = 0,
  Surround_report_73_Sonar07Type_Surround_report_73_Sonar07Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar07Type_Surround_report_73_Sonar07Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar07Type_IsValid(int value);
const Surround_report_73_Sonar07Type Surround_report_73_Sonar07Type_Sonar07Type_MIN = Surround_report_73_Sonar07Type_SONAR07_NO_DETECTION;
const Surround_report_73_Sonar07Type Surround_report_73_Sonar07Type_Sonar07Type_MAX = Surround_report_73_Sonar07Type_SONAR07_NO_DETECTION;
const int Surround_report_73_Sonar07Type_Sonar07Type_ARRAYSIZE = Surround_report_73_Sonar07Type_Sonar07Type_MAX + 1;

enum Surround_report_73_Sonar06Type {
  Surround_report_73_Sonar06Type_SONAR06_NO_DETECTION = 0,
  Surround_report_73_Sonar06Type_Surround_report_73_Sonar06Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar06Type_Surround_report_73_Sonar06Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar06Type_IsValid(int value);
const Surround_report_73_Sonar06Type Surround_report_73_Sonar06Type_Sonar06Type_MIN = Surround_report_73_Sonar06Type_SONAR06_NO_DETECTION;
const Surround_report_73_Sonar06Type Surround_report_73_Sonar06Type_Sonar06Type_MAX = Surround_report_73_Sonar06Type_SONAR06_NO_DETECTION;
const int Surround_report_73_Sonar06Type_Sonar06Type_ARRAYSIZE = Surround_report_73_Sonar06Type_Sonar06Type_MAX + 1;

enum Surround_report_73_Sonar05Type {
  Surround_report_73_Sonar05Type_SONAR05_NO_DETECTION = 0,
  Surround_report_73_Sonar05Type_Surround_report_73_Sonar05Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar05Type_Surround_report_73_Sonar05Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar05Type_IsValid(int value);
const Surround_report_73_Sonar05Type Surround_report_73_Sonar05Type_Sonar05Type_MIN = Surround_report_73_Sonar05Type_SONAR05_NO_DETECTION;
const Surround_report_73_Sonar05Type Surround_report_73_Sonar05Type_Sonar05Type_MAX = Surround_report_73_Sonar05Type_SONAR05_NO_DETECTION;
const int Surround_report_73_Sonar05Type_Sonar05Type_ARRAYSIZE = Surround_report_73_Sonar05Type_Sonar05Type_MAX + 1;

enum Surround_report_73_Sonar04Type {
  Surround_report_73_Sonar04Type_SONAR04_NO_DETECTION = 0,
  Surround_report_73_Sonar04Type_Surround_report_73_Sonar04Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar04Type_Surround_report_73_Sonar04Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar04Type_IsValid(int value);
const Surround_report_73_Sonar04Type Surround_report_73_Sonar04Type_Sonar04Type_MIN = Surround_report_73_Sonar04Type_SONAR04_NO_DETECTION;
const Surround_report_73_Sonar04Type Surround_report_73_Sonar04Type_Sonar04Type_MAX = Surround_report_73_Sonar04Type_SONAR04_NO_DETECTION;
const int Surround_report_73_Sonar04Type_Sonar04Type_ARRAYSIZE = Surround_report_73_Sonar04Type_Sonar04Type_MAX + 1;

enum Surround_report_73_Sonar03Type {
  Surround_report_73_Sonar03Type_SONAR03_NO_DETECTION = 0,
  Surround_report_73_Sonar03Type_Surround_report_73_Sonar03Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar03Type_Surround_report_73_Sonar03Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar03Type_IsValid(int value);
const Surround_report_73_Sonar03Type Surround_report_73_Sonar03Type_Sonar03Type_MIN = Surround_report_73_Sonar03Type_SONAR03_NO_DETECTION;
const Surround_report_73_Sonar03Type Surround_report_73_Sonar03Type_Sonar03Type_MAX = Surround_report_73_Sonar03Type_SONAR03_NO_DETECTION;
const int Surround_report_73_Sonar03Type_Sonar03Type_ARRAYSIZE = Surround_report_73_Sonar03Type_Sonar03Type_MAX + 1;

enum Surround_report_73_Sonar02Type {
  Surround_report_73_Sonar02Type_SONAR02_NO_DETECTION = 0,
  Surround_report_73_Sonar02Type_Surround_report_73_Sonar02Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar02Type_Surround_report_73_Sonar02Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar02Type_IsValid(int value);
const Surround_report_73_Sonar02Type Surround_report_73_Sonar02Type_Sonar02Type_MIN = Surround_report_73_Sonar02Type_SONAR02_NO_DETECTION;
const Surround_report_73_Sonar02Type Surround_report_73_Sonar02Type_Sonar02Type_MAX = Surround_report_73_Sonar02Type_SONAR02_NO_DETECTION;
const int Surround_report_73_Sonar02Type_Sonar02Type_ARRAYSIZE = Surround_report_73_Sonar02Type_Sonar02Type_MAX + 1;

enum Surround_report_73_Sonar01Type {
  Surround_report_73_Sonar01Type_SONAR01_NO_DETECTION = 0,
  Surround_report_73_Sonar01Type_Surround_report_73_Sonar01Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar01Type_Surround_report_73_Sonar01Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar01Type_IsValid(int value);
const Surround_report_73_Sonar01Type Surround_report_73_Sonar01Type_Sonar01Type_MIN = Surround_report_73_Sonar01Type_SONAR01_NO_DETECTION;
const Surround_report_73_Sonar01Type Surround_report_73_Sonar01Type_Sonar01Type_MAX = Surround_report_73_Sonar01Type_SONAR01_NO_DETECTION;
const int Surround_report_73_Sonar01Type_Sonar01Type_ARRAYSIZE = Surround_report_73_Sonar01Type_Sonar01Type_MAX + 1;

enum Surround_report_73_Sonar00Type {
  Surround_report_73_Sonar00Type_SONAR00_NO_DETECTION = 0,
  Surround_report_73_Sonar00Type_Surround_report_73_Sonar00Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_Sonar00Type_Surround_report_73_Sonar00Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_Sonar00Type_IsValid(int value);
const Surround_report_73_Sonar00Type Surround_report_73_Sonar00Type_Sonar00Type_MIN = Surround_report_73_Sonar00Type_SONAR00_NO_DETECTION;
const Surround_report_73_Sonar00Type Surround_report_73_Sonar00Type_Sonar00Type_MAX = Surround_report_73_Sonar00Type_SONAR00_NO_DETECTION;
const int Surround_report_73_Sonar00Type_Sonar00Type_ARRAYSIZE = Surround_report_73_Sonar00Type_Sonar00Type_MAX + 1;

enum Surround_report_73_BlisreType {
  Surround_report_73_BlisreType_BLISRE_DISABLED = 0,
  Surround_report_73_BlisreType_BLISRE_ENABLED = 1,
  Surround_report_73_BlisreType_Surround_report_73_BlisreType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_BlisreType_Surround_report_73_BlisreType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_BlisreType_IsValid(int value);
const Surround_report_73_BlisreType Surround_report_73_BlisreType_BlisreType_MIN = Surround_report_73_BlisreType_BLISRE_DISABLED;
const Surround_report_73_BlisreType Surround_report_73_BlisreType_BlisreType_MAX = Surround_report_73_BlisreType_BLISRE_ENABLED;
const int Surround_report_73_BlisreType_BlisreType_ARRAYSIZE = Surround_report_73_BlisreType_BlisreType_MAX + 1;

enum Surround_report_73_BlisraType {
  Surround_report_73_BlisraType_BLISRA_NO_ALERT = 0,
  Surround_report_73_BlisraType_BLISRA_ALERT = 1,
  Surround_report_73_BlisraType_Surround_report_73_BlisraType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_BlisraType_Surround_report_73_BlisraType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_BlisraType_IsValid(int value);
const Surround_report_73_BlisraType Surround_report_73_BlisraType_BlisraType_MIN = Surround_report_73_BlisraType_BLISRA_NO_ALERT;
const Surround_report_73_BlisraType Surround_report_73_BlisraType_BlisraType_MAX = Surround_report_73_BlisraType_BLISRA_ALERT;
const int Surround_report_73_BlisraType_BlisraType_ARRAYSIZE = Surround_report_73_BlisraType_BlisraType_MAX + 1;

enum Surround_report_73_BlisleType {
  Surround_report_73_BlisleType_BLISLE_DISABLED = 0,
  Surround_report_73_BlisleType_BLISLE_ENABLED = 1,
  Surround_report_73_BlisleType_Surround_report_73_BlisleType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_BlisleType_Surround_report_73_BlisleType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_BlisleType_IsValid(int value);
const Surround_report_73_BlisleType Surround_report_73_BlisleType_BlisleType_MIN = Surround_report_73_BlisleType_BLISLE_DISABLED;
const Surround_report_73_BlisleType Surround_report_73_BlisleType_BlisleType_MAX = Surround_report_73_BlisleType_BLISLE_ENABLED;
const int Surround_report_73_BlisleType_BlisleType_ARRAYSIZE = Surround_report_73_BlisleType_BlisleType_MAX + 1;

enum Surround_report_73_BlislaType {
  Surround_report_73_BlislaType_BLISLA_NO_ALERT = 0,
  Surround_report_73_BlislaType_BLISLA_ALERT = 1,
  Surround_report_73_BlislaType_Surround_report_73_BlislaType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_BlislaType_Surround_report_73_BlislaType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_BlislaType_IsValid(int value);
const Surround_report_73_BlislaType Surround_report_73_BlislaType_BlislaType_MIN = Surround_report_73_BlislaType_BLISLA_NO_ALERT;
const Surround_report_73_BlislaType Surround_report_73_BlislaType_BlislaType_MAX = Surround_report_73_BlislaType_BLISLA_ALERT;
const int Surround_report_73_BlislaType_BlislaType_ARRAYSIZE = Surround_report_73_BlislaType_BlislaType_MAX + 1;

enum Surround_report_73_CtareType {
  Surround_report_73_CtareType_CTARE_DISABLED = 0,
  Surround_report_73_CtareType_CTARE_ENABLED = 1,
  Surround_report_73_CtareType_Surround_report_73_CtareType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_CtareType_Surround_report_73_CtareType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_CtareType_IsValid(int value);
const Surround_report_73_CtareType Surround_report_73_CtareType_CtareType_MIN = Surround_report_73_CtareType_CTARE_DISABLED;
const Surround_report_73_CtareType Surround_report_73_CtareType_CtareType_MAX = Surround_report_73_CtareType_CTARE_ENABLED;
const int Surround_report_73_CtareType_CtareType_ARRAYSIZE = Surround_report_73_CtareType_CtareType_MAX + 1;

enum Surround_report_73_CtaraType {
  Surround_report_73_CtaraType_CTARA_NO_ALERT = 0,
  Surround_report_73_CtaraType_CTARA_ALERT = 1,
  Surround_report_73_CtaraType_Surround_report_73_CtaraType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_CtaraType_Surround_report_73_CtaraType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_CtaraType_IsValid(int value);
const Surround_report_73_CtaraType Surround_report_73_CtaraType_CtaraType_MIN = Surround_report_73_CtaraType_CTARA_NO_ALERT;
const Surround_report_73_CtaraType Surround_report_73_CtaraType_CtaraType_MAX = Surround_report_73_CtaraType_CTARA_ALERT;
const int Surround_report_73_CtaraType_CtaraType_ARRAYSIZE = Surround_report_73_CtaraType_CtaraType_MAX + 1;

enum Surround_report_73_CtaleType {
  Surround_report_73_CtaleType_CTALE_DISABLED = 0,
  Surround_report_73_CtaleType_CTALE_ENABLED = 1,
  Surround_report_73_CtaleType_Surround_report_73_CtaleType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_CtaleType_Surround_report_73_CtaleType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_CtaleType_IsValid(int value);
const Surround_report_73_CtaleType Surround_report_73_CtaleType_CtaleType_MIN = Surround_report_73_CtaleType_CTALE_DISABLED;
const Surround_report_73_CtaleType Surround_report_73_CtaleType_CtaleType_MAX = Surround_report_73_CtaleType_CTALE_ENABLED;
const int Surround_report_73_CtaleType_CtaleType_ARRAYSIZE = Surround_report_73_CtaleType_CtaleType_MAX + 1;

enum Surround_report_73_CtalaType {
  Surround_report_73_CtalaType_CTALA_NO_ALERT = 0,
  Surround_report_73_CtalaType_CTALA_ALERT = 1,
  Surround_report_73_CtalaType_Surround_report_73_CtalaType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Surround_report_73_CtalaType_Surround_report_73_CtalaType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Surround_report_73_CtalaType_IsValid(int value);
const Surround_report_73_CtalaType Surround_report_73_CtalaType_CtalaType_MIN = Surround_report_73_CtalaType_CTALA_NO_ALERT;
const Surround_report_73_CtalaType Surround_report_73_CtalaType_CtalaType_MAX = Surround_report_73_CtalaType_CTALA_ALERT;
const int Surround_report_73_CtalaType_CtalaType_ARRAYSIZE = Surround_report_73_CtalaType_CtalaType_MAX + 1;

// ===================================================================

class Version_ss_7f : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Version_ss_7f) */ {
 public:
  Version_ss_7f();
  virtual ~Version_ss_7f();

  Version_ss_7f(const Version_ss_7f& from);

  inline Version_ss_7f& operator=(const Version_ss_7f& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Version_ss_7f(Version_ss_7f&& from) noexcept
    : Version_ss_7f() {
    *this = ::std::move(from);
  }

  inline Version_ss_7f& operator=(Version_ss_7f&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Version_ss_7f& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Version_ss_7f* internal_default_instance() {
    return reinterpret_cast<const Version_ss_7f*>(
               &_Version_ss_7f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Version_ss_7f* other);
  friend void swap(Version_ss_7f& a, Version_ss_7f& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Version_ss_7f* New() const final {
    return CreateMaybeMessage<Version_ss_7f>(NULL);
  }

  Version_ss_7f* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Version_ss_7f>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Version_ss_7f& from);
  void MergeFrom(const Version_ss_7f& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Version_ss_7f* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Version_ss_7f_ModuleType ModuleType;
  static const ModuleType MODULE_BT =
    Version_ss_7f_ModuleType_MODULE_BT;
  static const ModuleType MODULE_SS =
    Version_ss_7f_ModuleType_MODULE_SS;
  static inline bool ModuleType_IsValid(int value) {
    return Version_ss_7f_ModuleType_IsValid(value);
  }
  static const ModuleType ModuleType_MIN =
    Version_ss_7f_ModuleType_ModuleType_MIN;
  static const ModuleType ModuleType_MAX =
    Version_ss_7f_ModuleType_ModuleType_MAX;
  static const int ModuleType_ARRAYSIZE =
    Version_ss_7f_ModuleType_ModuleType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // int32 build = 1;
  void clear_build();
  static const int kBuildFieldNumber = 1;
  ::google::protobuf::int32 build() const;
  void set_build(::google::protobuf::int32 value);

  // int32 my_minor = 2;
  void clear_my_minor();
  static const int kMyMinorFieldNumber = 2;
  ::google::protobuf::int32 my_minor() const;
  void set_my_minor(::google::protobuf::int32 value);

  // int32 my_major = 3;
  void clear_my_major();
  static const int kMyMajorFieldNumber = 3;
  ::google::protobuf::int32 my_major() const;
  void set_my_major(::google::protobuf::int32 value);

  // int32 module = 4;
  void clear_module();
  static const int kModuleFieldNumber = 4;
  ::google::protobuf::int32 module() const;
  void set_module(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Version_ss_7f)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 build_;
  ::google::protobuf::int32 my_minor_;
  ::google::protobuf::int32 my_major_;
  ::google::protobuf::int32 module_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Version_bt_7e : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Version_bt_7e) */ {
 public:
  Version_bt_7e();
  virtual ~Version_bt_7e();

  Version_bt_7e(const Version_bt_7e& from);

  inline Version_bt_7e& operator=(const Version_bt_7e& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Version_bt_7e(Version_bt_7e&& from) noexcept
    : Version_bt_7e() {
    *this = ::std::move(from);
  }

  inline Version_bt_7e& operator=(Version_bt_7e&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Version_bt_7e& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Version_bt_7e* internal_default_instance() {
    return reinterpret_cast<const Version_bt_7e*>(
               &_Version_bt_7e_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Version_bt_7e* other);
  friend void swap(Version_bt_7e& a, Version_bt_7e& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Version_bt_7e* New() const final {
    return CreateMaybeMessage<Version_bt_7e>(NULL);
  }

  Version_bt_7e* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Version_bt_7e>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Version_bt_7e& from);
  void MergeFrom(const Version_bt_7e& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Version_bt_7e* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Version_bt_7e_ModuleType ModuleType;
  static const ModuleType MODULE_BT =
    Version_bt_7e_ModuleType_MODULE_BT;
  static const ModuleType MODULE_SS =
    Version_bt_7e_ModuleType_MODULE_SS;
  static inline bool ModuleType_IsValid(int value) {
    return Version_bt_7e_ModuleType_IsValid(value);
  }
  static const ModuleType ModuleType_MIN =
    Version_bt_7e_ModuleType_ModuleType_MIN;
  static const ModuleType ModuleType_MAX =
    Version_bt_7e_ModuleType_ModuleType_MAX;
  static const int ModuleType_ARRAYSIZE =
    Version_bt_7e_ModuleType_ModuleType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // int32 vin16 = 1;
  void clear_vin16();
  static const int kVin16FieldNumber = 1;
  ::google::protobuf::int32 vin16() const;
  void set_vin16(::google::protobuf::int32 value);

  // int32 vin15 = 2;
  void clear_vin15();
  static const int kVin15FieldNumber = 2;
  ::google::protobuf::int32 vin15() const;
  void set_vin15(::google::protobuf::int32 value);

  // int32 vin14 = 3;
  void clear_vin14();
  static const int kVin14FieldNumber = 3;
  ::google::protobuf::int32 vin14() const;
  void set_vin14(::google::protobuf::int32 value);

  // int32 vin13 = 4;
  void clear_vin13();
  static const int kVin13FieldNumber = 4;
  ::google::protobuf::int32 vin13() const;
  void set_vin13(::google::protobuf::int32 value);

  // int32 vin12 = 5;
  void clear_vin12();
  static const int kVin12FieldNumber = 5;
  ::google::protobuf::int32 vin12() const;
  void set_vin12(::google::protobuf::int32 value);

  // int32 vin11 = 6;
  void clear_vin11();
  static const int kVin11FieldNumber = 6;
  ::google::protobuf::int32 vin11() const;
  void set_vin11(::google::protobuf::int32 value);

  // int32 vin10 = 7;
  void clear_vin10();
  static const int kVin10FieldNumber = 7;
  ::google::protobuf::int32 vin10() const;
  void set_vin10(::google::protobuf::int32 value);

  // int32 vin09 = 8;
  void clear_vin09();
  static const int kVin09FieldNumber = 8;
  ::google::protobuf::int32 vin09() const;
  void set_vin09(::google::protobuf::int32 value);

  // int32 vin08 = 9;
  void clear_vin08();
  static const int kVin08FieldNumber = 9;
  ::google::protobuf::int32 vin08() const;
  void set_vin08(::google::protobuf::int32 value);

  // int32 vin07 = 10;
  void clear_vin07();
  static const int kVin07FieldNumber = 10;
  ::google::protobuf::int32 vin07() const;
  void set_vin07(::google::protobuf::int32 value);

  // int32 vin06 = 11;
  void clear_vin06();
  static const int kVin06FieldNumber = 11;
  ::google::protobuf::int32 vin06() const;
  void set_vin06(::google::protobuf::int32 value);

  // int32 vin05 = 12;
  void clear_vin05();
  static const int kVin05FieldNumber = 12;
  ::google::protobuf::int32 vin05() const;
  void set_vin05(::google::protobuf::int32 value);

  // int32 vin04 = 13;
  void clear_vin04();
  static const int kVin04FieldNumber = 13;
  ::google::protobuf::int32 vin04() const;
  void set_vin04(::google::protobuf::int32 value);

  // int32 vin03 = 14;
  void clear_vin03();
  static const int kVin03FieldNumber = 14;
  ::google::protobuf::int32 vin03() const;
  void set_vin03(::google::protobuf::int32 value);

  // int32 vin02 = 15;
  void clear_vin02();
  static const int kVin02FieldNumber = 15;
  ::google::protobuf::int32 vin02() const;
  void set_vin02(::google::protobuf::int32 value);

  // int32 vin01 = 16;
  void clear_vin01();
  static const int kVin01FieldNumber = 16;
  ::google::protobuf::int32 vin01() const;
  void set_vin01(::google::protobuf::int32 value);

  // int32 vin00 = 17;
  void clear_vin00();
  static const int kVin00FieldNumber = 17;
  ::google::protobuf::int32 vin00() const;
  void set_vin00(::google::protobuf::int32 value);

  // int32 mux = 18;
  void clear_mux();
  static const int kMuxFieldNumber = 18;
  ::google::protobuf::int32 mux() const;
  void set_mux(::google::protobuf::int32 value);

  // int32 build = 19;
  void clear_build();
  static const int kBuildFieldNumber = 19;
  ::google::protobuf::int32 build() const;
  void set_build(::google::protobuf::int32 value);

  // int32 my_minor = 20;
  void clear_my_minor();
  static const int kMyMinorFieldNumber = 20;
  ::google::protobuf::int32 my_minor() const;
  void set_my_minor(::google::protobuf::int32 value);

  // int32 my_major = 21;
  void clear_my_major();
  static const int kMyMajorFieldNumber = 21;
  ::google::protobuf::int32 my_major() const;
  void set_my_major(::google::protobuf::int32 value);

  // int32 module = 22;
  void clear_module();
  static const int kModuleFieldNumber = 22;
  ::google::protobuf::int32 module() const;
  void set_module(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Version_bt_7e)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 vin16_;
  ::google::protobuf::int32 vin15_;
  ::google::protobuf::int32 vin14_;
  ::google::protobuf::int32 vin13_;
  ::google::protobuf::int32 vin12_;
  ::google::protobuf::int32 vin11_;
  ::google::protobuf::int32 vin10_;
  ::google::protobuf::int32 vin09_;
  ::google::protobuf::int32 vin08_;
  ::google::protobuf::int32 vin07_;
  ::google::protobuf::int32 vin06_;
  ::google::protobuf::int32 vin05_;
  ::google::protobuf::int32 vin04_;
  ::google::protobuf::int32 vin03_;
  ::google::protobuf::int32 vin02_;
  ::google::protobuf::int32 vin01_;
  ::google::protobuf::int32 vin00_;
  ::google::protobuf::int32 mux_;
  ::google::protobuf::int32 build_;
  ::google::protobuf::int32 my_minor_;
  ::google::protobuf::int32 my_major_;
  ::google::protobuf::int32 module_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Misc_report_ss_7b : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Misc_report_ss_7b) */ {
 public:
  Misc_report_ss_7b();
  virtual ~Misc_report_ss_7b();

  Misc_report_ss_7b(const Misc_report_ss_7b& from);

  inline Misc_report_ss_7b& operator=(const Misc_report_ss_7b& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Misc_report_ss_7b(Misc_report_ss_7b&& from) noexcept
    : Misc_report_ss_7b() {
    *this = ::std::move(from);
  }

  inline Misc_report_ss_7b& operator=(Misc_report_ss_7b&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Misc_report_ss_7b& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Misc_report_ss_7b* internal_default_instance() {
    return reinterpret_cast<const Misc_report_ss_7b*>(
               &_Misc_report_ss_7b_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Misc_report_ss_7b* other);
  friend void swap(Misc_report_ss_7b& a, Misc_report_ss_7b& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Misc_report_ss_7b* New() const final {
    return CreateMaybeMessage<Misc_report_ss_7b>(NULL);
  }

  Misc_report_ss_7b* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Misc_report_ss_7b>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Misc_report_ss_7b& from);
  void MergeFrom(const Misc_report_ss_7b& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Misc_report_ss_7b* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Misc_report_ss_7b_LdupType LdupType;
  static const LdupType LDUP_NOT_PRESSED =
    Misc_report_ss_7b_LdupType_LDUP_NOT_PRESSED;
  static const LdupType LDUP_PRESSED =
    Misc_report_ss_7b_LdupType_LDUP_PRESSED;
  static inline bool LdupType_IsValid(int value) {
    return Misc_report_ss_7b_LdupType_IsValid(value);
  }
  static const LdupType LdupType_MIN =
    Misc_report_ss_7b_LdupType_LdupType_MIN;
  static const LdupType LdupType_MAX =
    Misc_report_ss_7b_LdupType_LdupType_MAX;
  static const int LdupType_ARRAYSIZE =
    Misc_report_ss_7b_LdupType_LdupType_ARRAYSIZE;

  typedef Misc_report_ss_7b_LdrhtType LdrhtType;
  static const LdrhtType LDRHT_NOT_PRESSED =
    Misc_report_ss_7b_LdrhtType_LDRHT_NOT_PRESSED;
  static const LdrhtType LDRHT_PRESSED =
    Misc_report_ss_7b_LdrhtType_LDRHT_PRESSED;
  static inline bool LdrhtType_IsValid(int value) {
    return Misc_report_ss_7b_LdrhtType_IsValid(value);
  }
  static const LdrhtType LdrhtType_MIN =
    Misc_report_ss_7b_LdrhtType_LdrhtType_MIN;
  static const LdrhtType LdrhtType_MAX =
    Misc_report_ss_7b_LdrhtType_LdrhtType_MAX;
  static const int LdrhtType_ARRAYSIZE =
    Misc_report_ss_7b_LdrhtType_LdrhtType_ARRAYSIZE;

  typedef Misc_report_ss_7b_LdokType LdokType;
  static const LdokType LDOK_NOT_PRESSED =
    Misc_report_ss_7b_LdokType_LDOK_NOT_PRESSED;
  static const LdokType LDOK_PRESSED =
    Misc_report_ss_7b_LdokType_LDOK_PRESSED;
  static inline bool LdokType_IsValid(int value) {
    return Misc_report_ss_7b_LdokType_IsValid(value);
  }
  static const LdokType LdokType_MIN =
    Misc_report_ss_7b_LdokType_LdokType_MIN;
  static const LdokType LdokType_MAX =
    Misc_report_ss_7b_LdokType_LdokType_MAX;
  static const int LdokType_ARRAYSIZE =
    Misc_report_ss_7b_LdokType_LdokType_ARRAYSIZE;

  typedef Misc_report_ss_7b_LdlftType LdlftType;
  static const LdlftType LDLFT_NOT_PRESSED =
    Misc_report_ss_7b_LdlftType_LDLFT_NOT_PRESSED;
  static const LdlftType LDLFT_PRESSED =
    Misc_report_ss_7b_LdlftType_LDLFT_PRESSED;
  static inline bool LdlftType_IsValid(int value) {
    return Misc_report_ss_7b_LdlftType_IsValid(value);
  }
  static const LdlftType LdlftType_MIN =
    Misc_report_ss_7b_LdlftType_LdlftType_MIN;
  static const LdlftType LdlftType_MAX =
    Misc_report_ss_7b_LdlftType_LdlftType_MAX;
  static const int LdlftType_ARRAYSIZE =
    Misc_report_ss_7b_LdlftType_LdlftType_ARRAYSIZE;

  typedef Misc_report_ss_7b_LddwnType LddwnType;
  static const LddwnType LDDWN_NOT_PRESSED =
    Misc_report_ss_7b_LddwnType_LDDWN_NOT_PRESSED;
  static const LddwnType LDDWN_PRESSED =
    Misc_report_ss_7b_LddwnType_LDDWN_PRESSED;
  static inline bool LddwnType_IsValid(int value) {
    return Misc_report_ss_7b_LddwnType_IsValid(value);
  }
  static const LddwnType LddwnType_MIN =
    Misc_report_ss_7b_LddwnType_LddwnType_MIN;
  static const LddwnType LddwnType_MAX =
    Misc_report_ss_7b_LddwnType_LddwnType_MAX;
  static const int LddwnType_ARRAYSIZE =
    Misc_report_ss_7b_LddwnType_LddwnType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdupType ldup = 1;
  void clear_ldup();
  static const int kLdupFieldNumber = 1;
  ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdupType ldup() const;
  void set_ldup(::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdupType value);

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdrhtType ldrht = 2;
  void clear_ldrht();
  static const int kLdrhtFieldNumber = 2;
  ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdrhtType ldrht() const;
  void set_ldrht(::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdrhtType value);

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdokType ldok = 3;
  void clear_ldok();
  static const int kLdokFieldNumber = 3;
  ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdokType ldok() const;
  void set_ldok(::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdokType value);

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdlftType ldlft = 4;
  void clear_ldlft();
  static const int kLdlftFieldNumber = 4;
  ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdlftType ldlft() const;
  void set_ldlft(::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdlftType value);

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LddwnType lddwn = 5;
  void clear_lddwn();
  static const int kLddwnFieldNumber = 5;
  ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LddwnType lddwn() const;
  void set_lddwn(::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LddwnType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Misc_report_ss_7b)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int ldup_;
  int ldrht_;
  int ldok_;
  int ldlft_;
  int lddwn_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Brake_command_60 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Brake_command_60) */ {
 public:
  Brake_command_60();
  virtual ~Brake_command_60();

  Brake_command_60(const Brake_command_60& from);

  inline Brake_command_60& operator=(const Brake_command_60& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Brake_command_60(Brake_command_60&& from) noexcept
    : Brake_command_60() {
    *this = ::std::move(from);
  }

  inline Brake_command_60& operator=(Brake_command_60&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Brake_command_60& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Brake_command_60* internal_default_instance() {
    return reinterpret_cast<const Brake_command_60*>(
               &_Brake_command_60_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Brake_command_60* other);
  friend void swap(Brake_command_60& a, Brake_command_60& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Brake_command_60* New() const final {
    return CreateMaybeMessage<Brake_command_60>(NULL);
  }

  Brake_command_60* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Brake_command_60>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Brake_command_60& from);
  void MergeFrom(const Brake_command_60& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Brake_command_60* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Brake_command_60_EnType EnType;
  static const EnType EN_DISABLE =
    Brake_command_60_EnType_EN_DISABLE;
  static const EnType EN_ENABLED =
    Brake_command_60_EnType_EN_ENABLED;
  static inline bool EnType_IsValid(int value) {
    return Brake_command_60_EnType_IsValid(value);
  }
  static const EnType EnType_MIN =
    Brake_command_60_EnType_EnType_MIN;
  static const EnType EnType_MAX =
    Brake_command_60_EnType_EnType_MAX;
  static const int EnType_ARRAYSIZE =
    Brake_command_60_EnType_EnType_ARRAYSIZE;

  typedef Brake_command_60_BcmdType BcmdType;
  static const BcmdType BCMD_OFF =
    Brake_command_60_BcmdType_BCMD_OFF;
  static const BcmdType BCMD_ON =
    Brake_command_60_BcmdType_BCMD_ON;
  static inline bool BcmdType_IsValid(int value) {
    return Brake_command_60_BcmdType_IsValid(value);
  }
  static const BcmdType BcmdType_MIN =
    Brake_command_60_BcmdType_BcmdType_MIN;
  static const BcmdType BcmdType_MAX =
    Brake_command_60_BcmdType_BcmdType_MAX;
  static const int BcmdType_ARRAYSIZE =
    Brake_command_60_BcmdType_BcmdType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // double acc = 2;
  void clear_acc();
  static const int kAccFieldNumber = 2;
  double acc() const;
  void set_acc(double value);

  // bool audio = 1;
  void clear_audio();
  static const int kAudioFieldNumber = 1;
  bool audio() const;
  void set_audio(bool value);

  // bool quiet = 3;
  void clear_quiet();
  static const int kQuietFieldNumber = 3;
  bool quiet() const;
  void set_quiet(bool value);

  // bool ignore = 5;
  void clear_ignore();
  static const int kIgnoreFieldNumber = 5;
  bool ignore() const;
  void set_ignore(bool value);

  // bool clear = 6;
  void clear_clear();
  static const int kClearFieldNumber = 6;
  bool clear() const;
  void set_clear(bool value);

  // int32 count = 4;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // double pcmd = 7;
  void clear_pcmd();
  static const int kPcmdFieldNumber = 7;
  double pcmd() const;
  void set_pcmd(double value);

  // .Calmcar.drivers.CHASIS.Brake_command_60.EnType en = 8;
  void clear_en();
  static const int kEnFieldNumber = 8;
  ::Calmcar::drivers::CHASIS::Brake_command_60_EnType en() const;
  void set_en(::Calmcar::drivers::CHASIS::Brake_command_60_EnType value);

  // .Calmcar.drivers.CHASIS.Brake_command_60.BcmdType bcmd = 9;
  void clear_bcmd();
  static const int kBcmdFieldNumber = 9;
  ::Calmcar::drivers::CHASIS::Brake_command_60_BcmdType bcmd() const;
  void set_bcmd(::Calmcar::drivers::CHASIS::Brake_command_60_BcmdType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Brake_command_60)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double acc_;
  bool audio_;
  bool quiet_;
  bool ignore_;
  bool clear_;
  ::google::protobuf::int32 count_;
  double pcmd_;
  int en_;
  int bcmd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Brake_report_61 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Brake_report_61) */ {
 public:
  Brake_report_61();
  virtual ~Brake_report_61();

  Brake_report_61(const Brake_report_61& from);

  inline Brake_report_61& operator=(const Brake_report_61& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Brake_report_61(Brake_report_61&& from) noexcept
    : Brake_report_61() {
    *this = ::std::move(from);
  }

  inline Brake_report_61& operator=(Brake_report_61&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Brake_report_61& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Brake_report_61* internal_default_instance() {
    return reinterpret_cast<const Brake_report_61*>(
               &_Brake_report_61_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Brake_report_61* other);
  friend void swap(Brake_report_61& a, Brake_report_61& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Brake_report_61* New() const final {
    return CreateMaybeMessage<Brake_report_61>(NULL);
  }

  Brake_report_61* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Brake_report_61>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Brake_report_61& from);
  void MergeFrom(const Brake_report_61& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Brake_report_61* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Brake_report_61_WdcsrcType WdcsrcType;
  static const WdcsrcType WDCSRC_NONE =
    Brake_report_61_WdcsrcType_WDCSRC_NONE;
  static const WdcsrcType WDCSRC_OTHER_BRAKE =
    Brake_report_61_WdcsrcType_WDCSRC_OTHER_BRAKE;
  static const WdcsrcType WDCSRC_OTHER_THROTTLE =
    Brake_report_61_WdcsrcType_WDCSRC_OTHER_THROTTLE;
  static const WdcsrcType WDCSRC_OTHER_STEERING =
    Brake_report_61_WdcsrcType_WDCSRC_OTHER_STEERING;
  static const WdcsrcType WDCSRC_BRAKE_COUNTER =
    Brake_report_61_WdcsrcType_WDCSRC_BRAKE_COUNTER;
  static const WdcsrcType WDCSRC_BRAKE_DISABLED =
    Brake_report_61_WdcsrcType_WDCSRC_BRAKE_DISABLED;
  static const WdcsrcType WDCSRC_BRAKE_COMMAND =
    Brake_report_61_WdcsrcType_WDCSRC_BRAKE_COMMAND;
  static const WdcsrcType WDCSRC_BRAKE_REPORT =
    Brake_report_61_WdcsrcType_WDCSRC_BRAKE_REPORT;
  static const WdcsrcType WDCSRC_THROTTLE_COUNTER =
    Brake_report_61_WdcsrcType_WDCSRC_THROTTLE_COUNTER;
  static const WdcsrcType WDCSRC_THROTTLE_DISABLED =
    Brake_report_61_WdcsrcType_WDCSRC_THROTTLE_DISABLED;
  static const WdcsrcType WDCSRC_THROTTLE_COMMAND =
    Brake_report_61_WdcsrcType_WDCSRC_THROTTLE_COMMAND;
  static const WdcsrcType WDCSRC_THROTTLE_REPORT =
    Brake_report_61_WdcsrcType_WDCSRC_THROTTLE_REPORT;
  static const WdcsrcType WDCSRC_STEERING_COUNTER =
    Brake_report_61_WdcsrcType_WDCSRC_STEERING_COUNTER;
  static const WdcsrcType WDCSRC_STEERING_DISABLED =
    Brake_report_61_WdcsrcType_WDCSRC_STEERING_DISABLED;
  static const WdcsrcType WDCSRC_STEERING_COMMAND =
    Brake_report_61_WdcsrcType_WDCSRC_STEERING_COMMAND;
  static const WdcsrcType WDCSRC_STEERING_REPORT =
    Brake_report_61_WdcsrcType_WDCSRC_STEERING_REPORT;
  static inline bool WdcsrcType_IsValid(int value) {
    return Brake_report_61_WdcsrcType_IsValid(value);
  }
  static const WdcsrcType WdcsrcType_MIN =
    Brake_report_61_WdcsrcType_WdcsrcType_MIN;
  static const WdcsrcType WdcsrcType_MAX =
    Brake_report_61_WdcsrcType_WdcsrcType_MAX;
  static const int WdcsrcType_ARRAYSIZE =
    Brake_report_61_WdcsrcType_WdcsrcType_ARRAYSIZE;

  typedef Brake_report_61_WdcbrkType WdcbrkType;
  static const WdcbrkType WDCBRK_NORMAL =
    Brake_report_61_WdcbrkType_WDCBRK_NORMAL;
  static const WdcbrkType WDCBRK_WDC_APPLYING_BRAKES =
    Brake_report_61_WdcbrkType_WDCBRK_WDC_APPLYING_BRAKES;
  static inline bool WdcbrkType_IsValid(int value) {
    return Brake_report_61_WdcbrkType_IsValid(value);
  }
  static const WdcbrkType WdcbrkType_MIN =
    Brake_report_61_WdcbrkType_WdcbrkType_MIN;
  static const WdcbrkType WdcbrkType_MAX =
    Brake_report_61_WdcbrkType_WdcbrkType_MAX;
  static const int WdcbrkType_ARRAYSIZE =
    Brake_report_61_WdcbrkType_WdcbrkType_ARRAYSIZE;

  typedef Brake_report_61_DriverType DriverType;
  static const DriverType DRIVER_NO_ACTIVITY =
    Brake_report_61_DriverType_DRIVER_NO_ACTIVITY;
  static const DriverType DRIVER_DRIVER_ACTIVITY =
    Brake_report_61_DriverType_DRIVER_DRIVER_ACTIVITY;
  static inline bool DriverType_IsValid(int value) {
    return Brake_report_61_DriverType_IsValid(value);
  }
  static const DriverType DriverType_MIN =
    Brake_report_61_DriverType_DriverType_MIN;
  static const DriverType DriverType_MAX =
    Brake_report_61_DriverType_DriverType_MAX;
  static const int DriverType_ARRAYSIZE =
    Brake_report_61_DriverType_DriverType_ARRAYSIZE;

  typedef Brake_report_61_FltwdcType FltwdcType;
  static const FltwdcType FLTWDC_NO_FAULT =
    Brake_report_61_FltwdcType_FLTWDC_NO_FAULT;
  static const FltwdcType FLTWDC_FAULT =
    Brake_report_61_FltwdcType_FLTWDC_FAULT;
  static inline bool FltwdcType_IsValid(int value) {
    return Brake_report_61_FltwdcType_IsValid(value);
  }
  static const FltwdcType FltwdcType_MIN =
    Brake_report_61_FltwdcType_FltwdcType_MIN;
  static const FltwdcType FltwdcType_MAX =
    Brake_report_61_FltwdcType_FltwdcType_MAX;
  static const int FltwdcType_ARRAYSIZE =
    Brake_report_61_FltwdcType_FltwdcType_ARRAYSIZE;

  typedef Brake_report_61_TmoutType TmoutType;
  static const TmoutType TMOUT_VALID =
    Brake_report_61_TmoutType_TMOUT_VALID;
  static const TmoutType TMOUT_TIMEOUT =
    Brake_report_61_TmoutType_TMOUT_TIMEOUT;
  static inline bool TmoutType_IsValid(int value) {
    return Brake_report_61_TmoutType_IsValid(value);
  }
  static const TmoutType TmoutType_MIN =
    Brake_report_61_TmoutType_TmoutType_MIN;
  static const TmoutType TmoutType_MAX =
    Brake_report_61_TmoutType_TmoutType_MAX;
  static const int TmoutType_ARRAYSIZE =
    Brake_report_61_TmoutType_TmoutType_ARRAYSIZE;

  typedef Brake_report_61_FltbooType FltbooType;
  static const FltbooType FLTBOO_NO_FAULT =
    Brake_report_61_FltbooType_FLTBOO_NO_FAULT;
  static const FltbooType FLTBOO_FAULT =
    Brake_report_61_FltbooType_FLTBOO_FAULT;
  static inline bool FltbooType_IsValid(int value) {
    return Brake_report_61_FltbooType_IsValid(value);
  }
  static const FltbooType FltbooType_MIN =
    Brake_report_61_FltbooType_FltbooType_MIN;
  static const FltbooType FltbooType_MAX =
    Brake_report_61_FltbooType_FltbooType_MAX;
  static const int FltbooType_ARRAYSIZE =
    Brake_report_61_FltbooType_FltbooType_ARRAYSIZE;

  typedef Brake_report_61_Flt2Type Flt2Type;
  static const Flt2Type FLT2_NO_FAULT =
    Brake_report_61_Flt2Type_FLT2_NO_FAULT;
  static const Flt2Type FLT2_FAULT =
    Brake_report_61_Flt2Type_FLT2_FAULT;
  static inline bool Flt2Type_IsValid(int value) {
    return Brake_report_61_Flt2Type_IsValid(value);
  }
  static const Flt2Type Flt2Type_MIN =
    Brake_report_61_Flt2Type_Flt2Type_MIN;
  static const Flt2Type Flt2Type_MAX =
    Brake_report_61_Flt2Type_Flt2Type_MAX;
  static const int Flt2Type_ARRAYSIZE =
    Brake_report_61_Flt2Type_Flt2Type_ARRAYSIZE;

  typedef Brake_report_61_Flt1Type Flt1Type;
  static const Flt1Type FLT1_NO_FAULT =
    Brake_report_61_Flt1Type_FLT1_NO_FAULT;
  static const Flt1Type FLT1_FAULT =
    Brake_report_61_Flt1Type_FLT1_FAULT;
  static inline bool Flt1Type_IsValid(int value) {
    return Brake_report_61_Flt1Type_IsValid(value);
  }
  static const Flt1Type Flt1Type_MIN =
    Brake_report_61_Flt1Type_Flt1Type_MIN;
  static const Flt1Type Flt1Type_MAX =
    Brake_report_61_Flt1Type_Flt1Type_MAX;
  static const int Flt1Type_ARRAYSIZE =
    Brake_report_61_Flt1Type_Flt1Type_ARRAYSIZE;

  typedef Brake_report_61_EnType EnType;
  static const EnType EN_DISABLED =
    Brake_report_61_EnType_EN_DISABLED;
  static const EnType EN_ENABLED =
    Brake_report_61_EnType_EN_ENABLED;
  static inline bool EnType_IsValid(int value) {
    return Brake_report_61_EnType_IsValid(value);
  }
  static const EnType EnType_MIN =
    Brake_report_61_EnType_EnType_MIN;
  static const EnType EnType_MAX =
    Brake_report_61_EnType_EnType_MAX;
  static const int EnType_ARRAYSIZE =
    Brake_report_61_EnType_EnType_ARRAYSIZE;

  typedef Brake_report_61_OverrideType OverrideType;
  static const OverrideType OVERRIDE_NO_OVERRIDE =
    Brake_report_61_OverrideType_OVERRIDE_NO_OVERRIDE;
  static const OverrideType OVERRIDE_DRIVER_OVERRIDE =
    Brake_report_61_OverrideType_OVERRIDE_DRIVER_OVERRIDE;
  static inline bool OverrideType_IsValid(int value) {
    return Brake_report_61_OverrideType_IsValid(value);
  }
  static const OverrideType OverrideType_MIN =
    Brake_report_61_OverrideType_OverrideType_MIN;
  static const OverrideType OverrideType_MAX =
    Brake_report_61_OverrideType_OverrideType_MAX;
  static const int OverrideType_ARRAYSIZE =
    Brake_report_61_OverrideType_OverrideType_ARRAYSIZE;

  typedef Brake_report_61_BoType BoType;
  static const BoType BO_OFF =
    Brake_report_61_BoType_BO_OFF;
  static const BoType BO_ON =
    Brake_report_61_BoType_BO_ON;
  static inline bool BoType_IsValid(int value) {
    return Brake_report_61_BoType_IsValid(value);
  }
  static const BoType BoType_MIN =
    Brake_report_61_BoType_BoType_MIN;
  static const BoType BoType_MAX =
    Brake_report_61_BoType_BoType_MAX;
  static const int BoType_ARRAYSIZE =
    Brake_report_61_BoType_BoType_ARRAYSIZE;

  typedef Brake_report_61_BiType BiType;
  static const BiType BI_OFF =
    Brake_report_61_BiType_BI_OFF;
  static const BiType BI_ON =
    Brake_report_61_BiType_BI_ON;
  static inline bool BiType_IsValid(int value) {
    return Brake_report_61_BiType_IsValid(value);
  }
  static const BiType BiType_MIN =
    Brake_report_61_BiType_BiType_MIN;
  static const BiType BiType_MAX =
    Brake_report_61_BiType_BiType_MAX;
  static const int BiType_ARRAYSIZE =
    Brake_report_61_BiType_BiType_ARRAYSIZE;

  typedef Brake_report_61_BcType BcType;
  static const BcType BC_OFF =
    Brake_report_61_BcType_BC_OFF;
  static const BcType BC_ON =
    Brake_report_61_BcType_BC_ON;
  static inline bool BcType_IsValid(int value) {
    return Brake_report_61_BcType_IsValid(value);
  }
  static const BcType BcType_MIN =
    Brake_report_61_BcType_BcType_MIN;
  static const BcType BcType_MAX =
    Brake_report_61_BcType_BcType_MAX;
  static const int BcType_ARRAYSIZE =
    Brake_report_61_BcType_BcType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.CHASIS.Brake_report_61.WdcsrcType wdcsrc = 1;
  void clear_wdcsrc();
  static const int kWdcsrcFieldNumber = 1;
  ::Calmcar::drivers::CHASIS::Brake_report_61_WdcsrcType wdcsrc() const;
  void set_wdcsrc(::Calmcar::drivers::CHASIS::Brake_report_61_WdcsrcType value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.WdcbrkType wdcbrk = 2;
  void clear_wdcbrk();
  static const int kWdcbrkFieldNumber = 2;
  ::Calmcar::drivers::CHASIS::Brake_report_61_WdcbrkType wdcbrk() const;
  void set_wdcbrk(::Calmcar::drivers::CHASIS::Brake_report_61_WdcbrkType value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.DriverType driver = 3;
  void clear_driver();
  static const int kDriverFieldNumber = 3;
  ::Calmcar::drivers::CHASIS::Brake_report_61_DriverType driver() const;
  void set_driver(::Calmcar::drivers::CHASIS::Brake_report_61_DriverType value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.FltwdcType fltwdc = 4;
  void clear_fltwdc();
  static const int kFltwdcFieldNumber = 4;
  ::Calmcar::drivers::CHASIS::Brake_report_61_FltwdcType fltwdc() const;
  void set_fltwdc(::Calmcar::drivers::CHASIS::Brake_report_61_FltwdcType value);

  // double po = 5;
  void clear_po();
  static const int kPoFieldNumber = 5;
  double po() const;
  void set_po(double value);

  // double pi = 6;
  void clear_pi();
  static const int kPiFieldNumber = 6;
  double pi() const;
  void set_pi(double value);

  // double pc = 7;
  void clear_pc();
  static const int kPcFieldNumber = 7;
  double pc() const;
  void set_pc(double value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.TmoutType tmout = 8;
  void clear_tmout();
  static const int kTmoutFieldNumber = 8;
  ::Calmcar::drivers::CHASIS::Brake_report_61_TmoutType tmout() const;
  void set_tmout(::Calmcar::drivers::CHASIS::Brake_report_61_TmoutType value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.FltbooType fltboo = 9;
  void clear_fltboo();
  static const int kFltbooFieldNumber = 9;
  ::Calmcar::drivers::CHASIS::Brake_report_61_FltbooType fltboo() const;
  void set_fltboo(::Calmcar::drivers::CHASIS::Brake_report_61_FltbooType value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.Flt2Type flt2 = 10;
  void clear_flt2();
  static const int kFlt2FieldNumber = 10;
  ::Calmcar::drivers::CHASIS::Brake_report_61_Flt2Type flt2() const;
  void set_flt2(::Calmcar::drivers::CHASIS::Brake_report_61_Flt2Type value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.Flt1Type flt1 = 11;
  void clear_flt1();
  static const int kFlt1FieldNumber = 11;
  ::Calmcar::drivers::CHASIS::Brake_report_61_Flt1Type flt1() const;
  void set_flt1(::Calmcar::drivers::CHASIS::Brake_report_61_Flt1Type value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.EnType en = 12;
  void clear_en();
  static const int kEnFieldNumber = 12;
  ::Calmcar::drivers::CHASIS::Brake_report_61_EnType en() const;
  void set_en(::Calmcar::drivers::CHASIS::Brake_report_61_EnType value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.OverrideType override = 13;
  void clear_override();
  static const int kOverrideFieldNumber = 13;
  ::Calmcar::drivers::CHASIS::Brake_report_61_OverrideType override() const;
  void set_override(::Calmcar::drivers::CHASIS::Brake_report_61_OverrideType value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.BoType bo = 14;
  void clear_bo();
  static const int kBoFieldNumber = 14;
  ::Calmcar::drivers::CHASIS::Brake_report_61_BoType bo() const;
  void set_bo(::Calmcar::drivers::CHASIS::Brake_report_61_BoType value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.BiType bi = 15;
  void clear_bi();
  static const int kBiFieldNumber = 15;
  ::Calmcar::drivers::CHASIS::Brake_report_61_BiType bi() const;
  void set_bi(::Calmcar::drivers::CHASIS::Brake_report_61_BiType value);

  // .Calmcar.drivers.CHASIS.Brake_report_61.BcType bc = 16;
  void clear_bc();
  static const int kBcFieldNumber = 16;
  ::Calmcar::drivers::CHASIS::Brake_report_61_BcType bc() const;
  void set_bc(::Calmcar::drivers::CHASIS::Brake_report_61_BcType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Brake_report_61)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int wdcsrc_;
  int wdcbrk_;
  int driver_;
  int fltwdc_;
  double po_;
  double pi_;
  double pc_;
  int tmout_;
  int fltboo_;
  int flt2_;
  int flt1_;
  int en_;
  int override_;
  int bo_;
  int bi_;
  int bc_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Throttle_command_62 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Throttle_command_62) */ {
 public:
  Throttle_command_62();
  virtual ~Throttle_command_62();

  Throttle_command_62(const Throttle_command_62& from);

  inline Throttle_command_62& operator=(const Throttle_command_62& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Throttle_command_62(Throttle_command_62&& from) noexcept
    : Throttle_command_62() {
    *this = ::std::move(from);
  }

  inline Throttle_command_62& operator=(Throttle_command_62&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Throttle_command_62& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Throttle_command_62* internal_default_instance() {
    return reinterpret_cast<const Throttle_command_62*>(
               &_Throttle_command_62_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Throttle_command_62* other);
  friend void swap(Throttle_command_62& a, Throttle_command_62& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Throttle_command_62* New() const final {
    return CreateMaybeMessage<Throttle_command_62>(NULL);
  }

  Throttle_command_62* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Throttle_command_62>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Throttle_command_62& from);
  void MergeFrom(const Throttle_command_62& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Throttle_command_62* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Throttle_command_62_EnType EnType;
  static const EnType EN_DISABLE =
    Throttle_command_62_EnType_EN_DISABLE;
  static const EnType EN_ENABLED =
    Throttle_command_62_EnType_EN_ENABLED;
  static inline bool EnType_IsValid(int value) {
    return Throttle_command_62_EnType_IsValid(value);
  }
  static const EnType EnType_MIN =
    Throttle_command_62_EnType_EnType_MIN;
  static const EnType EnType_MAX =
    Throttle_command_62_EnType_EnType_MAX;
  static const int EnType_ARRAYSIZE =
    Throttle_command_62_EnType_EnType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // int32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // bool quiet = 1;
  void clear_quiet();
  static const int kQuietFieldNumber = 1;
  bool quiet() const;
  void set_quiet(bool value);

  // bool ignore = 3;
  void clear_ignore();
  static const int kIgnoreFieldNumber = 3;
  bool ignore() const;
  void set_ignore(bool value);

  // bool clear = 4;
  void clear_clear();
  static const int kClearFieldNumber = 4;
  bool clear() const;
  void set_clear(bool value);

  // double pcmd = 5;
  void clear_pcmd();
  static const int kPcmdFieldNumber = 5;
  double pcmd() const;
  void set_pcmd(double value);

  // .Calmcar.drivers.CHASIS.Throttle_command_62.EnType en = 6;
  void clear_en();
  static const int kEnFieldNumber = 6;
  ::Calmcar::drivers::CHASIS::Throttle_command_62_EnType en() const;
  void set_en(::Calmcar::drivers::CHASIS::Throttle_command_62_EnType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Throttle_command_62)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 count_;
  bool quiet_;
  bool ignore_;
  bool clear_;
  double pcmd_;
  int en_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Throttle_report_63 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Throttle_report_63) */ {
 public:
  Throttle_report_63();
  virtual ~Throttle_report_63();

  Throttle_report_63(const Throttle_report_63& from);

  inline Throttle_report_63& operator=(const Throttle_report_63& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Throttle_report_63(Throttle_report_63&& from) noexcept
    : Throttle_report_63() {
    *this = ::std::move(from);
  }

  inline Throttle_report_63& operator=(Throttle_report_63&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Throttle_report_63& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Throttle_report_63* internal_default_instance() {
    return reinterpret_cast<const Throttle_report_63*>(
               &_Throttle_report_63_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Throttle_report_63* other);
  friend void swap(Throttle_report_63& a, Throttle_report_63& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Throttle_report_63* New() const final {
    return CreateMaybeMessage<Throttle_report_63>(NULL);
  }

  Throttle_report_63* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Throttle_report_63>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Throttle_report_63& from);
  void MergeFrom(const Throttle_report_63& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Throttle_report_63* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Throttle_report_63_WdcsrcType WdcsrcType;
  static const WdcsrcType WDCSRC_NONE =
    Throttle_report_63_WdcsrcType_WDCSRC_NONE;
  static const WdcsrcType WDCSRC_OTHER_BRAKE =
    Throttle_report_63_WdcsrcType_WDCSRC_OTHER_BRAKE;
  static const WdcsrcType WDCSRC_OTHER_THROTTLE =
    Throttle_report_63_WdcsrcType_WDCSRC_OTHER_THROTTLE;
  static const WdcsrcType WDCSRC_OTHER_STEERING =
    Throttle_report_63_WdcsrcType_WDCSRC_OTHER_STEERING;
  static const WdcsrcType WDCSRC_BRAKE_COUNTER =
    Throttle_report_63_WdcsrcType_WDCSRC_BRAKE_COUNTER;
  static const WdcsrcType WDCSRC_BRAKE_DISABLED =
    Throttle_report_63_WdcsrcType_WDCSRC_BRAKE_DISABLED;
  static const WdcsrcType WDCSRC_BRAKE_COMMAND =
    Throttle_report_63_WdcsrcType_WDCSRC_BRAKE_COMMAND;
  static const WdcsrcType WDCSRC_BRAKE_REPORT =
    Throttle_report_63_WdcsrcType_WDCSRC_BRAKE_REPORT;
  static const WdcsrcType WDCSRC_THROTTLE_COUNTER =
    Throttle_report_63_WdcsrcType_WDCSRC_THROTTLE_COUNTER;
  static const WdcsrcType WDCSRC_THROTTLE_DISABLED =
    Throttle_report_63_WdcsrcType_WDCSRC_THROTTLE_DISABLED;
  static const WdcsrcType WDCSRC_THROTTLE_COMMAND =
    Throttle_report_63_WdcsrcType_WDCSRC_THROTTLE_COMMAND;
  static const WdcsrcType WDCSRC_THROTTLE_REPORT =
    Throttle_report_63_WdcsrcType_WDCSRC_THROTTLE_REPORT;
  static const WdcsrcType WDCSRC_STEERING_COUNTER =
    Throttle_report_63_WdcsrcType_WDCSRC_STEERING_COUNTER;
  static const WdcsrcType WDCSRC_STEERING_DISABLED =
    Throttle_report_63_WdcsrcType_WDCSRC_STEERING_DISABLED;
  static const WdcsrcType WDCSRC_STEERING_COMMAND =
    Throttle_report_63_WdcsrcType_WDCSRC_STEERING_COMMAND;
  static const WdcsrcType WDCSRC_STEERING_REPORT =
    Throttle_report_63_WdcsrcType_WDCSRC_STEERING_REPORT;
  static inline bool WdcsrcType_IsValid(int value) {
    return Throttle_report_63_WdcsrcType_IsValid(value);
  }
  static const WdcsrcType WdcsrcType_MIN =
    Throttle_report_63_WdcsrcType_WdcsrcType_MIN;
  static const WdcsrcType WdcsrcType_MAX =
    Throttle_report_63_WdcsrcType_WdcsrcType_MAX;
  static const int WdcsrcType_ARRAYSIZE =
    Throttle_report_63_WdcsrcType_WdcsrcType_ARRAYSIZE;

  typedef Throttle_report_63_DriverType DriverType;
  static const DriverType DRIVER_NO_ACTIVITY =
    Throttle_report_63_DriverType_DRIVER_NO_ACTIVITY;
  static const DriverType DRIVER_DRIVER_ACTIVITY =
    Throttle_report_63_DriverType_DRIVER_DRIVER_ACTIVITY;
  static inline bool DriverType_IsValid(int value) {
    return Throttle_report_63_DriverType_IsValid(value);
  }
  static const DriverType DriverType_MIN =
    Throttle_report_63_DriverType_DriverType_MIN;
  static const DriverType DriverType_MAX =
    Throttle_report_63_DriverType_DriverType_MAX;
  static const int DriverType_ARRAYSIZE =
    Throttle_report_63_DriverType_DriverType_ARRAYSIZE;

  typedef Throttle_report_63_FltwdcType FltwdcType;
  static const FltwdcType FLTWDC_NO_FAULT =
    Throttle_report_63_FltwdcType_FLTWDC_NO_FAULT;
  static const FltwdcType FLTWDC_FAULT =
    Throttle_report_63_FltwdcType_FLTWDC_FAULT;
  static inline bool FltwdcType_IsValid(int value) {
    return Throttle_report_63_FltwdcType_IsValid(value);
  }
  static const FltwdcType FltwdcType_MIN =
    Throttle_report_63_FltwdcType_FltwdcType_MIN;
  static const FltwdcType FltwdcType_MAX =
    Throttle_report_63_FltwdcType_FltwdcType_MAX;
  static const int FltwdcType_ARRAYSIZE =
    Throttle_report_63_FltwdcType_FltwdcType_ARRAYSIZE;

  typedef Throttle_report_63_TmoutType TmoutType;
  static const TmoutType TMOUT_VALID =
    Throttle_report_63_TmoutType_TMOUT_VALID;
  static const TmoutType TMOUT_TIMEOUT =
    Throttle_report_63_TmoutType_TMOUT_TIMEOUT;
  static inline bool TmoutType_IsValid(int value) {
    return Throttle_report_63_TmoutType_IsValid(value);
  }
  static const TmoutType TmoutType_MIN =
    Throttle_report_63_TmoutType_TmoutType_MIN;
  static const TmoutType TmoutType_MAX =
    Throttle_report_63_TmoutType_TmoutType_MAX;
  static const int TmoutType_ARRAYSIZE =
    Throttle_report_63_TmoutType_TmoutType_ARRAYSIZE;

  typedef Throttle_report_63_Flt2Type Flt2Type;
  static const Flt2Type FLT2_NO_FAULT =
    Throttle_report_63_Flt2Type_FLT2_NO_FAULT;
  static const Flt2Type FLT2_FAULT =
    Throttle_report_63_Flt2Type_FLT2_FAULT;
  static inline bool Flt2Type_IsValid(int value) {
    return Throttle_report_63_Flt2Type_IsValid(value);
  }
  static const Flt2Type Flt2Type_MIN =
    Throttle_report_63_Flt2Type_Flt2Type_MIN;
  static const Flt2Type Flt2Type_MAX =
    Throttle_report_63_Flt2Type_Flt2Type_MAX;
  static const int Flt2Type_ARRAYSIZE =
    Throttle_report_63_Flt2Type_Flt2Type_ARRAYSIZE;

  typedef Throttle_report_63_Flt1Type Flt1Type;
  static const Flt1Type FLT1_NO_FAULT =
    Throttle_report_63_Flt1Type_FLT1_NO_FAULT;
  static const Flt1Type FLT1_FAULT =
    Throttle_report_63_Flt1Type_FLT1_FAULT;
  static inline bool Flt1Type_IsValid(int value) {
    return Throttle_report_63_Flt1Type_IsValid(value);
  }
  static const Flt1Type Flt1Type_MIN =
    Throttle_report_63_Flt1Type_Flt1Type_MIN;
  static const Flt1Type Flt1Type_MAX =
    Throttle_report_63_Flt1Type_Flt1Type_MAX;
  static const int Flt1Type_ARRAYSIZE =
    Throttle_report_63_Flt1Type_Flt1Type_ARRAYSIZE;

  typedef Throttle_report_63_EnType EnType;
  static const EnType EN_DISABLED =
    Throttle_report_63_EnType_EN_DISABLED;
  static const EnType EN_ENABLED =
    Throttle_report_63_EnType_EN_ENABLED;
  static inline bool EnType_IsValid(int value) {
    return Throttle_report_63_EnType_IsValid(value);
  }
  static const EnType EnType_MIN =
    Throttle_report_63_EnType_EnType_MIN;
  static const EnType EnType_MAX =
    Throttle_report_63_EnType_EnType_MAX;
  static const int EnType_ARRAYSIZE =
    Throttle_report_63_EnType_EnType_ARRAYSIZE;

  typedef Throttle_report_63_OverrideType OverrideType;
  static const OverrideType OVERRIDE_NO_OVERRIDE =
    Throttle_report_63_OverrideType_OVERRIDE_NO_OVERRIDE;
  static const OverrideType OVERRIDE_DRIVER_OVERRIDE =
    Throttle_report_63_OverrideType_OVERRIDE_DRIVER_OVERRIDE;
  static inline bool OverrideType_IsValid(int value) {
    return Throttle_report_63_OverrideType_IsValid(value);
  }
  static const OverrideType OverrideType_MIN =
    Throttle_report_63_OverrideType_OverrideType_MIN;
  static const OverrideType OverrideType_MAX =
    Throttle_report_63_OverrideType_OverrideType_MAX;
  static const int OverrideType_ARRAYSIZE =
    Throttle_report_63_OverrideType_OverrideType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.CHASIS.Throttle_report_63.WdcsrcType wdcsrc = 1;
  void clear_wdcsrc();
  static const int kWdcsrcFieldNumber = 1;
  ::Calmcar::drivers::CHASIS::Throttle_report_63_WdcsrcType wdcsrc() const;
  void set_wdcsrc(::Calmcar::drivers::CHASIS::Throttle_report_63_WdcsrcType value);

  // .Calmcar.drivers.CHASIS.Throttle_report_63.DriverType driver = 2;
  void clear_driver();
  static const int kDriverFieldNumber = 2;
  ::Calmcar::drivers::CHASIS::Throttle_report_63_DriverType driver() const;
  void set_driver(::Calmcar::drivers::CHASIS::Throttle_report_63_DriverType value);

  // double po = 4;
  void clear_po();
  static const int kPoFieldNumber = 4;
  double po() const;
  void set_po(double value);

  // double pi = 5;
  void clear_pi();
  static const int kPiFieldNumber = 5;
  double pi() const;
  void set_pi(double value);

  // .Calmcar.drivers.CHASIS.Throttle_report_63.FltwdcType fltwdc = 3;
  void clear_fltwdc();
  static const int kFltwdcFieldNumber = 3;
  ::Calmcar::drivers::CHASIS::Throttle_report_63_FltwdcType fltwdc() const;
  void set_fltwdc(::Calmcar::drivers::CHASIS::Throttle_report_63_FltwdcType value);

  // .Calmcar.drivers.CHASIS.Throttle_report_63.TmoutType tmout = 7;
  void clear_tmout();
  static const int kTmoutFieldNumber = 7;
  ::Calmcar::drivers::CHASIS::Throttle_report_63_TmoutType tmout() const;
  void set_tmout(::Calmcar::drivers::CHASIS::Throttle_report_63_TmoutType value);

  // double pc = 6;
  void clear_pc();
  static const int kPcFieldNumber = 6;
  double pc() const;
  void set_pc(double value);

  // .Calmcar.drivers.CHASIS.Throttle_report_63.Flt2Type flt2 = 8;
  void clear_flt2();
  static const int kFlt2FieldNumber = 8;
  ::Calmcar::drivers::CHASIS::Throttle_report_63_Flt2Type flt2() const;
  void set_flt2(::Calmcar::drivers::CHASIS::Throttle_report_63_Flt2Type value);

  // .Calmcar.drivers.CHASIS.Throttle_report_63.Flt1Type flt1 = 9;
  void clear_flt1();
  static const int kFlt1FieldNumber = 9;
  ::Calmcar::drivers::CHASIS::Throttle_report_63_Flt1Type flt1() const;
  void set_flt1(::Calmcar::drivers::CHASIS::Throttle_report_63_Flt1Type value);

  // .Calmcar.drivers.CHASIS.Throttle_report_63.EnType en = 10;
  void clear_en();
  static const int kEnFieldNumber = 10;
  ::Calmcar::drivers::CHASIS::Throttle_report_63_EnType en() const;
  void set_en(::Calmcar::drivers::CHASIS::Throttle_report_63_EnType value);

  // .Calmcar.drivers.CHASIS.Throttle_report_63.OverrideType override = 11;
  void clear_override();
  static const int kOverrideFieldNumber = 11;
  ::Calmcar::drivers::CHASIS::Throttle_report_63_OverrideType override() const;
  void set_override(::Calmcar::drivers::CHASIS::Throttle_report_63_OverrideType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Throttle_report_63)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int wdcsrc_;
  int driver_;
  double po_;
  double pi_;
  int fltwdc_;
  int tmout_;
  double pc_;
  int flt2_;
  int flt1_;
  int en_;
  int override_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Steering_command_64 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Steering_command_64) */ {
 public:
  Steering_command_64();
  virtual ~Steering_command_64();

  Steering_command_64(const Steering_command_64& from);

  inline Steering_command_64& operator=(const Steering_command_64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Steering_command_64(Steering_command_64&& from) noexcept
    : Steering_command_64() {
    *this = ::std::move(from);
  }

  inline Steering_command_64& operator=(Steering_command_64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Steering_command_64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Steering_command_64* internal_default_instance() {
    return reinterpret_cast<const Steering_command_64*>(
               &_Steering_command_64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Steering_command_64* other);
  friend void swap(Steering_command_64& a, Steering_command_64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Steering_command_64* New() const final {
    return CreateMaybeMessage<Steering_command_64>(NULL);
  }

  Steering_command_64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Steering_command_64>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Steering_command_64& from);
  void MergeFrom(const Steering_command_64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Steering_command_64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Steering_command_64_EnType EnType;
  static const EnType EN_DISABLE =
    Steering_command_64_EnType_EN_DISABLE;
  static const EnType EN_ENABLED =
    Steering_command_64_EnType_EN_ENABLED;
  static inline bool EnType_IsValid(int value) {
    return Steering_command_64_EnType_IsValid(value);
  }
  static const EnType EnType_MIN =
    Steering_command_64_EnType_EnType_MIN;
  static const EnType EnType_MAX =
    Steering_command_64_EnType_EnType_MAX;
  static const int EnType_ARRAYSIZE =
    Steering_command_64_EnType_EnType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // int32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // bool quiet = 1;
  void clear_quiet();
  static const int kQuietFieldNumber = 1;
  bool quiet() const;
  void set_quiet(bool value);

  // bool ignore = 3;
  void clear_ignore();
  static const int kIgnoreFieldNumber = 3;
  bool ignore() const;
  void set_ignore(bool value);

  // bool clear = 5;
  void clear_clear();
  static const int kClearFieldNumber = 5;
  bool clear() const;
  void set_clear(bool value);

  // double svel = 4;
  void clear_svel();
  static const int kSvelFieldNumber = 4;
  double svel() const;
  void set_svel(double value);

  // double scmd = 7;
  void clear_scmd();
  static const int kScmdFieldNumber = 7;
  double scmd() const;
  void set_scmd(double value);

  // .Calmcar.drivers.CHASIS.Steering_command_64.EnType en = 6;
  void clear_en();
  static const int kEnFieldNumber = 6;
  ::Calmcar::drivers::CHASIS::Steering_command_64_EnType en() const;
  void set_en(::Calmcar::drivers::CHASIS::Steering_command_64_EnType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Steering_command_64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 count_;
  bool quiet_;
  bool ignore_;
  bool clear_;
  double svel_;
  double scmd_;
  int en_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Steering_report_65 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Steering_report_65) */ {
 public:
  Steering_report_65();
  virtual ~Steering_report_65();

  Steering_report_65(const Steering_report_65& from);

  inline Steering_report_65& operator=(const Steering_report_65& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Steering_report_65(Steering_report_65&& from) noexcept
    : Steering_report_65() {
    *this = ::std::move(from);
  }

  inline Steering_report_65& operator=(Steering_report_65&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Steering_report_65& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Steering_report_65* internal_default_instance() {
    return reinterpret_cast<const Steering_report_65*>(
               &_Steering_report_65_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Steering_report_65* other);
  friend void swap(Steering_report_65& a, Steering_report_65& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Steering_report_65* New() const final {
    return CreateMaybeMessage<Steering_report_65>(NULL);
  }

  Steering_report_65* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Steering_report_65>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Steering_report_65& from);
  void MergeFrom(const Steering_report_65& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Steering_report_65* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Steering_report_65_FltwdcType FltwdcType;
  static const FltwdcType FLTWDC_NO_FAULT =
    Steering_report_65_FltwdcType_FLTWDC_NO_FAULT;
  static const FltwdcType FLTWDC_FAULT =
    Steering_report_65_FltwdcType_FLTWDC_FAULT;
  static inline bool FltwdcType_IsValid(int value) {
    return Steering_report_65_FltwdcType_IsValid(value);
  }
  static const FltwdcType FltwdcType_MIN =
    Steering_report_65_FltwdcType_FltwdcType_MIN;
  static const FltwdcType FltwdcType_MAX =
    Steering_report_65_FltwdcType_FltwdcType_MAX;
  static const int FltwdcType_ARRAYSIZE =
    Steering_report_65_FltwdcType_FltwdcType_ARRAYSIZE;

  typedef Steering_report_65_FltcalType FltcalType;
  static const FltcalType FLTCAL_NO_FAULT =
    Steering_report_65_FltcalType_FLTCAL_NO_FAULT;
  static const FltcalType FLTCAL_FAULT =
    Steering_report_65_FltcalType_FLTCAL_FAULT;
  static inline bool FltcalType_IsValid(int value) {
    return Steering_report_65_FltcalType_IsValid(value);
  }
  static const FltcalType FltcalType_MIN =
    Steering_report_65_FltcalType_FltcalType_MIN;
  static const FltcalType FltcalType_MAX =
    Steering_report_65_FltcalType_FltcalType_MAX;
  static const int FltcalType_ARRAYSIZE =
    Steering_report_65_FltcalType_FltcalType_ARRAYSIZE;

  typedef Steering_report_65_TmoutType TmoutType;
  static const TmoutType TMOUT_VALID =
    Steering_report_65_TmoutType_TMOUT_VALID;
  static const TmoutType TMOUT_TIMEOUT =
    Steering_report_65_TmoutType_TMOUT_TIMEOUT;
  static inline bool TmoutType_IsValid(int value) {
    return Steering_report_65_TmoutType_IsValid(value);
  }
  static const TmoutType TmoutType_MIN =
    Steering_report_65_TmoutType_TmoutType_MIN;
  static const TmoutType TmoutType_MAX =
    Steering_report_65_TmoutType_TmoutType_MAX;
  static const int TmoutType_ARRAYSIZE =
    Steering_report_65_TmoutType_TmoutType_ARRAYSIZE;

  typedef Steering_report_65_Flt2Type Flt2Type;
  static const Flt2Type FLT2_NO_FAULT =
    Steering_report_65_Flt2Type_FLT2_NO_FAULT;
  static const Flt2Type FLT2_FAULT =
    Steering_report_65_Flt2Type_FLT2_FAULT;
  static inline bool Flt2Type_IsValid(int value) {
    return Steering_report_65_Flt2Type_IsValid(value);
  }
  static const Flt2Type Flt2Type_MIN =
    Steering_report_65_Flt2Type_Flt2Type_MIN;
  static const Flt2Type Flt2Type_MAX =
    Steering_report_65_Flt2Type_Flt2Type_MAX;
  static const int Flt2Type_ARRAYSIZE =
    Steering_report_65_Flt2Type_Flt2Type_ARRAYSIZE;

  typedef Steering_report_65_Flt1Type Flt1Type;
  static const Flt1Type FLT1_NO_FAULT =
    Steering_report_65_Flt1Type_FLT1_NO_FAULT;
  static const Flt1Type FLT1_FAULT =
    Steering_report_65_Flt1Type_FLT1_FAULT;
  static inline bool Flt1Type_IsValid(int value) {
    return Steering_report_65_Flt1Type_IsValid(value);
  }
  static const Flt1Type Flt1Type_MIN =
    Steering_report_65_Flt1Type_Flt1Type_MIN;
  static const Flt1Type Flt1Type_MAX =
    Steering_report_65_Flt1Type_Flt1Type_MAX;
  static const int Flt1Type_ARRAYSIZE =
    Steering_report_65_Flt1Type_Flt1Type_ARRAYSIZE;

  typedef Steering_report_65_EnType EnType;
  static const EnType EN_DISABLED =
    Steering_report_65_EnType_EN_DISABLED;
  static const EnType EN_ENABLED =
    Steering_report_65_EnType_EN_ENABLED;
  static inline bool EnType_IsValid(int value) {
    return Steering_report_65_EnType_IsValid(value);
  }
  static const EnType EnType_MIN =
    Steering_report_65_EnType_EnType_MIN;
  static const EnType EnType_MAX =
    Steering_report_65_EnType_EnType_MAX;
  static const int EnType_ARRAYSIZE =
    Steering_report_65_EnType_EnType_ARRAYSIZE;

  typedef Steering_report_65_OverrideType OverrideType;
  static const OverrideType OVERRIDE_NO_OVERRIDE =
    Steering_report_65_OverrideType_OVERRIDE_NO_OVERRIDE;
  static const OverrideType OVERRIDE_DRIVER_OVERRIDE =
    Steering_report_65_OverrideType_OVERRIDE_DRIVER_OVERRIDE;
  static inline bool OverrideType_IsValid(int value) {
    return Steering_report_65_OverrideType_IsValid(value);
  }
  static const OverrideType OverrideType_MIN =
    Steering_report_65_OverrideType_OverrideType_MIN;
  static const OverrideType OverrideType_MAX =
    Steering_report_65_OverrideType_OverrideType_MAX;
  static const int OverrideType_ARRAYSIZE =
    Steering_report_65_OverrideType_OverrideType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.CHASIS.Steering_report_65.FltwdcType fltwdc = 1;
  void clear_fltwdc();
  static const int kFltwdcFieldNumber = 1;
  ::Calmcar::drivers::CHASIS::Steering_report_65_FltwdcType fltwdc() const;
  void set_fltwdc(::Calmcar::drivers::CHASIS::Steering_report_65_FltwdcType value);

  // .Calmcar.drivers.CHASIS.Steering_report_65.FltcalType fltcal = 2;
  void clear_fltcal();
  static const int kFltcalFieldNumber = 2;
  ::Calmcar::drivers::CHASIS::Steering_report_65_FltcalType fltcal() const;
  void set_fltcal(::Calmcar::drivers::CHASIS::Steering_report_65_FltcalType value);

  // double torque = 4;
  void clear_torque();
  static const int kTorqueFieldNumber = 4;
  double torque() const;
  void set_torque(double value);

  // .Calmcar.drivers.CHASIS.Steering_report_65.TmoutType tmout = 3;
  void clear_tmout();
  static const int kTmoutFieldNumber = 3;
  ::Calmcar::drivers::CHASIS::Steering_report_65_TmoutType tmout() const;
  void set_tmout(::Calmcar::drivers::CHASIS::Steering_report_65_TmoutType value);

  // .Calmcar.drivers.CHASIS.Steering_report_65.Flt2Type flt2 = 6;
  void clear_flt2();
  static const int kFlt2FieldNumber = 6;
  ::Calmcar::drivers::CHASIS::Steering_report_65_Flt2Type flt2() const;
  void set_flt2(::Calmcar::drivers::CHASIS::Steering_report_65_Flt2Type value);

  // double speed = 5;
  void clear_speed();
  static const int kSpeedFieldNumber = 5;
  double speed() const;
  void set_speed(double value);

  // .Calmcar.drivers.CHASIS.Steering_report_65.Flt1Type flt1 = 7;
  void clear_flt1();
  static const int kFlt1FieldNumber = 7;
  ::Calmcar::drivers::CHASIS::Steering_report_65_Flt1Type flt1() const;
  void set_flt1(::Calmcar::drivers::CHASIS::Steering_report_65_Flt1Type value);

  // .Calmcar.drivers.CHASIS.Steering_report_65.EnType en = 8;
  void clear_en();
  static const int kEnFieldNumber = 8;
  ::Calmcar::drivers::CHASIS::Steering_report_65_EnType en() const;
  void set_en(::Calmcar::drivers::CHASIS::Steering_report_65_EnType value);

  // double cmd = 10;
  void clear_cmd();
  static const int kCmdFieldNumber = 10;
  double cmd() const;
  void set_cmd(double value);

  // double angle = 11;
  void clear_angle();
  static const int kAngleFieldNumber = 11;
  double angle() const;
  void set_angle(double value);

  // .Calmcar.drivers.CHASIS.Steering_report_65.OverrideType override = 9;
  void clear_override();
  static const int kOverrideFieldNumber = 9;
  ::Calmcar::drivers::CHASIS::Steering_report_65_OverrideType override() const;
  void set_override(::Calmcar::drivers::CHASIS::Steering_report_65_OverrideType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Steering_report_65)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int fltwdc_;
  int fltcal_;
  double torque_;
  int tmout_;
  int flt2_;
  double speed_;
  int flt1_;
  int en_;
  double cmd_;
  double angle_;
  int override_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gear_command_66 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Gear_command_66) */ {
 public:
  Gear_command_66();
  virtual ~Gear_command_66();

  Gear_command_66(const Gear_command_66& from);

  inline Gear_command_66& operator=(const Gear_command_66& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gear_command_66(Gear_command_66&& from) noexcept
    : Gear_command_66() {
    *this = ::std::move(from);
  }

  inline Gear_command_66& operator=(Gear_command_66&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gear_command_66& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gear_command_66* internal_default_instance() {
    return reinterpret_cast<const Gear_command_66*>(
               &_Gear_command_66_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Gear_command_66* other);
  friend void swap(Gear_command_66& a, Gear_command_66& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gear_command_66* New() const final {
    return CreateMaybeMessage<Gear_command_66>(NULL);
  }

  Gear_command_66* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gear_command_66>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gear_command_66& from);
  void MergeFrom(const Gear_command_66& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gear_command_66* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Gear_command_66_EnType EnType;
  static const EnType EN_DISABLE =
    Gear_command_66_EnType_EN_DISABLE;
  static const EnType EN_ENABLED =
    Gear_command_66_EnType_EN_ENABLED;
  static inline bool EnType_IsValid(int value) {
    return Gear_command_66_EnType_IsValid(value);
  }
  static const EnType EnType_MIN =
    Gear_command_66_EnType_EnType_MIN;
  static const EnType EnType_MAX =
    Gear_command_66_EnType_EnType_MAX;
  static const int EnType_ARRAYSIZE =
    Gear_command_66_EnType_EnType_ARRAYSIZE;

  typedef Gear_command_66_GcmdType GcmdType;
  static const GcmdType GCMD_NONE =
    Gear_command_66_GcmdType_GCMD_NONE;
  static const GcmdType GCMD_PARK =
    Gear_command_66_GcmdType_GCMD_PARK;
  static const GcmdType GCMD_REVERSE =
    Gear_command_66_GcmdType_GCMD_REVERSE;
  static const GcmdType GCMD_NEUTRAL =
    Gear_command_66_GcmdType_GCMD_NEUTRAL;
  static const GcmdType GCMD_DRIVE =
    Gear_command_66_GcmdType_GCMD_DRIVE;
  static const GcmdType GCMD_LOW =
    Gear_command_66_GcmdType_GCMD_LOW;
  static inline bool GcmdType_IsValid(int value) {
    return Gear_command_66_GcmdType_IsValid(value);
  }
  static const GcmdType GcmdType_MIN =
    Gear_command_66_GcmdType_GcmdType_MIN;
  static const GcmdType GcmdType_MAX =
    Gear_command_66_GcmdType_GcmdType_MAX;
  static const int GcmdType_ARRAYSIZE =
    Gear_command_66_GcmdType_GcmdType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.CHASIS.Gear_command_66.EnType en = 1;
  void clear_en();
  static const int kEnFieldNumber = 1;
  ::Calmcar::drivers::CHASIS::Gear_command_66_EnType en() const;
  void set_en(::Calmcar::drivers::CHASIS::Gear_command_66_EnType value);

  // .Calmcar.drivers.CHASIS.Gear_command_66.GcmdType gcmd = 2;
  void clear_gcmd();
  static const int kGcmdFieldNumber = 2;
  ::Calmcar::drivers::CHASIS::Gear_command_66_GcmdType gcmd() const;
  void set_gcmd(::Calmcar::drivers::CHASIS::Gear_command_66_GcmdType value);

  // bool clear = 3;
  void clear_clear();
  static const int kClearFieldNumber = 3;
  bool clear() const;
  void set_clear(bool value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Gear_command_66)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int en_;
  int gcmd_;
  bool clear_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gear_report_67 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Gear_report_67) */ {
 public:
  Gear_report_67();
  virtual ~Gear_report_67();

  Gear_report_67(const Gear_report_67& from);

  inline Gear_report_67& operator=(const Gear_report_67& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gear_report_67(Gear_report_67&& from) noexcept
    : Gear_report_67() {
    *this = ::std::move(from);
  }

  inline Gear_report_67& operator=(Gear_report_67&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gear_report_67& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gear_report_67* internal_default_instance() {
    return reinterpret_cast<const Gear_report_67*>(
               &_Gear_report_67_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Gear_report_67* other);
  friend void swap(Gear_report_67& a, Gear_report_67& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gear_report_67* New() const final {
    return CreateMaybeMessage<Gear_report_67>(NULL);
  }

  Gear_report_67* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gear_report_67>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gear_report_67& from);
  void MergeFrom(const Gear_report_67& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gear_report_67* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Gear_report_67_RejectType RejectType;
  static const RejectType REJECT_NOT_REJECTED =
    Gear_report_67_RejectType_REJECT_NOT_REJECTED;
  static const RejectType REJECT_OVERRIDE =
    Gear_report_67_RejectType_REJECT_OVERRIDE;
  static const RejectType REJECT_SHIFT_IN_PROGRESS =
    Gear_report_67_RejectType_REJECT_SHIFT_IN_PROGRESS;
  static const RejectType REJECT_REPEAT =
    Gear_report_67_RejectType_REJECT_REPEAT;
  static const RejectType REJECT_CMD_ILLEGAL =
    Gear_report_67_RejectType_REJECT_CMD_ILLEGAL;
  static const RejectType REJECT_SPEED_NOT_2KPH =
    Gear_report_67_RejectType_REJECT_SPEED_NOT_2KPH;
  static const RejectType REJECT_REJECTED_BY_VEHICLE_TIMEOUT =
    Gear_report_67_RejectType_REJECT_REJECTED_BY_VEHICLE_TIMEOUT;
  static inline bool RejectType_IsValid(int value) {
    return Gear_report_67_RejectType_IsValid(value);
  }
  static const RejectType RejectType_MIN =
    Gear_report_67_RejectType_RejectType_MIN;
  static const RejectType RejectType_MAX =
    Gear_report_67_RejectType_RejectType_MAX;
  static const int RejectType_ARRAYSIZE =
    Gear_report_67_RejectType_RejectType_ARRAYSIZE;

  typedef Gear_report_67_StateType StateType;
  static const StateType STATE_NONE =
    Gear_report_67_StateType_STATE_NONE;
  static const StateType STATE_PARK =
    Gear_report_67_StateType_STATE_PARK;
  static const StateType STATE_REVERSE =
    Gear_report_67_StateType_STATE_REVERSE;
  static const StateType STATE_NEUTRAL =
    Gear_report_67_StateType_STATE_NEUTRAL;
  static const StateType STATE_DRIVE =
    Gear_report_67_StateType_STATE_DRIVE;
  static const StateType STATE_LOW =
    Gear_report_67_StateType_STATE_LOW;
  static inline bool StateType_IsValid(int value) {
    return Gear_report_67_StateType_IsValid(value);
  }
  static const StateType StateType_MIN =
    Gear_report_67_StateType_StateType_MIN;
  static const StateType StateType_MAX =
    Gear_report_67_StateType_StateType_MAX;
  static const int StateType_ARRAYSIZE =
    Gear_report_67_StateType_StateType_ARRAYSIZE;

  typedef Gear_report_67_FltbusType FltbusType;
  static const FltbusType FLTBUS_NO_FAULT =
    Gear_report_67_FltbusType_FLTBUS_NO_FAULT;
  static const FltbusType FLTBUS_FAULT =
    Gear_report_67_FltbusType_FLTBUS_FAULT;
  static inline bool FltbusType_IsValid(int value) {
    return Gear_report_67_FltbusType_IsValid(value);
  }
  static const FltbusType FltbusType_MIN =
    Gear_report_67_FltbusType_FltbusType_MIN;
  static const FltbusType FltbusType_MAX =
    Gear_report_67_FltbusType_FltbusType_MAX;
  static const int FltbusType_ARRAYSIZE =
    Gear_report_67_FltbusType_FltbusType_ARRAYSIZE;

  typedef Gear_report_67_DriverType DriverType;
  static const DriverType DRIVER_LAST_SHIFT_REQUESTED_BY_WIRE =
    Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_WIRE;
  static const DriverType DRIVER_LAST_SHIFT_REQUESTED_BY_DRIVER =
    Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_DRIVER;
  static inline bool DriverType_IsValid(int value) {
    return Gear_report_67_DriverType_IsValid(value);
  }
  static const DriverType DriverType_MIN =
    Gear_report_67_DriverType_DriverType_MIN;
  static const DriverType DriverType_MAX =
    Gear_report_67_DriverType_DriverType_MAX;
  static const int DriverType_ARRAYSIZE =
    Gear_report_67_DriverType_DriverType_ARRAYSIZE;

  typedef Gear_report_67_CmdType CmdType;
  static const CmdType CMD_NONE =
    Gear_report_67_CmdType_CMD_NONE;
  static const CmdType CMD_PARK =
    Gear_report_67_CmdType_CMD_PARK;
  static const CmdType CMD_REVERSE =
    Gear_report_67_CmdType_CMD_REVERSE;
  static const CmdType CMD_NEUTRAL =
    Gear_report_67_CmdType_CMD_NEUTRAL;
  static const CmdType CMD_DRIVE =
    Gear_report_67_CmdType_CMD_DRIVE;
  static const CmdType CMD_LOW =
    Gear_report_67_CmdType_CMD_LOW;
  static inline bool CmdType_IsValid(int value) {
    return Gear_report_67_CmdType_IsValid(value);
  }
  static const CmdType CmdType_MIN =
    Gear_report_67_CmdType_CmdType_MIN;
  static const CmdType CmdType_MAX =
    Gear_report_67_CmdType_CmdType_MAX;
  static const int CmdType_ARRAYSIZE =
    Gear_report_67_CmdType_CmdType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // int32 acc_state = 1;
  void clear_acc_state();
  static const int kAccStateFieldNumber = 1;
  ::google::protobuf::int32 acc_state() const;
  void set_acc_state(::google::protobuf::int32 value);

  // .Calmcar.drivers.CHASIS.Gear_report_67.RejectType reject = 2;
  void clear_reject();
  static const int kRejectFieldNumber = 2;
  ::Calmcar::drivers::CHASIS::Gear_report_67_RejectType reject() const;
  void set_reject(::Calmcar::drivers::CHASIS::Gear_report_67_RejectType value);

  // .Calmcar.drivers.CHASIS.Gear_report_67.StateType state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::Calmcar::drivers::CHASIS::Gear_report_67_StateType state() const;
  void set_state(::Calmcar::drivers::CHASIS::Gear_report_67_StateType value);

  // .Calmcar.drivers.CHASIS.Gear_report_67.FltbusType fltbus = 4;
  void clear_fltbus();
  static const int kFltbusFieldNumber = 4;
  ::Calmcar::drivers::CHASIS::Gear_report_67_FltbusType fltbus() const;
  void set_fltbus(::Calmcar::drivers::CHASIS::Gear_report_67_FltbusType value);

  // .Calmcar.drivers.CHASIS.Gear_report_67.DriverType driver = 5;
  void clear_driver();
  static const int kDriverFieldNumber = 5;
  ::Calmcar::drivers::CHASIS::Gear_report_67_DriverType driver() const;
  void set_driver(::Calmcar::drivers::CHASIS::Gear_report_67_DriverType value);

  // .Calmcar.drivers.CHASIS.Gear_report_67.CmdType cmd = 6;
  void clear_cmd();
  static const int kCmdFieldNumber = 6;
  ::Calmcar::drivers::CHASIS::Gear_report_67_CmdType cmd() const;
  void set_cmd(::Calmcar::drivers::CHASIS::Gear_report_67_CmdType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Gear_report_67)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 acc_state_;
  int reject_;
  int state_;
  int fltbus_;
  int driver_;
  int cmd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Turnsignal_command_68 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Turnsignal_command_68) */ {
 public:
  Turnsignal_command_68();
  virtual ~Turnsignal_command_68();

  Turnsignal_command_68(const Turnsignal_command_68& from);

  inline Turnsignal_command_68& operator=(const Turnsignal_command_68& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Turnsignal_command_68(Turnsignal_command_68&& from) noexcept
    : Turnsignal_command_68() {
    *this = ::std::move(from);
  }

  inline Turnsignal_command_68& operator=(Turnsignal_command_68&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Turnsignal_command_68& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Turnsignal_command_68* internal_default_instance() {
    return reinterpret_cast<const Turnsignal_command_68*>(
               &_Turnsignal_command_68_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Turnsignal_command_68* other);
  friend void swap(Turnsignal_command_68& a, Turnsignal_command_68& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Turnsignal_command_68* New() const final {
    return CreateMaybeMessage<Turnsignal_command_68>(NULL);
  }

  Turnsignal_command_68* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Turnsignal_command_68>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Turnsignal_command_68& from);
  void MergeFrom(const Turnsignal_command_68& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Turnsignal_command_68* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Turnsignal_command_68_TrncmdType TrncmdType;
  static const TrncmdType TRNCMD_NONE =
    Turnsignal_command_68_TrncmdType_TRNCMD_NONE;
  static const TrncmdType TRNCMD_LEFT =
    Turnsignal_command_68_TrncmdType_TRNCMD_LEFT;
  static const TrncmdType TRNCMD_RIGHT =
    Turnsignal_command_68_TrncmdType_TRNCMD_RIGHT;
  static const TrncmdType TRNCMD_DOUBLEFLASH =
    Turnsignal_command_68_TrncmdType_TRNCMD_DOUBLEFLASH;
  static inline bool TrncmdType_IsValid(int value) {
    return Turnsignal_command_68_TrncmdType_IsValid(value);
  }
  static const TrncmdType TrncmdType_MIN =
    Turnsignal_command_68_TrncmdType_TrncmdType_MIN;
  static const TrncmdType TrncmdType_MAX =
    Turnsignal_command_68_TrncmdType_TrncmdType_MAX;
  static const int TrncmdType_ARRAYSIZE =
    Turnsignal_command_68_TrncmdType_TrncmdType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.CHASIS.Turnsignal_command_68.TrncmdType trncmd = 1;
  void clear_trncmd();
  static const int kTrncmdFieldNumber = 1;
  ::Calmcar::drivers::CHASIS::Turnsignal_command_68_TrncmdType trncmd() const;
  void set_trncmd(::Calmcar::drivers::CHASIS::Turnsignal_command_68_TrncmdType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Turnsignal_command_68)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int trncmd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Misc_report_69 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Misc_report_69) */ {
 public:
  Misc_report_69();
  virtual ~Misc_report_69();

  Misc_report_69(const Misc_report_69& from);

  inline Misc_report_69& operator=(const Misc_report_69& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Misc_report_69(Misc_report_69&& from) noexcept
    : Misc_report_69() {
    *this = ::std::move(from);
  }

  inline Misc_report_69& operator=(Misc_report_69&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Misc_report_69& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Misc_report_69* internal_default_instance() {
    return reinterpret_cast<const Misc_report_69*>(
               &_Misc_report_69_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(Misc_report_69* other);
  friend void swap(Misc_report_69& a, Misc_report_69& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Misc_report_69* New() const final {
    return CreateMaybeMessage<Misc_report_69>(NULL);
  }

  Misc_report_69* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Misc_report_69>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Misc_report_69& from);
  void MergeFrom(const Misc_report_69& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Misc_report_69* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Misc_report_69_LdupType LdupType;
  static const LdupType LDUP_NOT_PRESSED =
    Misc_report_69_LdupType_LDUP_NOT_PRESSED;
  static const LdupType LDUP_PRESSED =
    Misc_report_69_LdupType_LDUP_PRESSED;
  static inline bool LdupType_IsValid(int value) {
    return Misc_report_69_LdupType_IsValid(value);
  }
  static const LdupType LdupType_MIN =
    Misc_report_69_LdupType_LdupType_MIN;
  static const LdupType LdupType_MAX =
    Misc_report_69_LdupType_LdupType_MAX;
  static const int LdupType_ARRAYSIZE =
    Misc_report_69_LdupType_LdupType_ARRAYSIZE;

  typedef Misc_report_69_LdrhtType LdrhtType;
  static const LdrhtType LDRHT_NOT_PRESSED =
    Misc_report_69_LdrhtType_LDRHT_NOT_PRESSED;
  static const LdrhtType LDRHT_PRESSED =
    Misc_report_69_LdrhtType_LDRHT_PRESSED;
  static inline bool LdrhtType_IsValid(int value) {
    return Misc_report_69_LdrhtType_IsValid(value);
  }
  static const LdrhtType LdrhtType_MIN =
    Misc_report_69_LdrhtType_LdrhtType_MIN;
  static const LdrhtType LdrhtType_MAX =
    Misc_report_69_LdrhtType_LdrhtType_MAX;
  static const int LdrhtType_ARRAYSIZE =
    Misc_report_69_LdrhtType_LdrhtType_ARRAYSIZE;

  typedef Misc_report_69_LdokType LdokType;
  static const LdokType LDOK_NOT_PRESSED =
    Misc_report_69_LdokType_LDOK_NOT_PRESSED;
  static const LdokType LDOK_PRESSED =
    Misc_report_69_LdokType_LDOK_PRESSED;
  static inline bool LdokType_IsValid(int value) {
    return Misc_report_69_LdokType_IsValid(value);
  }
  static const LdokType LdokType_MIN =
    Misc_report_69_LdokType_LdokType_MIN;
  static const LdokType LdokType_MAX =
    Misc_report_69_LdokType_LdokType_MAX;
  static const int LdokType_ARRAYSIZE =
    Misc_report_69_LdokType_LdokType_ARRAYSIZE;

  typedef Misc_report_69_LdlftType LdlftType;
  static const LdlftType LDLFT_NOT_PRESSED =
    Misc_report_69_LdlftType_LDLFT_NOT_PRESSED;
  static const LdlftType LDLFT_PRESSED =
    Misc_report_69_LdlftType_LDLFT_PRESSED;
  static inline bool LdlftType_IsValid(int value) {
    return Misc_report_69_LdlftType_IsValid(value);
  }
  static const LdlftType LdlftType_MIN =
    Misc_report_69_LdlftType_LdlftType_MIN;
  static const LdlftType LdlftType_MAX =
    Misc_report_69_LdlftType_LdlftType_MAX;
  static const int LdlftType_ARRAYSIZE =
    Misc_report_69_LdlftType_LdlftType_ARRAYSIZE;

  typedef Misc_report_69_LddwnType LddwnType;
  static const LddwnType LDDWN_NOT_PRESSED =
    Misc_report_69_LddwnType_LDDWN_NOT_PRESSED;
  static const LddwnType LDDWN_PRESSED =
    Misc_report_69_LddwnType_LDDWN_PRESSED;
  static inline bool LddwnType_IsValid(int value) {
    return Misc_report_69_LddwnType_IsValid(value);
  }
  static const LddwnType LddwnType_MIN =
    Misc_report_69_LddwnType_LddwnType_MIN;
  static const LddwnType LddwnType_MAX =
    Misc_report_69_LddwnType_LddwnType_MAX;
  static const int LddwnType_ARRAYSIZE =
    Misc_report_69_LddwnType_LddwnType_ARRAYSIZE;

  typedef Misc_report_69_CnclType CnclType;
  static const CnclType CNCL_NOT_PRESSED =
    Misc_report_69_CnclType_CNCL_NOT_PRESSED;
  static const CnclType CNCL_PRESSED =
    Misc_report_69_CnclType_CNCL_PRESSED;
  static inline bool CnclType_IsValid(int value) {
    return Misc_report_69_CnclType_IsValid(value);
  }
  static const CnclType CnclType_MIN =
    Misc_report_69_CnclType_CnclType_MIN;
  static const CnclType CnclType_MAX =
    Misc_report_69_CnclType_CnclType_MAX;
  static const int CnclType_ARRAYSIZE =
    Misc_report_69_CnclType_CnclType_ARRAYSIZE;

  typedef Misc_report_69_ResType ResType;
  static const ResType RES_NOT_PRESSED =
    Misc_report_69_ResType_RES_NOT_PRESSED;
  static const ResType RES_PRESSED =
    Misc_report_69_ResType_RES_PRESSED;
  static inline bool ResType_IsValid(int value) {
    return Misc_report_69_ResType_IsValid(value);
  }
  static const ResType ResType_MIN =
    Misc_report_69_ResType_ResType_MIN;
  static const ResType ResType_MAX =
    Misc_report_69_ResType_ResType_MAX;
  static const int ResType_ARRAYSIZE =
    Misc_report_69_ResType_ResType_ARRAYSIZE;

  typedef Misc_report_69_OnType OnType;
  static const OnType ON_NOT_PRESSED =
    Misc_report_69_OnType_ON_NOT_PRESSED;
  static const OnType ON_PRESSED =
    Misc_report_69_OnType_ON_PRESSED;
  static inline bool OnType_IsValid(int value) {
    return Misc_report_69_OnType_IsValid(value);
  }
  static const OnType OnType_MIN =
    Misc_report_69_OnType_OnType_MIN;
  static const OnType OnType_MAX =
    Misc_report_69_OnType_OnType_MAX;
  static const int OnType_ARRAYSIZE =
    Misc_report_69_OnType_OnType_ARRAYSIZE;

  typedef Misc_report_69_OffType OffType;
  static const OffType OFF_NOT_PRESSED =
    Misc_report_69_OffType_OFF_NOT_PRESSED;
  static const OffType OFF_PRESSED =
    Misc_report_69_OffType_OFF_PRESSED;
  static inline bool OffType_IsValid(int value) {
    return Misc_report_69_OffType_IsValid(value);
  }
  static const OffType OffType_MIN =
    Misc_report_69_OffType_OffType_MIN;
  static const OffType OffType_MAX =
    Misc_report_69_OffType_OffType_MAX;
  static const int OffType_ARRAYSIZE =
    Misc_report_69_OffType_OffType_ARRAYSIZE;

  typedef Misc_report_69_BeltpType BeltpType;
  static const BeltpType BELTP_UNBUCKLED =
    Misc_report_69_BeltpType_BELTP_UNBUCKLED;
  static const BeltpType BELTP_BUCKLED =
    Misc_report_69_BeltpType_BELTP_BUCKLED;
  static inline bool BeltpType_IsValid(int value) {
    return Misc_report_69_BeltpType_IsValid(value);
  }
  static const BeltpType BeltpType_MIN =
    Misc_report_69_BeltpType_BeltpType_MIN;
  static const BeltpType BeltpType_MAX =
    Misc_report_69_BeltpType_BeltpType_MAX;
  static const int BeltpType_ARRAYSIZE =
    Misc_report_69_BeltpType_BeltpType_ARRAYSIZE;

  typedef Misc_report_69_BeltdType BeltdType;
  static const BeltdType BELTD_UNBUCKLED =
    Misc_report_69_BeltdType_BELTD_UNBUCKLED;
  static const BeltdType BELTD_BUCKLED =
    Misc_report_69_BeltdType_BELTD_BUCKLED;
  static inline bool BeltdType_IsValid(int value) {
    return Misc_report_69_BeltdType_IsValid(value);
  }
  static const BeltdType BeltdType_MIN =
    Misc_report_69_BeltdType_BeltdType_MIN;
  static const BeltdType BeltdType_MAX =
    Misc_report_69_BeltdType_BeltdType_MAX;
  static const int BeltdType_ARRAYSIZE =
    Misc_report_69_BeltdType_BeltdType_ARRAYSIZE;

  typedef Misc_report_69_PabagType PabagType;
  static const PabagType PABAG_DISABLED =
    Misc_report_69_PabagType_PABAG_DISABLED;
  static const PabagType PABAG_ENABLED =
    Misc_report_69_PabagType_PABAG_ENABLED;
  static inline bool PabagType_IsValid(int value) {
    return Misc_report_69_PabagType_IsValid(value);
  }
  static const PabagType PabagType_MIN =
    Misc_report_69_PabagType_PabagType_MIN;
  static const PabagType PabagType_MAX =
    Misc_report_69_PabagType_PabagType_MAX;
  static const int PabagType_ARRAYSIZE =
    Misc_report_69_PabagType_PabagType_ARRAYSIZE;

  typedef Misc_report_69_PdectType PdectType;
  static const PdectType PDECT_NO_PASSENGER =
    Misc_report_69_PdectType_PDECT_NO_PASSENGER;
  static const PdectType PDECT_PASSENGER =
    Misc_report_69_PdectType_PDECT_PASSENGER;
  static inline bool PdectType_IsValid(int value) {
    return Misc_report_69_PdectType_IsValid(value);
  }
  static const PdectType PdectType_MIN =
    Misc_report_69_PdectType_PdectType_MIN;
  static const PdectType PdectType_MAX =
    Misc_report_69_PdectType_PdectType_MAX;
  static const int PdectType_ARRAYSIZE =
    Misc_report_69_PdectType_PdectType_ARRAYSIZE;

  typedef Misc_report_69_TrunkType TrunkType;
  static const TrunkType TRUNK_CLOSED =
    Misc_report_69_TrunkType_TRUNK_CLOSED;
  static const TrunkType TRUNK_OPEN =
    Misc_report_69_TrunkType_TRUNK_OPEN;
  static inline bool TrunkType_IsValid(int value) {
    return Misc_report_69_TrunkType_IsValid(value);
  }
  static const TrunkType TrunkType_MIN =
    Misc_report_69_TrunkType_TrunkType_MIN;
  static const TrunkType TrunkType_MAX =
    Misc_report_69_TrunkType_TrunkType_MAX;
  static const int TrunkType_ARRAYSIZE =
    Misc_report_69_TrunkType_TrunkType_ARRAYSIZE;

  typedef Misc_report_69_HoodType HoodType;
  static const HoodType HOOD_CLOSED =
    Misc_report_69_HoodType_HOOD_CLOSED;
  static const HoodType HOOD_OPEN =
    Misc_report_69_HoodType_HOOD_OPEN;
  static inline bool HoodType_IsValid(int value) {
    return Misc_report_69_HoodType_IsValid(value);
  }
  static const HoodType HoodType_MIN =
    Misc_report_69_HoodType_HoodType_MIN;
  static const HoodType HoodType_MAX =
    Misc_report_69_HoodType_HoodType_MAX;
  static const int HoodType_ARRAYSIZE =
    Misc_report_69_HoodType_HoodType_ARRAYSIZE;

  typedef Misc_report_69_DoorrType DoorrType;
  static const DoorrType DOORR_CLOSED =
    Misc_report_69_DoorrType_DOORR_CLOSED;
  static const DoorrType DOORR_OPEN =
    Misc_report_69_DoorrType_DOORR_OPEN;
  static inline bool DoorrType_IsValid(int value) {
    return Misc_report_69_DoorrType_IsValid(value);
  }
  static const DoorrType DoorrType_MIN =
    Misc_report_69_DoorrType_DoorrType_MIN;
  static const DoorrType DoorrType_MAX =
    Misc_report_69_DoorrType_DoorrType_MAX;
  static const int DoorrType_ARRAYSIZE =
    Misc_report_69_DoorrType_DoorrType_ARRAYSIZE;

  typedef Misc_report_69_DoorpType DoorpType;
  static const DoorpType DOORP_CLOSED =
    Misc_report_69_DoorpType_DOORP_CLOSED;
  static const DoorpType DOORP_OPEN =
    Misc_report_69_DoorpType_DOORP_OPEN;
  static inline bool DoorpType_IsValid(int value) {
    return Misc_report_69_DoorpType_IsValid(value);
  }
  static const DoorpType DoorpType_MIN =
    Misc_report_69_DoorpType_DoorpType_MIN;
  static const DoorpType DoorpType_MAX =
    Misc_report_69_DoorpType_DoorpType_MAX;
  static const int DoorpType_ARRAYSIZE =
    Misc_report_69_DoorpType_DoorpType_ARRAYSIZE;

  typedef Misc_report_69_DoorlType DoorlType;
  static const DoorlType DOORL_CLOSED =
    Misc_report_69_DoorlType_DOORL_CLOSED;
  static const DoorlType DOORL_OPEN =
    Misc_report_69_DoorlType_DOORL_OPEN;
  static inline bool DoorlType_IsValid(int value) {
    return Misc_report_69_DoorlType_IsValid(value);
  }
  static const DoorlType DoorlType_MIN =
    Misc_report_69_DoorlType_DoorlType_MIN;
  static const DoorlType DoorlType_MAX =
    Misc_report_69_DoorlType_DoorlType_MAX;
  static const int DoorlType_ARRAYSIZE =
    Misc_report_69_DoorlType_DoorlType_ARRAYSIZE;

  typedef Misc_report_69_DoordType DoordType;
  static const DoordType DOORD_CLOSED =
    Misc_report_69_DoordType_DOORD_CLOSED;
  static const DoordType DOORD_OPEN =
    Misc_report_69_DoordType_DOORD_OPEN;
  static inline bool DoordType_IsValid(int value) {
    return Misc_report_69_DoordType_IsValid(value);
  }
  static const DoordType DoordType_MIN =
    Misc_report_69_DoordType_DoordType_MIN;
  static const DoordType DoordType_MAX =
    Misc_report_69_DoordType_DoordType_MAX;
  static const int DoordType_ARRAYSIZE =
    Misc_report_69_DoordType_DoordType_ARRAYSIZE;

  typedef Misc_report_69_WiperType WiperType;
  static const WiperType WIPER_OFF =
    Misc_report_69_WiperType_WIPER_OFF;
  static const WiperType WIPER_AUTO_OFF =
    Misc_report_69_WiperType_WIPER_AUTO_OFF;
  static const WiperType WIPER_OFF_MOVING =
    Misc_report_69_WiperType_WIPER_OFF_MOVING;
  static const WiperType WIPER_MANUAL_OFF =
    Misc_report_69_WiperType_WIPER_MANUAL_OFF;
  static const WiperType WIPER_MANUAL_ON =
    Misc_report_69_WiperType_WIPER_MANUAL_ON;
  static const WiperType WIPER_MANUAL_LOW =
    Misc_report_69_WiperType_WIPER_MANUAL_LOW;
  static const WiperType WIPER_MANUAL_HIGH =
    Misc_report_69_WiperType_WIPER_MANUAL_HIGH;
  static const WiperType WIPER_MIST_FLICK =
    Misc_report_69_WiperType_WIPER_MIST_FLICK;
  static const WiperType WIPER_WASH =
    Misc_report_69_WiperType_WIPER_WASH;
  static const WiperType WIPER_AUTO_LOW =
    Misc_report_69_WiperType_WIPER_AUTO_LOW;
  static const WiperType WIPER_AUTO_HIGH =
    Misc_report_69_WiperType_WIPER_AUTO_HIGH;
  static const WiperType WIPER_COURTESY_WIPE =
    Misc_report_69_WiperType_WIPER_COURTESY_WIPE;
  static const WiperType WIPER_AUTO_ADJUST =
    Misc_report_69_WiperType_WIPER_AUTO_ADJUST;
  static const WiperType WIPER_RESERVED =
    Misc_report_69_WiperType_WIPER_RESERVED;
  static const WiperType WIPER_STALLED =
    Misc_report_69_WiperType_WIPER_STALLED;
  static const WiperType WIPER_NO_DATA =
    Misc_report_69_WiperType_WIPER_NO_DATA;
  static inline bool WiperType_IsValid(int value) {
    return Misc_report_69_WiperType_IsValid(value);
  }
  static const WiperType WiperType_MIN =
    Misc_report_69_WiperType_WiperType_MIN;
  static const WiperType WiperType_MAX =
    Misc_report_69_WiperType_WiperType_MAX;
  static const int WiperType_ARRAYSIZE =
    Misc_report_69_WiperType_WiperType_ARRAYSIZE;

  typedef Misc_report_69_TrnstatType TrnstatType;
  static const TrnstatType TRNSTAT_NONE =
    Misc_report_69_TrnstatType_TRNSTAT_NONE;
  static const TrnstatType TRNSTAT_LEFT =
    Misc_report_69_TrnstatType_TRNSTAT_LEFT;
  static const TrnstatType TRNSTAT_RIGHT =
    Misc_report_69_TrnstatType_TRNSTAT_RIGHT;
  static inline bool TrnstatType_IsValid(int value) {
    return Misc_report_69_TrnstatType_IsValid(value);
  }
  static const TrnstatType TrnstatType_MIN =
    Misc_report_69_TrnstatType_TrnstatType_MIN;
  static const TrnstatType TrnstatType_MAX =
    Misc_report_69_TrnstatType_TrnstatType_MAX;
  static const int TrnstatType_ARRAYSIZE =
    Misc_report_69_TrnstatType_TrnstatType_ARRAYSIZE;

  typedef Misc_report_69_SincType SincType;
  static const SincType SINC_NOT_PRESSED =
    Misc_report_69_SincType_SINC_NOT_PRESSED;
  static const SincType SINC_PRESSED =
    Misc_report_69_SincType_SINC_PRESSED;
  static inline bool SincType_IsValid(int value) {
    return Misc_report_69_SincType_IsValid(value);
  }
  static const SincType SincType_MIN =
    Misc_report_69_SincType_SincType_MIN;
  static const SincType SincType_MAX =
    Misc_report_69_SincType_SincType_MAX;
  static const int SincType_ARRAYSIZE =
    Misc_report_69_SincType_SincType_ARRAYSIZE;

  typedef Misc_report_69_SdecType SdecType;
  static const SdecType SDEC_NOT_PRESSED =
    Misc_report_69_SdecType_SDEC_NOT_PRESSED;
  static const SdecType SDEC_PRESSED =
    Misc_report_69_SdecType_SDEC_PRESSED;
  static inline bool SdecType_IsValid(int value) {
    return Misc_report_69_SdecType_IsValid(value);
  }
  static const SdecType SdecType_MIN =
    Misc_report_69_SdecType_SdecType_MIN;
  static const SdecType SdecType_MAX =
    Misc_report_69_SdecType_SdecType_MAX;
  static const int SdecType_ARRAYSIZE =
    Misc_report_69_SdecType_SdecType_ARRAYSIZE;

  typedef Misc_report_69_OnoffType OnoffType;
  static const OnoffType ONOFF_NOT_PRESSED =
    Misc_report_69_OnoffType_ONOFF_NOT_PRESSED;
  static const OnoffType ONOFF_PRESSED =
    Misc_report_69_OnoffType_ONOFF_PRESSED;
  static inline bool OnoffType_IsValid(int value) {
    return Misc_report_69_OnoffType_IsValid(value);
  }
  static const OnoffType OnoffType_MIN =
    Misc_report_69_OnoffType_OnoffType_MIN;
  static const OnoffType OnoffType_MAX =
    Misc_report_69_OnoffType_OnoffType_MAX;
  static const int OnoffType_ARRAYSIZE =
    Misc_report_69_OnoffType_OnoffType_ARRAYSIZE;

  typedef Misc_report_69_LkaenType LkaenType;
  static const LkaenType LKAEN_NOT_PRESSED =
    Misc_report_69_LkaenType_LKAEN_NOT_PRESSED;
  static const LkaenType LKAEN_PRESSED =
    Misc_report_69_LkaenType_LKAEN_PRESSED;
  static inline bool LkaenType_IsValid(int value) {
    return Misc_report_69_LkaenType_IsValid(value);
  }
  static const LkaenType LkaenType_MIN =
    Misc_report_69_LkaenType_LkaenType_MIN;
  static const LkaenType LkaenType_MAX =
    Misc_report_69_LkaenType_LkaenType_MAX;
  static const int LkaenType_ARRAYSIZE =
    Misc_report_69_LkaenType_LkaenType_ARRAYSIZE;

  typedef Misc_report_69_HibeamType HibeamType;
  static const HibeamType HIBEAM_NULL =
    Misc_report_69_HibeamType_HIBEAM_NULL;
  static const HibeamType HIBEAM_FLASH_TO_PASS =
    Misc_report_69_HibeamType_HIBEAM_FLASH_TO_PASS;
  static const HibeamType HIBEAM_HIGH =
    Misc_report_69_HibeamType_HIBEAM_HIGH;
  static inline bool HibeamType_IsValid(int value) {
    return Misc_report_69_HibeamType_IsValid(value);
  }
  static const HibeamType HibeamType_MIN =
    Misc_report_69_HibeamType_HibeamType_MIN;
  static const HibeamType HibeamType_MAX =
    Misc_report_69_HibeamType_HibeamType_MAX;
  static const int HibeamType_ARRAYSIZE =
    Misc_report_69_HibeamType_HibeamType_ARRAYSIZE;

  typedef Misc_report_69_GincType GincType;
  static const GincType GINC_NOT_PRESSED =
    Misc_report_69_GincType_GINC_NOT_PRESSED;
  static const GincType GINC_PRESSED =
    Misc_report_69_GincType_GINC_PRESSED;
  static inline bool GincType_IsValid(int value) {
    return Misc_report_69_GincType_IsValid(value);
  }
  static const GincType GincType_MIN =
    Misc_report_69_GincType_GincType_MIN;
  static const GincType GincType_MAX =
    Misc_report_69_GincType_GincType_MAX;
  static const int GincType_ARRAYSIZE =
    Misc_report_69_GincType_GincType_ARRAYSIZE;

  typedef Misc_report_69_GdecType GdecType;
  static const GdecType GDEC_NOT_PRESSED =
    Misc_report_69_GdecType_GDEC_NOT_PRESSED;
  static const GdecType GDEC_PRESSED =
    Misc_report_69_GdecType_GDEC_PRESSED;
  static inline bool GdecType_IsValid(int value) {
    return Misc_report_69_GdecType_IsValid(value);
  }
  static const GdecType GdecType_MIN =
    Misc_report_69_GdecType_GdecType_MIN;
  static const GdecType GdecType_MAX =
    Misc_report_69_GdecType_GdecType_MAX;
  static const int GdecType_ARRAYSIZE =
    Misc_report_69_GdecType_GdecType_ARRAYSIZE;

  typedef Misc_report_69_FltbusType FltbusType;
  static const FltbusType FLTBUS_NO_FAULT =
    Misc_report_69_FltbusType_FLTBUS_NO_FAULT;
  static const FltbusType FLTBUS_FAULT =
    Misc_report_69_FltbusType_FLTBUS_FAULT;
  static inline bool FltbusType_IsValid(int value) {
    return Misc_report_69_FltbusType_IsValid(value);
  }
  static const FltbusType FltbusType_MIN =
    Misc_report_69_FltbusType_FltbusType_MIN;
  static const FltbusType FltbusType_MAX =
    Misc_report_69_FltbusType_FltbusType_MAX;
  static const int FltbusType_ARRAYSIZE =
    Misc_report_69_FltbusType_FltbusType_ARRAYSIZE;

  typedef Misc_report_69_RescnclType RescnclType;
  static const RescnclType RESCNCL_NOT_PRESSED =
    Misc_report_69_RescnclType_RESCNCL_NOT_PRESSED;
  static const RescnclType RESCNCL_PRESSED =
    Misc_report_69_RescnclType_RESCNCL_PRESSED;
  static inline bool RescnclType_IsValid(int value) {
    return Misc_report_69_RescnclType_IsValid(value);
  }
  static const RescnclType RescnclType_MIN =
    Misc_report_69_RescnclType_RescnclType_MIN;
  static const RescnclType RescnclType_MAX =
    Misc_report_69_RescnclType_RescnclType_MAX;
  static const int RescnclType_ARRAYSIZE =
    Misc_report_69_RescnclType_RescnclType_ARRAYSIZE;

  typedef Misc_report_69_AmbientType AmbientType;
  static const AmbientType AMBIENT_DARK =
    Misc_report_69_AmbientType_AMBIENT_DARK;
  static const AmbientType AMBIENT_LIGHT =
    Misc_report_69_AmbientType_AMBIENT_LIGHT;
  static const AmbientType AMBIENT_TWILIGHT =
    Misc_report_69_AmbientType_AMBIENT_TWILIGHT;
  static const AmbientType AMBIENT_TUNNEL_ON =
    Misc_report_69_AmbientType_AMBIENT_TUNNEL_ON;
  static const AmbientType AMBIENT_TUNNEL_OFF =
    Misc_report_69_AmbientType_AMBIENT_TUNNEL_OFF;
  static const AmbientType AMBIENT_NO_DATA =
    Misc_report_69_AmbientType_AMBIENT_NO_DATA;
  static inline bool AmbientType_IsValid(int value) {
    return Misc_report_69_AmbientType_IsValid(value);
  }
  static const AmbientType AmbientType_MIN =
    Misc_report_69_AmbientType_AmbientType_MIN;
  static const AmbientType AmbientType_MAX =
    Misc_report_69_AmbientType_AmbientType_MAX;
  static const int AmbientType_ARRAYSIZE =
    Misc_report_69_AmbientType_AmbientType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdupType ldup = 1;
  void clear_ldup();
  static const int kLdupFieldNumber = 1;
  ::Calmcar::drivers::CHASIS::Misc_report_69_LdupType ldup() const;
  void set_ldup(::Calmcar::drivers::CHASIS::Misc_report_69_LdupType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdrhtType ldrht = 2;
  void clear_ldrht();
  static const int kLdrhtFieldNumber = 2;
  ::Calmcar::drivers::CHASIS::Misc_report_69_LdrhtType ldrht() const;
  void set_ldrht(::Calmcar::drivers::CHASIS::Misc_report_69_LdrhtType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdokType ldok = 3;
  void clear_ldok();
  static const int kLdokFieldNumber = 3;
  ::Calmcar::drivers::CHASIS::Misc_report_69_LdokType ldok() const;
  void set_ldok(::Calmcar::drivers::CHASIS::Misc_report_69_LdokType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.LdlftType ldlft = 4;
  void clear_ldlft();
  static const int kLdlftFieldNumber = 4;
  ::Calmcar::drivers::CHASIS::Misc_report_69_LdlftType ldlft() const;
  void set_ldlft(::Calmcar::drivers::CHASIS::Misc_report_69_LdlftType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.LddwnType lddwn = 5;
  void clear_lddwn();
  static const int kLddwnFieldNumber = 5;
  ::Calmcar::drivers::CHASIS::Misc_report_69_LddwnType lddwn() const;
  void set_lddwn(::Calmcar::drivers::CHASIS::Misc_report_69_LddwnType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.CnclType cncl = 6;
  void clear_cncl();
  static const int kCnclFieldNumber = 6;
  ::Calmcar::drivers::CHASIS::Misc_report_69_CnclType cncl() const;
  void set_cncl(::Calmcar::drivers::CHASIS::Misc_report_69_CnclType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.ResType res = 7;
  void clear_res();
  static const int kResFieldNumber = 7;
  ::Calmcar::drivers::CHASIS::Misc_report_69_ResType res() const;
  void set_res(::Calmcar::drivers::CHASIS::Misc_report_69_ResType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.OnType on = 8;
  void clear_on();
  static const int kOnFieldNumber = 8;
  ::Calmcar::drivers::CHASIS::Misc_report_69_OnType on() const;
  void set_on(::Calmcar::drivers::CHASIS::Misc_report_69_OnType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.OffType off = 9;
  void clear_off();
  static const int kOffFieldNumber = 9;
  ::Calmcar::drivers::CHASIS::Misc_report_69_OffType off() const;
  void set_off(::Calmcar::drivers::CHASIS::Misc_report_69_OffType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.BeltpType beltp = 10;
  void clear_beltp();
  static const int kBeltpFieldNumber = 10;
  ::Calmcar::drivers::CHASIS::Misc_report_69_BeltpType beltp() const;
  void set_beltp(::Calmcar::drivers::CHASIS::Misc_report_69_BeltpType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.BeltdType beltd = 11;
  void clear_beltd();
  static const int kBeltdFieldNumber = 11;
  ::Calmcar::drivers::CHASIS::Misc_report_69_BeltdType beltd() const;
  void set_beltd(::Calmcar::drivers::CHASIS::Misc_report_69_BeltdType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.PabagType pabag = 12;
  void clear_pabag();
  static const int kPabagFieldNumber = 12;
  ::Calmcar::drivers::CHASIS::Misc_report_69_PabagType pabag() const;
  void set_pabag(::Calmcar::drivers::CHASIS::Misc_report_69_PabagType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.PdectType pdect = 13;
  void clear_pdect();
  static const int kPdectFieldNumber = 13;
  ::Calmcar::drivers::CHASIS::Misc_report_69_PdectType pdect() const;
  void set_pdect(::Calmcar::drivers::CHASIS::Misc_report_69_PdectType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.TrunkType trunk = 14;
  void clear_trunk();
  static const int kTrunkFieldNumber = 14;
  ::Calmcar::drivers::CHASIS::Misc_report_69_TrunkType trunk() const;
  void set_trunk(::Calmcar::drivers::CHASIS::Misc_report_69_TrunkType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.HoodType hood = 15;
  void clear_hood();
  static const int kHoodFieldNumber = 15;
  ::Calmcar::drivers::CHASIS::Misc_report_69_HoodType hood() const;
  void set_hood(::Calmcar::drivers::CHASIS::Misc_report_69_HoodType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoorrType doorr = 16;
  void clear_doorr();
  static const int kDoorrFieldNumber = 16;
  ::Calmcar::drivers::CHASIS::Misc_report_69_DoorrType doorr() const;
  void set_doorr(::Calmcar::drivers::CHASIS::Misc_report_69_DoorrType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoorpType doorp = 17;
  void clear_doorp();
  static const int kDoorpFieldNumber = 17;
  ::Calmcar::drivers::CHASIS::Misc_report_69_DoorpType doorp() const;
  void set_doorp(::Calmcar::drivers::CHASIS::Misc_report_69_DoorpType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoorlType doorl = 18;
  void clear_doorl();
  static const int kDoorlFieldNumber = 18;
  ::Calmcar::drivers::CHASIS::Misc_report_69_DoorlType doorl() const;
  void set_doorl(::Calmcar::drivers::CHASIS::Misc_report_69_DoorlType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.DoordType doord = 19;
  void clear_doord();
  static const int kDoordFieldNumber = 19;
  ::Calmcar::drivers::CHASIS::Misc_report_69_DoordType doord() const;
  void set_doord(::Calmcar::drivers::CHASIS::Misc_report_69_DoordType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.WiperType wiper = 20;
  void clear_wiper();
  static const int kWiperFieldNumber = 20;
  ::Calmcar::drivers::CHASIS::Misc_report_69_WiperType wiper() const;
  void set_wiper(::Calmcar::drivers::CHASIS::Misc_report_69_WiperType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.TrnstatType trnstat = 21;
  void clear_trnstat();
  static const int kTrnstatFieldNumber = 21;
  ::Calmcar::drivers::CHASIS::Misc_report_69_TrnstatType trnstat() const;
  void set_trnstat(::Calmcar::drivers::CHASIS::Misc_report_69_TrnstatType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.SincType sinc = 22;
  void clear_sinc();
  static const int kSincFieldNumber = 22;
  ::Calmcar::drivers::CHASIS::Misc_report_69_SincType sinc() const;
  void set_sinc(::Calmcar::drivers::CHASIS::Misc_report_69_SincType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.SdecType sdec = 23;
  void clear_sdec();
  static const int kSdecFieldNumber = 23;
  ::Calmcar::drivers::CHASIS::Misc_report_69_SdecType sdec() const;
  void set_sdec(::Calmcar::drivers::CHASIS::Misc_report_69_SdecType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.OnoffType onoff = 24;
  void clear_onoff();
  static const int kOnoffFieldNumber = 24;
  ::Calmcar::drivers::CHASIS::Misc_report_69_OnoffType onoff() const;
  void set_onoff(::Calmcar::drivers::CHASIS::Misc_report_69_OnoffType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.LkaenType lkaen = 25;
  void clear_lkaen();
  static const int kLkaenFieldNumber = 25;
  ::Calmcar::drivers::CHASIS::Misc_report_69_LkaenType lkaen() const;
  void set_lkaen(::Calmcar::drivers::CHASIS::Misc_report_69_LkaenType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.HibeamType hibeam = 26;
  void clear_hibeam();
  static const int kHibeamFieldNumber = 26;
  ::Calmcar::drivers::CHASIS::Misc_report_69_HibeamType hibeam() const;
  void set_hibeam(::Calmcar::drivers::CHASIS::Misc_report_69_HibeamType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.GincType ginc = 27;
  void clear_ginc();
  static const int kGincFieldNumber = 27;
  ::Calmcar::drivers::CHASIS::Misc_report_69_GincType ginc() const;
  void set_ginc(::Calmcar::drivers::CHASIS::Misc_report_69_GincType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.GdecType gdec = 28;
  void clear_gdec();
  static const int kGdecFieldNumber = 28;
  ::Calmcar::drivers::CHASIS::Misc_report_69_GdecType gdec() const;
  void set_gdec(::Calmcar::drivers::CHASIS::Misc_report_69_GdecType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.FltbusType fltbus = 29;
  void clear_fltbus();
  static const int kFltbusFieldNumber = 29;
  ::Calmcar::drivers::CHASIS::Misc_report_69_FltbusType fltbus() const;
  void set_fltbus(::Calmcar::drivers::CHASIS::Misc_report_69_FltbusType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.RescnclType rescncl = 30;
  void clear_rescncl();
  static const int kRescnclFieldNumber = 30;
  ::Calmcar::drivers::CHASIS::Misc_report_69_RescnclType rescncl() const;
  void set_rescncl(::Calmcar::drivers::CHASIS::Misc_report_69_RescnclType value);

  // .Calmcar.drivers.CHASIS.Misc_report_69.AmbientType ambient = 31;
  void clear_ambient();
  static const int kAmbientFieldNumber = 31;
  ::Calmcar::drivers::CHASIS::Misc_report_69_AmbientType ambient() const;
  void set_ambient(::Calmcar::drivers::CHASIS::Misc_report_69_AmbientType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Misc_report_69)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int ldup_;
  int ldrht_;
  int ldok_;
  int ldlft_;
  int lddwn_;
  int cncl_;
  int res_;
  int on_;
  int off_;
  int beltp_;
  int beltd_;
  int pabag_;
  int pdect_;
  int trunk_;
  int hood_;
  int doorr_;
  int doorp_;
  int doorl_;
  int doord_;
  int wiper_;
  int trnstat_;
  int sinc_;
  int sdec_;
  int onoff_;
  int lkaen_;
  int hibeam_;
  int ginc_;
  int gdec_;
  int fltbus_;
  int rescncl_;
  int ambient_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Pms_current_4_1c3 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Pms_current_4_1c3) */ {
 public:
  Pms_current_4_1c3();
  virtual ~Pms_current_4_1c3();

  Pms_current_4_1c3(const Pms_current_4_1c3& from);

  inline Pms_current_4_1c3& operator=(const Pms_current_4_1c3& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pms_current_4_1c3(Pms_current_4_1c3&& from) noexcept
    : Pms_current_4_1c3() {
    *this = ::std::move(from);
  }

  inline Pms_current_4_1c3& operator=(Pms_current_4_1c3&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Pms_current_4_1c3& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pms_current_4_1c3* internal_default_instance() {
    return reinterpret_cast<const Pms_current_4_1c3*>(
               &_Pms_current_4_1c3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(Pms_current_4_1c3* other);
  friend void swap(Pms_current_4_1c3& a, Pms_current_4_1c3& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pms_current_4_1c3* New() const final {
    return CreateMaybeMessage<Pms_current_4_1c3>(NULL);
  }

  Pms_current_4_1c3* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pms_current_4_1c3>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Pms_current_4_1c3& from);
  void MergeFrom(const Pms_current_4_1c3& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Pms_current_4_1c3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double current15_48v = 1;
  void clear_current15_48v();
  static const int kCurrent1548VFieldNumber = 1;
  double current15_48v() const;
  void set_current15_48v(double value);

  // double current14_5v = 2;
  void clear_current14_5v();
  static const int kCurrent145VFieldNumber = 2;
  double current14_5v() const;
  void set_current14_5v(double value);

  // double current13_hpwr = 3;
  void clear_current13_hpwr();
  static const int kCurrent13HpwrFieldNumber = 3;
  double current13_hpwr() const;
  void set_current13_hpwr(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Pms_current_4_1c3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double current15_48v_;
  double current14_5v_;
  double current13_hpwr_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Pms_current_3_1c2 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Pms_current_3_1c2) */ {
 public:
  Pms_current_3_1c2();
  virtual ~Pms_current_3_1c2();

  Pms_current_3_1c2(const Pms_current_3_1c2& from);

  inline Pms_current_3_1c2& operator=(const Pms_current_3_1c2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pms_current_3_1c2(Pms_current_3_1c2&& from) noexcept
    : Pms_current_3_1c2() {
    *this = ::std::move(from);
  }

  inline Pms_current_3_1c2& operator=(Pms_current_3_1c2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Pms_current_3_1c2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pms_current_3_1c2* internal_default_instance() {
    return reinterpret_cast<const Pms_current_3_1c2*>(
               &_Pms_current_3_1c2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(Pms_current_3_1c2* other);
  friend void swap(Pms_current_3_1c2& a, Pms_current_3_1c2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pms_current_3_1c2* New() const final {
    return CreateMaybeMessage<Pms_current_3_1c2>(NULL);
  }

  Pms_current_3_1c2* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pms_current_3_1c2>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Pms_current_3_1c2& from);
  void MergeFrom(const Pms_current_3_1c2& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Pms_current_3_1c2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double current9 = 1;
  void clear_current9();
  static const int kCurrent9FieldNumber = 1;
  double current9() const;
  void set_current9(double value);

  // double current12 = 2;
  void clear_current12();
  static const int kCurrent12FieldNumber = 2;
  double current12() const;
  void set_current12(double value);

  // double current11 = 3;
  void clear_current11();
  static const int kCurrent11FieldNumber = 3;
  double current11() const;
  void set_current11(double value);

  // double current10 = 4;
  void clear_current10();
  static const int kCurrent10FieldNumber = 4;
  double current10() const;
  void set_current10(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Pms_current_3_1c2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double current9_;
  double current12_;
  double current11_;
  double current10_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Pms_current_2_1c1 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Pms_current_2_1c1) */ {
 public:
  Pms_current_2_1c1();
  virtual ~Pms_current_2_1c1();

  Pms_current_2_1c1(const Pms_current_2_1c1& from);

  inline Pms_current_2_1c1& operator=(const Pms_current_2_1c1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pms_current_2_1c1(Pms_current_2_1c1&& from) noexcept
    : Pms_current_2_1c1() {
    *this = ::std::move(from);
  }

  inline Pms_current_2_1c1& operator=(Pms_current_2_1c1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Pms_current_2_1c1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pms_current_2_1c1* internal_default_instance() {
    return reinterpret_cast<const Pms_current_2_1c1*>(
               &_Pms_current_2_1c1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(Pms_current_2_1c1* other);
  friend void swap(Pms_current_2_1c1& a, Pms_current_2_1c1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pms_current_2_1c1* New() const final {
    return CreateMaybeMessage<Pms_current_2_1c1>(NULL);
  }

  Pms_current_2_1c1* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pms_current_2_1c1>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Pms_current_2_1c1& from);
  void MergeFrom(const Pms_current_2_1c1& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Pms_current_2_1c1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double current8 = 1;
  void clear_current8();
  static const int kCurrent8FieldNumber = 1;
  double current8() const;
  void set_current8(double value);

  // double current7 = 2;
  void clear_current7();
  static const int kCurrent7FieldNumber = 2;
  double current7() const;
  void set_current7(double value);

  // double current6 = 3;
  void clear_current6();
  static const int kCurrent6FieldNumber = 3;
  double current6() const;
  void set_current6(double value);

  // double current5 = 4;
  void clear_current5();
  static const int kCurrent5FieldNumber = 4;
  double current5() const;
  void set_current5(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Pms_current_2_1c1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double current8_;
  double current7_;
  double current6_;
  double current5_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Pms_current_1_1c0 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Pms_current_1_1c0) */ {
 public:
  Pms_current_1_1c0();
  virtual ~Pms_current_1_1c0();

  Pms_current_1_1c0(const Pms_current_1_1c0& from);

  inline Pms_current_1_1c0& operator=(const Pms_current_1_1c0& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pms_current_1_1c0(Pms_current_1_1c0&& from) noexcept
    : Pms_current_1_1c0() {
    *this = ::std::move(from);
  }

  inline Pms_current_1_1c0& operator=(Pms_current_1_1c0&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Pms_current_1_1c0& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pms_current_1_1c0* internal_default_instance() {
    return reinterpret_cast<const Pms_current_1_1c0*>(
               &_Pms_current_1_1c0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(Pms_current_1_1c0* other);
  friend void swap(Pms_current_1_1c0& a, Pms_current_1_1c0& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pms_current_1_1c0* New() const final {
    return CreateMaybeMessage<Pms_current_1_1c0>(NULL);
  }

  Pms_current_1_1c0* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pms_current_1_1c0>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Pms_current_1_1c0& from);
  void MergeFrom(const Pms_current_1_1c0& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Pms_current_1_1c0* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double current4 = 1;
  void clear_current4();
  static const int kCurrent4FieldNumber = 1;
  double current4() const;
  void set_current4(double value);

  // double current3 = 2;
  void clear_current3();
  static const int kCurrent3FieldNumber = 2;
  double current3() const;
  void set_current3(double value);

  // double current2 = 3;
  void clear_current2();
  static const int kCurrent2FieldNumber = 3;
  double current2() const;
  void set_current2(double value);

  // double current1 = 4;
  void clear_current1();
  static const int kCurrent1FieldNumber = 4;
  double current1() const;
  void set_current1(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Pms_current_1_1c0)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double current4_;
  double current3_;
  double current2_;
  double current1_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Pms_cmd_1ba : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Pms_cmd_1ba) */ {
 public:
  Pms_cmd_1ba();
  virtual ~Pms_cmd_1ba();

  Pms_cmd_1ba(const Pms_cmd_1ba& from);

  inline Pms_cmd_1ba& operator=(const Pms_cmd_1ba& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pms_cmd_1ba(Pms_cmd_1ba&& from) noexcept
    : Pms_cmd_1ba() {
    *this = ::std::move(from);
  }

  inline Pms_cmd_1ba& operator=(Pms_cmd_1ba&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Pms_cmd_1ba& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pms_cmd_1ba* internal_default_instance() {
    return reinterpret_cast<const Pms_cmd_1ba*>(
               &_Pms_cmd_1ba_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(Pms_cmd_1ba* other);
  friend void swap(Pms_cmd_1ba& a, Pms_cmd_1ba& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pms_cmd_1ba* New() const final {
    return CreateMaybeMessage<Pms_cmd_1ba>(NULL);
  }

  Pms_cmd_1ba* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pms_cmd_1ba>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Pms_cmd_1ba& from);
  void MergeFrom(const Pms_cmd_1ba& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Pms_cmd_1ba* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool gate9 = 1;
  void clear_gate9();
  static const int kGate9FieldNumber = 1;
  bool gate9() const;
  void set_gate9(bool value);

  // bool gate8 = 2;
  void clear_gate8();
  static const int kGate8FieldNumber = 2;
  bool gate8() const;
  void set_gate8(bool value);

  // bool gate7 = 3;
  void clear_gate7();
  static const int kGate7FieldNumber = 3;
  bool gate7() const;
  void set_gate7(bool value);

  // bool gate6 = 4;
  void clear_gate6();
  static const int kGate6FieldNumber = 4;
  bool gate6() const;
  void set_gate6(bool value);

  // bool gate5 = 5;
  void clear_gate5();
  static const int kGate5FieldNumber = 5;
  bool gate5() const;
  void set_gate5(bool value);

  // bool gate4 = 6;
  void clear_gate4();
  static const int kGate4FieldNumber = 6;
  bool gate4() const;
  void set_gate4(bool value);

  // bool gate3 = 7;
  void clear_gate3();
  static const int kGate3FieldNumber = 7;
  bool gate3() const;
  void set_gate3(bool value);

  // bool gate2 = 8;
  void clear_gate2();
  static const int kGate2FieldNumber = 8;
  bool gate2() const;
  void set_gate2(bool value);

  // bool gate16 = 9;
  void clear_gate16();
  static const int kGate16FieldNumber = 9;
  bool gate16() const;
  void set_gate16(bool value);

  // bool gate15 = 10;
  void clear_gate15();
  static const int kGate15FieldNumber = 10;
  bool gate15() const;
  void set_gate15(bool value);

  // bool gate14 = 11;
  void clear_gate14();
  static const int kGate14FieldNumber = 11;
  bool gate14() const;
  void set_gate14(bool value);

  // bool gate13 = 12;
  void clear_gate13();
  static const int kGate13FieldNumber = 12;
  bool gate13() const;
  void set_gate13(bool value);

  // bool gate12 = 13;
  void clear_gate12();
  static const int kGate12FieldNumber = 13;
  bool gate12() const;
  void set_gate12(bool value);

  // bool gate11 = 14;
  void clear_gate11();
  static const int kGate11FieldNumber = 14;
  bool gate11() const;
  void set_gate11(bool value);

  // bool gate10 = 15;
  void clear_gate10();
  static const int kGate10FieldNumber = 15;
  bool gate10() const;
  void set_gate10(bool value);

  // bool gate1 = 16;
  void clear_gate1();
  static const int kGate1FieldNumber = 16;
  bool gate1() const;
  void set_gate1(bool value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Pms_cmd_1ba)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  bool gate9_;
  bool gate8_;
  bool gate7_;
  bool gate6_;
  bool gate5_;
  bool gate4_;
  bool gate3_;
  bool gate2_;
  bool gate16_;
  bool gate15_;
  bool gate14_;
  bool gate13_;
  bool gate12_;
  bool gate11_;
  bool gate10_;
  bool gate1_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Wheelspeed_report_6a : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Wheelspeed_report_6a) */ {
 public:
  Wheelspeed_report_6a();
  virtual ~Wheelspeed_report_6a();

  Wheelspeed_report_6a(const Wheelspeed_report_6a& from);

  inline Wheelspeed_report_6a& operator=(const Wheelspeed_report_6a& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Wheelspeed_report_6a(Wheelspeed_report_6a&& from) noexcept
    : Wheelspeed_report_6a() {
    *this = ::std::move(from);
  }

  inline Wheelspeed_report_6a& operator=(Wheelspeed_report_6a&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Wheelspeed_report_6a& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Wheelspeed_report_6a* internal_default_instance() {
    return reinterpret_cast<const Wheelspeed_report_6a*>(
               &_Wheelspeed_report_6a_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(Wheelspeed_report_6a* other);
  friend void swap(Wheelspeed_report_6a& a, Wheelspeed_report_6a& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Wheelspeed_report_6a* New() const final {
    return CreateMaybeMessage<Wheelspeed_report_6a>(NULL);
  }

  Wheelspeed_report_6a* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Wheelspeed_report_6a>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Wheelspeed_report_6a& from);
  void MergeFrom(const Wheelspeed_report_6a& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Wheelspeed_report_6a* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double rr = 1;
  void clear_rr();
  static const int kRrFieldNumber = 1;
  double rr() const;
  void set_rr(double value);

  // double rl = 2;
  void clear_rl();
  static const int kRlFieldNumber = 2;
  double rl() const;
  void set_rl(double value);

  // double fr = 3;
  void clear_fr();
  static const int kFrFieldNumber = 3;
  double fr() const;
  void set_fr(double value);

  // double fl = 4;
  void clear_fl();
  static const int kFlFieldNumber = 4;
  double fl() const;
  void set_fl(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Wheelspeed_report_6a)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double rr_;
  double rl_;
  double fr_;
  double fl_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Accel_report_6b : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Accel_report_6b) */ {
 public:
  Accel_report_6b();
  virtual ~Accel_report_6b();

  Accel_report_6b(const Accel_report_6b& from);

  inline Accel_report_6b& operator=(const Accel_report_6b& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Accel_report_6b(Accel_report_6b&& from) noexcept
    : Accel_report_6b() {
    *this = ::std::move(from);
  }

  inline Accel_report_6b& operator=(Accel_report_6b&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Accel_report_6b& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Accel_report_6b* internal_default_instance() {
    return reinterpret_cast<const Accel_report_6b*>(
               &_Accel_report_6b_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(Accel_report_6b* other);
  friend void swap(Accel_report_6b& a, Accel_report_6b& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Accel_report_6b* New() const final {
    return CreateMaybeMessage<Accel_report_6b>(NULL);
  }

  Accel_report_6b* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Accel_report_6b>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Accel_report_6b& from);
  void MergeFrom(const Accel_report_6b& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Accel_report_6b* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double vert = 1;
  void clear_vert();
  static const int kVertFieldNumber = 1;
  double vert() const;
  void set_vert(double value);

  // double my_long = 2;
  void clear_my_long();
  static const int kMyLongFieldNumber = 2;
  double my_long() const;
  void set_my_long(double value);

  // double lat = 3;
  void clear_lat();
  static const int kLatFieldNumber = 3;
  double lat() const;
  void set_lat(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Accel_report_6b)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double vert_;
  double my_long_;
  double lat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gyro_report_6c : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Gyro_report_6c) */ {
 public:
  Gyro_report_6c();
  virtual ~Gyro_report_6c();

  Gyro_report_6c(const Gyro_report_6c& from);

  inline Gyro_report_6c& operator=(const Gyro_report_6c& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gyro_report_6c(Gyro_report_6c&& from) noexcept
    : Gyro_report_6c() {
    *this = ::std::move(from);
  }

  inline Gyro_report_6c& operator=(Gyro_report_6c&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gyro_report_6c& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gyro_report_6c* internal_default_instance() {
    return reinterpret_cast<const Gyro_report_6c*>(
               &_Gyro_report_6c_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(Gyro_report_6c* other);
  friend void swap(Gyro_report_6c& a, Gyro_report_6c& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gyro_report_6c* New() const final {
    return CreateMaybeMessage<Gyro_report_6c>(NULL);
  }

  Gyro_report_6c* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gyro_report_6c>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gyro_report_6c& from);
  void MergeFrom(const Gyro_report_6c& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gyro_report_6c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double yaw = 1;
  void clear_yaw();
  static const int kYawFieldNumber = 1;
  double yaw() const;
  void set_yaw(double value);

  // double roll = 2;
  void clear_roll();
  static const int kRollFieldNumber = 2;
  double roll() const;
  void set_roll(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Gyro_report_6c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double yaw_;
  double roll_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gps_1_report_6d : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Gps_1_report_6d) */ {
 public:
  Gps_1_report_6d();
  virtual ~Gps_1_report_6d();

  Gps_1_report_6d(const Gps_1_report_6d& from);

  inline Gps_1_report_6d& operator=(const Gps_1_report_6d& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gps_1_report_6d(Gps_1_report_6d&& from) noexcept
    : Gps_1_report_6d() {
    *this = ::std::move(from);
  }

  inline Gps_1_report_6d& operator=(Gps_1_report_6d&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gps_1_report_6d& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gps_1_report_6d* internal_default_instance() {
    return reinterpret_cast<const Gps_1_report_6d*>(
               &_Gps_1_report_6d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(Gps_1_report_6d* other);
  friend void swap(Gps_1_report_6d& a, Gps_1_report_6d& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gps_1_report_6d* New() const final {
    return CreateMaybeMessage<Gps_1_report_6d>(NULL);
  }

  Gps_1_report_6d* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gps_1_report_6d>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gps_1_report_6d& from);
  void MergeFrom(const Gps_1_report_6d& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gps_1_report_6d* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Gps_1_report_6d_ValidType ValidType;
  static const ValidType VALID_INVALID =
    Gps_1_report_6d_ValidType_VALID_INVALID;
  static const ValidType VALID_VALID =
    Gps_1_report_6d_ValidType_VALID_VALID;
  static inline bool ValidType_IsValid(int value) {
    return Gps_1_report_6d_ValidType_IsValid(value);
  }
  static const ValidType ValidType_MIN =
    Gps_1_report_6d_ValidType_ValidType_MIN;
  static const ValidType ValidType_MAX =
    Gps_1_report_6d_ValidType_ValidType_MAX;
  static const int ValidType_ARRAYSIZE =
    Gps_1_report_6d_ValidType_ValidType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // double longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  double longitude() const;
  void set_longitude(double value);

  // double latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  double latitude() const;
  void set_latitude(double value);

  // .Calmcar.drivers.CHASIS.Gps_1_report_6d.ValidType valid = 1;
  void clear_valid();
  static const int kValidFieldNumber = 1;
  ::Calmcar::drivers::CHASIS::Gps_1_report_6d_ValidType valid() const;
  void set_valid(::Calmcar::drivers::CHASIS::Gps_1_report_6d_ValidType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Gps_1_report_6d)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double longitude_;
  double latitude_;
  int valid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gps_2_report_6e : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Gps_2_report_6e) */ {
 public:
  Gps_2_report_6e();
  virtual ~Gps_2_report_6e();

  Gps_2_report_6e(const Gps_2_report_6e& from);

  inline Gps_2_report_6e& operator=(const Gps_2_report_6e& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gps_2_report_6e(Gps_2_report_6e&& from) noexcept
    : Gps_2_report_6e() {
    *this = ::std::move(from);
  }

  inline Gps_2_report_6e& operator=(Gps_2_report_6e&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gps_2_report_6e& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gps_2_report_6e* internal_default_instance() {
    return reinterpret_cast<const Gps_2_report_6e*>(
               &_Gps_2_report_6e_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(Gps_2_report_6e* other);
  friend void swap(Gps_2_report_6e& a, Gps_2_report_6e& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gps_2_report_6e* New() const final {
    return CreateMaybeMessage<Gps_2_report_6e>(NULL);
  }

  Gps_2_report_6e* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gps_2_report_6e>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gps_2_report_6e& from);
  void MergeFrom(const Gps_2_report_6e& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gps_2_report_6e* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Gps_2_report_6e_InfType InfType;
  static const InfType INF_ACTUAL_POSITION =
    Gps_2_report_6e_InfType_INF_ACTUAL_POSITION;
  static const InfType INF_INFERRED_POSITION =
    Gps_2_report_6e_InfType_INF_INFERRED_POSITION;
  static inline bool InfType_IsValid(int value) {
    return Gps_2_report_6e_InfType_IsValid(value);
  }
  static const InfType InfType_MIN =
    Gps_2_report_6e_InfType_InfType_MIN;
  static const InfType InfType_MAX =
    Gps_2_report_6e_InfType_InfType_MAX;
  static const int InfType_ARRAYSIZE =
    Gps_2_report_6e_InfType_InfType_ARRAYSIZE;

  typedef Gps_2_report_6e_FltgpsType FltgpsType;
  static const FltgpsType FLTGPS_NO_FAULT =
    Gps_2_report_6e_FltgpsType_FLTGPS_NO_FAULT;
  static const FltgpsType FLTGPS_FAULT =
    Gps_2_report_6e_FltgpsType_FLTGPS_FAULT;
  static inline bool FltgpsType_IsValid(int value) {
    return Gps_2_report_6e_FltgpsType_IsValid(value);
  }
  static const FltgpsType FltgpsType_MIN =
    Gps_2_report_6e_FltgpsType_FltgpsType_MIN;
  static const FltgpsType FltgpsType_MAX =
    Gps_2_report_6e_FltgpsType_FltgpsType_MAX;
  static const int FltgpsType_ARRAYSIZE =
    Gps_2_report_6e_FltgpsType_FltgpsType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.CHASIS.Gps_2_report_6e.InfType inf = 1;
  void clear_inf();
  static const int kInfFieldNumber = 1;
  ::Calmcar::drivers::CHASIS::Gps_2_report_6e_InfType inf() const;
  void set_inf(::Calmcar::drivers::CHASIS::Gps_2_report_6e_InfType value);

  // .Calmcar.drivers.CHASIS.Gps_2_report_6e.FltgpsType fltgps = 2;
  void clear_fltgps();
  static const int kFltgpsFieldNumber = 2;
  ::Calmcar::drivers::CHASIS::Gps_2_report_6e_FltgpsType fltgps() const;
  void set_fltgps(::Calmcar::drivers::CHASIS::Gps_2_report_6e_FltgpsType value);

  // double pdop = 3;
  void clear_pdop();
  static const int kPdopFieldNumber = 3;
  double pdop() const;
  void set_pdop(double value);

  // double compass = 4;
  void clear_compass();
  static const int kCompassFieldNumber = 4;
  double compass() const;
  void set_compass(double value);

  // int32 seconds = 5;
  void clear_seconds();
  static const int kSecondsFieldNumber = 5;
  ::google::protobuf::int32 seconds() const;
  void set_seconds(::google::protobuf::int32 value);

  // int32 minutes = 6;
  void clear_minutes();
  static const int kMinutesFieldNumber = 6;
  ::google::protobuf::int32 minutes() const;
  void set_minutes(::google::protobuf::int32 value);

  // int32 hours = 7;
  void clear_hours();
  static const int kHoursFieldNumber = 7;
  ::google::protobuf::int32 hours() const;
  void set_hours(::google::protobuf::int32 value);

  // int32 day = 8;
  void clear_day();
  static const int kDayFieldNumber = 8;
  ::google::protobuf::int32 day() const;
  void set_day(::google::protobuf::int32 value);

  // int32 month = 9;
  void clear_month();
  static const int kMonthFieldNumber = 9;
  ::google::protobuf::int32 month() const;
  void set_month(::google::protobuf::int32 value);

  // int32 year = 10;
  void clear_year();
  static const int kYearFieldNumber = 10;
  ::google::protobuf::int32 year() const;
  void set_year(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Gps_2_report_6e)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int inf_;
  int fltgps_;
  double pdop_;
  double compass_;
  ::google::protobuf::int32 seconds_;
  ::google::protobuf::int32 minutes_;
  ::google::protobuf::int32 hours_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 month_;
  ::google::protobuf::int32 year_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gps_3_report_6f : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Gps_3_report_6f) */ {
 public:
  Gps_3_report_6f();
  virtual ~Gps_3_report_6f();

  Gps_3_report_6f(const Gps_3_report_6f& from);

  inline Gps_3_report_6f& operator=(const Gps_3_report_6f& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gps_3_report_6f(Gps_3_report_6f&& from) noexcept
    : Gps_3_report_6f() {
    *this = ::std::move(from);
  }

  inline Gps_3_report_6f& operator=(Gps_3_report_6f&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gps_3_report_6f& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gps_3_report_6f* internal_default_instance() {
    return reinterpret_cast<const Gps_3_report_6f*>(
               &_Gps_3_report_6f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(Gps_3_report_6f* other);
  friend void swap(Gps_3_report_6f& a, Gps_3_report_6f& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gps_3_report_6f* New() const final {
    return CreateMaybeMessage<Gps_3_report_6f>(NULL);
  }

  Gps_3_report_6f* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gps_3_report_6f>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gps_3_report_6f& from);
  void MergeFrom(const Gps_3_report_6f& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gps_3_report_6f* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Gps_3_report_6f_QualityType QualityType;
  static const QualityType QUALITY_NO_FIX =
    Gps_3_report_6f_QualityType_QUALITY_NO_FIX;
  static const QualityType QUALITY_2D_FIX =
    Gps_3_report_6f_QualityType_QUALITY_2D_FIX;
  static const QualityType QUALITY_3D_FIX =
    Gps_3_report_6f_QualityType_QUALITY_3D_FIX;
  static inline bool QualityType_IsValid(int value) {
    return Gps_3_report_6f_QualityType_IsValid(value);
  }
  static const QualityType QualityType_MIN =
    Gps_3_report_6f_QualityType_QualityType_MIN;
  static const QualityType QualityType_MAX =
    Gps_3_report_6f_QualityType_QualityType_MAX;
  static const int QualityType_ARRAYSIZE =
    Gps_3_report_6f_QualityType_QualityType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // int32 numsat = 1;
  void clear_numsat();
  static const int kNumsatFieldNumber = 1;
  ::google::protobuf::int32 numsat() const;
  void set_numsat(::google::protobuf::int32 value);

  // .Calmcar.drivers.CHASIS.Gps_3_report_6f.QualityType quality = 2;
  void clear_quality();
  static const int kQualityFieldNumber = 2;
  ::Calmcar::drivers::CHASIS::Gps_3_report_6f_QualityType quality() const;
  void set_quality(::Calmcar::drivers::CHASIS::Gps_3_report_6f_QualityType value);

  // double vdop = 3;
  void clear_vdop();
  static const int kVdopFieldNumber = 3;
  double vdop() const;
  void set_vdop(double value);

  // double hdop = 4;
  void clear_hdop();
  static const int kHdopFieldNumber = 4;
  double hdop() const;
  void set_hdop(double value);

  // double heading = 6;
  void clear_heading();
  static const int kHeadingFieldNumber = 6;
  double heading() const;
  void set_heading(double value);

  // double altitude = 7;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 7;
  double altitude() const;
  void set_altitude(double value);

  // int32 speed = 5;
  void clear_speed();
  static const int kSpeedFieldNumber = 5;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Gps_3_report_6f)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 numsat_;
  int quality_;
  double vdop_;
  double hdop_;
  double heading_;
  double altitude_;
  ::google::protobuf::int32 speed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Throttleinfo_report_75 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Throttleinfo_report_75) */ {
 public:
  Throttleinfo_report_75();
  virtual ~Throttleinfo_report_75();

  Throttleinfo_report_75(const Throttleinfo_report_75& from);

  inline Throttleinfo_report_75& operator=(const Throttleinfo_report_75& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Throttleinfo_report_75(Throttleinfo_report_75&& from) noexcept
    : Throttleinfo_report_75() {
    *this = ::std::move(from);
  }

  inline Throttleinfo_report_75& operator=(Throttleinfo_report_75&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Throttleinfo_report_75& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Throttleinfo_report_75* internal_default_instance() {
    return reinterpret_cast<const Throttleinfo_report_75*>(
               &_Throttleinfo_report_75_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(Throttleinfo_report_75* other);
  friend void swap(Throttleinfo_report_75& a, Throttleinfo_report_75& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Throttleinfo_report_75* New() const final {
    return CreateMaybeMessage<Throttleinfo_report_75>(NULL);
  }

  Throttleinfo_report_75* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Throttleinfo_report_75>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Throttleinfo_report_75& from);
  void MergeFrom(const Throttleinfo_report_75& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Throttleinfo_report_75* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double apedrate = 2;
  void clear_apedrate();
  static const int kApedrateFieldNumber = 2;
  double apedrate() const;
  void set_apedrate(double value);

  // double apedpc = 3;
  void clear_apedpc();
  static const int kApedpcFieldNumber = 3;
  double apedpc() const;
  void set_apedpc(double value);

  // double rpm = 4;
  void clear_rpm();
  static const int kRpmFieldNumber = 4;
  double rpm() const;
  void set_rpm(double value);

  // int32 odo = 1;
  void clear_odo();
  static const int kOdoFieldNumber = 1;
  ::google::protobuf::int32 odo() const;
  void set_odo(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Throttleinfo_report_75)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double apedrate_;
  double apedpc_;
  double rpm_;
  ::google::protobuf::int32 odo_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Brakeinfo_report_74 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Brakeinfo_report_74) */ {
 public:
  Brakeinfo_report_74();
  virtual ~Brakeinfo_report_74();

  Brakeinfo_report_74(const Brakeinfo_report_74& from);

  inline Brakeinfo_report_74& operator=(const Brakeinfo_report_74& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Brakeinfo_report_74(Brakeinfo_report_74&& from) noexcept
    : Brakeinfo_report_74() {
    *this = ::std::move(from);
  }

  inline Brakeinfo_report_74& operator=(Brakeinfo_report_74&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Brakeinfo_report_74& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Brakeinfo_report_74* internal_default_instance() {
    return reinterpret_cast<const Brakeinfo_report_74*>(
               &_Brakeinfo_report_74_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(Brakeinfo_report_74* other);
  friend void swap(Brakeinfo_report_74& a, Brakeinfo_report_74& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Brakeinfo_report_74* New() const final {
    return CreateMaybeMessage<Brakeinfo_report_74>(NULL);
  }

  Brakeinfo_report_74* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Brakeinfo_report_74>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Brakeinfo_report_74& from);
  void MergeFrom(const Brakeinfo_report_74& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Brakeinfo_report_74* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Brakeinfo_report_74_TraceType TraceType;
  static const TraceType TRACE_DISABLED =
    Brakeinfo_report_74_TraceType_TRACE_DISABLED;
  static const TraceType TRACE_ENABLED =
    Brakeinfo_report_74_TraceType_TRACE_ENABLED;
  static inline bool TraceType_IsValid(int value) {
    return Brakeinfo_report_74_TraceType_IsValid(value);
  }
  static const TraceType TraceType_MIN =
    Brakeinfo_report_74_TraceType_TraceType_MIN;
  static const TraceType TraceType_MAX =
    Brakeinfo_report_74_TraceType_TraceType_MAX;
  static const int TraceType_ARRAYSIZE =
    Brakeinfo_report_74_TraceType_TraceType_ARRAYSIZE;

  typedef Brakeinfo_report_74_TracaType TracaType;
  static const TracaType TRACA_INACTIVE =
    Brakeinfo_report_74_TracaType_TRACA_INACTIVE;
  static const TracaType TRACA_ACTIVE =
    Brakeinfo_report_74_TracaType_TRACA_ACTIVE;
  static inline bool TracaType_IsValid(int value) {
    return Brakeinfo_report_74_TracaType_IsValid(value);
  }
  static const TracaType TracaType_MIN =
    Brakeinfo_report_74_TracaType_TracaType_MIN;
  static const TracaType TracaType_MAX =
    Brakeinfo_report_74_TracaType_TracaType_MAX;
  static const int TracaType_ARRAYSIZE =
    Brakeinfo_report_74_TracaType_TracaType_ARRAYSIZE;

  typedef Brakeinfo_report_74_StabeType StabeType;
  static const StabeType STABE_DISABLED =
    Brakeinfo_report_74_StabeType_STABE_DISABLED;
  static const StabeType STABE_ENABLED =
    Brakeinfo_report_74_StabeType_STABE_ENABLED;
  static inline bool StabeType_IsValid(int value) {
    return Brakeinfo_report_74_StabeType_IsValid(value);
  }
  static const StabeType StabeType_MIN =
    Brakeinfo_report_74_StabeType_StabeType_MIN;
  static const StabeType StabeType_MAX =
    Brakeinfo_report_74_StabeType_StabeType_MAX;
  static const int StabeType_ARRAYSIZE =
    Brakeinfo_report_74_StabeType_StabeType_ARRAYSIZE;

  typedef Brakeinfo_report_74_StabaType StabaType;
  static const StabaType STABA_INACTIVE =
    Brakeinfo_report_74_StabaType_STABA_INACTIVE;
  static const StabaType STABA_ACTIVE =
    Brakeinfo_report_74_StabaType_STABA_ACTIVE;
  static inline bool StabaType_IsValid(int value) {
    return Brakeinfo_report_74_StabaType_IsValid(value);
  }
  static const StabaType StabaType_MIN =
    Brakeinfo_report_74_StabaType_StabaType_MIN;
  static const StabaType StabaType_MAX =
    Brakeinfo_report_74_StabaType_StabaType_MAX;
  static const int StabaType_ARRAYSIZE =
    Brakeinfo_report_74_StabaType_StabaType_ARRAYSIZE;

  typedef Brakeinfo_report_74_AbseType AbseType;
  static const AbseType ABSE_DISABLED =
    Brakeinfo_report_74_AbseType_ABSE_DISABLED;
  static const AbseType ABSE_ENABLED =
    Brakeinfo_report_74_AbseType_ABSE_ENABLED;
  static inline bool AbseType_IsValid(int value) {
    return Brakeinfo_report_74_AbseType_IsValid(value);
  }
  static const AbseType AbseType_MIN =
    Brakeinfo_report_74_AbseType_AbseType_MIN;
  static const AbseType AbseType_MAX =
    Brakeinfo_report_74_AbseType_AbseType_MAX;
  static const int AbseType_ARRAYSIZE =
    Brakeinfo_report_74_AbseType_AbseType_ARRAYSIZE;

  typedef Brakeinfo_report_74_AbsaType AbsaType;
  static const AbsaType ABSA_INACTIVE =
    Brakeinfo_report_74_AbsaType_ABSA_INACTIVE;
  static const AbsaType ABSA_ACTIVE =
    Brakeinfo_report_74_AbsaType_ABSA_ACTIVE;
  static inline bool AbsaType_IsValid(int value) {
    return Brakeinfo_report_74_AbsaType_IsValid(value);
  }
  static const AbsaType AbsaType_MIN =
    Brakeinfo_report_74_AbsaType_AbsaType_MIN;
  static const AbsaType AbsaType_MAX =
    Brakeinfo_report_74_AbsaType_AbsaType_MAX;
  static const int AbsaType_ARRAYSIZE =
    Brakeinfo_report_74_AbsaType_AbsaType_ARRAYSIZE;

  typedef Brakeinfo_report_74_PbrakeType PbrakeType;
  static const PbrakeType PBRAKE_OFF =
    Brakeinfo_report_74_PbrakeType_PBRAKE_OFF;
  static const PbrakeType PBRAKE_TRANSITION =
    Brakeinfo_report_74_PbrakeType_PBRAKE_TRANSITION;
  static const PbrakeType PBRAKE_ON =
    Brakeinfo_report_74_PbrakeType_PBRAKE_ON;
  static const PbrakeType PBRAKE_FAULT =
    Brakeinfo_report_74_PbrakeType_PBRAKE_FAULT;
  static inline bool PbrakeType_IsValid(int value) {
    return Brakeinfo_report_74_PbrakeType_IsValid(value);
  }
  static const PbrakeType PbrakeType_MIN =
    Brakeinfo_report_74_PbrakeType_PbrakeType_MIN;
  static const PbrakeType PbrakeType_MAX =
    Brakeinfo_report_74_PbrakeType_PbrakeType_MAX;
  static const int PbrakeType_ARRAYSIZE =
    Brakeinfo_report_74_PbrakeType_PbrakeType_ARRAYSIZE;

  typedef Brakeinfo_report_74_StatnryType StatnryType;
  static const StatnryType STATNRY_MOVING =
    Brakeinfo_report_74_StatnryType_STATNRY_MOVING;
  static const StatnryType STATNRY_STATIONARY =
    Brakeinfo_report_74_StatnryType_STATNRY_STATIONARY;
  static inline bool StatnryType_IsValid(int value) {
    return Brakeinfo_report_74_StatnryType_IsValid(value);
  }
  static const StatnryType StatnryType_MIN =
    Brakeinfo_report_74_StatnryType_StatnryType_MIN;
  static const StatnryType StatnryType_MAX =
    Brakeinfo_report_74_StatnryType_StatnryType_MAX;
  static const int StatnryType_ARRAYSIZE =
    Brakeinfo_report_74_StatnryType_StatnryType_ARRAYSIZE;

  typedef Brakeinfo_report_74_HsastatType HsastatType;
  static const HsastatType HSASTAT_INACTIVE =
    Brakeinfo_report_74_HsastatType_HSASTAT_INACTIVE;
  static const HsastatType HSASTAT_FINDING_GRADIENT =
    Brakeinfo_report_74_HsastatType_HSASTAT_FINDING_GRADIENT;
  static const HsastatType HSASTAT_ACTIVE_PRESSED =
    Brakeinfo_report_74_HsastatType_HSASTAT_ACTIVE_PRESSED;
  static const HsastatType HSASTAT_ACTIVE_RELEASED =
    Brakeinfo_report_74_HsastatType_HSASTAT_ACTIVE_RELEASED;
  static const HsastatType HSASTAT_FAST_RELEASE =
    Brakeinfo_report_74_HsastatType_HSASTAT_FAST_RELEASE;
  static const HsastatType HSASTAT_SLOW_RELEASE =
    Brakeinfo_report_74_HsastatType_HSASTAT_SLOW_RELEASE;
  static const HsastatType HSASTAT_FAILED =
    Brakeinfo_report_74_HsastatType_HSASTAT_FAILED;
  static const HsastatType HSASTAT_UNDEFINED =
    Brakeinfo_report_74_HsastatType_HSASTAT_UNDEFINED;
  static inline bool HsastatType_IsValid(int value) {
    return Brakeinfo_report_74_HsastatType_IsValid(value);
  }
  static const HsastatType HsastatType_MIN =
    Brakeinfo_report_74_HsastatType_HsastatType_MIN;
  static const HsastatType HsastatType_MAX =
    Brakeinfo_report_74_HsastatType_HsastatType_MAX;
  static const int HsastatType_ARRAYSIZE =
    Brakeinfo_report_74_HsastatType_HsastatType_ARRAYSIZE;

  typedef Brakeinfo_report_74_HsamodeType HsamodeType;
  static const HsamodeType HSAMODE_OFF =
    Brakeinfo_report_74_HsamodeType_HSAMODE_OFF;
  static const HsamodeType HSAMODE_AUTO =
    Brakeinfo_report_74_HsamodeType_HSAMODE_AUTO;
  static const HsamodeType HSAMODE_MANUAL =
    Brakeinfo_report_74_HsamodeType_HSAMODE_MANUAL;
  static const HsamodeType HSAMODE_UNDEFINED =
    Brakeinfo_report_74_HsamodeType_HSAMODE_UNDEFINED;
  static inline bool HsamodeType_IsValid(int value) {
    return Brakeinfo_report_74_HsamodeType_IsValid(value);
  }
  static const HsamodeType HsamodeType_MIN =
    Brakeinfo_report_74_HsamodeType_HsamodeType_MIN;
  static const HsamodeType HsamodeType_MAX =
    Brakeinfo_report_74_HsamodeType_HsamodeType_MAX;
  static const int HsamodeType_ARRAYSIZE =
    Brakeinfo_report_74_HsamodeType_HsamodeType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.TraceType trace = 1;
  void clear_trace();
  static const int kTraceFieldNumber = 1;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TraceType trace() const;
  void set_trace(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TraceType value);

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.TracaType traca = 2;
  void clear_traca();
  static const int kTracaFieldNumber = 2;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TracaType traca() const;
  void set_traca(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TracaType value);

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StabeType stabe = 3;
  void clear_stabe();
  static const int kStabeFieldNumber = 3;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabeType stabe() const;
  void set_stabe(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabeType value);

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StabaType staba = 4;
  void clear_staba();
  static const int kStabaFieldNumber = 4;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabaType staba() const;
  void set_staba(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabaType value);

  // double aog = 5;
  void clear_aog();
  static const int kAogFieldNumber = 5;
  double aog() const;
  void set_aog(double value);

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.AbseType abse = 6;
  void clear_abse();
  static const int kAbseFieldNumber = 6;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbseType abse() const;
  void set_abse(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbseType value);

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.AbsaType absa = 7;
  void clear_absa();
  static const int kAbsaFieldNumber = 7;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbsaType absa() const;
  void set_absa(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbsaType value);

  // double whltrq = 8;
  void clear_whltrq();
  static const int kWhltrqFieldNumber = 8;
  double whltrq() const;
  void set_whltrq(double value);

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.PbrakeType pbrake = 9;
  void clear_pbrake();
  static const int kPbrakeFieldNumber = 9;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_PbrakeType pbrake() const;
  void set_pbrake(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_PbrakeType value);

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StatnryType statnry = 10;
  void clear_statnry();
  static const int kStatnryFieldNumber = 10;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StatnryType statnry() const;
  void set_statnry(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StatnryType value);

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.HsastatType hsastat = 11;
  void clear_hsastat();
  static const int kHsastatFieldNumber = 11;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsastatType hsastat() const;
  void set_hsastat(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsastatType value);

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74.HsamodeType hsamode = 12;
  void clear_hsamode();
  static const int kHsamodeFieldNumber = 12;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsamodeType hsamode() const;
  void set_hsamode(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsamodeType value);

  // double brktrqr = 13;
  void clear_brktrqr();
  static const int kBrktrqrFieldNumber = 13;
  double brktrqr() const;
  void set_brktrqr(double value);

  // double brktrqa = 14;
  void clear_brktrqa();
  static const int kBrktrqaFieldNumber = 14;
  double brktrqa() const;
  void set_brktrqa(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Brakeinfo_report_74)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int trace_;
  int traca_;
  int stabe_;
  int staba_;
  double aog_;
  int abse_;
  int absa_;
  double whltrq_;
  int pbrake_;
  int statnry_;
  int hsastat_;
  int hsamode_;
  double brktrqr_;
  double brktrqa_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Surround_report_73 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Surround_report_73) */ {
 public:
  Surround_report_73();
  virtual ~Surround_report_73();

  Surround_report_73(const Surround_report_73& from);

  inline Surround_report_73& operator=(const Surround_report_73& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Surround_report_73(Surround_report_73&& from) noexcept
    : Surround_report_73() {
    *this = ::std::move(from);
  }

  inline Surround_report_73& operator=(Surround_report_73&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Surround_report_73& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Surround_report_73* internal_default_instance() {
    return reinterpret_cast<const Surround_report_73*>(
               &_Surround_report_73_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(Surround_report_73* other);
  friend void swap(Surround_report_73& a, Surround_report_73& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Surround_report_73* New() const final {
    return CreateMaybeMessage<Surround_report_73>(NULL);
  }

  Surround_report_73* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Surround_report_73>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Surround_report_73& from);
  void MergeFrom(const Surround_report_73& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Surround_report_73* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Surround_report_73_EnsnrType EnsnrType;
  static const EnsnrType ENSNR_DISABLED =
    Surround_report_73_EnsnrType_ENSNR_DISABLED;
  static const EnsnrType ENSNR_ENABLED =
    Surround_report_73_EnsnrType_ENSNR_ENABLED;
  static inline bool EnsnrType_IsValid(int value) {
    return Surround_report_73_EnsnrType_IsValid(value);
  }
  static const EnsnrType EnsnrType_MIN =
    Surround_report_73_EnsnrType_EnsnrType_MIN;
  static const EnsnrType EnsnrType_MAX =
    Surround_report_73_EnsnrType_EnsnrType_MAX;
  static const int EnsnrType_ARRAYSIZE =
    Surround_report_73_EnsnrType_EnsnrType_ARRAYSIZE;

  typedef Surround_report_73_FltsnrType FltsnrType;
  static const FltsnrType FLTSNR_NO_FAULT =
    Surround_report_73_FltsnrType_FLTSNR_NO_FAULT;
  static const FltsnrType FLTSNR_FAULT =
    Surround_report_73_FltsnrType_FLTSNR_FAULT;
  static inline bool FltsnrType_IsValid(int value) {
    return Surround_report_73_FltsnrType_IsValid(value);
  }
  static const FltsnrType FltsnrType_MIN =
    Surround_report_73_FltsnrType_FltsnrType_MIN;
  static const FltsnrType FltsnrType_MAX =
    Surround_report_73_FltsnrType_FltsnrType_MAX;
  static const int FltsnrType_ARRAYSIZE =
    Surround_report_73_FltsnrType_FltsnrType_ARRAYSIZE;

  typedef Surround_report_73_Sonar11Type Sonar11Type;
  static const Sonar11Type SONAR11_NO_DETECTION =
    Surround_report_73_Sonar11Type_SONAR11_NO_DETECTION;
  static inline bool Sonar11Type_IsValid(int value) {
    return Surround_report_73_Sonar11Type_IsValid(value);
  }
  static const Sonar11Type Sonar11Type_MIN =
    Surround_report_73_Sonar11Type_Sonar11Type_MIN;
  static const Sonar11Type Sonar11Type_MAX =
    Surround_report_73_Sonar11Type_Sonar11Type_MAX;
  static const int Sonar11Type_ARRAYSIZE =
    Surround_report_73_Sonar11Type_Sonar11Type_ARRAYSIZE;

  typedef Surround_report_73_Sonar10Type Sonar10Type;
  static const Sonar10Type SONAR10_NO_DETECTION =
    Surround_report_73_Sonar10Type_SONAR10_NO_DETECTION;
  static inline bool Sonar10Type_IsValid(int value) {
    return Surround_report_73_Sonar10Type_IsValid(value);
  }
  static const Sonar10Type Sonar10Type_MIN =
    Surround_report_73_Sonar10Type_Sonar10Type_MIN;
  static const Sonar10Type Sonar10Type_MAX =
    Surround_report_73_Sonar10Type_Sonar10Type_MAX;
  static const int Sonar10Type_ARRAYSIZE =
    Surround_report_73_Sonar10Type_Sonar10Type_ARRAYSIZE;

  typedef Surround_report_73_Sonar09Type Sonar09Type;
  static const Sonar09Type SONAR09_NO_DETECTION =
    Surround_report_73_Sonar09Type_SONAR09_NO_DETECTION;
  static inline bool Sonar09Type_IsValid(int value) {
    return Surround_report_73_Sonar09Type_IsValid(value);
  }
  static const Sonar09Type Sonar09Type_MIN =
    Surround_report_73_Sonar09Type_Sonar09Type_MIN;
  static const Sonar09Type Sonar09Type_MAX =
    Surround_report_73_Sonar09Type_Sonar09Type_MAX;
  static const int Sonar09Type_ARRAYSIZE =
    Surround_report_73_Sonar09Type_Sonar09Type_ARRAYSIZE;

  typedef Surround_report_73_Sonar08Type Sonar08Type;
  static const Sonar08Type SONAR08_NO_DETECTION =
    Surround_report_73_Sonar08Type_SONAR08_NO_DETECTION;
  static inline bool Sonar08Type_IsValid(int value) {
    return Surround_report_73_Sonar08Type_IsValid(value);
  }
  static const Sonar08Type Sonar08Type_MIN =
    Surround_report_73_Sonar08Type_Sonar08Type_MIN;
  static const Sonar08Type Sonar08Type_MAX =
    Surround_report_73_Sonar08Type_Sonar08Type_MAX;
  static const int Sonar08Type_ARRAYSIZE =
    Surround_report_73_Sonar08Type_Sonar08Type_ARRAYSIZE;

  typedef Surround_report_73_Sonar07Type Sonar07Type;
  static const Sonar07Type SONAR07_NO_DETECTION =
    Surround_report_73_Sonar07Type_SONAR07_NO_DETECTION;
  static inline bool Sonar07Type_IsValid(int value) {
    return Surround_report_73_Sonar07Type_IsValid(value);
  }
  static const Sonar07Type Sonar07Type_MIN =
    Surround_report_73_Sonar07Type_Sonar07Type_MIN;
  static const Sonar07Type Sonar07Type_MAX =
    Surround_report_73_Sonar07Type_Sonar07Type_MAX;
  static const int Sonar07Type_ARRAYSIZE =
    Surround_report_73_Sonar07Type_Sonar07Type_ARRAYSIZE;

  typedef Surround_report_73_Sonar06Type Sonar06Type;
  static const Sonar06Type SONAR06_NO_DETECTION =
    Surround_report_73_Sonar06Type_SONAR06_NO_DETECTION;
  static inline bool Sonar06Type_IsValid(int value) {
    return Surround_report_73_Sonar06Type_IsValid(value);
  }
  static const Sonar06Type Sonar06Type_MIN =
    Surround_report_73_Sonar06Type_Sonar06Type_MIN;
  static const Sonar06Type Sonar06Type_MAX =
    Surround_report_73_Sonar06Type_Sonar06Type_MAX;
  static const int Sonar06Type_ARRAYSIZE =
    Surround_report_73_Sonar06Type_Sonar06Type_ARRAYSIZE;

  typedef Surround_report_73_Sonar05Type Sonar05Type;
  static const Sonar05Type SONAR05_NO_DETECTION =
    Surround_report_73_Sonar05Type_SONAR05_NO_DETECTION;
  static inline bool Sonar05Type_IsValid(int value) {
    return Surround_report_73_Sonar05Type_IsValid(value);
  }
  static const Sonar05Type Sonar05Type_MIN =
    Surround_report_73_Sonar05Type_Sonar05Type_MIN;
  static const Sonar05Type Sonar05Type_MAX =
    Surround_report_73_Sonar05Type_Sonar05Type_MAX;
  static const int Sonar05Type_ARRAYSIZE =
    Surround_report_73_Sonar05Type_Sonar05Type_ARRAYSIZE;

  typedef Surround_report_73_Sonar04Type Sonar04Type;
  static const Sonar04Type SONAR04_NO_DETECTION =
    Surround_report_73_Sonar04Type_SONAR04_NO_DETECTION;
  static inline bool Sonar04Type_IsValid(int value) {
    return Surround_report_73_Sonar04Type_IsValid(value);
  }
  static const Sonar04Type Sonar04Type_MIN =
    Surround_report_73_Sonar04Type_Sonar04Type_MIN;
  static const Sonar04Type Sonar04Type_MAX =
    Surround_report_73_Sonar04Type_Sonar04Type_MAX;
  static const int Sonar04Type_ARRAYSIZE =
    Surround_report_73_Sonar04Type_Sonar04Type_ARRAYSIZE;

  typedef Surround_report_73_Sonar03Type Sonar03Type;
  static const Sonar03Type SONAR03_NO_DETECTION =
    Surround_report_73_Sonar03Type_SONAR03_NO_DETECTION;
  static inline bool Sonar03Type_IsValid(int value) {
    return Surround_report_73_Sonar03Type_IsValid(value);
  }
  static const Sonar03Type Sonar03Type_MIN =
    Surround_report_73_Sonar03Type_Sonar03Type_MIN;
  static const Sonar03Type Sonar03Type_MAX =
    Surround_report_73_Sonar03Type_Sonar03Type_MAX;
  static const int Sonar03Type_ARRAYSIZE =
    Surround_report_73_Sonar03Type_Sonar03Type_ARRAYSIZE;

  typedef Surround_report_73_Sonar02Type Sonar02Type;
  static const Sonar02Type SONAR02_NO_DETECTION =
    Surround_report_73_Sonar02Type_SONAR02_NO_DETECTION;
  static inline bool Sonar02Type_IsValid(int value) {
    return Surround_report_73_Sonar02Type_IsValid(value);
  }
  static const Sonar02Type Sonar02Type_MIN =
    Surround_report_73_Sonar02Type_Sonar02Type_MIN;
  static const Sonar02Type Sonar02Type_MAX =
    Surround_report_73_Sonar02Type_Sonar02Type_MAX;
  static const int Sonar02Type_ARRAYSIZE =
    Surround_report_73_Sonar02Type_Sonar02Type_ARRAYSIZE;

  typedef Surround_report_73_Sonar01Type Sonar01Type;
  static const Sonar01Type SONAR01_NO_DETECTION =
    Surround_report_73_Sonar01Type_SONAR01_NO_DETECTION;
  static inline bool Sonar01Type_IsValid(int value) {
    return Surround_report_73_Sonar01Type_IsValid(value);
  }
  static const Sonar01Type Sonar01Type_MIN =
    Surround_report_73_Sonar01Type_Sonar01Type_MIN;
  static const Sonar01Type Sonar01Type_MAX =
    Surround_report_73_Sonar01Type_Sonar01Type_MAX;
  static const int Sonar01Type_ARRAYSIZE =
    Surround_report_73_Sonar01Type_Sonar01Type_ARRAYSIZE;

  typedef Surround_report_73_Sonar00Type Sonar00Type;
  static const Sonar00Type SONAR00_NO_DETECTION =
    Surround_report_73_Sonar00Type_SONAR00_NO_DETECTION;
  static inline bool Sonar00Type_IsValid(int value) {
    return Surround_report_73_Sonar00Type_IsValid(value);
  }
  static const Sonar00Type Sonar00Type_MIN =
    Surround_report_73_Sonar00Type_Sonar00Type_MIN;
  static const Sonar00Type Sonar00Type_MAX =
    Surround_report_73_Sonar00Type_Sonar00Type_MAX;
  static const int Sonar00Type_ARRAYSIZE =
    Surround_report_73_Sonar00Type_Sonar00Type_ARRAYSIZE;

  typedef Surround_report_73_BlisreType BlisreType;
  static const BlisreType BLISRE_DISABLED =
    Surround_report_73_BlisreType_BLISRE_DISABLED;
  static const BlisreType BLISRE_ENABLED =
    Surround_report_73_BlisreType_BLISRE_ENABLED;
  static inline bool BlisreType_IsValid(int value) {
    return Surround_report_73_BlisreType_IsValid(value);
  }
  static const BlisreType BlisreType_MIN =
    Surround_report_73_BlisreType_BlisreType_MIN;
  static const BlisreType BlisreType_MAX =
    Surround_report_73_BlisreType_BlisreType_MAX;
  static const int BlisreType_ARRAYSIZE =
    Surround_report_73_BlisreType_BlisreType_ARRAYSIZE;

  typedef Surround_report_73_BlisraType BlisraType;
  static const BlisraType BLISRA_NO_ALERT =
    Surround_report_73_BlisraType_BLISRA_NO_ALERT;
  static const BlisraType BLISRA_ALERT =
    Surround_report_73_BlisraType_BLISRA_ALERT;
  static inline bool BlisraType_IsValid(int value) {
    return Surround_report_73_BlisraType_IsValid(value);
  }
  static const BlisraType BlisraType_MIN =
    Surround_report_73_BlisraType_BlisraType_MIN;
  static const BlisraType BlisraType_MAX =
    Surround_report_73_BlisraType_BlisraType_MAX;
  static const int BlisraType_ARRAYSIZE =
    Surround_report_73_BlisraType_BlisraType_ARRAYSIZE;

  typedef Surround_report_73_BlisleType BlisleType;
  static const BlisleType BLISLE_DISABLED =
    Surround_report_73_BlisleType_BLISLE_DISABLED;
  static const BlisleType BLISLE_ENABLED =
    Surround_report_73_BlisleType_BLISLE_ENABLED;
  static inline bool BlisleType_IsValid(int value) {
    return Surround_report_73_BlisleType_IsValid(value);
  }
  static const BlisleType BlisleType_MIN =
    Surround_report_73_BlisleType_BlisleType_MIN;
  static const BlisleType BlisleType_MAX =
    Surround_report_73_BlisleType_BlisleType_MAX;
  static const int BlisleType_ARRAYSIZE =
    Surround_report_73_BlisleType_BlisleType_ARRAYSIZE;

  typedef Surround_report_73_BlislaType BlislaType;
  static const BlislaType BLISLA_NO_ALERT =
    Surround_report_73_BlislaType_BLISLA_NO_ALERT;
  static const BlislaType BLISLA_ALERT =
    Surround_report_73_BlislaType_BLISLA_ALERT;
  static inline bool BlislaType_IsValid(int value) {
    return Surround_report_73_BlislaType_IsValid(value);
  }
  static const BlislaType BlislaType_MIN =
    Surround_report_73_BlislaType_BlislaType_MIN;
  static const BlislaType BlislaType_MAX =
    Surround_report_73_BlislaType_BlislaType_MAX;
  static const int BlislaType_ARRAYSIZE =
    Surround_report_73_BlislaType_BlislaType_ARRAYSIZE;

  typedef Surround_report_73_CtareType CtareType;
  static const CtareType CTARE_DISABLED =
    Surround_report_73_CtareType_CTARE_DISABLED;
  static const CtareType CTARE_ENABLED =
    Surround_report_73_CtareType_CTARE_ENABLED;
  static inline bool CtareType_IsValid(int value) {
    return Surround_report_73_CtareType_IsValid(value);
  }
  static const CtareType CtareType_MIN =
    Surround_report_73_CtareType_CtareType_MIN;
  static const CtareType CtareType_MAX =
    Surround_report_73_CtareType_CtareType_MAX;
  static const int CtareType_ARRAYSIZE =
    Surround_report_73_CtareType_CtareType_ARRAYSIZE;

  typedef Surround_report_73_CtaraType CtaraType;
  static const CtaraType CTARA_NO_ALERT =
    Surround_report_73_CtaraType_CTARA_NO_ALERT;
  static const CtaraType CTARA_ALERT =
    Surround_report_73_CtaraType_CTARA_ALERT;
  static inline bool CtaraType_IsValid(int value) {
    return Surround_report_73_CtaraType_IsValid(value);
  }
  static const CtaraType CtaraType_MIN =
    Surround_report_73_CtaraType_CtaraType_MIN;
  static const CtaraType CtaraType_MAX =
    Surround_report_73_CtaraType_CtaraType_MAX;
  static const int CtaraType_ARRAYSIZE =
    Surround_report_73_CtaraType_CtaraType_ARRAYSIZE;

  typedef Surround_report_73_CtaleType CtaleType;
  static const CtaleType CTALE_DISABLED =
    Surround_report_73_CtaleType_CTALE_DISABLED;
  static const CtaleType CTALE_ENABLED =
    Surround_report_73_CtaleType_CTALE_ENABLED;
  static inline bool CtaleType_IsValid(int value) {
    return Surround_report_73_CtaleType_IsValid(value);
  }
  static const CtaleType CtaleType_MIN =
    Surround_report_73_CtaleType_CtaleType_MIN;
  static const CtaleType CtaleType_MAX =
    Surround_report_73_CtaleType_CtaleType_MAX;
  static const int CtaleType_ARRAYSIZE =
    Surround_report_73_CtaleType_CtaleType_ARRAYSIZE;

  typedef Surround_report_73_CtalaType CtalaType;
  static const CtalaType CTALA_NO_ALERT =
    Surround_report_73_CtalaType_CTALA_NO_ALERT;
  static const CtalaType CTALA_ALERT =
    Surround_report_73_CtalaType_CTALA_ALERT;
  static inline bool CtalaType_IsValid(int value) {
    return Surround_report_73_CtalaType_IsValid(value);
  }
  static const CtalaType CtalaType_MIN =
    Surround_report_73_CtalaType_CtalaType_MIN;
  static const CtalaType CtalaType_MAX =
    Surround_report_73_CtalaType_CtalaType_MAX;
  static const int CtalaType_ARRAYSIZE =
    Surround_report_73_CtalaType_CtalaType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.CHASIS.Surround_report_73.EnsnrType ensnr = 1;
  void clear_ensnr();
  static const int kEnsnrFieldNumber = 1;
  ::Calmcar::drivers::CHASIS::Surround_report_73_EnsnrType ensnr() const;
  void set_ensnr(::Calmcar::drivers::CHASIS::Surround_report_73_EnsnrType value);

  // .Calmcar.drivers.CHASIS.Surround_report_73.FltsnrType fltsnr = 2;
  void clear_fltsnr();
  static const int kFltsnrFieldNumber = 2;
  ::Calmcar::drivers::CHASIS::Surround_report_73_FltsnrType fltsnr() const;
  void set_fltsnr(::Calmcar::drivers::CHASIS::Surround_report_73_FltsnrType value);

  // double sonar11 = 3;
  void clear_sonar11();
  static const int kSonar11FieldNumber = 3;
  double sonar11() const;
  void set_sonar11(double value);

  // double sonar10 = 4;
  void clear_sonar10();
  static const int kSonar10FieldNumber = 4;
  double sonar10() const;
  void set_sonar10(double value);

  // double sonar09 = 5;
  void clear_sonar09();
  static const int kSonar09FieldNumber = 5;
  double sonar09() const;
  void set_sonar09(double value);

  // double sonar08 = 6;
  void clear_sonar08();
  static const int kSonar08FieldNumber = 6;
  double sonar08() const;
  void set_sonar08(double value);

  // double sonar07 = 7;
  void clear_sonar07();
  static const int kSonar07FieldNumber = 7;
  double sonar07() const;
  void set_sonar07(double value);

  // double sonar06 = 8;
  void clear_sonar06();
  static const int kSonar06FieldNumber = 8;
  double sonar06() const;
  void set_sonar06(double value);

  // double sonar05 = 9;
  void clear_sonar05();
  static const int kSonar05FieldNumber = 9;
  double sonar05() const;
  void set_sonar05(double value);

  // double sonar04 = 10;
  void clear_sonar04();
  static const int kSonar04FieldNumber = 10;
  double sonar04() const;
  void set_sonar04(double value);

  // double sonar03 = 11;
  void clear_sonar03();
  static const int kSonar03FieldNumber = 11;
  double sonar03() const;
  void set_sonar03(double value);

  // double sonar02 = 12;
  void clear_sonar02();
  static const int kSonar02FieldNumber = 12;
  double sonar02() const;
  void set_sonar02(double value);

  // double sonar01 = 13;
  void clear_sonar01();
  static const int kSonar01FieldNumber = 13;
  double sonar01() const;
  void set_sonar01(double value);

  // double sonar00 = 14;
  void clear_sonar00();
  static const int kSonar00FieldNumber = 14;
  double sonar00() const;
  void set_sonar00(double value);

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlisreType blisre = 15;
  void clear_blisre();
  static const int kBlisreFieldNumber = 15;
  ::Calmcar::drivers::CHASIS::Surround_report_73_BlisreType blisre() const;
  void set_blisre(::Calmcar::drivers::CHASIS::Surround_report_73_BlisreType value);

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlisraType blisra = 16;
  void clear_blisra();
  static const int kBlisraFieldNumber = 16;
  ::Calmcar::drivers::CHASIS::Surround_report_73_BlisraType blisra() const;
  void set_blisra(::Calmcar::drivers::CHASIS::Surround_report_73_BlisraType value);

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlisleType blisle = 17;
  void clear_blisle();
  static const int kBlisleFieldNumber = 17;
  ::Calmcar::drivers::CHASIS::Surround_report_73_BlisleType blisle() const;
  void set_blisle(::Calmcar::drivers::CHASIS::Surround_report_73_BlisleType value);

  // .Calmcar.drivers.CHASIS.Surround_report_73.BlislaType blisla = 18;
  void clear_blisla();
  static const int kBlislaFieldNumber = 18;
  ::Calmcar::drivers::CHASIS::Surround_report_73_BlislaType blisla() const;
  void set_blisla(::Calmcar::drivers::CHASIS::Surround_report_73_BlislaType value);

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtareType ctare = 19;
  void clear_ctare();
  static const int kCtareFieldNumber = 19;
  ::Calmcar::drivers::CHASIS::Surround_report_73_CtareType ctare() const;
  void set_ctare(::Calmcar::drivers::CHASIS::Surround_report_73_CtareType value);

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtaraType ctara = 20;
  void clear_ctara();
  static const int kCtaraFieldNumber = 20;
  ::Calmcar::drivers::CHASIS::Surround_report_73_CtaraType ctara() const;
  void set_ctara(::Calmcar::drivers::CHASIS::Surround_report_73_CtaraType value);

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtaleType ctale = 21;
  void clear_ctale();
  static const int kCtaleFieldNumber = 21;
  ::Calmcar::drivers::CHASIS::Surround_report_73_CtaleType ctale() const;
  void set_ctale(::Calmcar::drivers::CHASIS::Surround_report_73_CtaleType value);

  // .Calmcar.drivers.CHASIS.Surround_report_73.CtalaType ctala = 22;
  void clear_ctala();
  static const int kCtalaFieldNumber = 22;
  ::Calmcar::drivers::CHASIS::Surround_report_73_CtalaType ctala() const;
  void set_ctala(::Calmcar::drivers::CHASIS::Surround_report_73_CtalaType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Surround_report_73)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int ensnr_;
  int fltsnr_;
  double sonar11_;
  double sonar10_;
  double sonar09_;
  double sonar08_;
  double sonar07_;
  double sonar06_;
  double sonar05_;
  double sonar04_;
  double sonar03_;
  double sonar02_;
  double sonar01_;
  double sonar00_;
  int blisre_;
  int blisra_;
  int blisle_;
  int blisla_;
  int ctare_;
  int ctara_;
  int ctale_;
  int ctala_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Fuellevel_report_72 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Fuellevel_report_72) */ {
 public:
  Fuellevel_report_72();
  virtual ~Fuellevel_report_72();

  Fuellevel_report_72(const Fuellevel_report_72& from);

  inline Fuellevel_report_72& operator=(const Fuellevel_report_72& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Fuellevel_report_72(Fuellevel_report_72&& from) noexcept
    : Fuellevel_report_72() {
    *this = ::std::move(from);
  }

  inline Fuellevel_report_72& operator=(Fuellevel_report_72&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Fuellevel_report_72& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Fuellevel_report_72* internal_default_instance() {
    return reinterpret_cast<const Fuellevel_report_72*>(
               &_Fuellevel_report_72_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(Fuellevel_report_72* other);
  friend void swap(Fuellevel_report_72& a, Fuellevel_report_72& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Fuellevel_report_72* New() const final {
    return CreateMaybeMessage<Fuellevel_report_72>(NULL);
  }

  Fuellevel_report_72* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Fuellevel_report_72>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Fuellevel_report_72& from);
  void MergeFrom(const Fuellevel_report_72& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Fuellevel_report_72* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double fuel = 1;
  void clear_fuel();
  static const int kFuelFieldNumber = 1;
  double fuel() const;
  void set_fuel(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Fuellevel_report_72)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double fuel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tirepressure_report_71 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Tirepressure_report_71) */ {
 public:
  Tirepressure_report_71();
  virtual ~Tirepressure_report_71();

  Tirepressure_report_71(const Tirepressure_report_71& from);

  inline Tirepressure_report_71& operator=(const Tirepressure_report_71& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tirepressure_report_71(Tirepressure_report_71&& from) noexcept
    : Tirepressure_report_71() {
    *this = ::std::move(from);
  }

  inline Tirepressure_report_71& operator=(Tirepressure_report_71&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Tirepressure_report_71& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tirepressure_report_71* internal_default_instance() {
    return reinterpret_cast<const Tirepressure_report_71*>(
               &_Tirepressure_report_71_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(Tirepressure_report_71* other);
  friend void swap(Tirepressure_report_71& a, Tirepressure_report_71& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tirepressure_report_71* New() const final {
    return CreateMaybeMessage<Tirepressure_report_71>(NULL);
  }

  Tirepressure_report_71* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tirepressure_report_71>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Tirepressure_report_71& from);
  void MergeFrom(const Tirepressure_report_71& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tirepressure_report_71* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rr = 1;
  void clear_rr();
  static const int kRrFieldNumber = 1;
  ::google::protobuf::int32 rr() const;
  void set_rr(::google::protobuf::int32 value);

  // int32 rl = 2;
  void clear_rl();
  static const int kRlFieldNumber = 2;
  ::google::protobuf::int32 rl() const;
  void set_rl(::google::protobuf::int32 value);

  // int32 fr = 3;
  void clear_fr();
  static const int kFrFieldNumber = 3;
  ::google::protobuf::int32 fr() const;
  void set_fr(::google::protobuf::int32 value);

  // int32 fl = 4;
  void clear_fl();
  static const int kFlFieldNumber = 4;
  ::google::protobuf::int32 fl() const;
  void set_fl(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Tirepressure_report_71)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 rr_;
  ::google::protobuf::int32 rl_;
  ::google::protobuf::int32 fr_;
  ::google::protobuf::int32 fl_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Wheelposition_report_70 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Wheelposition_report_70) */ {
 public:
  Wheelposition_report_70();
  virtual ~Wheelposition_report_70();

  Wheelposition_report_70(const Wheelposition_report_70& from);

  inline Wheelposition_report_70& operator=(const Wheelposition_report_70& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Wheelposition_report_70(Wheelposition_report_70&& from) noexcept
    : Wheelposition_report_70() {
    *this = ::std::move(from);
  }

  inline Wheelposition_report_70& operator=(Wheelposition_report_70&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Wheelposition_report_70& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Wheelposition_report_70* internal_default_instance() {
    return reinterpret_cast<const Wheelposition_report_70*>(
               &_Wheelposition_report_70_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(Wheelposition_report_70* other);
  friend void swap(Wheelposition_report_70& a, Wheelposition_report_70& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Wheelposition_report_70* New() const final {
    return CreateMaybeMessage<Wheelposition_report_70>(NULL);
  }

  Wheelposition_report_70* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Wheelposition_report_70>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Wheelposition_report_70& from);
  void MergeFrom(const Wheelposition_report_70& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Wheelposition_report_70* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rr = 1;
  void clear_rr();
  static const int kRrFieldNumber = 1;
  ::google::protobuf::int32 rr() const;
  void set_rr(::google::protobuf::int32 value);

  // int32 rl = 2;
  void clear_rl();
  static const int kRlFieldNumber = 2;
  ::google::protobuf::int32 rl() const;
  void set_rl(::google::protobuf::int32 value);

  // int32 fr = 3;
  void clear_fr();
  static const int kFrFieldNumber = 3;
  ::google::protobuf::int32 fr() const;
  void set_fr(::google::protobuf::int32 value);

  // int32 fl = 4;
  void clear_fl();
  static const int kFlFieldNumber = 4;
  ::google::protobuf::int32 fl() const;
  void set_fl(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Wheelposition_report_70)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 rr_;
  ::google::protobuf::int32 rl_;
  ::google::protobuf::int32 fr_;
  ::google::protobuf::int32 fl_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Suspension_79 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Suspension_79) */ {
 public:
  Suspension_79();
  virtual ~Suspension_79();

  Suspension_79(const Suspension_79& from);

  inline Suspension_79& operator=(const Suspension_79& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Suspension_79(Suspension_79&& from) noexcept
    : Suspension_79() {
    *this = ::std::move(from);
  }

  inline Suspension_79& operator=(Suspension_79&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Suspension_79& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Suspension_79* internal_default_instance() {
    return reinterpret_cast<const Suspension_79*>(
               &_Suspension_79_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(Suspension_79* other);
  friend void swap(Suspension_79& a, Suspension_79& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Suspension_79* New() const final {
    return CreateMaybeMessage<Suspension_79>(NULL);
  }

  Suspension_79* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Suspension_79>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Suspension_79& from);
  void MergeFrom(const Suspension_79& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Suspension_79* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double suspension_rr = 1;
  void clear_suspension_rr();
  static const int kSuspensionRrFieldNumber = 1;
  double suspension_rr() const;
  void set_suspension_rr(double value);

  // double suspension_rl = 2;
  void clear_suspension_rl();
  static const int kSuspensionRlFieldNumber = 2;
  double suspension_rl() const;
  void set_suspension_rl(double value);

  // double suspension_fr = 3;
  void clear_suspension_fr();
  static const int kSuspensionFrFieldNumber = 3;
  double suspension_fr() const;
  void set_suspension_fr(double value);

  // double suspension_fl = 4;
  void clear_suspension_fl();
  static const int kSuspensionFlFieldNumber = 4;
  double suspension_fl() const;
  void set_suspension_fl(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Suspension_79)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double suspension_rr_;
  double suspension_rl_;
  double suspension_fr_;
  double suspension_fl_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Pms_voltage_1b0 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Pms_voltage_1b0) */ {
 public:
  Pms_voltage_1b0();
  virtual ~Pms_voltage_1b0();

  Pms_voltage_1b0(const Pms_voltage_1b0& from);

  inline Pms_voltage_1b0& operator=(const Pms_voltage_1b0& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pms_voltage_1b0(Pms_voltage_1b0&& from) noexcept
    : Pms_voltage_1b0() {
    *this = ::std::move(from);
  }

  inline Pms_voltage_1b0& operator=(Pms_voltage_1b0&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Pms_voltage_1b0& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pms_voltage_1b0* internal_default_instance() {
    return reinterpret_cast<const Pms_voltage_1b0*>(
               &_Pms_voltage_1b0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(Pms_voltage_1b0* other);
  friend void swap(Pms_voltage_1b0& a, Pms_voltage_1b0& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pms_voltage_1b0* New() const final {
    return CreateMaybeMessage<Pms_voltage_1b0>(NULL);
  }

  Pms_voltage_1b0* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pms_voltage_1b0>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Pms_voltage_1b0& from);
  void MergeFrom(const Pms_voltage_1b0& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Pms_voltage_1b0* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double vol3_5v = 1;
  void clear_vol3_5v();
  static const int kVol35VFieldNumber = 1;
  double vol3_5v() const;
  void set_vol3_5v(double value);

  // double vol2_12v = 2;
  void clear_vol2_12v();
  static const int kVol212VFieldNumber = 2;
  double vol2_12v() const;
  void set_vol2_12v(double value);

  // double vol1_bat = 3;
  void clear_vol1_bat();
  static const int kVol1BatFieldNumber = 3;
  double vol1_bat() const;
  void set_vol1_bat(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Pms_voltage_1b0)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double vol3_5v_;
  double vol2_12v_;
  double vol1_bat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Pms_sta_1e0 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Pms_sta_1e0) */ {
 public:
  Pms_sta_1e0();
  virtual ~Pms_sta_1e0();

  Pms_sta_1e0(const Pms_sta_1e0& from);

  inline Pms_sta_1e0& operator=(const Pms_sta_1e0& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pms_sta_1e0(Pms_sta_1e0&& from) noexcept
    : Pms_sta_1e0() {
    *this = ::std::move(from);
  }

  inline Pms_sta_1e0& operator=(Pms_sta_1e0&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Pms_sta_1e0& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pms_sta_1e0* internal_default_instance() {
    return reinterpret_cast<const Pms_sta_1e0*>(
               &_Pms_sta_1e0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(Pms_sta_1e0* other);
  friend void swap(Pms_sta_1e0& a, Pms_sta_1e0& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pms_sta_1e0* New() const final {
    return CreateMaybeMessage<Pms_sta_1e0>(NULL);
  }

  Pms_sta_1e0* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pms_sta_1e0>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Pms_sta_1e0& from);
  void MergeFrom(const Pms_sta_1e0& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Pms_sta_1e0* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool state9 = 1;
  void clear_state9();
  static const int kState9FieldNumber = 1;
  bool state9() const;
  void set_state9(bool value);

  // bool state8 = 2;
  void clear_state8();
  static const int kState8FieldNumber = 2;
  bool state8() const;
  void set_state8(bool value);

  // bool state7 = 3;
  void clear_state7();
  static const int kState7FieldNumber = 3;
  bool state7() const;
  void set_state7(bool value);

  // bool state6 = 4;
  void clear_state6();
  static const int kState6FieldNumber = 4;
  bool state6() const;
  void set_state6(bool value);

  // bool state5 = 5;
  void clear_state5();
  static const int kState5FieldNumber = 5;
  bool state5() const;
  void set_state5(bool value);

  // bool state4 = 6;
  void clear_state4();
  static const int kState4FieldNumber = 6;
  bool state4() const;
  void set_state4(bool value);

  // bool state3 = 7;
  void clear_state3();
  static const int kState3FieldNumber = 7;
  bool state3() const;
  void set_state3(bool value);

  // bool state2 = 8;
  void clear_state2();
  static const int kState2FieldNumber = 8;
  bool state2() const;
  void set_state2(bool value);

  // bool state16_accin = 9;
  void clear_state16_accin();
  static const int kState16AccinFieldNumber = 9;
  bool state16_accin() const;
  void set_state16_accin(bool value);

  // bool state15_blank = 10;
  void clear_state15_blank();
  static const int kState15BlankFieldNumber = 10;
  bool state15_blank() const;
  void set_state15_blank(bool value);

  // bool state14_relay = 11;
  void clear_state14_relay();
  static const int kState14RelayFieldNumber = 11;
  bool state14_relay() const;
  void set_state14_relay(bool value);

  // bool state13_dcdc = 12;
  void clear_state13_dcdc();
  static const int kState13DcdcFieldNumber = 12;
  bool state13_dcdc() const;
  void set_state13_dcdc(bool value);

  // bool state12 = 13;
  void clear_state12();
  static const int kState12FieldNumber = 13;
  bool state12() const;
  void set_state12(bool value);

  // bool state11 = 14;
  void clear_state11();
  static const int kState11FieldNumber = 14;
  bool state11() const;
  void set_state11(bool value);

  // bool state10 = 15;
  void clear_state10();
  static const int kState10FieldNumber = 15;
  bool state10() const;
  void set_state10(bool value);

  // bool state1 = 16;
  void clear_state1();
  static const int kState1FieldNumber = 16;
  bool state1() const;
  void set_state1(bool value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Pms_sta_1e0)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  bool state9_;
  bool state8_;
  bool state7_;
  bool state6_;
  bool state5_;
  bool state4_;
  bool state3_;
  bool state2_;
  bool state16_accin_;
  bool state15_blank_;
  bool state14_relay_;
  bool state13_dcdc_;
  bool state12_;
  bool state11_;
  bool state10_;
  bool state1_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Chasis : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.CHASIS.Chasis) */ {
 public:
  Chasis();
  virtual ~Chasis();

  Chasis(const Chasis& from);

  inline Chasis& operator=(const Chasis& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Chasis(Chasis&& from) noexcept
    : Chasis() {
    *this = ::std::move(from);
  }

  inline Chasis& operator=(Chasis&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Chasis& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Chasis* internal_default_instance() {
    return reinterpret_cast<const Chasis*>(
               &_Chasis_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(Chasis* other);
  friend void swap(Chasis& a, Chasis& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Chasis* New() const final {
    return CreateMaybeMessage<Chasis>(NULL);
  }

  Chasis* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Chasis>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Chasis& from);
  void MergeFrom(const Chasis& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Chasis* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Calmcar.common.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::Calmcar::common::Header& _internal_header() const;
  public:
  const ::Calmcar::common::Header& header() const;
  ::Calmcar::common::Header* release_header();
  ::Calmcar::common::Header* mutable_header();
  void set_allocated_header(::Calmcar::common::Header* header);

  // .Calmcar.drivers.CHASIS.Version_ss_7f version_ss_7f = 2;
  bool has_version_ss_7f() const;
  void clear_version_ss_7f();
  static const int kVersionSs7FFieldNumber = 2;
  private:
  const ::Calmcar::drivers::CHASIS::Version_ss_7f& _internal_version_ss_7f() const;
  public:
  const ::Calmcar::drivers::CHASIS::Version_ss_7f& version_ss_7f() const;
  ::Calmcar::drivers::CHASIS::Version_ss_7f* release_version_ss_7f();
  ::Calmcar::drivers::CHASIS::Version_ss_7f* mutable_version_ss_7f();
  void set_allocated_version_ss_7f(::Calmcar::drivers::CHASIS::Version_ss_7f* version_ss_7f);

  // .Calmcar.drivers.CHASIS.Version_bt_7e version_bt_7e = 3;
  bool has_version_bt_7e() const;
  void clear_version_bt_7e();
  static const int kVersionBt7EFieldNumber = 3;
  private:
  const ::Calmcar::drivers::CHASIS::Version_bt_7e& _internal_version_bt_7e() const;
  public:
  const ::Calmcar::drivers::CHASIS::Version_bt_7e& version_bt_7e() const;
  ::Calmcar::drivers::CHASIS::Version_bt_7e* release_version_bt_7e();
  ::Calmcar::drivers::CHASIS::Version_bt_7e* mutable_version_bt_7e();
  void set_allocated_version_bt_7e(::Calmcar::drivers::CHASIS::Version_bt_7e* version_bt_7e);

  // .Calmcar.drivers.CHASIS.Misc_report_ss_7b misc_report_ss_7b = 4;
  bool has_misc_report_ss_7b() const;
  void clear_misc_report_ss_7b();
  static const int kMiscReportSs7BFieldNumber = 4;
  private:
  const ::Calmcar::drivers::CHASIS::Misc_report_ss_7b& _internal_misc_report_ss_7b() const;
  public:
  const ::Calmcar::drivers::CHASIS::Misc_report_ss_7b& misc_report_ss_7b() const;
  ::Calmcar::drivers::CHASIS::Misc_report_ss_7b* release_misc_report_ss_7b();
  ::Calmcar::drivers::CHASIS::Misc_report_ss_7b* mutable_misc_report_ss_7b();
  void set_allocated_misc_report_ss_7b(::Calmcar::drivers::CHASIS::Misc_report_ss_7b* misc_report_ss_7b);

  // .Calmcar.drivers.CHASIS.Brake_command_60 brake_command_60 = 5;
  bool has_brake_command_60() const;
  void clear_brake_command_60();
  static const int kBrakeCommand60FieldNumber = 5;
  private:
  const ::Calmcar::drivers::CHASIS::Brake_command_60& _internal_brake_command_60() const;
  public:
  const ::Calmcar::drivers::CHASIS::Brake_command_60& brake_command_60() const;
  ::Calmcar::drivers::CHASIS::Brake_command_60* release_brake_command_60();
  ::Calmcar::drivers::CHASIS::Brake_command_60* mutable_brake_command_60();
  void set_allocated_brake_command_60(::Calmcar::drivers::CHASIS::Brake_command_60* brake_command_60);

  // .Calmcar.drivers.CHASIS.Brake_report_61 brake_report_61 = 6;
  bool has_brake_report_61() const;
  void clear_brake_report_61();
  static const int kBrakeReport61FieldNumber = 6;
  private:
  const ::Calmcar::drivers::CHASIS::Brake_report_61& _internal_brake_report_61() const;
  public:
  const ::Calmcar::drivers::CHASIS::Brake_report_61& brake_report_61() const;
  ::Calmcar::drivers::CHASIS::Brake_report_61* release_brake_report_61();
  ::Calmcar::drivers::CHASIS::Brake_report_61* mutable_brake_report_61();
  void set_allocated_brake_report_61(::Calmcar::drivers::CHASIS::Brake_report_61* brake_report_61);

  // .Calmcar.drivers.CHASIS.Throttle_command_62 throttle_command_62 = 7;
  bool has_throttle_command_62() const;
  void clear_throttle_command_62();
  static const int kThrottleCommand62FieldNumber = 7;
  private:
  const ::Calmcar::drivers::CHASIS::Throttle_command_62& _internal_throttle_command_62() const;
  public:
  const ::Calmcar::drivers::CHASIS::Throttle_command_62& throttle_command_62() const;
  ::Calmcar::drivers::CHASIS::Throttle_command_62* release_throttle_command_62();
  ::Calmcar::drivers::CHASIS::Throttle_command_62* mutable_throttle_command_62();
  void set_allocated_throttle_command_62(::Calmcar::drivers::CHASIS::Throttle_command_62* throttle_command_62);

  // .Calmcar.drivers.CHASIS.Throttle_report_63 throttle_report_63 = 8;
  bool has_throttle_report_63() const;
  void clear_throttle_report_63();
  static const int kThrottleReport63FieldNumber = 8;
  private:
  const ::Calmcar::drivers::CHASIS::Throttle_report_63& _internal_throttle_report_63() const;
  public:
  const ::Calmcar::drivers::CHASIS::Throttle_report_63& throttle_report_63() const;
  ::Calmcar::drivers::CHASIS::Throttle_report_63* release_throttle_report_63();
  ::Calmcar::drivers::CHASIS::Throttle_report_63* mutable_throttle_report_63();
  void set_allocated_throttle_report_63(::Calmcar::drivers::CHASIS::Throttle_report_63* throttle_report_63);

  // .Calmcar.drivers.CHASIS.Steering_command_64 steering_command_64 = 9;
  bool has_steering_command_64() const;
  void clear_steering_command_64();
  static const int kSteeringCommand64FieldNumber = 9;
  private:
  const ::Calmcar::drivers::CHASIS::Steering_command_64& _internal_steering_command_64() const;
  public:
  const ::Calmcar::drivers::CHASIS::Steering_command_64& steering_command_64() const;
  ::Calmcar::drivers::CHASIS::Steering_command_64* release_steering_command_64();
  ::Calmcar::drivers::CHASIS::Steering_command_64* mutable_steering_command_64();
  void set_allocated_steering_command_64(::Calmcar::drivers::CHASIS::Steering_command_64* steering_command_64);

  // .Calmcar.drivers.CHASIS.Steering_report_65 steering_report_65 = 10;
  bool has_steering_report_65() const;
  void clear_steering_report_65();
  static const int kSteeringReport65FieldNumber = 10;
  private:
  const ::Calmcar::drivers::CHASIS::Steering_report_65& _internal_steering_report_65() const;
  public:
  const ::Calmcar::drivers::CHASIS::Steering_report_65& steering_report_65() const;
  ::Calmcar::drivers::CHASIS::Steering_report_65* release_steering_report_65();
  ::Calmcar::drivers::CHASIS::Steering_report_65* mutable_steering_report_65();
  void set_allocated_steering_report_65(::Calmcar::drivers::CHASIS::Steering_report_65* steering_report_65);

  // .Calmcar.drivers.CHASIS.Gear_command_66 gear_command_66 = 11;
  bool has_gear_command_66() const;
  void clear_gear_command_66();
  static const int kGearCommand66FieldNumber = 11;
  private:
  const ::Calmcar::drivers::CHASIS::Gear_command_66& _internal_gear_command_66() const;
  public:
  const ::Calmcar::drivers::CHASIS::Gear_command_66& gear_command_66() const;
  ::Calmcar::drivers::CHASIS::Gear_command_66* release_gear_command_66();
  ::Calmcar::drivers::CHASIS::Gear_command_66* mutable_gear_command_66();
  void set_allocated_gear_command_66(::Calmcar::drivers::CHASIS::Gear_command_66* gear_command_66);

  // .Calmcar.drivers.CHASIS.Gear_report_67 gear_report_67 = 12;
  bool has_gear_report_67() const;
  void clear_gear_report_67();
  static const int kGearReport67FieldNumber = 12;
  private:
  const ::Calmcar::drivers::CHASIS::Gear_report_67& _internal_gear_report_67() const;
  public:
  const ::Calmcar::drivers::CHASIS::Gear_report_67& gear_report_67() const;
  ::Calmcar::drivers::CHASIS::Gear_report_67* release_gear_report_67();
  ::Calmcar::drivers::CHASIS::Gear_report_67* mutable_gear_report_67();
  void set_allocated_gear_report_67(::Calmcar::drivers::CHASIS::Gear_report_67* gear_report_67);

  // .Calmcar.drivers.CHASIS.Turnsignal_command_68 turnsignal_command_68 = 13;
  bool has_turnsignal_command_68() const;
  void clear_turnsignal_command_68();
  static const int kTurnsignalCommand68FieldNumber = 13;
  private:
  const ::Calmcar::drivers::CHASIS::Turnsignal_command_68& _internal_turnsignal_command_68() const;
  public:
  const ::Calmcar::drivers::CHASIS::Turnsignal_command_68& turnsignal_command_68() const;
  ::Calmcar::drivers::CHASIS::Turnsignal_command_68* release_turnsignal_command_68();
  ::Calmcar::drivers::CHASIS::Turnsignal_command_68* mutable_turnsignal_command_68();
  void set_allocated_turnsignal_command_68(::Calmcar::drivers::CHASIS::Turnsignal_command_68* turnsignal_command_68);

  // .Calmcar.drivers.CHASIS.Misc_report_69 misc_report_69 = 14;
  bool has_misc_report_69() const;
  void clear_misc_report_69();
  static const int kMiscReport69FieldNumber = 14;
  private:
  const ::Calmcar::drivers::CHASIS::Misc_report_69& _internal_misc_report_69() const;
  public:
  const ::Calmcar::drivers::CHASIS::Misc_report_69& misc_report_69() const;
  ::Calmcar::drivers::CHASIS::Misc_report_69* release_misc_report_69();
  ::Calmcar::drivers::CHASIS::Misc_report_69* mutable_misc_report_69();
  void set_allocated_misc_report_69(::Calmcar::drivers::CHASIS::Misc_report_69* misc_report_69);

  // .Calmcar.drivers.CHASIS.Pms_current_4_1c3 pms_current_4_1c3 = 15;
  bool has_pms_current_4_1c3() const;
  void clear_pms_current_4_1c3();
  static const int kPmsCurrent41C3FieldNumber = 15;
  private:
  const ::Calmcar::drivers::CHASIS::Pms_current_4_1c3& _internal_pms_current_4_1c3() const;
  public:
  const ::Calmcar::drivers::CHASIS::Pms_current_4_1c3& pms_current_4_1c3() const;
  ::Calmcar::drivers::CHASIS::Pms_current_4_1c3* release_pms_current_4_1c3();
  ::Calmcar::drivers::CHASIS::Pms_current_4_1c3* mutable_pms_current_4_1c3();
  void set_allocated_pms_current_4_1c3(::Calmcar::drivers::CHASIS::Pms_current_4_1c3* pms_current_4_1c3);

  // .Calmcar.drivers.CHASIS.Pms_current_3_1c2 pms_current_3_1c2 = 16;
  bool has_pms_current_3_1c2() const;
  void clear_pms_current_3_1c2();
  static const int kPmsCurrent31C2FieldNumber = 16;
  private:
  const ::Calmcar::drivers::CHASIS::Pms_current_3_1c2& _internal_pms_current_3_1c2() const;
  public:
  const ::Calmcar::drivers::CHASIS::Pms_current_3_1c2& pms_current_3_1c2() const;
  ::Calmcar::drivers::CHASIS::Pms_current_3_1c2* release_pms_current_3_1c2();
  ::Calmcar::drivers::CHASIS::Pms_current_3_1c2* mutable_pms_current_3_1c2();
  void set_allocated_pms_current_3_1c2(::Calmcar::drivers::CHASIS::Pms_current_3_1c2* pms_current_3_1c2);

  // .Calmcar.drivers.CHASIS.Pms_current_2_1c1 pms_current_2_1c1 = 17;
  bool has_pms_current_2_1c1() const;
  void clear_pms_current_2_1c1();
  static const int kPmsCurrent21C1FieldNumber = 17;
  private:
  const ::Calmcar::drivers::CHASIS::Pms_current_2_1c1& _internal_pms_current_2_1c1() const;
  public:
  const ::Calmcar::drivers::CHASIS::Pms_current_2_1c1& pms_current_2_1c1() const;
  ::Calmcar::drivers::CHASIS::Pms_current_2_1c1* release_pms_current_2_1c1();
  ::Calmcar::drivers::CHASIS::Pms_current_2_1c1* mutable_pms_current_2_1c1();
  void set_allocated_pms_current_2_1c1(::Calmcar::drivers::CHASIS::Pms_current_2_1c1* pms_current_2_1c1);

  // .Calmcar.drivers.CHASIS.Pms_current_1_1c0 pms_current_1_1c0 = 18;
  bool has_pms_current_1_1c0() const;
  void clear_pms_current_1_1c0();
  static const int kPmsCurrent11C0FieldNumber = 18;
  private:
  const ::Calmcar::drivers::CHASIS::Pms_current_1_1c0& _internal_pms_current_1_1c0() const;
  public:
  const ::Calmcar::drivers::CHASIS::Pms_current_1_1c0& pms_current_1_1c0() const;
  ::Calmcar::drivers::CHASIS::Pms_current_1_1c0* release_pms_current_1_1c0();
  ::Calmcar::drivers::CHASIS::Pms_current_1_1c0* mutable_pms_current_1_1c0();
  void set_allocated_pms_current_1_1c0(::Calmcar::drivers::CHASIS::Pms_current_1_1c0* pms_current_1_1c0);

  // .Calmcar.drivers.CHASIS.Pms_cmd_1ba pms_cmd_1ba = 19;
  bool has_pms_cmd_1ba() const;
  void clear_pms_cmd_1ba();
  static const int kPmsCmd1BaFieldNumber = 19;
  private:
  const ::Calmcar::drivers::CHASIS::Pms_cmd_1ba& _internal_pms_cmd_1ba() const;
  public:
  const ::Calmcar::drivers::CHASIS::Pms_cmd_1ba& pms_cmd_1ba() const;
  ::Calmcar::drivers::CHASIS::Pms_cmd_1ba* release_pms_cmd_1ba();
  ::Calmcar::drivers::CHASIS::Pms_cmd_1ba* mutable_pms_cmd_1ba();
  void set_allocated_pms_cmd_1ba(::Calmcar::drivers::CHASIS::Pms_cmd_1ba* pms_cmd_1ba);

  // .Calmcar.drivers.CHASIS.Wheelspeed_report_6a wheelspeed_report_6a = 20;
  bool has_wheelspeed_report_6a() const;
  void clear_wheelspeed_report_6a();
  static const int kWheelspeedReport6AFieldNumber = 20;
  private:
  const ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a& _internal_wheelspeed_report_6a() const;
  public:
  const ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a& wheelspeed_report_6a() const;
  ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a* release_wheelspeed_report_6a();
  ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a* mutable_wheelspeed_report_6a();
  void set_allocated_wheelspeed_report_6a(::Calmcar::drivers::CHASIS::Wheelspeed_report_6a* wheelspeed_report_6a);

  // .Calmcar.drivers.CHASIS.Accel_report_6b accel_report_6b = 21;
  bool has_accel_report_6b() const;
  void clear_accel_report_6b();
  static const int kAccelReport6BFieldNumber = 21;
  private:
  const ::Calmcar::drivers::CHASIS::Accel_report_6b& _internal_accel_report_6b() const;
  public:
  const ::Calmcar::drivers::CHASIS::Accel_report_6b& accel_report_6b() const;
  ::Calmcar::drivers::CHASIS::Accel_report_6b* release_accel_report_6b();
  ::Calmcar::drivers::CHASIS::Accel_report_6b* mutable_accel_report_6b();
  void set_allocated_accel_report_6b(::Calmcar::drivers::CHASIS::Accel_report_6b* accel_report_6b);

  // .Calmcar.drivers.CHASIS.Gyro_report_6c gyro_report_6c = 22;
  bool has_gyro_report_6c() const;
  void clear_gyro_report_6c();
  static const int kGyroReport6CFieldNumber = 22;
  private:
  const ::Calmcar::drivers::CHASIS::Gyro_report_6c& _internal_gyro_report_6c() const;
  public:
  const ::Calmcar::drivers::CHASIS::Gyro_report_6c& gyro_report_6c() const;
  ::Calmcar::drivers::CHASIS::Gyro_report_6c* release_gyro_report_6c();
  ::Calmcar::drivers::CHASIS::Gyro_report_6c* mutable_gyro_report_6c();
  void set_allocated_gyro_report_6c(::Calmcar::drivers::CHASIS::Gyro_report_6c* gyro_report_6c);

  // .Calmcar.drivers.CHASIS.Gps_1_report_6d gps_1_report_6d = 23;
  bool has_gps_1_report_6d() const;
  void clear_gps_1_report_6d();
  static const int kGps1Report6DFieldNumber = 23;
  private:
  const ::Calmcar::drivers::CHASIS::Gps_1_report_6d& _internal_gps_1_report_6d() const;
  public:
  const ::Calmcar::drivers::CHASIS::Gps_1_report_6d& gps_1_report_6d() const;
  ::Calmcar::drivers::CHASIS::Gps_1_report_6d* release_gps_1_report_6d();
  ::Calmcar::drivers::CHASIS::Gps_1_report_6d* mutable_gps_1_report_6d();
  void set_allocated_gps_1_report_6d(::Calmcar::drivers::CHASIS::Gps_1_report_6d* gps_1_report_6d);

  // .Calmcar.drivers.CHASIS.Gps_2_report_6e gps_2_report_6e = 24;
  bool has_gps_2_report_6e() const;
  void clear_gps_2_report_6e();
  static const int kGps2Report6EFieldNumber = 24;
  private:
  const ::Calmcar::drivers::CHASIS::Gps_2_report_6e& _internal_gps_2_report_6e() const;
  public:
  const ::Calmcar::drivers::CHASIS::Gps_2_report_6e& gps_2_report_6e() const;
  ::Calmcar::drivers::CHASIS::Gps_2_report_6e* release_gps_2_report_6e();
  ::Calmcar::drivers::CHASIS::Gps_2_report_6e* mutable_gps_2_report_6e();
  void set_allocated_gps_2_report_6e(::Calmcar::drivers::CHASIS::Gps_2_report_6e* gps_2_report_6e);

  // .Calmcar.drivers.CHASIS.Gps_3_report_6f gps_3_report_6f = 25;
  bool has_gps_3_report_6f() const;
  void clear_gps_3_report_6f();
  static const int kGps3Report6FFieldNumber = 25;
  private:
  const ::Calmcar::drivers::CHASIS::Gps_3_report_6f& _internal_gps_3_report_6f() const;
  public:
  const ::Calmcar::drivers::CHASIS::Gps_3_report_6f& gps_3_report_6f() const;
  ::Calmcar::drivers::CHASIS::Gps_3_report_6f* release_gps_3_report_6f();
  ::Calmcar::drivers::CHASIS::Gps_3_report_6f* mutable_gps_3_report_6f();
  void set_allocated_gps_3_report_6f(::Calmcar::drivers::CHASIS::Gps_3_report_6f* gps_3_report_6f);

  // .Calmcar.drivers.CHASIS.Throttleinfo_report_75 throttleinfo_report_75 = 26;
  bool has_throttleinfo_report_75() const;
  void clear_throttleinfo_report_75();
  static const int kThrottleinfoReport75FieldNumber = 26;
  private:
  const ::Calmcar::drivers::CHASIS::Throttleinfo_report_75& _internal_throttleinfo_report_75() const;
  public:
  const ::Calmcar::drivers::CHASIS::Throttleinfo_report_75& throttleinfo_report_75() const;
  ::Calmcar::drivers::CHASIS::Throttleinfo_report_75* release_throttleinfo_report_75();
  ::Calmcar::drivers::CHASIS::Throttleinfo_report_75* mutable_throttleinfo_report_75();
  void set_allocated_throttleinfo_report_75(::Calmcar::drivers::CHASIS::Throttleinfo_report_75* throttleinfo_report_75);

  // .Calmcar.drivers.CHASIS.Brakeinfo_report_74 brakeinfo_report_74 = 27;
  bool has_brakeinfo_report_74() const;
  void clear_brakeinfo_report_74();
  static const int kBrakeinfoReport74FieldNumber = 27;
  private:
  const ::Calmcar::drivers::CHASIS::Brakeinfo_report_74& _internal_brakeinfo_report_74() const;
  public:
  const ::Calmcar::drivers::CHASIS::Brakeinfo_report_74& brakeinfo_report_74() const;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74* release_brakeinfo_report_74();
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74* mutable_brakeinfo_report_74();
  void set_allocated_brakeinfo_report_74(::Calmcar::drivers::CHASIS::Brakeinfo_report_74* brakeinfo_report_74);

  // .Calmcar.drivers.CHASIS.Surround_report_73 surround_report_73 = 28;
  bool has_surround_report_73() const;
  void clear_surround_report_73();
  static const int kSurroundReport73FieldNumber = 28;
  private:
  const ::Calmcar::drivers::CHASIS::Surround_report_73& _internal_surround_report_73() const;
  public:
  const ::Calmcar::drivers::CHASIS::Surround_report_73& surround_report_73() const;
  ::Calmcar::drivers::CHASIS::Surround_report_73* release_surround_report_73();
  ::Calmcar::drivers::CHASIS::Surround_report_73* mutable_surround_report_73();
  void set_allocated_surround_report_73(::Calmcar::drivers::CHASIS::Surround_report_73* surround_report_73);

  // .Calmcar.drivers.CHASIS.Fuellevel_report_72 fuellevel_report_72 = 29;
  bool has_fuellevel_report_72() const;
  void clear_fuellevel_report_72();
  static const int kFuellevelReport72FieldNumber = 29;
  private:
  const ::Calmcar::drivers::CHASIS::Fuellevel_report_72& _internal_fuellevel_report_72() const;
  public:
  const ::Calmcar::drivers::CHASIS::Fuellevel_report_72& fuellevel_report_72() const;
  ::Calmcar::drivers::CHASIS::Fuellevel_report_72* release_fuellevel_report_72();
  ::Calmcar::drivers::CHASIS::Fuellevel_report_72* mutable_fuellevel_report_72();
  void set_allocated_fuellevel_report_72(::Calmcar::drivers::CHASIS::Fuellevel_report_72* fuellevel_report_72);

  // .Calmcar.drivers.CHASIS.Tirepressure_report_71 tirepressure_report_71 = 30;
  bool has_tirepressure_report_71() const;
  void clear_tirepressure_report_71();
  static const int kTirepressureReport71FieldNumber = 30;
  private:
  const ::Calmcar::drivers::CHASIS::Tirepressure_report_71& _internal_tirepressure_report_71() const;
  public:
  const ::Calmcar::drivers::CHASIS::Tirepressure_report_71& tirepressure_report_71() const;
  ::Calmcar::drivers::CHASIS::Tirepressure_report_71* release_tirepressure_report_71();
  ::Calmcar::drivers::CHASIS::Tirepressure_report_71* mutable_tirepressure_report_71();
  void set_allocated_tirepressure_report_71(::Calmcar::drivers::CHASIS::Tirepressure_report_71* tirepressure_report_71);

  // .Calmcar.drivers.CHASIS.Wheelposition_report_70 wheelposition_report_70 = 31;
  bool has_wheelposition_report_70() const;
  void clear_wheelposition_report_70();
  static const int kWheelpositionReport70FieldNumber = 31;
  private:
  const ::Calmcar::drivers::CHASIS::Wheelposition_report_70& _internal_wheelposition_report_70() const;
  public:
  const ::Calmcar::drivers::CHASIS::Wheelposition_report_70& wheelposition_report_70() const;
  ::Calmcar::drivers::CHASIS::Wheelposition_report_70* release_wheelposition_report_70();
  ::Calmcar::drivers::CHASIS::Wheelposition_report_70* mutable_wheelposition_report_70();
  void set_allocated_wheelposition_report_70(::Calmcar::drivers::CHASIS::Wheelposition_report_70* wheelposition_report_70);

  // .Calmcar.drivers.CHASIS.Suspension_79 suspension_79 = 32;
  bool has_suspension_79() const;
  void clear_suspension_79();
  static const int kSuspension79FieldNumber = 32;
  private:
  const ::Calmcar::drivers::CHASIS::Suspension_79& _internal_suspension_79() const;
  public:
  const ::Calmcar::drivers::CHASIS::Suspension_79& suspension_79() const;
  ::Calmcar::drivers::CHASIS::Suspension_79* release_suspension_79();
  ::Calmcar::drivers::CHASIS::Suspension_79* mutable_suspension_79();
  void set_allocated_suspension_79(::Calmcar::drivers::CHASIS::Suspension_79* suspension_79);

  // .Calmcar.drivers.CHASIS.Pms_voltage_1b0 pms_voltage_1b0 = 33;
  bool has_pms_voltage_1b0() const;
  void clear_pms_voltage_1b0();
  static const int kPmsVoltage1B0FieldNumber = 33;
  private:
  const ::Calmcar::drivers::CHASIS::Pms_voltage_1b0& _internal_pms_voltage_1b0() const;
  public:
  const ::Calmcar::drivers::CHASIS::Pms_voltage_1b0& pms_voltage_1b0() const;
  ::Calmcar::drivers::CHASIS::Pms_voltage_1b0* release_pms_voltage_1b0();
  ::Calmcar::drivers::CHASIS::Pms_voltage_1b0* mutable_pms_voltage_1b0();
  void set_allocated_pms_voltage_1b0(::Calmcar::drivers::CHASIS::Pms_voltage_1b0* pms_voltage_1b0);

  // .Calmcar.drivers.CHASIS.Pms_sta_1e0 pms_sta_1e0 = 34;
  bool has_pms_sta_1e0() const;
  void clear_pms_sta_1e0();
  static const int kPmsSta1E0FieldNumber = 34;
  private:
  const ::Calmcar::drivers::CHASIS::Pms_sta_1e0& _internal_pms_sta_1e0() const;
  public:
  const ::Calmcar::drivers::CHASIS::Pms_sta_1e0& pms_sta_1e0() const;
  ::Calmcar::drivers::CHASIS::Pms_sta_1e0* release_pms_sta_1e0();
  ::Calmcar::drivers::CHASIS::Pms_sta_1e0* mutable_pms_sta_1e0();
  void set_allocated_pms_sta_1e0(::Calmcar::drivers::CHASIS::Pms_sta_1e0* pms_sta_1e0);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.CHASIS.Chasis)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::Calmcar::common::Header* header_;
  ::Calmcar::drivers::CHASIS::Version_ss_7f* version_ss_7f_;
  ::Calmcar::drivers::CHASIS::Version_bt_7e* version_bt_7e_;
  ::Calmcar::drivers::CHASIS::Misc_report_ss_7b* misc_report_ss_7b_;
  ::Calmcar::drivers::CHASIS::Brake_command_60* brake_command_60_;
  ::Calmcar::drivers::CHASIS::Brake_report_61* brake_report_61_;
  ::Calmcar::drivers::CHASIS::Throttle_command_62* throttle_command_62_;
  ::Calmcar::drivers::CHASIS::Throttle_report_63* throttle_report_63_;
  ::Calmcar::drivers::CHASIS::Steering_command_64* steering_command_64_;
  ::Calmcar::drivers::CHASIS::Steering_report_65* steering_report_65_;
  ::Calmcar::drivers::CHASIS::Gear_command_66* gear_command_66_;
  ::Calmcar::drivers::CHASIS::Gear_report_67* gear_report_67_;
  ::Calmcar::drivers::CHASIS::Turnsignal_command_68* turnsignal_command_68_;
  ::Calmcar::drivers::CHASIS::Misc_report_69* misc_report_69_;
  ::Calmcar::drivers::CHASIS::Pms_current_4_1c3* pms_current_4_1c3_;
  ::Calmcar::drivers::CHASIS::Pms_current_3_1c2* pms_current_3_1c2_;
  ::Calmcar::drivers::CHASIS::Pms_current_2_1c1* pms_current_2_1c1_;
  ::Calmcar::drivers::CHASIS::Pms_current_1_1c0* pms_current_1_1c0_;
  ::Calmcar::drivers::CHASIS::Pms_cmd_1ba* pms_cmd_1ba_;
  ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a* wheelspeed_report_6a_;
  ::Calmcar::drivers::CHASIS::Accel_report_6b* accel_report_6b_;
  ::Calmcar::drivers::CHASIS::Gyro_report_6c* gyro_report_6c_;
  ::Calmcar::drivers::CHASIS::Gps_1_report_6d* gps_1_report_6d_;
  ::Calmcar::drivers::CHASIS::Gps_2_report_6e* gps_2_report_6e_;
  ::Calmcar::drivers::CHASIS::Gps_3_report_6f* gps_3_report_6f_;
  ::Calmcar::drivers::CHASIS::Throttleinfo_report_75* throttleinfo_report_75_;
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74* brakeinfo_report_74_;
  ::Calmcar::drivers::CHASIS::Surround_report_73* surround_report_73_;
  ::Calmcar::drivers::CHASIS::Fuellevel_report_72* fuellevel_report_72_;
  ::Calmcar::drivers::CHASIS::Tirepressure_report_71* tirepressure_report_71_;
  ::Calmcar::drivers::CHASIS::Wheelposition_report_70* wheelposition_report_70_;
  ::Calmcar::drivers::CHASIS::Suspension_79* suspension_79_;
  ::Calmcar::drivers::CHASIS::Pms_voltage_1b0* pms_voltage_1b0_;
  ::Calmcar::drivers::CHASIS::Pms_sta_1e0* pms_sta_1e0_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_chasis_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Version_ss_7f

// int32 build = 1;
inline void Version_ss_7f::clear_build() {
  build_ = 0;
}
inline ::google::protobuf::int32 Version_ss_7f::build() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_ss_7f.build)
  return build_;
}
inline void Version_ss_7f::set_build(::google::protobuf::int32 value) {
  
  build_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_ss_7f.build)
}

// int32 my_minor = 2;
inline void Version_ss_7f::clear_my_minor() {
  my_minor_ = 0;
}
inline ::google::protobuf::int32 Version_ss_7f::my_minor() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_ss_7f.my_minor)
  return my_minor_;
}
inline void Version_ss_7f::set_my_minor(::google::protobuf::int32 value) {
  
  my_minor_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_ss_7f.my_minor)
}

// int32 my_major = 3;
inline void Version_ss_7f::clear_my_major() {
  my_major_ = 0;
}
inline ::google::protobuf::int32 Version_ss_7f::my_major() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_ss_7f.my_major)
  return my_major_;
}
inline void Version_ss_7f::set_my_major(::google::protobuf::int32 value) {
  
  my_major_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_ss_7f.my_major)
}

// int32 module = 4;
inline void Version_ss_7f::clear_module() {
  module_ = 0;
}
inline ::google::protobuf::int32 Version_ss_7f::module() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_ss_7f.module)
  return module_;
}
inline void Version_ss_7f::set_module(::google::protobuf::int32 value) {
  
  module_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_ss_7f.module)
}

// -------------------------------------------------------------------

// Version_bt_7e

// int32 vin16 = 1;
inline void Version_bt_7e::clear_vin16() {
  vin16_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin16() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin16)
  return vin16_;
}
inline void Version_bt_7e::set_vin16(::google::protobuf::int32 value) {
  
  vin16_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin16)
}

// int32 vin15 = 2;
inline void Version_bt_7e::clear_vin15() {
  vin15_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin15() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin15)
  return vin15_;
}
inline void Version_bt_7e::set_vin15(::google::protobuf::int32 value) {
  
  vin15_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin15)
}

// int32 vin14 = 3;
inline void Version_bt_7e::clear_vin14() {
  vin14_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin14() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin14)
  return vin14_;
}
inline void Version_bt_7e::set_vin14(::google::protobuf::int32 value) {
  
  vin14_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin14)
}

// int32 vin13 = 4;
inline void Version_bt_7e::clear_vin13() {
  vin13_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin13() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin13)
  return vin13_;
}
inline void Version_bt_7e::set_vin13(::google::protobuf::int32 value) {
  
  vin13_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin13)
}

// int32 vin12 = 5;
inline void Version_bt_7e::clear_vin12() {
  vin12_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin12() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin12)
  return vin12_;
}
inline void Version_bt_7e::set_vin12(::google::protobuf::int32 value) {
  
  vin12_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin12)
}

// int32 vin11 = 6;
inline void Version_bt_7e::clear_vin11() {
  vin11_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin11() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin11)
  return vin11_;
}
inline void Version_bt_7e::set_vin11(::google::protobuf::int32 value) {
  
  vin11_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin11)
}

// int32 vin10 = 7;
inline void Version_bt_7e::clear_vin10() {
  vin10_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin10() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin10)
  return vin10_;
}
inline void Version_bt_7e::set_vin10(::google::protobuf::int32 value) {
  
  vin10_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin10)
}

// int32 vin09 = 8;
inline void Version_bt_7e::clear_vin09() {
  vin09_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin09() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin09)
  return vin09_;
}
inline void Version_bt_7e::set_vin09(::google::protobuf::int32 value) {
  
  vin09_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin09)
}

// int32 vin08 = 9;
inline void Version_bt_7e::clear_vin08() {
  vin08_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin08() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin08)
  return vin08_;
}
inline void Version_bt_7e::set_vin08(::google::protobuf::int32 value) {
  
  vin08_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin08)
}

// int32 vin07 = 10;
inline void Version_bt_7e::clear_vin07() {
  vin07_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin07() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin07)
  return vin07_;
}
inline void Version_bt_7e::set_vin07(::google::protobuf::int32 value) {
  
  vin07_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin07)
}

// int32 vin06 = 11;
inline void Version_bt_7e::clear_vin06() {
  vin06_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin06() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin06)
  return vin06_;
}
inline void Version_bt_7e::set_vin06(::google::protobuf::int32 value) {
  
  vin06_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin06)
}

// int32 vin05 = 12;
inline void Version_bt_7e::clear_vin05() {
  vin05_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin05() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin05)
  return vin05_;
}
inline void Version_bt_7e::set_vin05(::google::protobuf::int32 value) {
  
  vin05_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin05)
}

// int32 vin04 = 13;
inline void Version_bt_7e::clear_vin04() {
  vin04_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin04() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin04)
  return vin04_;
}
inline void Version_bt_7e::set_vin04(::google::protobuf::int32 value) {
  
  vin04_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin04)
}

// int32 vin03 = 14;
inline void Version_bt_7e::clear_vin03() {
  vin03_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin03() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin03)
  return vin03_;
}
inline void Version_bt_7e::set_vin03(::google::protobuf::int32 value) {
  
  vin03_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin03)
}

// int32 vin02 = 15;
inline void Version_bt_7e::clear_vin02() {
  vin02_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin02() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin02)
  return vin02_;
}
inline void Version_bt_7e::set_vin02(::google::protobuf::int32 value) {
  
  vin02_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin02)
}

// int32 vin01 = 16;
inline void Version_bt_7e::clear_vin01() {
  vin01_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin01() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin01)
  return vin01_;
}
inline void Version_bt_7e::set_vin01(::google::protobuf::int32 value) {
  
  vin01_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin01)
}

// int32 vin00 = 17;
inline void Version_bt_7e::clear_vin00() {
  vin00_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::vin00() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.vin00)
  return vin00_;
}
inline void Version_bt_7e::set_vin00(::google::protobuf::int32 value) {
  
  vin00_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.vin00)
}

// int32 mux = 18;
inline void Version_bt_7e::clear_mux() {
  mux_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::mux() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.mux)
  return mux_;
}
inline void Version_bt_7e::set_mux(::google::protobuf::int32 value) {
  
  mux_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.mux)
}

// int32 build = 19;
inline void Version_bt_7e::clear_build() {
  build_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::build() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.build)
  return build_;
}
inline void Version_bt_7e::set_build(::google::protobuf::int32 value) {
  
  build_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.build)
}

// int32 my_minor = 20;
inline void Version_bt_7e::clear_my_minor() {
  my_minor_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::my_minor() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.my_minor)
  return my_minor_;
}
inline void Version_bt_7e::set_my_minor(::google::protobuf::int32 value) {
  
  my_minor_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.my_minor)
}

// int32 my_major = 21;
inline void Version_bt_7e::clear_my_major() {
  my_major_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::my_major() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.my_major)
  return my_major_;
}
inline void Version_bt_7e::set_my_major(::google::protobuf::int32 value) {
  
  my_major_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.my_major)
}

// int32 module = 22;
inline void Version_bt_7e::clear_module() {
  module_ = 0;
}
inline ::google::protobuf::int32 Version_bt_7e::module() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Version_bt_7e.module)
  return module_;
}
inline void Version_bt_7e::set_module(::google::protobuf::int32 value) {
  
  module_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Version_bt_7e.module)
}

// -------------------------------------------------------------------

// Misc_report_ss_7b

// .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdupType ldup = 1;
inline void Misc_report_ss_7b::clear_ldup() {
  ldup_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdupType Misc_report_ss_7b::ldup() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_ss_7b.ldup)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdupType >(ldup_);
}
inline void Misc_report_ss_7b::set_ldup(::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdupType value) {
  
  ldup_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_ss_7b.ldup)
}

// .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdrhtType ldrht = 2;
inline void Misc_report_ss_7b::clear_ldrht() {
  ldrht_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdrhtType Misc_report_ss_7b::ldrht() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_ss_7b.ldrht)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdrhtType >(ldrht_);
}
inline void Misc_report_ss_7b::set_ldrht(::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdrhtType value) {
  
  ldrht_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_ss_7b.ldrht)
}

// .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdokType ldok = 3;
inline void Misc_report_ss_7b::clear_ldok() {
  ldok_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdokType Misc_report_ss_7b::ldok() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_ss_7b.ldok)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdokType >(ldok_);
}
inline void Misc_report_ss_7b::set_ldok(::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdokType value) {
  
  ldok_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_ss_7b.ldok)
}

// .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LdlftType ldlft = 4;
inline void Misc_report_ss_7b::clear_ldlft() {
  ldlft_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdlftType Misc_report_ss_7b::ldlft() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_ss_7b.ldlft)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdlftType >(ldlft_);
}
inline void Misc_report_ss_7b::set_ldlft(::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdlftType value) {
  
  ldlft_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_ss_7b.ldlft)
}

// .Calmcar.drivers.CHASIS.Misc_report_ss_7b.LddwnType lddwn = 5;
inline void Misc_report_ss_7b::clear_lddwn() {
  lddwn_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LddwnType Misc_report_ss_7b::lddwn() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_ss_7b.lddwn)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LddwnType >(lddwn_);
}
inline void Misc_report_ss_7b::set_lddwn(::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LddwnType value) {
  
  lddwn_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_ss_7b.lddwn)
}

// -------------------------------------------------------------------

// Brake_command_60

// bool audio = 1;
inline void Brake_command_60::clear_audio() {
  audio_ = false;
}
inline bool Brake_command_60::audio() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_command_60.audio)
  return audio_;
}
inline void Brake_command_60::set_audio(bool value) {
  
  audio_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_command_60.audio)
}

// double acc = 2;
inline void Brake_command_60::clear_acc() {
  acc_ = 0;
}
inline double Brake_command_60::acc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_command_60.acc)
  return acc_;
}
inline void Brake_command_60::set_acc(double value) {
  
  acc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_command_60.acc)
}

// bool quiet = 3;
inline void Brake_command_60::clear_quiet() {
  quiet_ = false;
}
inline bool Brake_command_60::quiet() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_command_60.quiet)
  return quiet_;
}
inline void Brake_command_60::set_quiet(bool value) {
  
  quiet_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_command_60.quiet)
}

// int32 count = 4;
inline void Brake_command_60::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 Brake_command_60::count() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_command_60.count)
  return count_;
}
inline void Brake_command_60::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_command_60.count)
}

// bool ignore = 5;
inline void Brake_command_60::clear_ignore() {
  ignore_ = false;
}
inline bool Brake_command_60::ignore() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_command_60.ignore)
  return ignore_;
}
inline void Brake_command_60::set_ignore(bool value) {
  
  ignore_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_command_60.ignore)
}

// bool clear = 6;
inline void Brake_command_60::clear_clear() {
  clear_ = false;
}
inline bool Brake_command_60::clear() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_command_60.clear)
  return clear_;
}
inline void Brake_command_60::set_clear(bool value) {
  
  clear_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_command_60.clear)
}

// double pcmd = 7;
inline void Brake_command_60::clear_pcmd() {
  pcmd_ = 0;
}
inline double Brake_command_60::pcmd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_command_60.pcmd)
  return pcmd_;
}
inline void Brake_command_60::set_pcmd(double value) {
  
  pcmd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_command_60.pcmd)
}

// .Calmcar.drivers.CHASIS.Brake_command_60.EnType en = 8;
inline void Brake_command_60::clear_en() {
  en_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_command_60_EnType Brake_command_60::en() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_command_60.en)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_command_60_EnType >(en_);
}
inline void Brake_command_60::set_en(::Calmcar::drivers::CHASIS::Brake_command_60_EnType value) {
  
  en_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_command_60.en)
}

// .Calmcar.drivers.CHASIS.Brake_command_60.BcmdType bcmd = 9;
inline void Brake_command_60::clear_bcmd() {
  bcmd_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_command_60_BcmdType Brake_command_60::bcmd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_command_60.bcmd)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_command_60_BcmdType >(bcmd_);
}
inline void Brake_command_60::set_bcmd(::Calmcar::drivers::CHASIS::Brake_command_60_BcmdType value) {
  
  bcmd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_command_60.bcmd)
}

// -------------------------------------------------------------------

// Brake_report_61

// .Calmcar.drivers.CHASIS.Brake_report_61.WdcsrcType wdcsrc = 1;
inline void Brake_report_61::clear_wdcsrc() {
  wdcsrc_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_WdcsrcType Brake_report_61::wdcsrc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.wdcsrc)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_WdcsrcType >(wdcsrc_);
}
inline void Brake_report_61::set_wdcsrc(::Calmcar::drivers::CHASIS::Brake_report_61_WdcsrcType value) {
  
  wdcsrc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.wdcsrc)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.WdcbrkType wdcbrk = 2;
inline void Brake_report_61::clear_wdcbrk() {
  wdcbrk_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_WdcbrkType Brake_report_61::wdcbrk() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.wdcbrk)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_WdcbrkType >(wdcbrk_);
}
inline void Brake_report_61::set_wdcbrk(::Calmcar::drivers::CHASIS::Brake_report_61_WdcbrkType value) {
  
  wdcbrk_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.wdcbrk)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.DriverType driver = 3;
inline void Brake_report_61::clear_driver() {
  driver_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_DriverType Brake_report_61::driver() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.driver)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_DriverType >(driver_);
}
inline void Brake_report_61::set_driver(::Calmcar::drivers::CHASIS::Brake_report_61_DriverType value) {
  
  driver_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.driver)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.FltwdcType fltwdc = 4;
inline void Brake_report_61::clear_fltwdc() {
  fltwdc_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_FltwdcType Brake_report_61::fltwdc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.fltwdc)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_FltwdcType >(fltwdc_);
}
inline void Brake_report_61::set_fltwdc(::Calmcar::drivers::CHASIS::Brake_report_61_FltwdcType value) {
  
  fltwdc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.fltwdc)
}

// double po = 5;
inline void Brake_report_61::clear_po() {
  po_ = 0;
}
inline double Brake_report_61::po() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.po)
  return po_;
}
inline void Brake_report_61::set_po(double value) {
  
  po_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.po)
}

// double pi = 6;
inline void Brake_report_61::clear_pi() {
  pi_ = 0;
}
inline double Brake_report_61::pi() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.pi)
  return pi_;
}
inline void Brake_report_61::set_pi(double value) {
  
  pi_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.pi)
}

// double pc = 7;
inline void Brake_report_61::clear_pc() {
  pc_ = 0;
}
inline double Brake_report_61::pc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.pc)
  return pc_;
}
inline void Brake_report_61::set_pc(double value) {
  
  pc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.pc)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.TmoutType tmout = 8;
inline void Brake_report_61::clear_tmout() {
  tmout_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_TmoutType Brake_report_61::tmout() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.tmout)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_TmoutType >(tmout_);
}
inline void Brake_report_61::set_tmout(::Calmcar::drivers::CHASIS::Brake_report_61_TmoutType value) {
  
  tmout_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.tmout)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.FltbooType fltboo = 9;
inline void Brake_report_61::clear_fltboo() {
  fltboo_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_FltbooType Brake_report_61::fltboo() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.fltboo)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_FltbooType >(fltboo_);
}
inline void Brake_report_61::set_fltboo(::Calmcar::drivers::CHASIS::Brake_report_61_FltbooType value) {
  
  fltboo_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.fltboo)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.Flt2Type flt2 = 10;
inline void Brake_report_61::clear_flt2() {
  flt2_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_Flt2Type Brake_report_61::flt2() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.flt2)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_Flt2Type >(flt2_);
}
inline void Brake_report_61::set_flt2(::Calmcar::drivers::CHASIS::Brake_report_61_Flt2Type value) {
  
  flt2_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.flt2)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.Flt1Type flt1 = 11;
inline void Brake_report_61::clear_flt1() {
  flt1_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_Flt1Type Brake_report_61::flt1() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.flt1)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_Flt1Type >(flt1_);
}
inline void Brake_report_61::set_flt1(::Calmcar::drivers::CHASIS::Brake_report_61_Flt1Type value) {
  
  flt1_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.flt1)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.EnType en = 12;
inline void Brake_report_61::clear_en() {
  en_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_EnType Brake_report_61::en() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.en)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_EnType >(en_);
}
inline void Brake_report_61::set_en(::Calmcar::drivers::CHASIS::Brake_report_61_EnType value) {
  
  en_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.en)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.OverrideType override = 13;
inline void Brake_report_61::clear_override() {
  override_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_OverrideType Brake_report_61::override() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.override)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_OverrideType >(override_);
}
inline void Brake_report_61::set_override(::Calmcar::drivers::CHASIS::Brake_report_61_OverrideType value) {
  
  override_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.override)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.BoType bo = 14;
inline void Brake_report_61::clear_bo() {
  bo_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_BoType Brake_report_61::bo() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.bo)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_BoType >(bo_);
}
inline void Brake_report_61::set_bo(::Calmcar::drivers::CHASIS::Brake_report_61_BoType value) {
  
  bo_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.bo)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.BiType bi = 15;
inline void Brake_report_61::clear_bi() {
  bi_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_BiType Brake_report_61::bi() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.bi)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_BiType >(bi_);
}
inline void Brake_report_61::set_bi(::Calmcar::drivers::CHASIS::Brake_report_61_BiType value) {
  
  bi_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.bi)
}

// .Calmcar.drivers.CHASIS.Brake_report_61.BcType bc = 16;
inline void Brake_report_61::clear_bc() {
  bc_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61_BcType Brake_report_61::bc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brake_report_61.bc)
  return static_cast< ::Calmcar::drivers::CHASIS::Brake_report_61_BcType >(bc_);
}
inline void Brake_report_61::set_bc(::Calmcar::drivers::CHASIS::Brake_report_61_BcType value) {
  
  bc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brake_report_61.bc)
}

// -------------------------------------------------------------------

// Throttle_command_62

// bool quiet = 1;
inline void Throttle_command_62::clear_quiet() {
  quiet_ = false;
}
inline bool Throttle_command_62::quiet() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_command_62.quiet)
  return quiet_;
}
inline void Throttle_command_62::set_quiet(bool value) {
  
  quiet_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_command_62.quiet)
}

// int32 count = 2;
inline void Throttle_command_62::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 Throttle_command_62::count() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_command_62.count)
  return count_;
}
inline void Throttle_command_62::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_command_62.count)
}

// bool ignore = 3;
inline void Throttle_command_62::clear_ignore() {
  ignore_ = false;
}
inline bool Throttle_command_62::ignore() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_command_62.ignore)
  return ignore_;
}
inline void Throttle_command_62::set_ignore(bool value) {
  
  ignore_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_command_62.ignore)
}

// bool clear = 4;
inline void Throttle_command_62::clear_clear() {
  clear_ = false;
}
inline bool Throttle_command_62::clear() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_command_62.clear)
  return clear_;
}
inline void Throttle_command_62::set_clear(bool value) {
  
  clear_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_command_62.clear)
}

// double pcmd = 5;
inline void Throttle_command_62::clear_pcmd() {
  pcmd_ = 0;
}
inline double Throttle_command_62::pcmd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_command_62.pcmd)
  return pcmd_;
}
inline void Throttle_command_62::set_pcmd(double value) {
  
  pcmd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_command_62.pcmd)
}

// .Calmcar.drivers.CHASIS.Throttle_command_62.EnType en = 6;
inline void Throttle_command_62::clear_en() {
  en_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Throttle_command_62_EnType Throttle_command_62::en() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_command_62.en)
  return static_cast< ::Calmcar::drivers::CHASIS::Throttle_command_62_EnType >(en_);
}
inline void Throttle_command_62::set_en(::Calmcar::drivers::CHASIS::Throttle_command_62_EnType value) {
  
  en_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_command_62.en)
}

// -------------------------------------------------------------------

// Throttle_report_63

// .Calmcar.drivers.CHASIS.Throttle_report_63.WdcsrcType wdcsrc = 1;
inline void Throttle_report_63::clear_wdcsrc() {
  wdcsrc_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Throttle_report_63_WdcsrcType Throttle_report_63::wdcsrc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_report_63.wdcsrc)
  return static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_WdcsrcType >(wdcsrc_);
}
inline void Throttle_report_63::set_wdcsrc(::Calmcar::drivers::CHASIS::Throttle_report_63_WdcsrcType value) {
  
  wdcsrc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_report_63.wdcsrc)
}

// .Calmcar.drivers.CHASIS.Throttle_report_63.DriverType driver = 2;
inline void Throttle_report_63::clear_driver() {
  driver_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Throttle_report_63_DriverType Throttle_report_63::driver() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_report_63.driver)
  return static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_DriverType >(driver_);
}
inline void Throttle_report_63::set_driver(::Calmcar::drivers::CHASIS::Throttle_report_63_DriverType value) {
  
  driver_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_report_63.driver)
}

// .Calmcar.drivers.CHASIS.Throttle_report_63.FltwdcType fltwdc = 3;
inline void Throttle_report_63::clear_fltwdc() {
  fltwdc_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Throttle_report_63_FltwdcType Throttle_report_63::fltwdc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_report_63.fltwdc)
  return static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_FltwdcType >(fltwdc_);
}
inline void Throttle_report_63::set_fltwdc(::Calmcar::drivers::CHASIS::Throttle_report_63_FltwdcType value) {
  
  fltwdc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_report_63.fltwdc)
}

// double po = 4;
inline void Throttle_report_63::clear_po() {
  po_ = 0;
}
inline double Throttle_report_63::po() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_report_63.po)
  return po_;
}
inline void Throttle_report_63::set_po(double value) {
  
  po_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_report_63.po)
}

// double pi = 5;
inline void Throttle_report_63::clear_pi() {
  pi_ = 0;
}
inline double Throttle_report_63::pi() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_report_63.pi)
  return pi_;
}
inline void Throttle_report_63::set_pi(double value) {
  
  pi_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_report_63.pi)
}

// double pc = 6;
inline void Throttle_report_63::clear_pc() {
  pc_ = 0;
}
inline double Throttle_report_63::pc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_report_63.pc)
  return pc_;
}
inline void Throttle_report_63::set_pc(double value) {
  
  pc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_report_63.pc)
}

// .Calmcar.drivers.CHASIS.Throttle_report_63.TmoutType tmout = 7;
inline void Throttle_report_63::clear_tmout() {
  tmout_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Throttle_report_63_TmoutType Throttle_report_63::tmout() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_report_63.tmout)
  return static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_TmoutType >(tmout_);
}
inline void Throttle_report_63::set_tmout(::Calmcar::drivers::CHASIS::Throttle_report_63_TmoutType value) {
  
  tmout_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_report_63.tmout)
}

// .Calmcar.drivers.CHASIS.Throttle_report_63.Flt2Type flt2 = 8;
inline void Throttle_report_63::clear_flt2() {
  flt2_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Throttle_report_63_Flt2Type Throttle_report_63::flt2() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_report_63.flt2)
  return static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_Flt2Type >(flt2_);
}
inline void Throttle_report_63::set_flt2(::Calmcar::drivers::CHASIS::Throttle_report_63_Flt2Type value) {
  
  flt2_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_report_63.flt2)
}

// .Calmcar.drivers.CHASIS.Throttle_report_63.Flt1Type flt1 = 9;
inline void Throttle_report_63::clear_flt1() {
  flt1_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Throttle_report_63_Flt1Type Throttle_report_63::flt1() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_report_63.flt1)
  return static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_Flt1Type >(flt1_);
}
inline void Throttle_report_63::set_flt1(::Calmcar::drivers::CHASIS::Throttle_report_63_Flt1Type value) {
  
  flt1_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_report_63.flt1)
}

// .Calmcar.drivers.CHASIS.Throttle_report_63.EnType en = 10;
inline void Throttle_report_63::clear_en() {
  en_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Throttle_report_63_EnType Throttle_report_63::en() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_report_63.en)
  return static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_EnType >(en_);
}
inline void Throttle_report_63::set_en(::Calmcar::drivers::CHASIS::Throttle_report_63_EnType value) {
  
  en_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_report_63.en)
}

// .Calmcar.drivers.CHASIS.Throttle_report_63.OverrideType override = 11;
inline void Throttle_report_63::clear_override() {
  override_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Throttle_report_63_OverrideType Throttle_report_63::override() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttle_report_63.override)
  return static_cast< ::Calmcar::drivers::CHASIS::Throttle_report_63_OverrideType >(override_);
}
inline void Throttle_report_63::set_override(::Calmcar::drivers::CHASIS::Throttle_report_63_OverrideType value) {
  
  override_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttle_report_63.override)
}

// -------------------------------------------------------------------

// Steering_command_64

// bool quiet = 1;
inline void Steering_command_64::clear_quiet() {
  quiet_ = false;
}
inline bool Steering_command_64::quiet() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_command_64.quiet)
  return quiet_;
}
inline void Steering_command_64::set_quiet(bool value) {
  
  quiet_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_command_64.quiet)
}

// int32 count = 2;
inline void Steering_command_64::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 Steering_command_64::count() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_command_64.count)
  return count_;
}
inline void Steering_command_64::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_command_64.count)
}

// bool ignore = 3;
inline void Steering_command_64::clear_ignore() {
  ignore_ = false;
}
inline bool Steering_command_64::ignore() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_command_64.ignore)
  return ignore_;
}
inline void Steering_command_64::set_ignore(bool value) {
  
  ignore_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_command_64.ignore)
}

// double svel = 4;
inline void Steering_command_64::clear_svel() {
  svel_ = 0;
}
inline double Steering_command_64::svel() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_command_64.svel)
  return svel_;
}
inline void Steering_command_64::set_svel(double value) {
  
  svel_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_command_64.svel)
}

// bool clear = 5;
inline void Steering_command_64::clear_clear() {
  clear_ = false;
}
inline bool Steering_command_64::clear() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_command_64.clear)
  return clear_;
}
inline void Steering_command_64::set_clear(bool value) {
  
  clear_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_command_64.clear)
}

// .Calmcar.drivers.CHASIS.Steering_command_64.EnType en = 6;
inline void Steering_command_64::clear_en() {
  en_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Steering_command_64_EnType Steering_command_64::en() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_command_64.en)
  return static_cast< ::Calmcar::drivers::CHASIS::Steering_command_64_EnType >(en_);
}
inline void Steering_command_64::set_en(::Calmcar::drivers::CHASIS::Steering_command_64_EnType value) {
  
  en_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_command_64.en)
}

// double scmd = 7;
inline void Steering_command_64::clear_scmd() {
  scmd_ = 0;
}
inline double Steering_command_64::scmd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_command_64.scmd)
  return scmd_;
}
inline void Steering_command_64::set_scmd(double value) {
  
  scmd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_command_64.scmd)
}

// -------------------------------------------------------------------

// Steering_report_65

// .Calmcar.drivers.CHASIS.Steering_report_65.FltwdcType fltwdc = 1;
inline void Steering_report_65::clear_fltwdc() {
  fltwdc_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Steering_report_65_FltwdcType Steering_report_65::fltwdc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_report_65.fltwdc)
  return static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_FltwdcType >(fltwdc_);
}
inline void Steering_report_65::set_fltwdc(::Calmcar::drivers::CHASIS::Steering_report_65_FltwdcType value) {
  
  fltwdc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_report_65.fltwdc)
}

// .Calmcar.drivers.CHASIS.Steering_report_65.FltcalType fltcal = 2;
inline void Steering_report_65::clear_fltcal() {
  fltcal_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Steering_report_65_FltcalType Steering_report_65::fltcal() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_report_65.fltcal)
  return static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_FltcalType >(fltcal_);
}
inline void Steering_report_65::set_fltcal(::Calmcar::drivers::CHASIS::Steering_report_65_FltcalType value) {
  
  fltcal_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_report_65.fltcal)
}

// .Calmcar.drivers.CHASIS.Steering_report_65.TmoutType tmout = 3;
inline void Steering_report_65::clear_tmout() {
  tmout_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Steering_report_65_TmoutType Steering_report_65::tmout() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_report_65.tmout)
  return static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_TmoutType >(tmout_);
}
inline void Steering_report_65::set_tmout(::Calmcar::drivers::CHASIS::Steering_report_65_TmoutType value) {
  
  tmout_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_report_65.tmout)
}

// double torque = 4;
inline void Steering_report_65::clear_torque() {
  torque_ = 0;
}
inline double Steering_report_65::torque() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_report_65.torque)
  return torque_;
}
inline void Steering_report_65::set_torque(double value) {
  
  torque_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_report_65.torque)
}

// double speed = 5;
inline void Steering_report_65::clear_speed() {
  speed_ = 0;
}
inline double Steering_report_65::speed() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_report_65.speed)
  return speed_;
}
inline void Steering_report_65::set_speed(double value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_report_65.speed)
}

// .Calmcar.drivers.CHASIS.Steering_report_65.Flt2Type flt2 = 6;
inline void Steering_report_65::clear_flt2() {
  flt2_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Steering_report_65_Flt2Type Steering_report_65::flt2() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_report_65.flt2)
  return static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_Flt2Type >(flt2_);
}
inline void Steering_report_65::set_flt2(::Calmcar::drivers::CHASIS::Steering_report_65_Flt2Type value) {
  
  flt2_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_report_65.flt2)
}

// .Calmcar.drivers.CHASIS.Steering_report_65.Flt1Type flt1 = 7;
inline void Steering_report_65::clear_flt1() {
  flt1_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Steering_report_65_Flt1Type Steering_report_65::flt1() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_report_65.flt1)
  return static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_Flt1Type >(flt1_);
}
inline void Steering_report_65::set_flt1(::Calmcar::drivers::CHASIS::Steering_report_65_Flt1Type value) {
  
  flt1_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_report_65.flt1)
}

// .Calmcar.drivers.CHASIS.Steering_report_65.EnType en = 8;
inline void Steering_report_65::clear_en() {
  en_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Steering_report_65_EnType Steering_report_65::en() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_report_65.en)
  return static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_EnType >(en_);
}
inline void Steering_report_65::set_en(::Calmcar::drivers::CHASIS::Steering_report_65_EnType value) {
  
  en_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_report_65.en)
}

// .Calmcar.drivers.CHASIS.Steering_report_65.OverrideType override = 9;
inline void Steering_report_65::clear_override() {
  override_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Steering_report_65_OverrideType Steering_report_65::override() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_report_65.override)
  return static_cast< ::Calmcar::drivers::CHASIS::Steering_report_65_OverrideType >(override_);
}
inline void Steering_report_65::set_override(::Calmcar::drivers::CHASIS::Steering_report_65_OverrideType value) {
  
  override_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_report_65.override)
}

// double cmd = 10;
inline void Steering_report_65::clear_cmd() {
  cmd_ = 0;
}
inline double Steering_report_65::cmd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_report_65.cmd)
  return cmd_;
}
inline void Steering_report_65::set_cmd(double value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_report_65.cmd)
}

// double angle = 11;
inline void Steering_report_65::clear_angle() {
  angle_ = 0;
}
inline double Steering_report_65::angle() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Steering_report_65.angle)
  return angle_;
}
inline void Steering_report_65::set_angle(double value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Steering_report_65.angle)
}

// -------------------------------------------------------------------

// Gear_command_66

// .Calmcar.drivers.CHASIS.Gear_command_66.EnType en = 1;
inline void Gear_command_66::clear_en() {
  en_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Gear_command_66_EnType Gear_command_66::en() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gear_command_66.en)
  return static_cast< ::Calmcar::drivers::CHASIS::Gear_command_66_EnType >(en_);
}
inline void Gear_command_66::set_en(::Calmcar::drivers::CHASIS::Gear_command_66_EnType value) {
  
  en_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gear_command_66.en)
}

// .Calmcar.drivers.CHASIS.Gear_command_66.GcmdType gcmd = 2;
inline void Gear_command_66::clear_gcmd() {
  gcmd_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Gear_command_66_GcmdType Gear_command_66::gcmd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gear_command_66.gcmd)
  return static_cast< ::Calmcar::drivers::CHASIS::Gear_command_66_GcmdType >(gcmd_);
}
inline void Gear_command_66::set_gcmd(::Calmcar::drivers::CHASIS::Gear_command_66_GcmdType value) {
  
  gcmd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gear_command_66.gcmd)
}

// bool clear = 3;
inline void Gear_command_66::clear_clear() {
  clear_ = false;
}
inline bool Gear_command_66::clear() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gear_command_66.clear)
  return clear_;
}
inline void Gear_command_66::set_clear(bool value) {
  
  clear_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gear_command_66.clear)
}

// -------------------------------------------------------------------

// Gear_report_67

// int32 acc_state = 1;
inline void Gear_report_67::clear_acc_state() {
  acc_state_ = 0;
}
inline ::google::protobuf::int32 Gear_report_67::acc_state() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gear_report_67.acc_state)
  return acc_state_;
}
inline void Gear_report_67::set_acc_state(::google::protobuf::int32 value) {
  
  acc_state_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gear_report_67.acc_state)
}

// .Calmcar.drivers.CHASIS.Gear_report_67.RejectType reject = 2;
inline void Gear_report_67::clear_reject() {
  reject_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Gear_report_67_RejectType Gear_report_67::reject() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gear_report_67.reject)
  return static_cast< ::Calmcar::drivers::CHASIS::Gear_report_67_RejectType >(reject_);
}
inline void Gear_report_67::set_reject(::Calmcar::drivers::CHASIS::Gear_report_67_RejectType value) {
  
  reject_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gear_report_67.reject)
}

// .Calmcar.drivers.CHASIS.Gear_report_67.StateType state = 3;
inline void Gear_report_67::clear_state() {
  state_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Gear_report_67_StateType Gear_report_67::state() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gear_report_67.state)
  return static_cast< ::Calmcar::drivers::CHASIS::Gear_report_67_StateType >(state_);
}
inline void Gear_report_67::set_state(::Calmcar::drivers::CHASIS::Gear_report_67_StateType value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gear_report_67.state)
}

// .Calmcar.drivers.CHASIS.Gear_report_67.FltbusType fltbus = 4;
inline void Gear_report_67::clear_fltbus() {
  fltbus_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Gear_report_67_FltbusType Gear_report_67::fltbus() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gear_report_67.fltbus)
  return static_cast< ::Calmcar::drivers::CHASIS::Gear_report_67_FltbusType >(fltbus_);
}
inline void Gear_report_67::set_fltbus(::Calmcar::drivers::CHASIS::Gear_report_67_FltbusType value) {
  
  fltbus_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gear_report_67.fltbus)
}

// .Calmcar.drivers.CHASIS.Gear_report_67.DriverType driver = 5;
inline void Gear_report_67::clear_driver() {
  driver_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Gear_report_67_DriverType Gear_report_67::driver() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gear_report_67.driver)
  return static_cast< ::Calmcar::drivers::CHASIS::Gear_report_67_DriverType >(driver_);
}
inline void Gear_report_67::set_driver(::Calmcar::drivers::CHASIS::Gear_report_67_DriverType value) {
  
  driver_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gear_report_67.driver)
}

// .Calmcar.drivers.CHASIS.Gear_report_67.CmdType cmd = 6;
inline void Gear_report_67::clear_cmd() {
  cmd_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Gear_report_67_CmdType Gear_report_67::cmd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gear_report_67.cmd)
  return static_cast< ::Calmcar::drivers::CHASIS::Gear_report_67_CmdType >(cmd_);
}
inline void Gear_report_67::set_cmd(::Calmcar::drivers::CHASIS::Gear_report_67_CmdType value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gear_report_67.cmd)
}

// -------------------------------------------------------------------

// Turnsignal_command_68

// .Calmcar.drivers.CHASIS.Turnsignal_command_68.TrncmdType trncmd = 1;
inline void Turnsignal_command_68::clear_trncmd() {
  trncmd_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Turnsignal_command_68_TrncmdType Turnsignal_command_68::trncmd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Turnsignal_command_68.trncmd)
  return static_cast< ::Calmcar::drivers::CHASIS::Turnsignal_command_68_TrncmdType >(trncmd_);
}
inline void Turnsignal_command_68::set_trncmd(::Calmcar::drivers::CHASIS::Turnsignal_command_68_TrncmdType value) {
  
  trncmd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Turnsignal_command_68.trncmd)
}

// -------------------------------------------------------------------

// Misc_report_69

// .Calmcar.drivers.CHASIS.Misc_report_69.LdupType ldup = 1;
inline void Misc_report_69::clear_ldup() {
  ldup_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_LdupType Misc_report_69::ldup() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.ldup)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LdupType >(ldup_);
}
inline void Misc_report_69::set_ldup(::Calmcar::drivers::CHASIS::Misc_report_69_LdupType value) {
  
  ldup_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.ldup)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.LdrhtType ldrht = 2;
inline void Misc_report_69::clear_ldrht() {
  ldrht_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_LdrhtType Misc_report_69::ldrht() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.ldrht)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LdrhtType >(ldrht_);
}
inline void Misc_report_69::set_ldrht(::Calmcar::drivers::CHASIS::Misc_report_69_LdrhtType value) {
  
  ldrht_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.ldrht)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.LdokType ldok = 3;
inline void Misc_report_69::clear_ldok() {
  ldok_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_LdokType Misc_report_69::ldok() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.ldok)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LdokType >(ldok_);
}
inline void Misc_report_69::set_ldok(::Calmcar::drivers::CHASIS::Misc_report_69_LdokType value) {
  
  ldok_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.ldok)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.LdlftType ldlft = 4;
inline void Misc_report_69::clear_ldlft() {
  ldlft_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_LdlftType Misc_report_69::ldlft() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.ldlft)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LdlftType >(ldlft_);
}
inline void Misc_report_69::set_ldlft(::Calmcar::drivers::CHASIS::Misc_report_69_LdlftType value) {
  
  ldlft_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.ldlft)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.LddwnType lddwn = 5;
inline void Misc_report_69::clear_lddwn() {
  lddwn_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_LddwnType Misc_report_69::lddwn() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.lddwn)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LddwnType >(lddwn_);
}
inline void Misc_report_69::set_lddwn(::Calmcar::drivers::CHASIS::Misc_report_69_LddwnType value) {
  
  lddwn_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.lddwn)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.CnclType cncl = 6;
inline void Misc_report_69::clear_cncl() {
  cncl_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_CnclType Misc_report_69::cncl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.cncl)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_CnclType >(cncl_);
}
inline void Misc_report_69::set_cncl(::Calmcar::drivers::CHASIS::Misc_report_69_CnclType value) {
  
  cncl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.cncl)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.ResType res = 7;
inline void Misc_report_69::clear_res() {
  res_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_ResType Misc_report_69::res() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.res)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_ResType >(res_);
}
inline void Misc_report_69::set_res(::Calmcar::drivers::CHASIS::Misc_report_69_ResType value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.res)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.OnType on = 8;
inline void Misc_report_69::clear_on() {
  on_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_OnType Misc_report_69::on() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.on)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_OnType >(on_);
}
inline void Misc_report_69::set_on(::Calmcar::drivers::CHASIS::Misc_report_69_OnType value) {
  
  on_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.on)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.OffType off = 9;
inline void Misc_report_69::clear_off() {
  off_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_OffType Misc_report_69::off() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.off)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_OffType >(off_);
}
inline void Misc_report_69::set_off(::Calmcar::drivers::CHASIS::Misc_report_69_OffType value) {
  
  off_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.off)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.BeltpType beltp = 10;
inline void Misc_report_69::clear_beltp() {
  beltp_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_BeltpType Misc_report_69::beltp() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.beltp)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_BeltpType >(beltp_);
}
inline void Misc_report_69::set_beltp(::Calmcar::drivers::CHASIS::Misc_report_69_BeltpType value) {
  
  beltp_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.beltp)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.BeltdType beltd = 11;
inline void Misc_report_69::clear_beltd() {
  beltd_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_BeltdType Misc_report_69::beltd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.beltd)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_BeltdType >(beltd_);
}
inline void Misc_report_69::set_beltd(::Calmcar::drivers::CHASIS::Misc_report_69_BeltdType value) {
  
  beltd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.beltd)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.PabagType pabag = 12;
inline void Misc_report_69::clear_pabag() {
  pabag_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_PabagType Misc_report_69::pabag() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.pabag)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_PabagType >(pabag_);
}
inline void Misc_report_69::set_pabag(::Calmcar::drivers::CHASIS::Misc_report_69_PabagType value) {
  
  pabag_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.pabag)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.PdectType pdect = 13;
inline void Misc_report_69::clear_pdect() {
  pdect_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_PdectType Misc_report_69::pdect() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.pdect)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_PdectType >(pdect_);
}
inline void Misc_report_69::set_pdect(::Calmcar::drivers::CHASIS::Misc_report_69_PdectType value) {
  
  pdect_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.pdect)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.TrunkType trunk = 14;
inline void Misc_report_69::clear_trunk() {
  trunk_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_TrunkType Misc_report_69::trunk() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.trunk)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_TrunkType >(trunk_);
}
inline void Misc_report_69::set_trunk(::Calmcar::drivers::CHASIS::Misc_report_69_TrunkType value) {
  
  trunk_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.trunk)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.HoodType hood = 15;
inline void Misc_report_69::clear_hood() {
  hood_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_HoodType Misc_report_69::hood() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.hood)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_HoodType >(hood_);
}
inline void Misc_report_69::set_hood(::Calmcar::drivers::CHASIS::Misc_report_69_HoodType value) {
  
  hood_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.hood)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.DoorrType doorr = 16;
inline void Misc_report_69::clear_doorr() {
  doorr_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_DoorrType Misc_report_69::doorr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.doorr)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_DoorrType >(doorr_);
}
inline void Misc_report_69::set_doorr(::Calmcar::drivers::CHASIS::Misc_report_69_DoorrType value) {
  
  doorr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.doorr)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.DoorpType doorp = 17;
inline void Misc_report_69::clear_doorp() {
  doorp_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_DoorpType Misc_report_69::doorp() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.doorp)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_DoorpType >(doorp_);
}
inline void Misc_report_69::set_doorp(::Calmcar::drivers::CHASIS::Misc_report_69_DoorpType value) {
  
  doorp_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.doorp)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.DoorlType doorl = 18;
inline void Misc_report_69::clear_doorl() {
  doorl_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_DoorlType Misc_report_69::doorl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.doorl)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_DoorlType >(doorl_);
}
inline void Misc_report_69::set_doorl(::Calmcar::drivers::CHASIS::Misc_report_69_DoorlType value) {
  
  doorl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.doorl)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.DoordType doord = 19;
inline void Misc_report_69::clear_doord() {
  doord_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_DoordType Misc_report_69::doord() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.doord)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_DoordType >(doord_);
}
inline void Misc_report_69::set_doord(::Calmcar::drivers::CHASIS::Misc_report_69_DoordType value) {
  
  doord_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.doord)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.WiperType wiper = 20;
inline void Misc_report_69::clear_wiper() {
  wiper_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_WiperType Misc_report_69::wiper() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.wiper)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_WiperType >(wiper_);
}
inline void Misc_report_69::set_wiper(::Calmcar::drivers::CHASIS::Misc_report_69_WiperType value) {
  
  wiper_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.wiper)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.TrnstatType trnstat = 21;
inline void Misc_report_69::clear_trnstat() {
  trnstat_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_TrnstatType Misc_report_69::trnstat() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.trnstat)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_TrnstatType >(trnstat_);
}
inline void Misc_report_69::set_trnstat(::Calmcar::drivers::CHASIS::Misc_report_69_TrnstatType value) {
  
  trnstat_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.trnstat)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.SincType sinc = 22;
inline void Misc_report_69::clear_sinc() {
  sinc_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_SincType Misc_report_69::sinc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.sinc)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_SincType >(sinc_);
}
inline void Misc_report_69::set_sinc(::Calmcar::drivers::CHASIS::Misc_report_69_SincType value) {
  
  sinc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.sinc)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.SdecType sdec = 23;
inline void Misc_report_69::clear_sdec() {
  sdec_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_SdecType Misc_report_69::sdec() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.sdec)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_SdecType >(sdec_);
}
inline void Misc_report_69::set_sdec(::Calmcar::drivers::CHASIS::Misc_report_69_SdecType value) {
  
  sdec_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.sdec)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.OnoffType onoff = 24;
inline void Misc_report_69::clear_onoff() {
  onoff_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_OnoffType Misc_report_69::onoff() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.onoff)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_OnoffType >(onoff_);
}
inline void Misc_report_69::set_onoff(::Calmcar::drivers::CHASIS::Misc_report_69_OnoffType value) {
  
  onoff_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.onoff)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.LkaenType lkaen = 25;
inline void Misc_report_69::clear_lkaen() {
  lkaen_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_LkaenType Misc_report_69::lkaen() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.lkaen)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_LkaenType >(lkaen_);
}
inline void Misc_report_69::set_lkaen(::Calmcar::drivers::CHASIS::Misc_report_69_LkaenType value) {
  
  lkaen_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.lkaen)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.HibeamType hibeam = 26;
inline void Misc_report_69::clear_hibeam() {
  hibeam_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_HibeamType Misc_report_69::hibeam() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.hibeam)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_HibeamType >(hibeam_);
}
inline void Misc_report_69::set_hibeam(::Calmcar::drivers::CHASIS::Misc_report_69_HibeamType value) {
  
  hibeam_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.hibeam)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.GincType ginc = 27;
inline void Misc_report_69::clear_ginc() {
  ginc_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_GincType Misc_report_69::ginc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.ginc)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_GincType >(ginc_);
}
inline void Misc_report_69::set_ginc(::Calmcar::drivers::CHASIS::Misc_report_69_GincType value) {
  
  ginc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.ginc)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.GdecType gdec = 28;
inline void Misc_report_69::clear_gdec() {
  gdec_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_GdecType Misc_report_69::gdec() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.gdec)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_GdecType >(gdec_);
}
inline void Misc_report_69::set_gdec(::Calmcar::drivers::CHASIS::Misc_report_69_GdecType value) {
  
  gdec_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.gdec)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.FltbusType fltbus = 29;
inline void Misc_report_69::clear_fltbus() {
  fltbus_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_FltbusType Misc_report_69::fltbus() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.fltbus)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_FltbusType >(fltbus_);
}
inline void Misc_report_69::set_fltbus(::Calmcar::drivers::CHASIS::Misc_report_69_FltbusType value) {
  
  fltbus_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.fltbus)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.RescnclType rescncl = 30;
inline void Misc_report_69::clear_rescncl() {
  rescncl_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_RescnclType Misc_report_69::rescncl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.rescncl)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_RescnclType >(rescncl_);
}
inline void Misc_report_69::set_rescncl(::Calmcar::drivers::CHASIS::Misc_report_69_RescnclType value) {
  
  rescncl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.rescncl)
}

// .Calmcar.drivers.CHASIS.Misc_report_69.AmbientType ambient = 31;
inline void Misc_report_69::clear_ambient() {
  ambient_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69_AmbientType Misc_report_69::ambient() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Misc_report_69.ambient)
  return static_cast< ::Calmcar::drivers::CHASIS::Misc_report_69_AmbientType >(ambient_);
}
inline void Misc_report_69::set_ambient(::Calmcar::drivers::CHASIS::Misc_report_69_AmbientType value) {
  
  ambient_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Misc_report_69.ambient)
}

// -------------------------------------------------------------------

// Pms_current_4_1c3

// double current15_48v = 1;
inline void Pms_current_4_1c3::clear_current15_48v() {
  current15_48v_ = 0;
}
inline double Pms_current_4_1c3::current15_48v() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_4_1c3.current15_48v)
  return current15_48v_;
}
inline void Pms_current_4_1c3::set_current15_48v(double value) {
  
  current15_48v_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_4_1c3.current15_48v)
}

// double current14_5v = 2;
inline void Pms_current_4_1c3::clear_current14_5v() {
  current14_5v_ = 0;
}
inline double Pms_current_4_1c3::current14_5v() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_4_1c3.current14_5v)
  return current14_5v_;
}
inline void Pms_current_4_1c3::set_current14_5v(double value) {
  
  current14_5v_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_4_1c3.current14_5v)
}

// double current13_hpwr = 3;
inline void Pms_current_4_1c3::clear_current13_hpwr() {
  current13_hpwr_ = 0;
}
inline double Pms_current_4_1c3::current13_hpwr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_4_1c3.current13_hpwr)
  return current13_hpwr_;
}
inline void Pms_current_4_1c3::set_current13_hpwr(double value) {
  
  current13_hpwr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_4_1c3.current13_hpwr)
}

// -------------------------------------------------------------------

// Pms_current_3_1c2

// double current9 = 1;
inline void Pms_current_3_1c2::clear_current9() {
  current9_ = 0;
}
inline double Pms_current_3_1c2::current9() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_3_1c2.current9)
  return current9_;
}
inline void Pms_current_3_1c2::set_current9(double value) {
  
  current9_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_3_1c2.current9)
}

// double current12 = 2;
inline void Pms_current_3_1c2::clear_current12() {
  current12_ = 0;
}
inline double Pms_current_3_1c2::current12() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_3_1c2.current12)
  return current12_;
}
inline void Pms_current_3_1c2::set_current12(double value) {
  
  current12_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_3_1c2.current12)
}

// double current11 = 3;
inline void Pms_current_3_1c2::clear_current11() {
  current11_ = 0;
}
inline double Pms_current_3_1c2::current11() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_3_1c2.current11)
  return current11_;
}
inline void Pms_current_3_1c2::set_current11(double value) {
  
  current11_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_3_1c2.current11)
}

// double current10 = 4;
inline void Pms_current_3_1c2::clear_current10() {
  current10_ = 0;
}
inline double Pms_current_3_1c2::current10() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_3_1c2.current10)
  return current10_;
}
inline void Pms_current_3_1c2::set_current10(double value) {
  
  current10_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_3_1c2.current10)
}

// -------------------------------------------------------------------

// Pms_current_2_1c1

// double current8 = 1;
inline void Pms_current_2_1c1::clear_current8() {
  current8_ = 0;
}
inline double Pms_current_2_1c1::current8() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_2_1c1.current8)
  return current8_;
}
inline void Pms_current_2_1c1::set_current8(double value) {
  
  current8_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_2_1c1.current8)
}

// double current7 = 2;
inline void Pms_current_2_1c1::clear_current7() {
  current7_ = 0;
}
inline double Pms_current_2_1c1::current7() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_2_1c1.current7)
  return current7_;
}
inline void Pms_current_2_1c1::set_current7(double value) {
  
  current7_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_2_1c1.current7)
}

// double current6 = 3;
inline void Pms_current_2_1c1::clear_current6() {
  current6_ = 0;
}
inline double Pms_current_2_1c1::current6() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_2_1c1.current6)
  return current6_;
}
inline void Pms_current_2_1c1::set_current6(double value) {
  
  current6_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_2_1c1.current6)
}

// double current5 = 4;
inline void Pms_current_2_1c1::clear_current5() {
  current5_ = 0;
}
inline double Pms_current_2_1c1::current5() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_2_1c1.current5)
  return current5_;
}
inline void Pms_current_2_1c1::set_current5(double value) {
  
  current5_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_2_1c1.current5)
}

// -------------------------------------------------------------------

// Pms_current_1_1c0

// double current4 = 1;
inline void Pms_current_1_1c0::clear_current4() {
  current4_ = 0;
}
inline double Pms_current_1_1c0::current4() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_1_1c0.current4)
  return current4_;
}
inline void Pms_current_1_1c0::set_current4(double value) {
  
  current4_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_1_1c0.current4)
}

// double current3 = 2;
inline void Pms_current_1_1c0::clear_current3() {
  current3_ = 0;
}
inline double Pms_current_1_1c0::current3() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_1_1c0.current3)
  return current3_;
}
inline void Pms_current_1_1c0::set_current3(double value) {
  
  current3_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_1_1c0.current3)
}

// double current2 = 3;
inline void Pms_current_1_1c0::clear_current2() {
  current2_ = 0;
}
inline double Pms_current_1_1c0::current2() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_1_1c0.current2)
  return current2_;
}
inline void Pms_current_1_1c0::set_current2(double value) {
  
  current2_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_1_1c0.current2)
}

// double current1 = 4;
inline void Pms_current_1_1c0::clear_current1() {
  current1_ = 0;
}
inline double Pms_current_1_1c0::current1() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_current_1_1c0.current1)
  return current1_;
}
inline void Pms_current_1_1c0::set_current1(double value) {
  
  current1_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_current_1_1c0.current1)
}

// -------------------------------------------------------------------

// Pms_cmd_1ba

// bool gate9 = 1;
inline void Pms_cmd_1ba::clear_gate9() {
  gate9_ = false;
}
inline bool Pms_cmd_1ba::gate9() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate9)
  return gate9_;
}
inline void Pms_cmd_1ba::set_gate9(bool value) {
  
  gate9_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate9)
}

// bool gate8 = 2;
inline void Pms_cmd_1ba::clear_gate8() {
  gate8_ = false;
}
inline bool Pms_cmd_1ba::gate8() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate8)
  return gate8_;
}
inline void Pms_cmd_1ba::set_gate8(bool value) {
  
  gate8_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate8)
}

// bool gate7 = 3;
inline void Pms_cmd_1ba::clear_gate7() {
  gate7_ = false;
}
inline bool Pms_cmd_1ba::gate7() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate7)
  return gate7_;
}
inline void Pms_cmd_1ba::set_gate7(bool value) {
  
  gate7_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate7)
}

// bool gate6 = 4;
inline void Pms_cmd_1ba::clear_gate6() {
  gate6_ = false;
}
inline bool Pms_cmd_1ba::gate6() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate6)
  return gate6_;
}
inline void Pms_cmd_1ba::set_gate6(bool value) {
  
  gate6_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate6)
}

// bool gate5 = 5;
inline void Pms_cmd_1ba::clear_gate5() {
  gate5_ = false;
}
inline bool Pms_cmd_1ba::gate5() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate5)
  return gate5_;
}
inline void Pms_cmd_1ba::set_gate5(bool value) {
  
  gate5_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate5)
}

// bool gate4 = 6;
inline void Pms_cmd_1ba::clear_gate4() {
  gate4_ = false;
}
inline bool Pms_cmd_1ba::gate4() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate4)
  return gate4_;
}
inline void Pms_cmd_1ba::set_gate4(bool value) {
  
  gate4_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate4)
}

// bool gate3 = 7;
inline void Pms_cmd_1ba::clear_gate3() {
  gate3_ = false;
}
inline bool Pms_cmd_1ba::gate3() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate3)
  return gate3_;
}
inline void Pms_cmd_1ba::set_gate3(bool value) {
  
  gate3_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate3)
}

// bool gate2 = 8;
inline void Pms_cmd_1ba::clear_gate2() {
  gate2_ = false;
}
inline bool Pms_cmd_1ba::gate2() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate2)
  return gate2_;
}
inline void Pms_cmd_1ba::set_gate2(bool value) {
  
  gate2_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate2)
}

// bool gate16 = 9;
inline void Pms_cmd_1ba::clear_gate16() {
  gate16_ = false;
}
inline bool Pms_cmd_1ba::gate16() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate16)
  return gate16_;
}
inline void Pms_cmd_1ba::set_gate16(bool value) {
  
  gate16_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate16)
}

// bool gate15 = 10;
inline void Pms_cmd_1ba::clear_gate15() {
  gate15_ = false;
}
inline bool Pms_cmd_1ba::gate15() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate15)
  return gate15_;
}
inline void Pms_cmd_1ba::set_gate15(bool value) {
  
  gate15_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate15)
}

// bool gate14 = 11;
inline void Pms_cmd_1ba::clear_gate14() {
  gate14_ = false;
}
inline bool Pms_cmd_1ba::gate14() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate14)
  return gate14_;
}
inline void Pms_cmd_1ba::set_gate14(bool value) {
  
  gate14_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate14)
}

// bool gate13 = 12;
inline void Pms_cmd_1ba::clear_gate13() {
  gate13_ = false;
}
inline bool Pms_cmd_1ba::gate13() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate13)
  return gate13_;
}
inline void Pms_cmd_1ba::set_gate13(bool value) {
  
  gate13_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate13)
}

// bool gate12 = 13;
inline void Pms_cmd_1ba::clear_gate12() {
  gate12_ = false;
}
inline bool Pms_cmd_1ba::gate12() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate12)
  return gate12_;
}
inline void Pms_cmd_1ba::set_gate12(bool value) {
  
  gate12_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate12)
}

// bool gate11 = 14;
inline void Pms_cmd_1ba::clear_gate11() {
  gate11_ = false;
}
inline bool Pms_cmd_1ba::gate11() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate11)
  return gate11_;
}
inline void Pms_cmd_1ba::set_gate11(bool value) {
  
  gate11_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate11)
}

// bool gate10 = 15;
inline void Pms_cmd_1ba::clear_gate10() {
  gate10_ = false;
}
inline bool Pms_cmd_1ba::gate10() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate10)
  return gate10_;
}
inline void Pms_cmd_1ba::set_gate10(bool value) {
  
  gate10_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate10)
}

// bool gate1 = 16;
inline void Pms_cmd_1ba::clear_gate1() {
  gate1_ = false;
}
inline bool Pms_cmd_1ba::gate1() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate1)
  return gate1_;
}
inline void Pms_cmd_1ba::set_gate1(bool value) {
  
  gate1_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_cmd_1ba.gate1)
}

// -------------------------------------------------------------------

// Wheelspeed_report_6a

// double rr = 1;
inline void Wheelspeed_report_6a::clear_rr() {
  rr_ = 0;
}
inline double Wheelspeed_report_6a::rr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Wheelspeed_report_6a.rr)
  return rr_;
}
inline void Wheelspeed_report_6a::set_rr(double value) {
  
  rr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Wheelspeed_report_6a.rr)
}

// double rl = 2;
inline void Wheelspeed_report_6a::clear_rl() {
  rl_ = 0;
}
inline double Wheelspeed_report_6a::rl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Wheelspeed_report_6a.rl)
  return rl_;
}
inline void Wheelspeed_report_6a::set_rl(double value) {
  
  rl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Wheelspeed_report_6a.rl)
}

// double fr = 3;
inline void Wheelspeed_report_6a::clear_fr() {
  fr_ = 0;
}
inline double Wheelspeed_report_6a::fr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Wheelspeed_report_6a.fr)
  return fr_;
}
inline void Wheelspeed_report_6a::set_fr(double value) {
  
  fr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Wheelspeed_report_6a.fr)
}

// double fl = 4;
inline void Wheelspeed_report_6a::clear_fl() {
  fl_ = 0;
}
inline double Wheelspeed_report_6a::fl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Wheelspeed_report_6a.fl)
  return fl_;
}
inline void Wheelspeed_report_6a::set_fl(double value) {
  
  fl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Wheelspeed_report_6a.fl)
}

// -------------------------------------------------------------------

// Accel_report_6b

// double vert = 1;
inline void Accel_report_6b::clear_vert() {
  vert_ = 0;
}
inline double Accel_report_6b::vert() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Accel_report_6b.vert)
  return vert_;
}
inline void Accel_report_6b::set_vert(double value) {
  
  vert_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Accel_report_6b.vert)
}

// double my_long = 2;
inline void Accel_report_6b::clear_my_long() {
  my_long_ = 0;
}
inline double Accel_report_6b::my_long() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Accel_report_6b.my_long)
  return my_long_;
}
inline void Accel_report_6b::set_my_long(double value) {
  
  my_long_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Accel_report_6b.my_long)
}

// double lat = 3;
inline void Accel_report_6b::clear_lat() {
  lat_ = 0;
}
inline double Accel_report_6b::lat() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Accel_report_6b.lat)
  return lat_;
}
inline void Accel_report_6b::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Accel_report_6b.lat)
}

// -------------------------------------------------------------------

// Gyro_report_6c

// double yaw = 1;
inline void Gyro_report_6c::clear_yaw() {
  yaw_ = 0;
}
inline double Gyro_report_6c::yaw() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gyro_report_6c.yaw)
  return yaw_;
}
inline void Gyro_report_6c::set_yaw(double value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gyro_report_6c.yaw)
}

// double roll = 2;
inline void Gyro_report_6c::clear_roll() {
  roll_ = 0;
}
inline double Gyro_report_6c::roll() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gyro_report_6c.roll)
  return roll_;
}
inline void Gyro_report_6c::set_roll(double value) {
  
  roll_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gyro_report_6c.roll)
}

// -------------------------------------------------------------------

// Gps_1_report_6d

// .Calmcar.drivers.CHASIS.Gps_1_report_6d.ValidType valid = 1;
inline void Gps_1_report_6d::clear_valid() {
  valid_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Gps_1_report_6d_ValidType Gps_1_report_6d::valid() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_1_report_6d.valid)
  return static_cast< ::Calmcar::drivers::CHASIS::Gps_1_report_6d_ValidType >(valid_);
}
inline void Gps_1_report_6d::set_valid(::Calmcar::drivers::CHASIS::Gps_1_report_6d_ValidType value) {
  
  valid_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_1_report_6d.valid)
}

// double longitude = 2;
inline void Gps_1_report_6d::clear_longitude() {
  longitude_ = 0;
}
inline double Gps_1_report_6d::longitude() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_1_report_6d.longitude)
  return longitude_;
}
inline void Gps_1_report_6d::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_1_report_6d.longitude)
}

// double latitude = 3;
inline void Gps_1_report_6d::clear_latitude() {
  latitude_ = 0;
}
inline double Gps_1_report_6d::latitude() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_1_report_6d.latitude)
  return latitude_;
}
inline void Gps_1_report_6d::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_1_report_6d.latitude)
}

// -------------------------------------------------------------------

// Gps_2_report_6e

// .Calmcar.drivers.CHASIS.Gps_2_report_6e.InfType inf = 1;
inline void Gps_2_report_6e::clear_inf() {
  inf_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Gps_2_report_6e_InfType Gps_2_report_6e::inf() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_2_report_6e.inf)
  return static_cast< ::Calmcar::drivers::CHASIS::Gps_2_report_6e_InfType >(inf_);
}
inline void Gps_2_report_6e::set_inf(::Calmcar::drivers::CHASIS::Gps_2_report_6e_InfType value) {
  
  inf_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_2_report_6e.inf)
}

// .Calmcar.drivers.CHASIS.Gps_2_report_6e.FltgpsType fltgps = 2;
inline void Gps_2_report_6e::clear_fltgps() {
  fltgps_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Gps_2_report_6e_FltgpsType Gps_2_report_6e::fltgps() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_2_report_6e.fltgps)
  return static_cast< ::Calmcar::drivers::CHASIS::Gps_2_report_6e_FltgpsType >(fltgps_);
}
inline void Gps_2_report_6e::set_fltgps(::Calmcar::drivers::CHASIS::Gps_2_report_6e_FltgpsType value) {
  
  fltgps_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_2_report_6e.fltgps)
}

// double pdop = 3;
inline void Gps_2_report_6e::clear_pdop() {
  pdop_ = 0;
}
inline double Gps_2_report_6e::pdop() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_2_report_6e.pdop)
  return pdop_;
}
inline void Gps_2_report_6e::set_pdop(double value) {
  
  pdop_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_2_report_6e.pdop)
}

// double compass = 4;
inline void Gps_2_report_6e::clear_compass() {
  compass_ = 0;
}
inline double Gps_2_report_6e::compass() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_2_report_6e.compass)
  return compass_;
}
inline void Gps_2_report_6e::set_compass(double value) {
  
  compass_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_2_report_6e.compass)
}

// int32 seconds = 5;
inline void Gps_2_report_6e::clear_seconds() {
  seconds_ = 0;
}
inline ::google::protobuf::int32 Gps_2_report_6e::seconds() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_2_report_6e.seconds)
  return seconds_;
}
inline void Gps_2_report_6e::set_seconds(::google::protobuf::int32 value) {
  
  seconds_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_2_report_6e.seconds)
}

// int32 minutes = 6;
inline void Gps_2_report_6e::clear_minutes() {
  minutes_ = 0;
}
inline ::google::protobuf::int32 Gps_2_report_6e::minutes() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_2_report_6e.minutes)
  return minutes_;
}
inline void Gps_2_report_6e::set_minutes(::google::protobuf::int32 value) {
  
  minutes_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_2_report_6e.minutes)
}

// int32 hours = 7;
inline void Gps_2_report_6e::clear_hours() {
  hours_ = 0;
}
inline ::google::protobuf::int32 Gps_2_report_6e::hours() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_2_report_6e.hours)
  return hours_;
}
inline void Gps_2_report_6e::set_hours(::google::protobuf::int32 value) {
  
  hours_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_2_report_6e.hours)
}

// int32 day = 8;
inline void Gps_2_report_6e::clear_day() {
  day_ = 0;
}
inline ::google::protobuf::int32 Gps_2_report_6e::day() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_2_report_6e.day)
  return day_;
}
inline void Gps_2_report_6e::set_day(::google::protobuf::int32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_2_report_6e.day)
}

// int32 month = 9;
inline void Gps_2_report_6e::clear_month() {
  month_ = 0;
}
inline ::google::protobuf::int32 Gps_2_report_6e::month() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_2_report_6e.month)
  return month_;
}
inline void Gps_2_report_6e::set_month(::google::protobuf::int32 value) {
  
  month_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_2_report_6e.month)
}

// int32 year = 10;
inline void Gps_2_report_6e::clear_year() {
  year_ = 0;
}
inline ::google::protobuf::int32 Gps_2_report_6e::year() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_2_report_6e.year)
  return year_;
}
inline void Gps_2_report_6e::set_year(::google::protobuf::int32 value) {
  
  year_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_2_report_6e.year)
}

// -------------------------------------------------------------------

// Gps_3_report_6f

// int32 numsat = 1;
inline void Gps_3_report_6f::clear_numsat() {
  numsat_ = 0;
}
inline ::google::protobuf::int32 Gps_3_report_6f::numsat() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_3_report_6f.numsat)
  return numsat_;
}
inline void Gps_3_report_6f::set_numsat(::google::protobuf::int32 value) {
  
  numsat_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_3_report_6f.numsat)
}

// .Calmcar.drivers.CHASIS.Gps_3_report_6f.QualityType quality = 2;
inline void Gps_3_report_6f::clear_quality() {
  quality_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Gps_3_report_6f_QualityType Gps_3_report_6f::quality() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_3_report_6f.quality)
  return static_cast< ::Calmcar::drivers::CHASIS::Gps_3_report_6f_QualityType >(quality_);
}
inline void Gps_3_report_6f::set_quality(::Calmcar::drivers::CHASIS::Gps_3_report_6f_QualityType value) {
  
  quality_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_3_report_6f.quality)
}

// double vdop = 3;
inline void Gps_3_report_6f::clear_vdop() {
  vdop_ = 0;
}
inline double Gps_3_report_6f::vdop() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_3_report_6f.vdop)
  return vdop_;
}
inline void Gps_3_report_6f::set_vdop(double value) {
  
  vdop_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_3_report_6f.vdop)
}

// double hdop = 4;
inline void Gps_3_report_6f::clear_hdop() {
  hdop_ = 0;
}
inline double Gps_3_report_6f::hdop() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_3_report_6f.hdop)
  return hdop_;
}
inline void Gps_3_report_6f::set_hdop(double value) {
  
  hdop_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_3_report_6f.hdop)
}

// int32 speed = 5;
inline void Gps_3_report_6f::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 Gps_3_report_6f::speed() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_3_report_6f.speed)
  return speed_;
}
inline void Gps_3_report_6f::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_3_report_6f.speed)
}

// double heading = 6;
inline void Gps_3_report_6f::clear_heading() {
  heading_ = 0;
}
inline double Gps_3_report_6f::heading() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_3_report_6f.heading)
  return heading_;
}
inline void Gps_3_report_6f::set_heading(double value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_3_report_6f.heading)
}

// double altitude = 7;
inline void Gps_3_report_6f::clear_altitude() {
  altitude_ = 0;
}
inline double Gps_3_report_6f::altitude() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Gps_3_report_6f.altitude)
  return altitude_;
}
inline void Gps_3_report_6f::set_altitude(double value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Gps_3_report_6f.altitude)
}

// -------------------------------------------------------------------

// Throttleinfo_report_75

// int32 odo = 1;
inline void Throttleinfo_report_75::clear_odo() {
  odo_ = 0;
}
inline ::google::protobuf::int32 Throttleinfo_report_75::odo() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttleinfo_report_75.odo)
  return odo_;
}
inline void Throttleinfo_report_75::set_odo(::google::protobuf::int32 value) {
  
  odo_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttleinfo_report_75.odo)
}

// double apedrate = 2;
inline void Throttleinfo_report_75::clear_apedrate() {
  apedrate_ = 0;
}
inline double Throttleinfo_report_75::apedrate() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttleinfo_report_75.apedrate)
  return apedrate_;
}
inline void Throttleinfo_report_75::set_apedrate(double value) {
  
  apedrate_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttleinfo_report_75.apedrate)
}

// double apedpc = 3;
inline void Throttleinfo_report_75::clear_apedpc() {
  apedpc_ = 0;
}
inline double Throttleinfo_report_75::apedpc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttleinfo_report_75.apedpc)
  return apedpc_;
}
inline void Throttleinfo_report_75::set_apedpc(double value) {
  
  apedpc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttleinfo_report_75.apedpc)
}

// double rpm = 4;
inline void Throttleinfo_report_75::clear_rpm() {
  rpm_ = 0;
}
inline double Throttleinfo_report_75::rpm() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Throttleinfo_report_75.rpm)
  return rpm_;
}
inline void Throttleinfo_report_75::set_rpm(double value) {
  
  rpm_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Throttleinfo_report_75.rpm)
}

// -------------------------------------------------------------------

// Brakeinfo_report_74

// .Calmcar.drivers.CHASIS.Brakeinfo_report_74.TraceType trace = 1;
inline void Brakeinfo_report_74::clear_trace() {
  trace_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TraceType Brakeinfo_report_74::trace() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.trace)
  return static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TraceType >(trace_);
}
inline void Brakeinfo_report_74::set_trace(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TraceType value) {
  
  trace_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.trace)
}

// .Calmcar.drivers.CHASIS.Brakeinfo_report_74.TracaType traca = 2;
inline void Brakeinfo_report_74::clear_traca() {
  traca_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TracaType Brakeinfo_report_74::traca() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.traca)
  return static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TracaType >(traca_);
}
inline void Brakeinfo_report_74::set_traca(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TracaType value) {
  
  traca_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.traca)
}

// .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StabeType stabe = 3;
inline void Brakeinfo_report_74::clear_stabe() {
  stabe_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabeType Brakeinfo_report_74::stabe() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.stabe)
  return static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabeType >(stabe_);
}
inline void Brakeinfo_report_74::set_stabe(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabeType value) {
  
  stabe_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.stabe)
}

// .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StabaType staba = 4;
inline void Brakeinfo_report_74::clear_staba() {
  staba_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabaType Brakeinfo_report_74::staba() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.staba)
  return static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabaType >(staba_);
}
inline void Brakeinfo_report_74::set_staba(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabaType value) {
  
  staba_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.staba)
}

// double aog = 5;
inline void Brakeinfo_report_74::clear_aog() {
  aog_ = 0;
}
inline double Brakeinfo_report_74::aog() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.aog)
  return aog_;
}
inline void Brakeinfo_report_74::set_aog(double value) {
  
  aog_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.aog)
}

// .Calmcar.drivers.CHASIS.Brakeinfo_report_74.AbseType abse = 6;
inline void Brakeinfo_report_74::clear_abse() {
  abse_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbseType Brakeinfo_report_74::abse() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.abse)
  return static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbseType >(abse_);
}
inline void Brakeinfo_report_74::set_abse(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbseType value) {
  
  abse_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.abse)
}

// .Calmcar.drivers.CHASIS.Brakeinfo_report_74.AbsaType absa = 7;
inline void Brakeinfo_report_74::clear_absa() {
  absa_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbsaType Brakeinfo_report_74::absa() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.absa)
  return static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbsaType >(absa_);
}
inline void Brakeinfo_report_74::set_absa(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbsaType value) {
  
  absa_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.absa)
}

// double whltrq = 8;
inline void Brakeinfo_report_74::clear_whltrq() {
  whltrq_ = 0;
}
inline double Brakeinfo_report_74::whltrq() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.whltrq)
  return whltrq_;
}
inline void Brakeinfo_report_74::set_whltrq(double value) {
  
  whltrq_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.whltrq)
}

// .Calmcar.drivers.CHASIS.Brakeinfo_report_74.PbrakeType pbrake = 9;
inline void Brakeinfo_report_74::clear_pbrake() {
  pbrake_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_PbrakeType Brakeinfo_report_74::pbrake() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.pbrake)
  return static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_PbrakeType >(pbrake_);
}
inline void Brakeinfo_report_74::set_pbrake(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_PbrakeType value) {
  
  pbrake_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.pbrake)
}

// .Calmcar.drivers.CHASIS.Brakeinfo_report_74.StatnryType statnry = 10;
inline void Brakeinfo_report_74::clear_statnry() {
  statnry_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StatnryType Brakeinfo_report_74::statnry() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.statnry)
  return static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StatnryType >(statnry_);
}
inline void Brakeinfo_report_74::set_statnry(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StatnryType value) {
  
  statnry_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.statnry)
}

// .Calmcar.drivers.CHASIS.Brakeinfo_report_74.HsastatType hsastat = 11;
inline void Brakeinfo_report_74::clear_hsastat() {
  hsastat_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsastatType Brakeinfo_report_74::hsastat() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.hsastat)
  return static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsastatType >(hsastat_);
}
inline void Brakeinfo_report_74::set_hsastat(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsastatType value) {
  
  hsastat_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.hsastat)
}

// .Calmcar.drivers.CHASIS.Brakeinfo_report_74.HsamodeType hsamode = 12;
inline void Brakeinfo_report_74::clear_hsamode() {
  hsamode_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsamodeType Brakeinfo_report_74::hsamode() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.hsamode)
  return static_cast< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsamodeType >(hsamode_);
}
inline void Brakeinfo_report_74::set_hsamode(::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsamodeType value) {
  
  hsamode_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.hsamode)
}

// double brktrqr = 13;
inline void Brakeinfo_report_74::clear_brktrqr() {
  brktrqr_ = 0;
}
inline double Brakeinfo_report_74::brktrqr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.brktrqr)
  return brktrqr_;
}
inline void Brakeinfo_report_74::set_brktrqr(double value) {
  
  brktrqr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.brktrqr)
}

// double brktrqa = 14;
inline void Brakeinfo_report_74::clear_brktrqa() {
  brktrqa_ = 0;
}
inline double Brakeinfo_report_74::brktrqa() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Brakeinfo_report_74.brktrqa)
  return brktrqa_;
}
inline void Brakeinfo_report_74::set_brktrqa(double value) {
  
  brktrqa_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Brakeinfo_report_74.brktrqa)
}

// -------------------------------------------------------------------

// Surround_report_73

// .Calmcar.drivers.CHASIS.Surround_report_73.EnsnrType ensnr = 1;
inline void Surround_report_73::clear_ensnr() {
  ensnr_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73_EnsnrType Surround_report_73::ensnr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.ensnr)
  return static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_EnsnrType >(ensnr_);
}
inline void Surround_report_73::set_ensnr(::Calmcar::drivers::CHASIS::Surround_report_73_EnsnrType value) {
  
  ensnr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.ensnr)
}

// .Calmcar.drivers.CHASIS.Surround_report_73.FltsnrType fltsnr = 2;
inline void Surround_report_73::clear_fltsnr() {
  fltsnr_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73_FltsnrType Surround_report_73::fltsnr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.fltsnr)
  return static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_FltsnrType >(fltsnr_);
}
inline void Surround_report_73::set_fltsnr(::Calmcar::drivers::CHASIS::Surround_report_73_FltsnrType value) {
  
  fltsnr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.fltsnr)
}

// double sonar11 = 3;
inline void Surround_report_73::clear_sonar11() {
  sonar11_ = 0;
}
inline double Surround_report_73::sonar11() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar11)
  return sonar11_;
}
inline void Surround_report_73::set_sonar11(double value) {
  
  sonar11_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar11)
}

// double sonar10 = 4;
inline void Surround_report_73::clear_sonar10() {
  sonar10_ = 0;
}
inline double Surround_report_73::sonar10() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar10)
  return sonar10_;
}
inline void Surround_report_73::set_sonar10(double value) {
  
  sonar10_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar10)
}

// double sonar09 = 5;
inline void Surround_report_73::clear_sonar09() {
  sonar09_ = 0;
}
inline double Surround_report_73::sonar09() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar09)
  return sonar09_;
}
inline void Surround_report_73::set_sonar09(double value) {
  
  sonar09_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar09)
}

// double sonar08 = 6;
inline void Surround_report_73::clear_sonar08() {
  sonar08_ = 0;
}
inline double Surround_report_73::sonar08() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar08)
  return sonar08_;
}
inline void Surround_report_73::set_sonar08(double value) {
  
  sonar08_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar08)
}

// double sonar07 = 7;
inline void Surround_report_73::clear_sonar07() {
  sonar07_ = 0;
}
inline double Surround_report_73::sonar07() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar07)
  return sonar07_;
}
inline void Surround_report_73::set_sonar07(double value) {
  
  sonar07_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar07)
}

// double sonar06 = 8;
inline void Surround_report_73::clear_sonar06() {
  sonar06_ = 0;
}
inline double Surround_report_73::sonar06() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar06)
  return sonar06_;
}
inline void Surround_report_73::set_sonar06(double value) {
  
  sonar06_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar06)
}

// double sonar05 = 9;
inline void Surround_report_73::clear_sonar05() {
  sonar05_ = 0;
}
inline double Surround_report_73::sonar05() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar05)
  return sonar05_;
}
inline void Surround_report_73::set_sonar05(double value) {
  
  sonar05_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar05)
}

// double sonar04 = 10;
inline void Surround_report_73::clear_sonar04() {
  sonar04_ = 0;
}
inline double Surround_report_73::sonar04() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar04)
  return sonar04_;
}
inline void Surround_report_73::set_sonar04(double value) {
  
  sonar04_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar04)
}

// double sonar03 = 11;
inline void Surround_report_73::clear_sonar03() {
  sonar03_ = 0;
}
inline double Surround_report_73::sonar03() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar03)
  return sonar03_;
}
inline void Surround_report_73::set_sonar03(double value) {
  
  sonar03_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar03)
}

// double sonar02 = 12;
inline void Surround_report_73::clear_sonar02() {
  sonar02_ = 0;
}
inline double Surround_report_73::sonar02() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar02)
  return sonar02_;
}
inline void Surround_report_73::set_sonar02(double value) {
  
  sonar02_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar02)
}

// double sonar01 = 13;
inline void Surround_report_73::clear_sonar01() {
  sonar01_ = 0;
}
inline double Surround_report_73::sonar01() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar01)
  return sonar01_;
}
inline void Surround_report_73::set_sonar01(double value) {
  
  sonar01_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar01)
}

// double sonar00 = 14;
inline void Surround_report_73::clear_sonar00() {
  sonar00_ = 0;
}
inline double Surround_report_73::sonar00() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.sonar00)
  return sonar00_;
}
inline void Surround_report_73::set_sonar00(double value) {
  
  sonar00_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.sonar00)
}

// .Calmcar.drivers.CHASIS.Surround_report_73.BlisreType blisre = 15;
inline void Surround_report_73::clear_blisre() {
  blisre_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73_BlisreType Surround_report_73::blisre() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.blisre)
  return static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_BlisreType >(blisre_);
}
inline void Surround_report_73::set_blisre(::Calmcar::drivers::CHASIS::Surround_report_73_BlisreType value) {
  
  blisre_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.blisre)
}

// .Calmcar.drivers.CHASIS.Surround_report_73.BlisraType blisra = 16;
inline void Surround_report_73::clear_blisra() {
  blisra_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73_BlisraType Surround_report_73::blisra() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.blisra)
  return static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_BlisraType >(blisra_);
}
inline void Surround_report_73::set_blisra(::Calmcar::drivers::CHASIS::Surround_report_73_BlisraType value) {
  
  blisra_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.blisra)
}

// .Calmcar.drivers.CHASIS.Surround_report_73.BlisleType blisle = 17;
inline void Surround_report_73::clear_blisle() {
  blisle_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73_BlisleType Surround_report_73::blisle() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.blisle)
  return static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_BlisleType >(blisle_);
}
inline void Surround_report_73::set_blisle(::Calmcar::drivers::CHASIS::Surround_report_73_BlisleType value) {
  
  blisle_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.blisle)
}

// .Calmcar.drivers.CHASIS.Surround_report_73.BlislaType blisla = 18;
inline void Surround_report_73::clear_blisla() {
  blisla_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73_BlislaType Surround_report_73::blisla() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.blisla)
  return static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_BlislaType >(blisla_);
}
inline void Surround_report_73::set_blisla(::Calmcar::drivers::CHASIS::Surround_report_73_BlislaType value) {
  
  blisla_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.blisla)
}

// .Calmcar.drivers.CHASIS.Surround_report_73.CtareType ctare = 19;
inline void Surround_report_73::clear_ctare() {
  ctare_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73_CtareType Surround_report_73::ctare() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.ctare)
  return static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_CtareType >(ctare_);
}
inline void Surround_report_73::set_ctare(::Calmcar::drivers::CHASIS::Surround_report_73_CtareType value) {
  
  ctare_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.ctare)
}

// .Calmcar.drivers.CHASIS.Surround_report_73.CtaraType ctara = 20;
inline void Surround_report_73::clear_ctara() {
  ctara_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73_CtaraType Surround_report_73::ctara() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.ctara)
  return static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_CtaraType >(ctara_);
}
inline void Surround_report_73::set_ctara(::Calmcar::drivers::CHASIS::Surround_report_73_CtaraType value) {
  
  ctara_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.ctara)
}

// .Calmcar.drivers.CHASIS.Surround_report_73.CtaleType ctale = 21;
inline void Surround_report_73::clear_ctale() {
  ctale_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73_CtaleType Surround_report_73::ctale() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.ctale)
  return static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_CtaleType >(ctale_);
}
inline void Surround_report_73::set_ctale(::Calmcar::drivers::CHASIS::Surround_report_73_CtaleType value) {
  
  ctale_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.ctale)
}

// .Calmcar.drivers.CHASIS.Surround_report_73.CtalaType ctala = 22;
inline void Surround_report_73::clear_ctala() {
  ctala_ = 0;
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73_CtalaType Surround_report_73::ctala() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Surround_report_73.ctala)
  return static_cast< ::Calmcar::drivers::CHASIS::Surround_report_73_CtalaType >(ctala_);
}
inline void Surround_report_73::set_ctala(::Calmcar::drivers::CHASIS::Surround_report_73_CtalaType value) {
  
  ctala_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Surround_report_73.ctala)
}

// -------------------------------------------------------------------

// Fuellevel_report_72

// double fuel = 1;
inline void Fuellevel_report_72::clear_fuel() {
  fuel_ = 0;
}
inline double Fuellevel_report_72::fuel() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Fuellevel_report_72.fuel)
  return fuel_;
}
inline void Fuellevel_report_72::set_fuel(double value) {
  
  fuel_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Fuellevel_report_72.fuel)
}

// -------------------------------------------------------------------

// Tirepressure_report_71

// int32 rr = 1;
inline void Tirepressure_report_71::clear_rr() {
  rr_ = 0;
}
inline ::google::protobuf::int32 Tirepressure_report_71::rr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Tirepressure_report_71.rr)
  return rr_;
}
inline void Tirepressure_report_71::set_rr(::google::protobuf::int32 value) {
  
  rr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Tirepressure_report_71.rr)
}

// int32 rl = 2;
inline void Tirepressure_report_71::clear_rl() {
  rl_ = 0;
}
inline ::google::protobuf::int32 Tirepressure_report_71::rl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Tirepressure_report_71.rl)
  return rl_;
}
inline void Tirepressure_report_71::set_rl(::google::protobuf::int32 value) {
  
  rl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Tirepressure_report_71.rl)
}

// int32 fr = 3;
inline void Tirepressure_report_71::clear_fr() {
  fr_ = 0;
}
inline ::google::protobuf::int32 Tirepressure_report_71::fr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Tirepressure_report_71.fr)
  return fr_;
}
inline void Tirepressure_report_71::set_fr(::google::protobuf::int32 value) {
  
  fr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Tirepressure_report_71.fr)
}

// int32 fl = 4;
inline void Tirepressure_report_71::clear_fl() {
  fl_ = 0;
}
inline ::google::protobuf::int32 Tirepressure_report_71::fl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Tirepressure_report_71.fl)
  return fl_;
}
inline void Tirepressure_report_71::set_fl(::google::protobuf::int32 value) {
  
  fl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Tirepressure_report_71.fl)
}

// -------------------------------------------------------------------

// Wheelposition_report_70

// int32 rr = 1;
inline void Wheelposition_report_70::clear_rr() {
  rr_ = 0;
}
inline ::google::protobuf::int32 Wheelposition_report_70::rr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Wheelposition_report_70.rr)
  return rr_;
}
inline void Wheelposition_report_70::set_rr(::google::protobuf::int32 value) {
  
  rr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Wheelposition_report_70.rr)
}

// int32 rl = 2;
inline void Wheelposition_report_70::clear_rl() {
  rl_ = 0;
}
inline ::google::protobuf::int32 Wheelposition_report_70::rl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Wheelposition_report_70.rl)
  return rl_;
}
inline void Wheelposition_report_70::set_rl(::google::protobuf::int32 value) {
  
  rl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Wheelposition_report_70.rl)
}

// int32 fr = 3;
inline void Wheelposition_report_70::clear_fr() {
  fr_ = 0;
}
inline ::google::protobuf::int32 Wheelposition_report_70::fr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Wheelposition_report_70.fr)
  return fr_;
}
inline void Wheelposition_report_70::set_fr(::google::protobuf::int32 value) {
  
  fr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Wheelposition_report_70.fr)
}

// int32 fl = 4;
inline void Wheelposition_report_70::clear_fl() {
  fl_ = 0;
}
inline ::google::protobuf::int32 Wheelposition_report_70::fl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Wheelposition_report_70.fl)
  return fl_;
}
inline void Wheelposition_report_70::set_fl(::google::protobuf::int32 value) {
  
  fl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Wheelposition_report_70.fl)
}

// -------------------------------------------------------------------

// Suspension_79

// double suspension_rr = 1;
inline void Suspension_79::clear_suspension_rr() {
  suspension_rr_ = 0;
}
inline double Suspension_79::suspension_rr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Suspension_79.suspension_rr)
  return suspension_rr_;
}
inline void Suspension_79::set_suspension_rr(double value) {
  
  suspension_rr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Suspension_79.suspension_rr)
}

// double suspension_rl = 2;
inline void Suspension_79::clear_suspension_rl() {
  suspension_rl_ = 0;
}
inline double Suspension_79::suspension_rl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Suspension_79.suspension_rl)
  return suspension_rl_;
}
inline void Suspension_79::set_suspension_rl(double value) {
  
  suspension_rl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Suspension_79.suspension_rl)
}

// double suspension_fr = 3;
inline void Suspension_79::clear_suspension_fr() {
  suspension_fr_ = 0;
}
inline double Suspension_79::suspension_fr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Suspension_79.suspension_fr)
  return suspension_fr_;
}
inline void Suspension_79::set_suspension_fr(double value) {
  
  suspension_fr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Suspension_79.suspension_fr)
}

// double suspension_fl = 4;
inline void Suspension_79::clear_suspension_fl() {
  suspension_fl_ = 0;
}
inline double Suspension_79::suspension_fl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Suspension_79.suspension_fl)
  return suspension_fl_;
}
inline void Suspension_79::set_suspension_fl(double value) {
  
  suspension_fl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Suspension_79.suspension_fl)
}

// -------------------------------------------------------------------

// Pms_voltage_1b0

// double vol3_5v = 1;
inline void Pms_voltage_1b0::clear_vol3_5v() {
  vol3_5v_ = 0;
}
inline double Pms_voltage_1b0::vol3_5v() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_voltage_1b0.vol3_5v)
  return vol3_5v_;
}
inline void Pms_voltage_1b0::set_vol3_5v(double value) {
  
  vol3_5v_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_voltage_1b0.vol3_5v)
}

// double vol2_12v = 2;
inline void Pms_voltage_1b0::clear_vol2_12v() {
  vol2_12v_ = 0;
}
inline double Pms_voltage_1b0::vol2_12v() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_voltage_1b0.vol2_12v)
  return vol2_12v_;
}
inline void Pms_voltage_1b0::set_vol2_12v(double value) {
  
  vol2_12v_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_voltage_1b0.vol2_12v)
}

// double vol1_bat = 3;
inline void Pms_voltage_1b0::clear_vol1_bat() {
  vol1_bat_ = 0;
}
inline double Pms_voltage_1b0::vol1_bat() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_voltage_1b0.vol1_bat)
  return vol1_bat_;
}
inline void Pms_voltage_1b0::set_vol1_bat(double value) {
  
  vol1_bat_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_voltage_1b0.vol1_bat)
}

// -------------------------------------------------------------------

// Pms_sta_1e0

// bool state9 = 1;
inline void Pms_sta_1e0::clear_state9() {
  state9_ = false;
}
inline bool Pms_sta_1e0::state9() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state9)
  return state9_;
}
inline void Pms_sta_1e0::set_state9(bool value) {
  
  state9_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state9)
}

// bool state8 = 2;
inline void Pms_sta_1e0::clear_state8() {
  state8_ = false;
}
inline bool Pms_sta_1e0::state8() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state8)
  return state8_;
}
inline void Pms_sta_1e0::set_state8(bool value) {
  
  state8_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state8)
}

// bool state7 = 3;
inline void Pms_sta_1e0::clear_state7() {
  state7_ = false;
}
inline bool Pms_sta_1e0::state7() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state7)
  return state7_;
}
inline void Pms_sta_1e0::set_state7(bool value) {
  
  state7_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state7)
}

// bool state6 = 4;
inline void Pms_sta_1e0::clear_state6() {
  state6_ = false;
}
inline bool Pms_sta_1e0::state6() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state6)
  return state6_;
}
inline void Pms_sta_1e0::set_state6(bool value) {
  
  state6_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state6)
}

// bool state5 = 5;
inline void Pms_sta_1e0::clear_state5() {
  state5_ = false;
}
inline bool Pms_sta_1e0::state5() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state5)
  return state5_;
}
inline void Pms_sta_1e0::set_state5(bool value) {
  
  state5_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state5)
}

// bool state4 = 6;
inline void Pms_sta_1e0::clear_state4() {
  state4_ = false;
}
inline bool Pms_sta_1e0::state4() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state4)
  return state4_;
}
inline void Pms_sta_1e0::set_state4(bool value) {
  
  state4_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state4)
}

// bool state3 = 7;
inline void Pms_sta_1e0::clear_state3() {
  state3_ = false;
}
inline bool Pms_sta_1e0::state3() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state3)
  return state3_;
}
inline void Pms_sta_1e0::set_state3(bool value) {
  
  state3_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state3)
}

// bool state2 = 8;
inline void Pms_sta_1e0::clear_state2() {
  state2_ = false;
}
inline bool Pms_sta_1e0::state2() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state2)
  return state2_;
}
inline void Pms_sta_1e0::set_state2(bool value) {
  
  state2_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state2)
}

// bool state16_accin = 9;
inline void Pms_sta_1e0::clear_state16_accin() {
  state16_accin_ = false;
}
inline bool Pms_sta_1e0::state16_accin() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state16_accin)
  return state16_accin_;
}
inline void Pms_sta_1e0::set_state16_accin(bool value) {
  
  state16_accin_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state16_accin)
}

// bool state15_blank = 10;
inline void Pms_sta_1e0::clear_state15_blank() {
  state15_blank_ = false;
}
inline bool Pms_sta_1e0::state15_blank() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state15_blank)
  return state15_blank_;
}
inline void Pms_sta_1e0::set_state15_blank(bool value) {
  
  state15_blank_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state15_blank)
}

// bool state14_relay = 11;
inline void Pms_sta_1e0::clear_state14_relay() {
  state14_relay_ = false;
}
inline bool Pms_sta_1e0::state14_relay() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state14_relay)
  return state14_relay_;
}
inline void Pms_sta_1e0::set_state14_relay(bool value) {
  
  state14_relay_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state14_relay)
}

// bool state13_dcdc = 12;
inline void Pms_sta_1e0::clear_state13_dcdc() {
  state13_dcdc_ = false;
}
inline bool Pms_sta_1e0::state13_dcdc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state13_dcdc)
  return state13_dcdc_;
}
inline void Pms_sta_1e0::set_state13_dcdc(bool value) {
  
  state13_dcdc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state13_dcdc)
}

// bool state12 = 13;
inline void Pms_sta_1e0::clear_state12() {
  state12_ = false;
}
inline bool Pms_sta_1e0::state12() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state12)
  return state12_;
}
inline void Pms_sta_1e0::set_state12(bool value) {
  
  state12_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state12)
}

// bool state11 = 14;
inline void Pms_sta_1e0::clear_state11() {
  state11_ = false;
}
inline bool Pms_sta_1e0::state11() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state11)
  return state11_;
}
inline void Pms_sta_1e0::set_state11(bool value) {
  
  state11_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state11)
}

// bool state10 = 15;
inline void Pms_sta_1e0::clear_state10() {
  state10_ = false;
}
inline bool Pms_sta_1e0::state10() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state10)
  return state10_;
}
inline void Pms_sta_1e0::set_state10(bool value) {
  
  state10_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state10)
}

// bool state1 = 16;
inline void Pms_sta_1e0::clear_state1() {
  state1_ = false;
}
inline bool Pms_sta_1e0::state1() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Pms_sta_1e0.state1)
  return state1_;
}
inline void Pms_sta_1e0::set_state1(bool value) {
  
  state1_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.CHASIS.Pms_sta_1e0.state1)
}

// -------------------------------------------------------------------

// Chasis

// .Calmcar.common.Header header = 1;
inline bool Chasis::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::Calmcar::common::Header& Chasis::_internal_header() const {
  return *header_;
}
inline const ::Calmcar::common::Header& Chasis::header() const {
  const ::Calmcar::common::Header* p = header_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.header)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::common::Header*>(
      &::Calmcar::common::_Header_default_instance_);
}
inline ::Calmcar::common::Header* Chasis::release_header() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.header)
  
  ::Calmcar::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::Calmcar::common::Header* Chasis::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::common::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.header)
  return header_;
}
inline void Chasis::set_allocated_header(::Calmcar::common::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.header)
}

// .Calmcar.drivers.CHASIS.Version_ss_7f version_ss_7f = 2;
inline bool Chasis::has_version_ss_7f() const {
  return this != internal_default_instance() && version_ss_7f_ != NULL;
}
inline void Chasis::clear_version_ss_7f() {
  if (GetArenaNoVirtual() == NULL && version_ss_7f_ != NULL) {
    delete version_ss_7f_;
  }
  version_ss_7f_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Version_ss_7f& Chasis::_internal_version_ss_7f() const {
  return *version_ss_7f_;
}
inline const ::Calmcar::drivers::CHASIS::Version_ss_7f& Chasis::version_ss_7f() const {
  const ::Calmcar::drivers::CHASIS::Version_ss_7f* p = version_ss_7f_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.version_ss_7f)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Version_ss_7f*>(
      &::Calmcar::drivers::CHASIS::_Version_ss_7f_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Version_ss_7f* Chasis::release_version_ss_7f() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.version_ss_7f)
  
  ::Calmcar::drivers::CHASIS::Version_ss_7f* temp = version_ss_7f_;
  version_ss_7f_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Version_ss_7f* Chasis::mutable_version_ss_7f() {
  
  if (version_ss_7f_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Version_ss_7f>(GetArenaNoVirtual());
    version_ss_7f_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.version_ss_7f)
  return version_ss_7f_;
}
inline void Chasis::set_allocated_version_ss_7f(::Calmcar::drivers::CHASIS::Version_ss_7f* version_ss_7f) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete version_ss_7f_;
  }
  if (version_ss_7f) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version_ss_7f = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version_ss_7f, submessage_arena);
    }
    
  } else {
    
  }
  version_ss_7f_ = version_ss_7f;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.version_ss_7f)
}

// .Calmcar.drivers.CHASIS.Version_bt_7e version_bt_7e = 3;
inline bool Chasis::has_version_bt_7e() const {
  return this != internal_default_instance() && version_bt_7e_ != NULL;
}
inline void Chasis::clear_version_bt_7e() {
  if (GetArenaNoVirtual() == NULL && version_bt_7e_ != NULL) {
    delete version_bt_7e_;
  }
  version_bt_7e_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Version_bt_7e& Chasis::_internal_version_bt_7e() const {
  return *version_bt_7e_;
}
inline const ::Calmcar::drivers::CHASIS::Version_bt_7e& Chasis::version_bt_7e() const {
  const ::Calmcar::drivers::CHASIS::Version_bt_7e* p = version_bt_7e_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.version_bt_7e)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Version_bt_7e*>(
      &::Calmcar::drivers::CHASIS::_Version_bt_7e_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Version_bt_7e* Chasis::release_version_bt_7e() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.version_bt_7e)
  
  ::Calmcar::drivers::CHASIS::Version_bt_7e* temp = version_bt_7e_;
  version_bt_7e_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Version_bt_7e* Chasis::mutable_version_bt_7e() {
  
  if (version_bt_7e_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Version_bt_7e>(GetArenaNoVirtual());
    version_bt_7e_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.version_bt_7e)
  return version_bt_7e_;
}
inline void Chasis::set_allocated_version_bt_7e(::Calmcar::drivers::CHASIS::Version_bt_7e* version_bt_7e) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete version_bt_7e_;
  }
  if (version_bt_7e) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version_bt_7e = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version_bt_7e, submessage_arena);
    }
    
  } else {
    
  }
  version_bt_7e_ = version_bt_7e;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.version_bt_7e)
}

// .Calmcar.drivers.CHASIS.Misc_report_ss_7b misc_report_ss_7b = 4;
inline bool Chasis::has_misc_report_ss_7b() const {
  return this != internal_default_instance() && misc_report_ss_7b_ != NULL;
}
inline void Chasis::clear_misc_report_ss_7b() {
  if (GetArenaNoVirtual() == NULL && misc_report_ss_7b_ != NULL) {
    delete misc_report_ss_7b_;
  }
  misc_report_ss_7b_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Misc_report_ss_7b& Chasis::_internal_misc_report_ss_7b() const {
  return *misc_report_ss_7b_;
}
inline const ::Calmcar::drivers::CHASIS::Misc_report_ss_7b& Chasis::misc_report_ss_7b() const {
  const ::Calmcar::drivers::CHASIS::Misc_report_ss_7b* p = misc_report_ss_7b_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.misc_report_ss_7b)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Misc_report_ss_7b*>(
      &::Calmcar::drivers::CHASIS::_Misc_report_ss_7b_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Misc_report_ss_7b* Chasis::release_misc_report_ss_7b() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.misc_report_ss_7b)
  
  ::Calmcar::drivers::CHASIS::Misc_report_ss_7b* temp = misc_report_ss_7b_;
  misc_report_ss_7b_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_ss_7b* Chasis::mutable_misc_report_ss_7b() {
  
  if (misc_report_ss_7b_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Misc_report_ss_7b>(GetArenaNoVirtual());
    misc_report_ss_7b_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.misc_report_ss_7b)
  return misc_report_ss_7b_;
}
inline void Chasis::set_allocated_misc_report_ss_7b(::Calmcar::drivers::CHASIS::Misc_report_ss_7b* misc_report_ss_7b) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete misc_report_ss_7b_;
  }
  if (misc_report_ss_7b) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      misc_report_ss_7b = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, misc_report_ss_7b, submessage_arena);
    }
    
  } else {
    
  }
  misc_report_ss_7b_ = misc_report_ss_7b;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.misc_report_ss_7b)
}

// .Calmcar.drivers.CHASIS.Brake_command_60 brake_command_60 = 5;
inline bool Chasis::has_brake_command_60() const {
  return this != internal_default_instance() && brake_command_60_ != NULL;
}
inline void Chasis::clear_brake_command_60() {
  if (GetArenaNoVirtual() == NULL && brake_command_60_ != NULL) {
    delete brake_command_60_;
  }
  brake_command_60_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Brake_command_60& Chasis::_internal_brake_command_60() const {
  return *brake_command_60_;
}
inline const ::Calmcar::drivers::CHASIS::Brake_command_60& Chasis::brake_command_60() const {
  const ::Calmcar::drivers::CHASIS::Brake_command_60* p = brake_command_60_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.brake_command_60)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Brake_command_60*>(
      &::Calmcar::drivers::CHASIS::_Brake_command_60_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Brake_command_60* Chasis::release_brake_command_60() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.brake_command_60)
  
  ::Calmcar::drivers::CHASIS::Brake_command_60* temp = brake_command_60_;
  brake_command_60_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Brake_command_60* Chasis::mutable_brake_command_60() {
  
  if (brake_command_60_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Brake_command_60>(GetArenaNoVirtual());
    brake_command_60_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.brake_command_60)
  return brake_command_60_;
}
inline void Chasis::set_allocated_brake_command_60(::Calmcar::drivers::CHASIS::Brake_command_60* brake_command_60) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete brake_command_60_;
  }
  if (brake_command_60) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      brake_command_60 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, brake_command_60, submessage_arena);
    }
    
  } else {
    
  }
  brake_command_60_ = brake_command_60;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.brake_command_60)
}

// .Calmcar.drivers.CHASIS.Brake_report_61 brake_report_61 = 6;
inline bool Chasis::has_brake_report_61() const {
  return this != internal_default_instance() && brake_report_61_ != NULL;
}
inline void Chasis::clear_brake_report_61() {
  if (GetArenaNoVirtual() == NULL && brake_report_61_ != NULL) {
    delete brake_report_61_;
  }
  brake_report_61_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Brake_report_61& Chasis::_internal_brake_report_61() const {
  return *brake_report_61_;
}
inline const ::Calmcar::drivers::CHASIS::Brake_report_61& Chasis::brake_report_61() const {
  const ::Calmcar::drivers::CHASIS::Brake_report_61* p = brake_report_61_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.brake_report_61)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Brake_report_61*>(
      &::Calmcar::drivers::CHASIS::_Brake_report_61_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61* Chasis::release_brake_report_61() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.brake_report_61)
  
  ::Calmcar::drivers::CHASIS::Brake_report_61* temp = brake_report_61_;
  brake_report_61_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Brake_report_61* Chasis::mutable_brake_report_61() {
  
  if (brake_report_61_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Brake_report_61>(GetArenaNoVirtual());
    brake_report_61_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.brake_report_61)
  return brake_report_61_;
}
inline void Chasis::set_allocated_brake_report_61(::Calmcar::drivers::CHASIS::Brake_report_61* brake_report_61) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete brake_report_61_;
  }
  if (brake_report_61) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      brake_report_61 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, brake_report_61, submessage_arena);
    }
    
  } else {
    
  }
  brake_report_61_ = brake_report_61;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.brake_report_61)
}

// .Calmcar.drivers.CHASIS.Throttle_command_62 throttle_command_62 = 7;
inline bool Chasis::has_throttle_command_62() const {
  return this != internal_default_instance() && throttle_command_62_ != NULL;
}
inline void Chasis::clear_throttle_command_62() {
  if (GetArenaNoVirtual() == NULL && throttle_command_62_ != NULL) {
    delete throttle_command_62_;
  }
  throttle_command_62_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Throttle_command_62& Chasis::_internal_throttle_command_62() const {
  return *throttle_command_62_;
}
inline const ::Calmcar::drivers::CHASIS::Throttle_command_62& Chasis::throttle_command_62() const {
  const ::Calmcar::drivers::CHASIS::Throttle_command_62* p = throttle_command_62_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.throttle_command_62)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Throttle_command_62*>(
      &::Calmcar::drivers::CHASIS::_Throttle_command_62_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Throttle_command_62* Chasis::release_throttle_command_62() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.throttle_command_62)
  
  ::Calmcar::drivers::CHASIS::Throttle_command_62* temp = throttle_command_62_;
  throttle_command_62_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Throttle_command_62* Chasis::mutable_throttle_command_62() {
  
  if (throttle_command_62_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Throttle_command_62>(GetArenaNoVirtual());
    throttle_command_62_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.throttle_command_62)
  return throttle_command_62_;
}
inline void Chasis::set_allocated_throttle_command_62(::Calmcar::drivers::CHASIS::Throttle_command_62* throttle_command_62) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete throttle_command_62_;
  }
  if (throttle_command_62) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      throttle_command_62 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, throttle_command_62, submessage_arena);
    }
    
  } else {
    
  }
  throttle_command_62_ = throttle_command_62;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.throttle_command_62)
}

// .Calmcar.drivers.CHASIS.Throttle_report_63 throttle_report_63 = 8;
inline bool Chasis::has_throttle_report_63() const {
  return this != internal_default_instance() && throttle_report_63_ != NULL;
}
inline void Chasis::clear_throttle_report_63() {
  if (GetArenaNoVirtual() == NULL && throttle_report_63_ != NULL) {
    delete throttle_report_63_;
  }
  throttle_report_63_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Throttle_report_63& Chasis::_internal_throttle_report_63() const {
  return *throttle_report_63_;
}
inline const ::Calmcar::drivers::CHASIS::Throttle_report_63& Chasis::throttle_report_63() const {
  const ::Calmcar::drivers::CHASIS::Throttle_report_63* p = throttle_report_63_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.throttle_report_63)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Throttle_report_63*>(
      &::Calmcar::drivers::CHASIS::_Throttle_report_63_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Throttle_report_63* Chasis::release_throttle_report_63() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.throttle_report_63)
  
  ::Calmcar::drivers::CHASIS::Throttle_report_63* temp = throttle_report_63_;
  throttle_report_63_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Throttle_report_63* Chasis::mutable_throttle_report_63() {
  
  if (throttle_report_63_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Throttle_report_63>(GetArenaNoVirtual());
    throttle_report_63_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.throttle_report_63)
  return throttle_report_63_;
}
inline void Chasis::set_allocated_throttle_report_63(::Calmcar::drivers::CHASIS::Throttle_report_63* throttle_report_63) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete throttle_report_63_;
  }
  if (throttle_report_63) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      throttle_report_63 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, throttle_report_63, submessage_arena);
    }
    
  } else {
    
  }
  throttle_report_63_ = throttle_report_63;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.throttle_report_63)
}

// .Calmcar.drivers.CHASIS.Steering_command_64 steering_command_64 = 9;
inline bool Chasis::has_steering_command_64() const {
  return this != internal_default_instance() && steering_command_64_ != NULL;
}
inline void Chasis::clear_steering_command_64() {
  if (GetArenaNoVirtual() == NULL && steering_command_64_ != NULL) {
    delete steering_command_64_;
  }
  steering_command_64_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Steering_command_64& Chasis::_internal_steering_command_64() const {
  return *steering_command_64_;
}
inline const ::Calmcar::drivers::CHASIS::Steering_command_64& Chasis::steering_command_64() const {
  const ::Calmcar::drivers::CHASIS::Steering_command_64* p = steering_command_64_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.steering_command_64)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Steering_command_64*>(
      &::Calmcar::drivers::CHASIS::_Steering_command_64_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Steering_command_64* Chasis::release_steering_command_64() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.steering_command_64)
  
  ::Calmcar::drivers::CHASIS::Steering_command_64* temp = steering_command_64_;
  steering_command_64_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Steering_command_64* Chasis::mutable_steering_command_64() {
  
  if (steering_command_64_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Steering_command_64>(GetArenaNoVirtual());
    steering_command_64_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.steering_command_64)
  return steering_command_64_;
}
inline void Chasis::set_allocated_steering_command_64(::Calmcar::drivers::CHASIS::Steering_command_64* steering_command_64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete steering_command_64_;
  }
  if (steering_command_64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      steering_command_64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, steering_command_64, submessage_arena);
    }
    
  } else {
    
  }
  steering_command_64_ = steering_command_64;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.steering_command_64)
}

// .Calmcar.drivers.CHASIS.Steering_report_65 steering_report_65 = 10;
inline bool Chasis::has_steering_report_65() const {
  return this != internal_default_instance() && steering_report_65_ != NULL;
}
inline void Chasis::clear_steering_report_65() {
  if (GetArenaNoVirtual() == NULL && steering_report_65_ != NULL) {
    delete steering_report_65_;
  }
  steering_report_65_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Steering_report_65& Chasis::_internal_steering_report_65() const {
  return *steering_report_65_;
}
inline const ::Calmcar::drivers::CHASIS::Steering_report_65& Chasis::steering_report_65() const {
  const ::Calmcar::drivers::CHASIS::Steering_report_65* p = steering_report_65_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.steering_report_65)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Steering_report_65*>(
      &::Calmcar::drivers::CHASIS::_Steering_report_65_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Steering_report_65* Chasis::release_steering_report_65() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.steering_report_65)
  
  ::Calmcar::drivers::CHASIS::Steering_report_65* temp = steering_report_65_;
  steering_report_65_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Steering_report_65* Chasis::mutable_steering_report_65() {
  
  if (steering_report_65_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Steering_report_65>(GetArenaNoVirtual());
    steering_report_65_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.steering_report_65)
  return steering_report_65_;
}
inline void Chasis::set_allocated_steering_report_65(::Calmcar::drivers::CHASIS::Steering_report_65* steering_report_65) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete steering_report_65_;
  }
  if (steering_report_65) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      steering_report_65 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, steering_report_65, submessage_arena);
    }
    
  } else {
    
  }
  steering_report_65_ = steering_report_65;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.steering_report_65)
}

// .Calmcar.drivers.CHASIS.Gear_command_66 gear_command_66 = 11;
inline bool Chasis::has_gear_command_66() const {
  return this != internal_default_instance() && gear_command_66_ != NULL;
}
inline void Chasis::clear_gear_command_66() {
  if (GetArenaNoVirtual() == NULL && gear_command_66_ != NULL) {
    delete gear_command_66_;
  }
  gear_command_66_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Gear_command_66& Chasis::_internal_gear_command_66() const {
  return *gear_command_66_;
}
inline const ::Calmcar::drivers::CHASIS::Gear_command_66& Chasis::gear_command_66() const {
  const ::Calmcar::drivers::CHASIS::Gear_command_66* p = gear_command_66_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.gear_command_66)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Gear_command_66*>(
      &::Calmcar::drivers::CHASIS::_Gear_command_66_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Gear_command_66* Chasis::release_gear_command_66() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.gear_command_66)
  
  ::Calmcar::drivers::CHASIS::Gear_command_66* temp = gear_command_66_;
  gear_command_66_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Gear_command_66* Chasis::mutable_gear_command_66() {
  
  if (gear_command_66_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gear_command_66>(GetArenaNoVirtual());
    gear_command_66_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.gear_command_66)
  return gear_command_66_;
}
inline void Chasis::set_allocated_gear_command_66(::Calmcar::drivers::CHASIS::Gear_command_66* gear_command_66) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gear_command_66_;
  }
  if (gear_command_66) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gear_command_66 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gear_command_66, submessage_arena);
    }
    
  } else {
    
  }
  gear_command_66_ = gear_command_66;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.gear_command_66)
}

// .Calmcar.drivers.CHASIS.Gear_report_67 gear_report_67 = 12;
inline bool Chasis::has_gear_report_67() const {
  return this != internal_default_instance() && gear_report_67_ != NULL;
}
inline void Chasis::clear_gear_report_67() {
  if (GetArenaNoVirtual() == NULL && gear_report_67_ != NULL) {
    delete gear_report_67_;
  }
  gear_report_67_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Gear_report_67& Chasis::_internal_gear_report_67() const {
  return *gear_report_67_;
}
inline const ::Calmcar::drivers::CHASIS::Gear_report_67& Chasis::gear_report_67() const {
  const ::Calmcar::drivers::CHASIS::Gear_report_67* p = gear_report_67_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.gear_report_67)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Gear_report_67*>(
      &::Calmcar::drivers::CHASIS::_Gear_report_67_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Gear_report_67* Chasis::release_gear_report_67() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.gear_report_67)
  
  ::Calmcar::drivers::CHASIS::Gear_report_67* temp = gear_report_67_;
  gear_report_67_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Gear_report_67* Chasis::mutable_gear_report_67() {
  
  if (gear_report_67_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gear_report_67>(GetArenaNoVirtual());
    gear_report_67_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.gear_report_67)
  return gear_report_67_;
}
inline void Chasis::set_allocated_gear_report_67(::Calmcar::drivers::CHASIS::Gear_report_67* gear_report_67) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gear_report_67_;
  }
  if (gear_report_67) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gear_report_67 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gear_report_67, submessage_arena);
    }
    
  } else {
    
  }
  gear_report_67_ = gear_report_67;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.gear_report_67)
}

// .Calmcar.drivers.CHASIS.Turnsignal_command_68 turnsignal_command_68 = 13;
inline bool Chasis::has_turnsignal_command_68() const {
  return this != internal_default_instance() && turnsignal_command_68_ != NULL;
}
inline void Chasis::clear_turnsignal_command_68() {
  if (GetArenaNoVirtual() == NULL && turnsignal_command_68_ != NULL) {
    delete turnsignal_command_68_;
  }
  turnsignal_command_68_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Turnsignal_command_68& Chasis::_internal_turnsignal_command_68() const {
  return *turnsignal_command_68_;
}
inline const ::Calmcar::drivers::CHASIS::Turnsignal_command_68& Chasis::turnsignal_command_68() const {
  const ::Calmcar::drivers::CHASIS::Turnsignal_command_68* p = turnsignal_command_68_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.turnsignal_command_68)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Turnsignal_command_68*>(
      &::Calmcar::drivers::CHASIS::_Turnsignal_command_68_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Turnsignal_command_68* Chasis::release_turnsignal_command_68() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.turnsignal_command_68)
  
  ::Calmcar::drivers::CHASIS::Turnsignal_command_68* temp = turnsignal_command_68_;
  turnsignal_command_68_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Turnsignal_command_68* Chasis::mutable_turnsignal_command_68() {
  
  if (turnsignal_command_68_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Turnsignal_command_68>(GetArenaNoVirtual());
    turnsignal_command_68_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.turnsignal_command_68)
  return turnsignal_command_68_;
}
inline void Chasis::set_allocated_turnsignal_command_68(::Calmcar::drivers::CHASIS::Turnsignal_command_68* turnsignal_command_68) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete turnsignal_command_68_;
  }
  if (turnsignal_command_68) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      turnsignal_command_68 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, turnsignal_command_68, submessage_arena);
    }
    
  } else {
    
  }
  turnsignal_command_68_ = turnsignal_command_68;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.turnsignal_command_68)
}

// .Calmcar.drivers.CHASIS.Misc_report_69 misc_report_69 = 14;
inline bool Chasis::has_misc_report_69() const {
  return this != internal_default_instance() && misc_report_69_ != NULL;
}
inline void Chasis::clear_misc_report_69() {
  if (GetArenaNoVirtual() == NULL && misc_report_69_ != NULL) {
    delete misc_report_69_;
  }
  misc_report_69_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Misc_report_69& Chasis::_internal_misc_report_69() const {
  return *misc_report_69_;
}
inline const ::Calmcar::drivers::CHASIS::Misc_report_69& Chasis::misc_report_69() const {
  const ::Calmcar::drivers::CHASIS::Misc_report_69* p = misc_report_69_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.misc_report_69)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Misc_report_69*>(
      &::Calmcar::drivers::CHASIS::_Misc_report_69_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69* Chasis::release_misc_report_69() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.misc_report_69)
  
  ::Calmcar::drivers::CHASIS::Misc_report_69* temp = misc_report_69_;
  misc_report_69_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Misc_report_69* Chasis::mutable_misc_report_69() {
  
  if (misc_report_69_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Misc_report_69>(GetArenaNoVirtual());
    misc_report_69_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.misc_report_69)
  return misc_report_69_;
}
inline void Chasis::set_allocated_misc_report_69(::Calmcar::drivers::CHASIS::Misc_report_69* misc_report_69) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete misc_report_69_;
  }
  if (misc_report_69) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      misc_report_69 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, misc_report_69, submessage_arena);
    }
    
  } else {
    
  }
  misc_report_69_ = misc_report_69;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.misc_report_69)
}

// .Calmcar.drivers.CHASIS.Pms_current_4_1c3 pms_current_4_1c3 = 15;
inline bool Chasis::has_pms_current_4_1c3() const {
  return this != internal_default_instance() && pms_current_4_1c3_ != NULL;
}
inline void Chasis::clear_pms_current_4_1c3() {
  if (GetArenaNoVirtual() == NULL && pms_current_4_1c3_ != NULL) {
    delete pms_current_4_1c3_;
  }
  pms_current_4_1c3_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Pms_current_4_1c3& Chasis::_internal_pms_current_4_1c3() const {
  return *pms_current_4_1c3_;
}
inline const ::Calmcar::drivers::CHASIS::Pms_current_4_1c3& Chasis::pms_current_4_1c3() const {
  const ::Calmcar::drivers::CHASIS::Pms_current_4_1c3* p = pms_current_4_1c3_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.pms_current_4_1c3)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Pms_current_4_1c3*>(
      &::Calmcar::drivers::CHASIS::_Pms_current_4_1c3_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Pms_current_4_1c3* Chasis::release_pms_current_4_1c3() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.pms_current_4_1c3)
  
  ::Calmcar::drivers::CHASIS::Pms_current_4_1c3* temp = pms_current_4_1c3_;
  pms_current_4_1c3_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Pms_current_4_1c3* Chasis::mutable_pms_current_4_1c3() {
  
  if (pms_current_4_1c3_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_current_4_1c3>(GetArenaNoVirtual());
    pms_current_4_1c3_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.pms_current_4_1c3)
  return pms_current_4_1c3_;
}
inline void Chasis::set_allocated_pms_current_4_1c3(::Calmcar::drivers::CHASIS::Pms_current_4_1c3* pms_current_4_1c3) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pms_current_4_1c3_;
  }
  if (pms_current_4_1c3) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pms_current_4_1c3 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pms_current_4_1c3, submessage_arena);
    }
    
  } else {
    
  }
  pms_current_4_1c3_ = pms_current_4_1c3;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.pms_current_4_1c3)
}

// .Calmcar.drivers.CHASIS.Pms_current_3_1c2 pms_current_3_1c2 = 16;
inline bool Chasis::has_pms_current_3_1c2() const {
  return this != internal_default_instance() && pms_current_3_1c2_ != NULL;
}
inline void Chasis::clear_pms_current_3_1c2() {
  if (GetArenaNoVirtual() == NULL && pms_current_3_1c2_ != NULL) {
    delete pms_current_3_1c2_;
  }
  pms_current_3_1c2_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Pms_current_3_1c2& Chasis::_internal_pms_current_3_1c2() const {
  return *pms_current_3_1c2_;
}
inline const ::Calmcar::drivers::CHASIS::Pms_current_3_1c2& Chasis::pms_current_3_1c2() const {
  const ::Calmcar::drivers::CHASIS::Pms_current_3_1c2* p = pms_current_3_1c2_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.pms_current_3_1c2)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Pms_current_3_1c2*>(
      &::Calmcar::drivers::CHASIS::_Pms_current_3_1c2_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Pms_current_3_1c2* Chasis::release_pms_current_3_1c2() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.pms_current_3_1c2)
  
  ::Calmcar::drivers::CHASIS::Pms_current_3_1c2* temp = pms_current_3_1c2_;
  pms_current_3_1c2_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Pms_current_3_1c2* Chasis::mutable_pms_current_3_1c2() {
  
  if (pms_current_3_1c2_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_current_3_1c2>(GetArenaNoVirtual());
    pms_current_3_1c2_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.pms_current_3_1c2)
  return pms_current_3_1c2_;
}
inline void Chasis::set_allocated_pms_current_3_1c2(::Calmcar::drivers::CHASIS::Pms_current_3_1c2* pms_current_3_1c2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pms_current_3_1c2_;
  }
  if (pms_current_3_1c2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pms_current_3_1c2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pms_current_3_1c2, submessage_arena);
    }
    
  } else {
    
  }
  pms_current_3_1c2_ = pms_current_3_1c2;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.pms_current_3_1c2)
}

// .Calmcar.drivers.CHASIS.Pms_current_2_1c1 pms_current_2_1c1 = 17;
inline bool Chasis::has_pms_current_2_1c1() const {
  return this != internal_default_instance() && pms_current_2_1c1_ != NULL;
}
inline void Chasis::clear_pms_current_2_1c1() {
  if (GetArenaNoVirtual() == NULL && pms_current_2_1c1_ != NULL) {
    delete pms_current_2_1c1_;
  }
  pms_current_2_1c1_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Pms_current_2_1c1& Chasis::_internal_pms_current_2_1c1() const {
  return *pms_current_2_1c1_;
}
inline const ::Calmcar::drivers::CHASIS::Pms_current_2_1c1& Chasis::pms_current_2_1c1() const {
  const ::Calmcar::drivers::CHASIS::Pms_current_2_1c1* p = pms_current_2_1c1_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.pms_current_2_1c1)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Pms_current_2_1c1*>(
      &::Calmcar::drivers::CHASIS::_Pms_current_2_1c1_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Pms_current_2_1c1* Chasis::release_pms_current_2_1c1() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.pms_current_2_1c1)
  
  ::Calmcar::drivers::CHASIS::Pms_current_2_1c1* temp = pms_current_2_1c1_;
  pms_current_2_1c1_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Pms_current_2_1c1* Chasis::mutable_pms_current_2_1c1() {
  
  if (pms_current_2_1c1_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_current_2_1c1>(GetArenaNoVirtual());
    pms_current_2_1c1_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.pms_current_2_1c1)
  return pms_current_2_1c1_;
}
inline void Chasis::set_allocated_pms_current_2_1c1(::Calmcar::drivers::CHASIS::Pms_current_2_1c1* pms_current_2_1c1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pms_current_2_1c1_;
  }
  if (pms_current_2_1c1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pms_current_2_1c1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pms_current_2_1c1, submessage_arena);
    }
    
  } else {
    
  }
  pms_current_2_1c1_ = pms_current_2_1c1;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.pms_current_2_1c1)
}

// .Calmcar.drivers.CHASIS.Pms_current_1_1c0 pms_current_1_1c0 = 18;
inline bool Chasis::has_pms_current_1_1c0() const {
  return this != internal_default_instance() && pms_current_1_1c0_ != NULL;
}
inline void Chasis::clear_pms_current_1_1c0() {
  if (GetArenaNoVirtual() == NULL && pms_current_1_1c0_ != NULL) {
    delete pms_current_1_1c0_;
  }
  pms_current_1_1c0_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Pms_current_1_1c0& Chasis::_internal_pms_current_1_1c0() const {
  return *pms_current_1_1c0_;
}
inline const ::Calmcar::drivers::CHASIS::Pms_current_1_1c0& Chasis::pms_current_1_1c0() const {
  const ::Calmcar::drivers::CHASIS::Pms_current_1_1c0* p = pms_current_1_1c0_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.pms_current_1_1c0)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Pms_current_1_1c0*>(
      &::Calmcar::drivers::CHASIS::_Pms_current_1_1c0_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Pms_current_1_1c0* Chasis::release_pms_current_1_1c0() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.pms_current_1_1c0)
  
  ::Calmcar::drivers::CHASIS::Pms_current_1_1c0* temp = pms_current_1_1c0_;
  pms_current_1_1c0_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Pms_current_1_1c0* Chasis::mutable_pms_current_1_1c0() {
  
  if (pms_current_1_1c0_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_current_1_1c0>(GetArenaNoVirtual());
    pms_current_1_1c0_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.pms_current_1_1c0)
  return pms_current_1_1c0_;
}
inline void Chasis::set_allocated_pms_current_1_1c0(::Calmcar::drivers::CHASIS::Pms_current_1_1c0* pms_current_1_1c0) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pms_current_1_1c0_;
  }
  if (pms_current_1_1c0) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pms_current_1_1c0 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pms_current_1_1c0, submessage_arena);
    }
    
  } else {
    
  }
  pms_current_1_1c0_ = pms_current_1_1c0;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.pms_current_1_1c0)
}

// .Calmcar.drivers.CHASIS.Pms_cmd_1ba pms_cmd_1ba = 19;
inline bool Chasis::has_pms_cmd_1ba() const {
  return this != internal_default_instance() && pms_cmd_1ba_ != NULL;
}
inline void Chasis::clear_pms_cmd_1ba() {
  if (GetArenaNoVirtual() == NULL && pms_cmd_1ba_ != NULL) {
    delete pms_cmd_1ba_;
  }
  pms_cmd_1ba_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Pms_cmd_1ba& Chasis::_internal_pms_cmd_1ba() const {
  return *pms_cmd_1ba_;
}
inline const ::Calmcar::drivers::CHASIS::Pms_cmd_1ba& Chasis::pms_cmd_1ba() const {
  const ::Calmcar::drivers::CHASIS::Pms_cmd_1ba* p = pms_cmd_1ba_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.pms_cmd_1ba)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Pms_cmd_1ba*>(
      &::Calmcar::drivers::CHASIS::_Pms_cmd_1ba_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Pms_cmd_1ba* Chasis::release_pms_cmd_1ba() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.pms_cmd_1ba)
  
  ::Calmcar::drivers::CHASIS::Pms_cmd_1ba* temp = pms_cmd_1ba_;
  pms_cmd_1ba_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Pms_cmd_1ba* Chasis::mutable_pms_cmd_1ba() {
  
  if (pms_cmd_1ba_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_cmd_1ba>(GetArenaNoVirtual());
    pms_cmd_1ba_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.pms_cmd_1ba)
  return pms_cmd_1ba_;
}
inline void Chasis::set_allocated_pms_cmd_1ba(::Calmcar::drivers::CHASIS::Pms_cmd_1ba* pms_cmd_1ba) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pms_cmd_1ba_;
  }
  if (pms_cmd_1ba) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pms_cmd_1ba = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pms_cmd_1ba, submessage_arena);
    }
    
  } else {
    
  }
  pms_cmd_1ba_ = pms_cmd_1ba;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.pms_cmd_1ba)
}

// .Calmcar.drivers.CHASIS.Wheelspeed_report_6a wheelspeed_report_6a = 20;
inline bool Chasis::has_wheelspeed_report_6a() const {
  return this != internal_default_instance() && wheelspeed_report_6a_ != NULL;
}
inline void Chasis::clear_wheelspeed_report_6a() {
  if (GetArenaNoVirtual() == NULL && wheelspeed_report_6a_ != NULL) {
    delete wheelspeed_report_6a_;
  }
  wheelspeed_report_6a_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a& Chasis::_internal_wheelspeed_report_6a() const {
  return *wheelspeed_report_6a_;
}
inline const ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a& Chasis::wheelspeed_report_6a() const {
  const ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a* p = wheelspeed_report_6a_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.wheelspeed_report_6a)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a*>(
      &::Calmcar::drivers::CHASIS::_Wheelspeed_report_6a_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a* Chasis::release_wheelspeed_report_6a() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.wheelspeed_report_6a)
  
  ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a* temp = wheelspeed_report_6a_;
  wheelspeed_report_6a_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Wheelspeed_report_6a* Chasis::mutable_wheelspeed_report_6a() {
  
  if (wheelspeed_report_6a_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Wheelspeed_report_6a>(GetArenaNoVirtual());
    wheelspeed_report_6a_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.wheelspeed_report_6a)
  return wheelspeed_report_6a_;
}
inline void Chasis::set_allocated_wheelspeed_report_6a(::Calmcar::drivers::CHASIS::Wheelspeed_report_6a* wheelspeed_report_6a) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wheelspeed_report_6a_;
  }
  if (wheelspeed_report_6a) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wheelspeed_report_6a = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wheelspeed_report_6a, submessage_arena);
    }
    
  } else {
    
  }
  wheelspeed_report_6a_ = wheelspeed_report_6a;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.wheelspeed_report_6a)
}

// .Calmcar.drivers.CHASIS.Accel_report_6b accel_report_6b = 21;
inline bool Chasis::has_accel_report_6b() const {
  return this != internal_default_instance() && accel_report_6b_ != NULL;
}
inline void Chasis::clear_accel_report_6b() {
  if (GetArenaNoVirtual() == NULL && accel_report_6b_ != NULL) {
    delete accel_report_6b_;
  }
  accel_report_6b_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Accel_report_6b& Chasis::_internal_accel_report_6b() const {
  return *accel_report_6b_;
}
inline const ::Calmcar::drivers::CHASIS::Accel_report_6b& Chasis::accel_report_6b() const {
  const ::Calmcar::drivers::CHASIS::Accel_report_6b* p = accel_report_6b_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.accel_report_6b)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Accel_report_6b*>(
      &::Calmcar::drivers::CHASIS::_Accel_report_6b_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Accel_report_6b* Chasis::release_accel_report_6b() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.accel_report_6b)
  
  ::Calmcar::drivers::CHASIS::Accel_report_6b* temp = accel_report_6b_;
  accel_report_6b_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Accel_report_6b* Chasis::mutable_accel_report_6b() {
  
  if (accel_report_6b_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Accel_report_6b>(GetArenaNoVirtual());
    accel_report_6b_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.accel_report_6b)
  return accel_report_6b_;
}
inline void Chasis::set_allocated_accel_report_6b(::Calmcar::drivers::CHASIS::Accel_report_6b* accel_report_6b) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete accel_report_6b_;
  }
  if (accel_report_6b) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      accel_report_6b = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, accel_report_6b, submessage_arena);
    }
    
  } else {
    
  }
  accel_report_6b_ = accel_report_6b;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.accel_report_6b)
}

// .Calmcar.drivers.CHASIS.Gyro_report_6c gyro_report_6c = 22;
inline bool Chasis::has_gyro_report_6c() const {
  return this != internal_default_instance() && gyro_report_6c_ != NULL;
}
inline void Chasis::clear_gyro_report_6c() {
  if (GetArenaNoVirtual() == NULL && gyro_report_6c_ != NULL) {
    delete gyro_report_6c_;
  }
  gyro_report_6c_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Gyro_report_6c& Chasis::_internal_gyro_report_6c() const {
  return *gyro_report_6c_;
}
inline const ::Calmcar::drivers::CHASIS::Gyro_report_6c& Chasis::gyro_report_6c() const {
  const ::Calmcar::drivers::CHASIS::Gyro_report_6c* p = gyro_report_6c_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.gyro_report_6c)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Gyro_report_6c*>(
      &::Calmcar::drivers::CHASIS::_Gyro_report_6c_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Gyro_report_6c* Chasis::release_gyro_report_6c() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.gyro_report_6c)
  
  ::Calmcar::drivers::CHASIS::Gyro_report_6c* temp = gyro_report_6c_;
  gyro_report_6c_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Gyro_report_6c* Chasis::mutable_gyro_report_6c() {
  
  if (gyro_report_6c_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gyro_report_6c>(GetArenaNoVirtual());
    gyro_report_6c_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.gyro_report_6c)
  return gyro_report_6c_;
}
inline void Chasis::set_allocated_gyro_report_6c(::Calmcar::drivers::CHASIS::Gyro_report_6c* gyro_report_6c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gyro_report_6c_;
  }
  if (gyro_report_6c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gyro_report_6c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gyro_report_6c, submessage_arena);
    }
    
  } else {
    
  }
  gyro_report_6c_ = gyro_report_6c;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.gyro_report_6c)
}

// .Calmcar.drivers.CHASIS.Gps_1_report_6d gps_1_report_6d = 23;
inline bool Chasis::has_gps_1_report_6d() const {
  return this != internal_default_instance() && gps_1_report_6d_ != NULL;
}
inline void Chasis::clear_gps_1_report_6d() {
  if (GetArenaNoVirtual() == NULL && gps_1_report_6d_ != NULL) {
    delete gps_1_report_6d_;
  }
  gps_1_report_6d_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Gps_1_report_6d& Chasis::_internal_gps_1_report_6d() const {
  return *gps_1_report_6d_;
}
inline const ::Calmcar::drivers::CHASIS::Gps_1_report_6d& Chasis::gps_1_report_6d() const {
  const ::Calmcar::drivers::CHASIS::Gps_1_report_6d* p = gps_1_report_6d_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.gps_1_report_6d)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Gps_1_report_6d*>(
      &::Calmcar::drivers::CHASIS::_Gps_1_report_6d_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Gps_1_report_6d* Chasis::release_gps_1_report_6d() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.gps_1_report_6d)
  
  ::Calmcar::drivers::CHASIS::Gps_1_report_6d* temp = gps_1_report_6d_;
  gps_1_report_6d_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Gps_1_report_6d* Chasis::mutable_gps_1_report_6d() {
  
  if (gps_1_report_6d_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gps_1_report_6d>(GetArenaNoVirtual());
    gps_1_report_6d_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.gps_1_report_6d)
  return gps_1_report_6d_;
}
inline void Chasis::set_allocated_gps_1_report_6d(::Calmcar::drivers::CHASIS::Gps_1_report_6d* gps_1_report_6d) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gps_1_report_6d_;
  }
  if (gps_1_report_6d) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gps_1_report_6d = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gps_1_report_6d, submessage_arena);
    }
    
  } else {
    
  }
  gps_1_report_6d_ = gps_1_report_6d;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.gps_1_report_6d)
}

// .Calmcar.drivers.CHASIS.Gps_2_report_6e gps_2_report_6e = 24;
inline bool Chasis::has_gps_2_report_6e() const {
  return this != internal_default_instance() && gps_2_report_6e_ != NULL;
}
inline void Chasis::clear_gps_2_report_6e() {
  if (GetArenaNoVirtual() == NULL && gps_2_report_6e_ != NULL) {
    delete gps_2_report_6e_;
  }
  gps_2_report_6e_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Gps_2_report_6e& Chasis::_internal_gps_2_report_6e() const {
  return *gps_2_report_6e_;
}
inline const ::Calmcar::drivers::CHASIS::Gps_2_report_6e& Chasis::gps_2_report_6e() const {
  const ::Calmcar::drivers::CHASIS::Gps_2_report_6e* p = gps_2_report_6e_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.gps_2_report_6e)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Gps_2_report_6e*>(
      &::Calmcar::drivers::CHASIS::_Gps_2_report_6e_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Gps_2_report_6e* Chasis::release_gps_2_report_6e() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.gps_2_report_6e)
  
  ::Calmcar::drivers::CHASIS::Gps_2_report_6e* temp = gps_2_report_6e_;
  gps_2_report_6e_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Gps_2_report_6e* Chasis::mutable_gps_2_report_6e() {
  
  if (gps_2_report_6e_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gps_2_report_6e>(GetArenaNoVirtual());
    gps_2_report_6e_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.gps_2_report_6e)
  return gps_2_report_6e_;
}
inline void Chasis::set_allocated_gps_2_report_6e(::Calmcar::drivers::CHASIS::Gps_2_report_6e* gps_2_report_6e) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gps_2_report_6e_;
  }
  if (gps_2_report_6e) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gps_2_report_6e = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gps_2_report_6e, submessage_arena);
    }
    
  } else {
    
  }
  gps_2_report_6e_ = gps_2_report_6e;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.gps_2_report_6e)
}

// .Calmcar.drivers.CHASIS.Gps_3_report_6f gps_3_report_6f = 25;
inline bool Chasis::has_gps_3_report_6f() const {
  return this != internal_default_instance() && gps_3_report_6f_ != NULL;
}
inline void Chasis::clear_gps_3_report_6f() {
  if (GetArenaNoVirtual() == NULL && gps_3_report_6f_ != NULL) {
    delete gps_3_report_6f_;
  }
  gps_3_report_6f_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Gps_3_report_6f& Chasis::_internal_gps_3_report_6f() const {
  return *gps_3_report_6f_;
}
inline const ::Calmcar::drivers::CHASIS::Gps_3_report_6f& Chasis::gps_3_report_6f() const {
  const ::Calmcar::drivers::CHASIS::Gps_3_report_6f* p = gps_3_report_6f_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.gps_3_report_6f)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Gps_3_report_6f*>(
      &::Calmcar::drivers::CHASIS::_Gps_3_report_6f_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Gps_3_report_6f* Chasis::release_gps_3_report_6f() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.gps_3_report_6f)
  
  ::Calmcar::drivers::CHASIS::Gps_3_report_6f* temp = gps_3_report_6f_;
  gps_3_report_6f_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Gps_3_report_6f* Chasis::mutable_gps_3_report_6f() {
  
  if (gps_3_report_6f_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Gps_3_report_6f>(GetArenaNoVirtual());
    gps_3_report_6f_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.gps_3_report_6f)
  return gps_3_report_6f_;
}
inline void Chasis::set_allocated_gps_3_report_6f(::Calmcar::drivers::CHASIS::Gps_3_report_6f* gps_3_report_6f) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gps_3_report_6f_;
  }
  if (gps_3_report_6f) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gps_3_report_6f = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gps_3_report_6f, submessage_arena);
    }
    
  } else {
    
  }
  gps_3_report_6f_ = gps_3_report_6f;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.gps_3_report_6f)
}

// .Calmcar.drivers.CHASIS.Throttleinfo_report_75 throttleinfo_report_75 = 26;
inline bool Chasis::has_throttleinfo_report_75() const {
  return this != internal_default_instance() && throttleinfo_report_75_ != NULL;
}
inline void Chasis::clear_throttleinfo_report_75() {
  if (GetArenaNoVirtual() == NULL && throttleinfo_report_75_ != NULL) {
    delete throttleinfo_report_75_;
  }
  throttleinfo_report_75_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Throttleinfo_report_75& Chasis::_internal_throttleinfo_report_75() const {
  return *throttleinfo_report_75_;
}
inline const ::Calmcar::drivers::CHASIS::Throttleinfo_report_75& Chasis::throttleinfo_report_75() const {
  const ::Calmcar::drivers::CHASIS::Throttleinfo_report_75* p = throttleinfo_report_75_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.throttleinfo_report_75)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Throttleinfo_report_75*>(
      &::Calmcar::drivers::CHASIS::_Throttleinfo_report_75_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Throttleinfo_report_75* Chasis::release_throttleinfo_report_75() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.throttleinfo_report_75)
  
  ::Calmcar::drivers::CHASIS::Throttleinfo_report_75* temp = throttleinfo_report_75_;
  throttleinfo_report_75_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Throttleinfo_report_75* Chasis::mutable_throttleinfo_report_75() {
  
  if (throttleinfo_report_75_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Throttleinfo_report_75>(GetArenaNoVirtual());
    throttleinfo_report_75_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.throttleinfo_report_75)
  return throttleinfo_report_75_;
}
inline void Chasis::set_allocated_throttleinfo_report_75(::Calmcar::drivers::CHASIS::Throttleinfo_report_75* throttleinfo_report_75) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete throttleinfo_report_75_;
  }
  if (throttleinfo_report_75) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      throttleinfo_report_75 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, throttleinfo_report_75, submessage_arena);
    }
    
  } else {
    
  }
  throttleinfo_report_75_ = throttleinfo_report_75;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.throttleinfo_report_75)
}

// .Calmcar.drivers.CHASIS.Brakeinfo_report_74 brakeinfo_report_74 = 27;
inline bool Chasis::has_brakeinfo_report_74() const {
  return this != internal_default_instance() && brakeinfo_report_74_ != NULL;
}
inline void Chasis::clear_brakeinfo_report_74() {
  if (GetArenaNoVirtual() == NULL && brakeinfo_report_74_ != NULL) {
    delete brakeinfo_report_74_;
  }
  brakeinfo_report_74_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Brakeinfo_report_74& Chasis::_internal_brakeinfo_report_74() const {
  return *brakeinfo_report_74_;
}
inline const ::Calmcar::drivers::CHASIS::Brakeinfo_report_74& Chasis::brakeinfo_report_74() const {
  const ::Calmcar::drivers::CHASIS::Brakeinfo_report_74* p = brakeinfo_report_74_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.brakeinfo_report_74)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Brakeinfo_report_74*>(
      &::Calmcar::drivers::CHASIS::_Brakeinfo_report_74_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74* Chasis::release_brakeinfo_report_74() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.brakeinfo_report_74)
  
  ::Calmcar::drivers::CHASIS::Brakeinfo_report_74* temp = brakeinfo_report_74_;
  brakeinfo_report_74_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Brakeinfo_report_74* Chasis::mutable_brakeinfo_report_74() {
  
  if (brakeinfo_report_74_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Brakeinfo_report_74>(GetArenaNoVirtual());
    brakeinfo_report_74_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.brakeinfo_report_74)
  return brakeinfo_report_74_;
}
inline void Chasis::set_allocated_brakeinfo_report_74(::Calmcar::drivers::CHASIS::Brakeinfo_report_74* brakeinfo_report_74) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete brakeinfo_report_74_;
  }
  if (brakeinfo_report_74) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      brakeinfo_report_74 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, brakeinfo_report_74, submessage_arena);
    }
    
  } else {
    
  }
  brakeinfo_report_74_ = brakeinfo_report_74;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.brakeinfo_report_74)
}

// .Calmcar.drivers.CHASIS.Surround_report_73 surround_report_73 = 28;
inline bool Chasis::has_surround_report_73() const {
  return this != internal_default_instance() && surround_report_73_ != NULL;
}
inline void Chasis::clear_surround_report_73() {
  if (GetArenaNoVirtual() == NULL && surround_report_73_ != NULL) {
    delete surround_report_73_;
  }
  surround_report_73_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Surround_report_73& Chasis::_internal_surround_report_73() const {
  return *surround_report_73_;
}
inline const ::Calmcar::drivers::CHASIS::Surround_report_73& Chasis::surround_report_73() const {
  const ::Calmcar::drivers::CHASIS::Surround_report_73* p = surround_report_73_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.surround_report_73)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Surround_report_73*>(
      &::Calmcar::drivers::CHASIS::_Surround_report_73_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73* Chasis::release_surround_report_73() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.surround_report_73)
  
  ::Calmcar::drivers::CHASIS::Surround_report_73* temp = surround_report_73_;
  surround_report_73_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Surround_report_73* Chasis::mutable_surround_report_73() {
  
  if (surround_report_73_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Surround_report_73>(GetArenaNoVirtual());
    surround_report_73_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.surround_report_73)
  return surround_report_73_;
}
inline void Chasis::set_allocated_surround_report_73(::Calmcar::drivers::CHASIS::Surround_report_73* surround_report_73) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete surround_report_73_;
  }
  if (surround_report_73) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      surround_report_73 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, surround_report_73, submessage_arena);
    }
    
  } else {
    
  }
  surround_report_73_ = surround_report_73;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.surround_report_73)
}

// .Calmcar.drivers.CHASIS.Fuellevel_report_72 fuellevel_report_72 = 29;
inline bool Chasis::has_fuellevel_report_72() const {
  return this != internal_default_instance() && fuellevel_report_72_ != NULL;
}
inline void Chasis::clear_fuellevel_report_72() {
  if (GetArenaNoVirtual() == NULL && fuellevel_report_72_ != NULL) {
    delete fuellevel_report_72_;
  }
  fuellevel_report_72_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Fuellevel_report_72& Chasis::_internal_fuellevel_report_72() const {
  return *fuellevel_report_72_;
}
inline const ::Calmcar::drivers::CHASIS::Fuellevel_report_72& Chasis::fuellevel_report_72() const {
  const ::Calmcar::drivers::CHASIS::Fuellevel_report_72* p = fuellevel_report_72_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.fuellevel_report_72)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Fuellevel_report_72*>(
      &::Calmcar::drivers::CHASIS::_Fuellevel_report_72_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Fuellevel_report_72* Chasis::release_fuellevel_report_72() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.fuellevel_report_72)
  
  ::Calmcar::drivers::CHASIS::Fuellevel_report_72* temp = fuellevel_report_72_;
  fuellevel_report_72_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Fuellevel_report_72* Chasis::mutable_fuellevel_report_72() {
  
  if (fuellevel_report_72_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Fuellevel_report_72>(GetArenaNoVirtual());
    fuellevel_report_72_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.fuellevel_report_72)
  return fuellevel_report_72_;
}
inline void Chasis::set_allocated_fuellevel_report_72(::Calmcar::drivers::CHASIS::Fuellevel_report_72* fuellevel_report_72) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fuellevel_report_72_;
  }
  if (fuellevel_report_72) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fuellevel_report_72 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fuellevel_report_72, submessage_arena);
    }
    
  } else {
    
  }
  fuellevel_report_72_ = fuellevel_report_72;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.fuellevel_report_72)
}

// .Calmcar.drivers.CHASIS.Tirepressure_report_71 tirepressure_report_71 = 30;
inline bool Chasis::has_tirepressure_report_71() const {
  return this != internal_default_instance() && tirepressure_report_71_ != NULL;
}
inline void Chasis::clear_tirepressure_report_71() {
  if (GetArenaNoVirtual() == NULL && tirepressure_report_71_ != NULL) {
    delete tirepressure_report_71_;
  }
  tirepressure_report_71_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Tirepressure_report_71& Chasis::_internal_tirepressure_report_71() const {
  return *tirepressure_report_71_;
}
inline const ::Calmcar::drivers::CHASIS::Tirepressure_report_71& Chasis::tirepressure_report_71() const {
  const ::Calmcar::drivers::CHASIS::Tirepressure_report_71* p = tirepressure_report_71_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.tirepressure_report_71)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Tirepressure_report_71*>(
      &::Calmcar::drivers::CHASIS::_Tirepressure_report_71_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Tirepressure_report_71* Chasis::release_tirepressure_report_71() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.tirepressure_report_71)
  
  ::Calmcar::drivers::CHASIS::Tirepressure_report_71* temp = tirepressure_report_71_;
  tirepressure_report_71_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Tirepressure_report_71* Chasis::mutable_tirepressure_report_71() {
  
  if (tirepressure_report_71_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Tirepressure_report_71>(GetArenaNoVirtual());
    tirepressure_report_71_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.tirepressure_report_71)
  return tirepressure_report_71_;
}
inline void Chasis::set_allocated_tirepressure_report_71(::Calmcar::drivers::CHASIS::Tirepressure_report_71* tirepressure_report_71) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tirepressure_report_71_;
  }
  if (tirepressure_report_71) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tirepressure_report_71 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tirepressure_report_71, submessage_arena);
    }
    
  } else {
    
  }
  tirepressure_report_71_ = tirepressure_report_71;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.tirepressure_report_71)
}

// .Calmcar.drivers.CHASIS.Wheelposition_report_70 wheelposition_report_70 = 31;
inline bool Chasis::has_wheelposition_report_70() const {
  return this != internal_default_instance() && wheelposition_report_70_ != NULL;
}
inline void Chasis::clear_wheelposition_report_70() {
  if (GetArenaNoVirtual() == NULL && wheelposition_report_70_ != NULL) {
    delete wheelposition_report_70_;
  }
  wheelposition_report_70_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Wheelposition_report_70& Chasis::_internal_wheelposition_report_70() const {
  return *wheelposition_report_70_;
}
inline const ::Calmcar::drivers::CHASIS::Wheelposition_report_70& Chasis::wheelposition_report_70() const {
  const ::Calmcar::drivers::CHASIS::Wheelposition_report_70* p = wheelposition_report_70_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.wheelposition_report_70)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Wheelposition_report_70*>(
      &::Calmcar::drivers::CHASIS::_Wheelposition_report_70_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Wheelposition_report_70* Chasis::release_wheelposition_report_70() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.wheelposition_report_70)
  
  ::Calmcar::drivers::CHASIS::Wheelposition_report_70* temp = wheelposition_report_70_;
  wheelposition_report_70_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Wheelposition_report_70* Chasis::mutable_wheelposition_report_70() {
  
  if (wheelposition_report_70_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Wheelposition_report_70>(GetArenaNoVirtual());
    wheelposition_report_70_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.wheelposition_report_70)
  return wheelposition_report_70_;
}
inline void Chasis::set_allocated_wheelposition_report_70(::Calmcar::drivers::CHASIS::Wheelposition_report_70* wheelposition_report_70) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wheelposition_report_70_;
  }
  if (wheelposition_report_70) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wheelposition_report_70 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wheelposition_report_70, submessage_arena);
    }
    
  } else {
    
  }
  wheelposition_report_70_ = wheelposition_report_70;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.wheelposition_report_70)
}

// .Calmcar.drivers.CHASIS.Suspension_79 suspension_79 = 32;
inline bool Chasis::has_suspension_79() const {
  return this != internal_default_instance() && suspension_79_ != NULL;
}
inline void Chasis::clear_suspension_79() {
  if (GetArenaNoVirtual() == NULL && suspension_79_ != NULL) {
    delete suspension_79_;
  }
  suspension_79_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Suspension_79& Chasis::_internal_suspension_79() const {
  return *suspension_79_;
}
inline const ::Calmcar::drivers::CHASIS::Suspension_79& Chasis::suspension_79() const {
  const ::Calmcar::drivers::CHASIS::Suspension_79* p = suspension_79_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.suspension_79)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Suspension_79*>(
      &::Calmcar::drivers::CHASIS::_Suspension_79_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Suspension_79* Chasis::release_suspension_79() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.suspension_79)
  
  ::Calmcar::drivers::CHASIS::Suspension_79* temp = suspension_79_;
  suspension_79_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Suspension_79* Chasis::mutable_suspension_79() {
  
  if (suspension_79_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Suspension_79>(GetArenaNoVirtual());
    suspension_79_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.suspension_79)
  return suspension_79_;
}
inline void Chasis::set_allocated_suspension_79(::Calmcar::drivers::CHASIS::Suspension_79* suspension_79) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete suspension_79_;
  }
  if (suspension_79) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      suspension_79 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, suspension_79, submessage_arena);
    }
    
  } else {
    
  }
  suspension_79_ = suspension_79;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.suspension_79)
}

// .Calmcar.drivers.CHASIS.Pms_voltage_1b0 pms_voltage_1b0 = 33;
inline bool Chasis::has_pms_voltage_1b0() const {
  return this != internal_default_instance() && pms_voltage_1b0_ != NULL;
}
inline void Chasis::clear_pms_voltage_1b0() {
  if (GetArenaNoVirtual() == NULL && pms_voltage_1b0_ != NULL) {
    delete pms_voltage_1b0_;
  }
  pms_voltage_1b0_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Pms_voltage_1b0& Chasis::_internal_pms_voltage_1b0() const {
  return *pms_voltage_1b0_;
}
inline const ::Calmcar::drivers::CHASIS::Pms_voltage_1b0& Chasis::pms_voltage_1b0() const {
  const ::Calmcar::drivers::CHASIS::Pms_voltage_1b0* p = pms_voltage_1b0_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.pms_voltage_1b0)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Pms_voltage_1b0*>(
      &::Calmcar::drivers::CHASIS::_Pms_voltage_1b0_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Pms_voltage_1b0* Chasis::release_pms_voltage_1b0() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.pms_voltage_1b0)
  
  ::Calmcar::drivers::CHASIS::Pms_voltage_1b0* temp = pms_voltage_1b0_;
  pms_voltage_1b0_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Pms_voltage_1b0* Chasis::mutable_pms_voltage_1b0() {
  
  if (pms_voltage_1b0_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_voltage_1b0>(GetArenaNoVirtual());
    pms_voltage_1b0_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.pms_voltage_1b0)
  return pms_voltage_1b0_;
}
inline void Chasis::set_allocated_pms_voltage_1b0(::Calmcar::drivers::CHASIS::Pms_voltage_1b0* pms_voltage_1b0) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pms_voltage_1b0_;
  }
  if (pms_voltage_1b0) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pms_voltage_1b0 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pms_voltage_1b0, submessage_arena);
    }
    
  } else {
    
  }
  pms_voltage_1b0_ = pms_voltage_1b0;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.pms_voltage_1b0)
}

// .Calmcar.drivers.CHASIS.Pms_sta_1e0 pms_sta_1e0 = 34;
inline bool Chasis::has_pms_sta_1e0() const {
  return this != internal_default_instance() && pms_sta_1e0_ != NULL;
}
inline void Chasis::clear_pms_sta_1e0() {
  if (GetArenaNoVirtual() == NULL && pms_sta_1e0_ != NULL) {
    delete pms_sta_1e0_;
  }
  pms_sta_1e0_ = NULL;
}
inline const ::Calmcar::drivers::CHASIS::Pms_sta_1e0& Chasis::_internal_pms_sta_1e0() const {
  return *pms_sta_1e0_;
}
inline const ::Calmcar::drivers::CHASIS::Pms_sta_1e0& Chasis::pms_sta_1e0() const {
  const ::Calmcar::drivers::CHASIS::Pms_sta_1e0* p = pms_sta_1e0_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.CHASIS.Chasis.pms_sta_1e0)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::CHASIS::Pms_sta_1e0*>(
      &::Calmcar::drivers::CHASIS::_Pms_sta_1e0_default_instance_);
}
inline ::Calmcar::drivers::CHASIS::Pms_sta_1e0* Chasis::release_pms_sta_1e0() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.CHASIS.Chasis.pms_sta_1e0)
  
  ::Calmcar::drivers::CHASIS::Pms_sta_1e0* temp = pms_sta_1e0_;
  pms_sta_1e0_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::CHASIS::Pms_sta_1e0* Chasis::mutable_pms_sta_1e0() {
  
  if (pms_sta_1e0_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::CHASIS::Pms_sta_1e0>(GetArenaNoVirtual());
    pms_sta_1e0_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.CHASIS.Chasis.pms_sta_1e0)
  return pms_sta_1e0_;
}
inline void Chasis::set_allocated_pms_sta_1e0(::Calmcar::drivers::CHASIS::Pms_sta_1e0* pms_sta_1e0) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pms_sta_1e0_;
  }
  if (pms_sta_1e0) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pms_sta_1e0 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pms_sta_1e0, submessage_arena);
    }
    
  } else {
    
  }
  pms_sta_1e0_ = pms_sta_1e0;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.CHASIS.Chasis.pms_sta_1e0)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace CHASIS
}  // namespace drivers
}  // namespace Calmcar

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Version_ss_7f_ModuleType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Version_bt_7e_ModuleType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdupType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdrhtType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdokType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LdlftType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_ss_7b_LddwnType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_command_60_EnType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_command_60_BcmdType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_WdcsrcType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_WdcbrkType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_DriverType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_FltwdcType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_TmoutType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_FltbooType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_Flt2Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_Flt1Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_EnType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_OverrideType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_BoType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_BiType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brake_report_61_BcType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Throttle_command_62_EnType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Throttle_report_63_WdcsrcType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Throttle_report_63_DriverType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Throttle_report_63_FltwdcType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Throttle_report_63_TmoutType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Throttle_report_63_Flt2Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Throttle_report_63_Flt1Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Throttle_report_63_EnType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Throttle_report_63_OverrideType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Steering_command_64_EnType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Steering_report_65_FltwdcType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Steering_report_65_FltcalType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Steering_report_65_TmoutType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Steering_report_65_Flt2Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Steering_report_65_Flt1Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Steering_report_65_EnType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Steering_report_65_OverrideType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Gear_command_66_EnType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Gear_command_66_GcmdType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Gear_report_67_RejectType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Gear_report_67_StateType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Gear_report_67_FltbusType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Gear_report_67_DriverType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Gear_report_67_CmdType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Turnsignal_command_68_TrncmdType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_LdupType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_LdrhtType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_LdokType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_LdlftType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_LddwnType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_CnclType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_ResType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_OnType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_OffType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_BeltpType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_BeltdType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_PabagType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_PdectType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_TrunkType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_HoodType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_DoorrType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_DoorpType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_DoorlType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_DoordType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_WiperType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_TrnstatType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_SincType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_SdecType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_OnoffType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_LkaenType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_HibeamType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_GincType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_GdecType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_FltbusType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_RescnclType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Misc_report_69_AmbientType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Gps_1_report_6d_ValidType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Gps_2_report_6e_InfType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Gps_2_report_6e_FltgpsType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Gps_3_report_6f_QualityType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TraceType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_TracaType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StabaType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbseType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_AbsaType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_PbrakeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_StatnryType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsastatType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Brakeinfo_report_74_HsamodeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_EnsnrType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_FltsnrType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar11Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar10Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar09Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar08Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar07Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar06Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar05Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar04Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar03Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar02Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar01Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_Sonar00Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_BlisreType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_BlisraType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_BlisleType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_BlislaType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_CtareType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_CtaraType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_CtaleType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::CHASIS::Surround_report_73_CtalaType> : ::std::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_chasis_2eproto
