// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: imu.proto

#ifndef PROTOBUF_INCLUDED_imu_2eproto
#define PROTOBUF_INCLUDED_imu_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "header.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto 

namespace protobuf_imu_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[17];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_imu_2eproto
namespace Calmcar {
namespace drivers {
namespace IMU {
class Gear_report_67;
class Gear_report_67DefaultTypeInternal;
extern Gear_report_67DefaultTypeInternal _Gear_report_67_default_instance_;
class Gnss_dop_50b;
class Gnss_dop_50bDefaultTypeInternal;
extern Gnss_dop_50bDefaultTypeInternal _Gnss_dop_50b_default_instance_;
class Gnss_headingandpitch_50c;
class Gnss_headingandpitch_50cDefaultTypeInternal;
extern Gnss_headingandpitch_50cDefaultTypeInternal _Gnss_headingandpitch_50c_default_instance_;
class Gnss_heightandweek_50a;
class Gnss_heightandweek_50aDefaultTypeInternal;
extern Gnss_heightandweek_50aDefaultTypeInternal _Gnss_heightandweek_50a_default_instance_;
class Gnss_latitudelongitude_509;
class Gnss_latitudelongitude_509DefaultTypeInternal;
extern Gnss_latitudelongitude_509DefaultTypeInternal _Gnss_latitudelongitude_509_default_instance_;
class Gnss_utc_508;
class Gnss_utc_508DefaultTypeInternal;
extern Gnss_utc_508DefaultTypeInternal _Gnss_utc_508_default_instance_;
class Imu;
class ImuDefaultTypeInternal;
extern ImuDefaultTypeInternal _Imu_default_instance_;
class Ins_acc_500;
class Ins_acc_500DefaultTypeInternal;
extern Ins_acc_500DefaultTypeInternal _Ins_acc_500_default_instance_;
class Ins_datainfo_506;
class Ins_datainfo_506DefaultTypeInternal;
extern Ins_datainfo_506DefaultTypeInternal _Ins_datainfo_506_default_instance_;
class Ins_gyro_501;
class Ins_gyro_501DefaultTypeInternal;
extern Ins_gyro_501DefaultTypeInternal _Ins_gyro_501_default_instance_;
class Ins_headingpitchroll_502;
class Ins_headingpitchroll_502DefaultTypeInternal;
extern Ins_headingpitchroll_502DefaultTypeInternal _Ins_headingpitchroll_502_default_instance_;
class Ins_heightandtime_503;
class Ins_heightandtime_503DefaultTypeInternal;
extern Ins_heightandtime_503DefaultTypeInternal _Ins_heightandtime_503_default_instance_;
class Ins_latitudelongitude_504;
class Ins_latitudelongitude_504DefaultTypeInternal;
extern Ins_latitudelongitude_504DefaultTypeInternal _Ins_latitudelongitude_504_default_instance_;
class Ins_speed_505;
class Ins_speed_505DefaultTypeInternal;
extern Ins_speed_505DefaultTypeInternal _Ins_speed_505_default_instance_;
class Ins_std_507;
class Ins_std_507DefaultTypeInternal;
extern Ins_std_507DefaultTypeInternal _Ins_std_507_default_instance_;
class Steering_report_65;
class Steering_report_65DefaultTypeInternal;
extern Steering_report_65DefaultTypeInternal _Steering_report_65_default_instance_;
class Wheelspeed_report_6a;
class Wheelspeed_report_6aDefaultTypeInternal;
extern Wheelspeed_report_6aDefaultTypeInternal _Wheelspeed_report_6a_default_instance_;
}  // namespace IMU
}  // namespace drivers
}  // namespace Calmcar
namespace google {
namespace protobuf {
template<> ::Calmcar::drivers::IMU::Gear_report_67* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Gear_report_67>(Arena*);
template<> ::Calmcar::drivers::IMU::Gnss_dop_50b* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Gnss_dop_50b>(Arena*);
template<> ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Gnss_headingandpitch_50c>(Arena*);
template<> ::Calmcar::drivers::IMU::Gnss_heightandweek_50a* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Gnss_heightandweek_50a>(Arena*);
template<> ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Gnss_latitudelongitude_509>(Arena*);
template<> ::Calmcar::drivers::IMU::Gnss_utc_508* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Gnss_utc_508>(Arena*);
template<> ::Calmcar::drivers::IMU::Imu* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Imu>(Arena*);
template<> ::Calmcar::drivers::IMU::Ins_acc_500* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_acc_500>(Arena*);
template<> ::Calmcar::drivers::IMU::Ins_datainfo_506* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_datainfo_506>(Arena*);
template<> ::Calmcar::drivers::IMU::Ins_gyro_501* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_gyro_501>(Arena*);
template<> ::Calmcar::drivers::IMU::Ins_headingpitchroll_502* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_headingpitchroll_502>(Arena*);
template<> ::Calmcar::drivers::IMU::Ins_heightandtime_503* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_heightandtime_503>(Arena*);
template<> ::Calmcar::drivers::IMU::Ins_latitudelongitude_504* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_latitudelongitude_504>(Arena*);
template<> ::Calmcar::drivers::IMU::Ins_speed_505* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_speed_505>(Arena*);
template<> ::Calmcar::drivers::IMU::Ins_std_507* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_std_507>(Arena*);
template<> ::Calmcar::drivers::IMU::Steering_report_65* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Steering_report_65>(Arena*);
template<> ::Calmcar::drivers::IMU::Wheelspeed_report_6a* Arena::CreateMaybeMessage<::Calmcar::drivers::IMU::Wheelspeed_report_6a>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Calmcar {
namespace drivers {
namespace IMU {

enum Steering_report_65_EnType {
  Steering_report_65_EnType_EN_DISABLED = 0,
  Steering_report_65_EnType_EN_ENABLED = 1,
  Steering_report_65_EnType_Steering_report_65_EnType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_EnType_Steering_report_65_EnType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_EnType_IsValid(int value);
const Steering_report_65_EnType Steering_report_65_EnType_EnType_MIN = Steering_report_65_EnType_EN_DISABLED;
const Steering_report_65_EnType Steering_report_65_EnType_EnType_MAX = Steering_report_65_EnType_EN_ENABLED;
const int Steering_report_65_EnType_EnType_ARRAYSIZE = Steering_report_65_EnType_EnType_MAX + 1;

enum Steering_report_65_OverrideType {
  Steering_report_65_OverrideType_OVERRIDE_NO_OVERRIDE = 0,
  Steering_report_65_OverrideType_OVERRIDE_DRIVER_OVERRIDE = 1,
  Steering_report_65_OverrideType_Steering_report_65_OverrideType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_OverrideType_Steering_report_65_OverrideType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_OverrideType_IsValid(int value);
const Steering_report_65_OverrideType Steering_report_65_OverrideType_OverrideType_MIN = Steering_report_65_OverrideType_OVERRIDE_NO_OVERRIDE;
const Steering_report_65_OverrideType Steering_report_65_OverrideType_OverrideType_MAX = Steering_report_65_OverrideType_OVERRIDE_DRIVER_OVERRIDE;
const int Steering_report_65_OverrideType_OverrideType_ARRAYSIZE = Steering_report_65_OverrideType_OverrideType_MAX + 1;

enum Steering_report_65_FltwdcType {
  Steering_report_65_FltwdcType_FLTWDC_NO_FAULT = 0,
  Steering_report_65_FltwdcType_FLTWDC_FAULT = 1,
  Steering_report_65_FltwdcType_Steering_report_65_FltwdcType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_FltwdcType_Steering_report_65_FltwdcType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_FltwdcType_IsValid(int value);
const Steering_report_65_FltwdcType Steering_report_65_FltwdcType_FltwdcType_MIN = Steering_report_65_FltwdcType_FLTWDC_NO_FAULT;
const Steering_report_65_FltwdcType Steering_report_65_FltwdcType_FltwdcType_MAX = Steering_report_65_FltwdcType_FLTWDC_FAULT;
const int Steering_report_65_FltwdcType_FltwdcType_ARRAYSIZE = Steering_report_65_FltwdcType_FltwdcType_MAX + 1;

enum Steering_report_65_Flt1Type {
  Steering_report_65_Flt1Type_FLT1_NO_FAULT = 0,
  Steering_report_65_Flt1Type_FLT1_FAULT = 1,
  Steering_report_65_Flt1Type_Steering_report_65_Flt1Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_Flt1Type_Steering_report_65_Flt1Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_Flt1Type_IsValid(int value);
const Steering_report_65_Flt1Type Steering_report_65_Flt1Type_Flt1Type_MIN = Steering_report_65_Flt1Type_FLT1_NO_FAULT;
const Steering_report_65_Flt1Type Steering_report_65_Flt1Type_Flt1Type_MAX = Steering_report_65_Flt1Type_FLT1_FAULT;
const int Steering_report_65_Flt1Type_Flt1Type_ARRAYSIZE = Steering_report_65_Flt1Type_Flt1Type_MAX + 1;

enum Steering_report_65_Flt2Type {
  Steering_report_65_Flt2Type_FLT2_NO_FAULT = 0,
  Steering_report_65_Flt2Type_FLT2_FAULT = 1,
  Steering_report_65_Flt2Type_Steering_report_65_Flt2Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_Flt2Type_Steering_report_65_Flt2Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_Flt2Type_IsValid(int value);
const Steering_report_65_Flt2Type Steering_report_65_Flt2Type_Flt2Type_MIN = Steering_report_65_Flt2Type_FLT2_NO_FAULT;
const Steering_report_65_Flt2Type Steering_report_65_Flt2Type_Flt2Type_MAX = Steering_report_65_Flt2Type_FLT2_FAULT;
const int Steering_report_65_Flt2Type_Flt2Type_ARRAYSIZE = Steering_report_65_Flt2Type_Flt2Type_MAX + 1;

enum Steering_report_65_FltcalType {
  Steering_report_65_FltcalType_FLTCAL_NO_FAULT = 0,
  Steering_report_65_FltcalType_FLTCAL_FAULT = 1,
  Steering_report_65_FltcalType_Steering_report_65_FltcalType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_FltcalType_Steering_report_65_FltcalType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_FltcalType_IsValid(int value);
const Steering_report_65_FltcalType Steering_report_65_FltcalType_FltcalType_MIN = Steering_report_65_FltcalType_FLTCAL_NO_FAULT;
const Steering_report_65_FltcalType Steering_report_65_FltcalType_FltcalType_MAX = Steering_report_65_FltcalType_FLTCAL_FAULT;
const int Steering_report_65_FltcalType_FltcalType_ARRAYSIZE = Steering_report_65_FltcalType_FltcalType_MAX + 1;

enum Steering_report_65_TmoutType {
  Steering_report_65_TmoutType_TMOUT_VALID = 0,
  Steering_report_65_TmoutType_TMOUT_TIMEOUT = 1,
  Steering_report_65_TmoutType_Steering_report_65_TmoutType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Steering_report_65_TmoutType_Steering_report_65_TmoutType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Steering_report_65_TmoutType_IsValid(int value);
const Steering_report_65_TmoutType Steering_report_65_TmoutType_TmoutType_MIN = Steering_report_65_TmoutType_TMOUT_VALID;
const Steering_report_65_TmoutType Steering_report_65_TmoutType_TmoutType_MAX = Steering_report_65_TmoutType_TMOUT_TIMEOUT;
const int Steering_report_65_TmoutType_TmoutType_ARRAYSIZE = Steering_report_65_TmoutType_TmoutType_MAX + 1;

enum Gear_report_67_StateType {
  Gear_report_67_StateType_STATE_NONE = 0,
  Gear_report_67_StateType_STATE_PARK = 1,
  Gear_report_67_StateType_STATE_REVERSE = 2,
  Gear_report_67_StateType_STATE_NEUTRAL = 3,
  Gear_report_67_StateType_STATE_DRIVE = 4,
  Gear_report_67_StateType_STATE_LOW = 5,
  Gear_report_67_StateType_Gear_report_67_StateType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_report_67_StateType_Gear_report_67_StateType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_report_67_StateType_IsValid(int value);
const Gear_report_67_StateType Gear_report_67_StateType_StateType_MIN = Gear_report_67_StateType_STATE_NONE;
const Gear_report_67_StateType Gear_report_67_StateType_StateType_MAX = Gear_report_67_StateType_STATE_LOW;
const int Gear_report_67_StateType_StateType_ARRAYSIZE = Gear_report_67_StateType_StateType_MAX + 1;

enum Gear_report_67_DriverType {
  Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_WIRE = 0,
  Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_DRIVER = 1,
  Gear_report_67_DriverType_Gear_report_67_DriverType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_report_67_DriverType_Gear_report_67_DriverType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_report_67_DriverType_IsValid(int value);
const Gear_report_67_DriverType Gear_report_67_DriverType_DriverType_MIN = Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_WIRE;
const Gear_report_67_DriverType Gear_report_67_DriverType_DriverType_MAX = Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_DRIVER;
const int Gear_report_67_DriverType_DriverType_ARRAYSIZE = Gear_report_67_DriverType_DriverType_MAX + 1;

enum Gear_report_67_CmdType {
  Gear_report_67_CmdType_CMD_NONE = 0,
  Gear_report_67_CmdType_CMD_PARK = 1,
  Gear_report_67_CmdType_CMD_REVERSE = 2,
  Gear_report_67_CmdType_CMD_NEUTRAL = 3,
  Gear_report_67_CmdType_CMD_DRIVE = 4,
  Gear_report_67_CmdType_CMD_LOW = 5,
  Gear_report_67_CmdType_Gear_report_67_CmdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_report_67_CmdType_Gear_report_67_CmdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_report_67_CmdType_IsValid(int value);
const Gear_report_67_CmdType Gear_report_67_CmdType_CmdType_MIN = Gear_report_67_CmdType_CMD_NONE;
const Gear_report_67_CmdType Gear_report_67_CmdType_CmdType_MAX = Gear_report_67_CmdType_CMD_LOW;
const int Gear_report_67_CmdType_CmdType_ARRAYSIZE = Gear_report_67_CmdType_CmdType_MAX + 1;

enum Gear_report_67_FltbusType {
  Gear_report_67_FltbusType_FLTBUS_NO_FAULT = 0,
  Gear_report_67_FltbusType_FLTBUS_FAULT = 1,
  Gear_report_67_FltbusType_Gear_report_67_FltbusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_report_67_FltbusType_Gear_report_67_FltbusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_report_67_FltbusType_IsValid(int value);
const Gear_report_67_FltbusType Gear_report_67_FltbusType_FltbusType_MIN = Gear_report_67_FltbusType_FLTBUS_NO_FAULT;
const Gear_report_67_FltbusType Gear_report_67_FltbusType_FltbusType_MAX = Gear_report_67_FltbusType_FLTBUS_FAULT;
const int Gear_report_67_FltbusType_FltbusType_ARRAYSIZE = Gear_report_67_FltbusType_FltbusType_MAX + 1;

enum Gear_report_67_RejectType {
  Gear_report_67_RejectType_REJECT_NOT_REJECTED = 0,
  Gear_report_67_RejectType_REJECT_OVERRIDE = 1,
  Gear_report_67_RejectType_REJECT_SHIFT_IN_PROGRESS = 2,
  Gear_report_67_RejectType_REJECT_REPEAT = 3,
  Gear_report_67_RejectType_REJECT_CMD_ILLEGAL = 4,
  Gear_report_67_RejectType_REJECT_SPEED_NOT_2KPH = 5,
  Gear_report_67_RejectType_REJECT_REJECTED_BY_VEHICLE_TIMEOUT = 6,
  Gear_report_67_RejectType_Gear_report_67_RejectType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Gear_report_67_RejectType_Gear_report_67_RejectType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Gear_report_67_RejectType_IsValid(int value);
const Gear_report_67_RejectType Gear_report_67_RejectType_RejectType_MIN = Gear_report_67_RejectType_REJECT_NOT_REJECTED;
const Gear_report_67_RejectType Gear_report_67_RejectType_RejectType_MAX = Gear_report_67_RejectType_REJECT_REJECTED_BY_VEHICLE_TIMEOUT;
const int Gear_report_67_RejectType_RejectType_ARRAYSIZE = Gear_report_67_RejectType_RejectType_MAX + 1;

enum Ins_datainfo_506_Ins_car_statusType {
  Ins_datainfo_506_Ins_car_statusType_INS_CAR_STATUS_NO_VEHICLE_INFO = 0,
  Ins_datainfo_506_Ins_car_statusType_INS_CAR_STATUS_NORMALLY = 1,
  Ins_datainfo_506_Ins_car_statusType_Ins_datainfo_506_Ins_car_statusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Ins_datainfo_506_Ins_car_statusType_Ins_datainfo_506_Ins_car_statusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Ins_datainfo_506_Ins_car_statusType_IsValid(int value);
const Ins_datainfo_506_Ins_car_statusType Ins_datainfo_506_Ins_car_statusType_Ins_car_statusType_MIN = Ins_datainfo_506_Ins_car_statusType_INS_CAR_STATUS_NO_VEHICLE_INFO;
const Ins_datainfo_506_Ins_car_statusType Ins_datainfo_506_Ins_car_statusType_Ins_car_statusType_MAX = Ins_datainfo_506_Ins_car_statusType_INS_CAR_STATUS_NORMALLY;
const int Ins_datainfo_506_Ins_car_statusType_Ins_car_statusType_ARRAYSIZE = Ins_datainfo_506_Ins_car_statusType_Ins_car_statusType_MAX + 1;

enum Ins_datainfo_506_Ins_gnssflag_headingType {
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_NONE_ = 0,
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_FIXEDPOS__FIX = 1,
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_DOPPLER_VELOCITY_ = 8,
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_SINGLE_ = 16,
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_PSRDIFF_ = 17,
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_SBAS_ = 24,
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_L1_FLOAT_L1 = 32,
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_IONOFREE_FLOAT__ = 33,
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_NARROW_FLOAT_ = 34,
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_L1_INT_L1 = 48,
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_WIDE_INT_ = 49,
  Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_NARROW_INT_ = 50,
  Ins_datainfo_506_Ins_gnssflag_headingType_Ins_datainfo_506_Ins_gnssflag_headingType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Ins_datainfo_506_Ins_gnssflag_headingType_Ins_datainfo_506_Ins_gnssflag_headingType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Ins_datainfo_506_Ins_gnssflag_headingType_IsValid(int value);
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506_Ins_gnssflag_headingType_Ins_gnssflag_headingType_MIN = Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_NONE_;
const Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506_Ins_gnssflag_headingType_Ins_gnssflag_headingType_MAX = Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_NARROW_INT_;
const int Ins_datainfo_506_Ins_gnssflag_headingType_Ins_gnssflag_headingType_ARRAYSIZE = Ins_datainfo_506_Ins_gnssflag_headingType_Ins_gnssflag_headingType_MAX + 1;

enum Ins_datainfo_506_Ins_gnssflag_posType {
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_NONE_ = 0,
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_FIXEDPOS__FIX = 1,
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_DOPPLER_VELOCITY_ = 8,
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_SINGLE_ = 16,
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_PSRDIFF_ = 17,
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_SBAS_ = 24,
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_L1_FLOAT_L1 = 32,
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_IONOFREE_FLOAT__ = 33,
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_NARROW_FLOAT_ = 34,
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_L1_INT__L1 = 48,
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_WIDE_INT_ = 49,
  Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_NARROW_INT_ = 50,
  Ins_datainfo_506_Ins_gnssflag_posType_Ins_datainfo_506_Ins_gnssflag_posType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Ins_datainfo_506_Ins_gnssflag_posType_Ins_datainfo_506_Ins_gnssflag_posType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Ins_datainfo_506_Ins_gnssflag_posType_IsValid(int value);
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506_Ins_gnssflag_posType_Ins_gnssflag_posType_MIN = Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_NONE_;
const Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506_Ins_gnssflag_posType_Ins_gnssflag_posType_MAX = Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_NARROW_INT_;
const int Ins_datainfo_506_Ins_gnssflag_posType_Ins_gnssflag_posType_ARRAYSIZE = Ins_datainfo_506_Ins_gnssflag_posType_Ins_gnssflag_posType_MAX + 1;

enum Ins_datainfo_506_Ins_statusType {
  Ins_datainfo_506_Ins_statusType_INS_STATUS_NONE = 0,
  Ins_datainfo_506_Ins_statusType_INS_STATUS_POSE_INITIALIZATION = 1,
  Ins_datainfo_506_Ins_statusType_INS_STATUS_COMBINED_NAVIGATION = 2,
  Ins_datainfo_506_Ins_statusType_Ins_datainfo_506_Ins_statusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Ins_datainfo_506_Ins_statusType_Ins_datainfo_506_Ins_statusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Ins_datainfo_506_Ins_statusType_IsValid(int value);
const Ins_datainfo_506_Ins_statusType Ins_datainfo_506_Ins_statusType_Ins_statusType_MIN = Ins_datainfo_506_Ins_statusType_INS_STATUS_NONE;
const Ins_datainfo_506_Ins_statusType Ins_datainfo_506_Ins_statusType_Ins_statusType_MAX = Ins_datainfo_506_Ins_statusType_INS_STATUS_COMBINED_NAVIGATION;
const int Ins_datainfo_506_Ins_statusType_Ins_statusType_ARRAYSIZE = Ins_datainfo_506_Ins_statusType_Ins_statusType_MAX + 1;

// ===================================================================

class Wheelspeed_report_6a : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Wheelspeed_report_6a) */ {
 public:
  Wheelspeed_report_6a();
  virtual ~Wheelspeed_report_6a();

  Wheelspeed_report_6a(const Wheelspeed_report_6a& from);

  inline Wheelspeed_report_6a& operator=(const Wheelspeed_report_6a& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Wheelspeed_report_6a(Wheelspeed_report_6a&& from) noexcept
    : Wheelspeed_report_6a() {
    *this = ::std::move(from);
  }

  inline Wheelspeed_report_6a& operator=(Wheelspeed_report_6a&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Wheelspeed_report_6a& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Wheelspeed_report_6a* internal_default_instance() {
    return reinterpret_cast<const Wheelspeed_report_6a*>(
               &_Wheelspeed_report_6a_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Wheelspeed_report_6a* other);
  friend void swap(Wheelspeed_report_6a& a, Wheelspeed_report_6a& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Wheelspeed_report_6a* New() const final {
    return CreateMaybeMessage<Wheelspeed_report_6a>(NULL);
  }

  Wheelspeed_report_6a* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Wheelspeed_report_6a>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Wheelspeed_report_6a& from);
  void MergeFrom(const Wheelspeed_report_6a& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Wheelspeed_report_6a* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double fl = 1;
  void clear_fl();
  static const int kFlFieldNumber = 1;
  double fl() const;
  void set_fl(double value);

  // double fr = 2;
  void clear_fr();
  static const int kFrFieldNumber = 2;
  double fr() const;
  void set_fr(double value);

  // double rl = 3;
  void clear_rl();
  static const int kRlFieldNumber = 3;
  double rl() const;
  void set_rl(double value);

  // double rr = 4;
  void clear_rr();
  static const int kRrFieldNumber = 4;
  double rr() const;
  void set_rr(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Wheelspeed_report_6a)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double fl_;
  double fr_;
  double rl_;
  double rr_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Steering_report_65 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Steering_report_65) */ {
 public:
  Steering_report_65();
  virtual ~Steering_report_65();

  Steering_report_65(const Steering_report_65& from);

  inline Steering_report_65& operator=(const Steering_report_65& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Steering_report_65(Steering_report_65&& from) noexcept
    : Steering_report_65() {
    *this = ::std::move(from);
  }

  inline Steering_report_65& operator=(Steering_report_65&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Steering_report_65& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Steering_report_65* internal_default_instance() {
    return reinterpret_cast<const Steering_report_65*>(
               &_Steering_report_65_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Steering_report_65* other);
  friend void swap(Steering_report_65& a, Steering_report_65& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Steering_report_65* New() const final {
    return CreateMaybeMessage<Steering_report_65>(NULL);
  }

  Steering_report_65* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Steering_report_65>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Steering_report_65& from);
  void MergeFrom(const Steering_report_65& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Steering_report_65* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Steering_report_65_EnType EnType;
  static const EnType EN_DISABLED =
    Steering_report_65_EnType_EN_DISABLED;
  static const EnType EN_ENABLED =
    Steering_report_65_EnType_EN_ENABLED;
  static inline bool EnType_IsValid(int value) {
    return Steering_report_65_EnType_IsValid(value);
  }
  static const EnType EnType_MIN =
    Steering_report_65_EnType_EnType_MIN;
  static const EnType EnType_MAX =
    Steering_report_65_EnType_EnType_MAX;
  static const int EnType_ARRAYSIZE =
    Steering_report_65_EnType_EnType_ARRAYSIZE;

  typedef Steering_report_65_OverrideType OverrideType;
  static const OverrideType OVERRIDE_NO_OVERRIDE =
    Steering_report_65_OverrideType_OVERRIDE_NO_OVERRIDE;
  static const OverrideType OVERRIDE_DRIVER_OVERRIDE =
    Steering_report_65_OverrideType_OVERRIDE_DRIVER_OVERRIDE;
  static inline bool OverrideType_IsValid(int value) {
    return Steering_report_65_OverrideType_IsValid(value);
  }
  static const OverrideType OverrideType_MIN =
    Steering_report_65_OverrideType_OverrideType_MIN;
  static const OverrideType OverrideType_MAX =
    Steering_report_65_OverrideType_OverrideType_MAX;
  static const int OverrideType_ARRAYSIZE =
    Steering_report_65_OverrideType_OverrideType_ARRAYSIZE;

  typedef Steering_report_65_FltwdcType FltwdcType;
  static const FltwdcType FLTWDC_NO_FAULT =
    Steering_report_65_FltwdcType_FLTWDC_NO_FAULT;
  static const FltwdcType FLTWDC_FAULT =
    Steering_report_65_FltwdcType_FLTWDC_FAULT;
  static inline bool FltwdcType_IsValid(int value) {
    return Steering_report_65_FltwdcType_IsValid(value);
  }
  static const FltwdcType FltwdcType_MIN =
    Steering_report_65_FltwdcType_FltwdcType_MIN;
  static const FltwdcType FltwdcType_MAX =
    Steering_report_65_FltwdcType_FltwdcType_MAX;
  static const int FltwdcType_ARRAYSIZE =
    Steering_report_65_FltwdcType_FltwdcType_ARRAYSIZE;

  typedef Steering_report_65_Flt1Type Flt1Type;
  static const Flt1Type FLT1_NO_FAULT =
    Steering_report_65_Flt1Type_FLT1_NO_FAULT;
  static const Flt1Type FLT1_FAULT =
    Steering_report_65_Flt1Type_FLT1_FAULT;
  static inline bool Flt1Type_IsValid(int value) {
    return Steering_report_65_Flt1Type_IsValid(value);
  }
  static const Flt1Type Flt1Type_MIN =
    Steering_report_65_Flt1Type_Flt1Type_MIN;
  static const Flt1Type Flt1Type_MAX =
    Steering_report_65_Flt1Type_Flt1Type_MAX;
  static const int Flt1Type_ARRAYSIZE =
    Steering_report_65_Flt1Type_Flt1Type_ARRAYSIZE;

  typedef Steering_report_65_Flt2Type Flt2Type;
  static const Flt2Type FLT2_NO_FAULT =
    Steering_report_65_Flt2Type_FLT2_NO_FAULT;
  static const Flt2Type FLT2_FAULT =
    Steering_report_65_Flt2Type_FLT2_FAULT;
  static inline bool Flt2Type_IsValid(int value) {
    return Steering_report_65_Flt2Type_IsValid(value);
  }
  static const Flt2Type Flt2Type_MIN =
    Steering_report_65_Flt2Type_Flt2Type_MIN;
  static const Flt2Type Flt2Type_MAX =
    Steering_report_65_Flt2Type_Flt2Type_MAX;
  static const int Flt2Type_ARRAYSIZE =
    Steering_report_65_Flt2Type_Flt2Type_ARRAYSIZE;

  typedef Steering_report_65_FltcalType FltcalType;
  static const FltcalType FLTCAL_NO_FAULT =
    Steering_report_65_FltcalType_FLTCAL_NO_FAULT;
  static const FltcalType FLTCAL_FAULT =
    Steering_report_65_FltcalType_FLTCAL_FAULT;
  static inline bool FltcalType_IsValid(int value) {
    return Steering_report_65_FltcalType_IsValid(value);
  }
  static const FltcalType FltcalType_MIN =
    Steering_report_65_FltcalType_FltcalType_MIN;
  static const FltcalType FltcalType_MAX =
    Steering_report_65_FltcalType_FltcalType_MAX;
  static const int FltcalType_ARRAYSIZE =
    Steering_report_65_FltcalType_FltcalType_ARRAYSIZE;

  typedef Steering_report_65_TmoutType TmoutType;
  static const TmoutType TMOUT_VALID =
    Steering_report_65_TmoutType_TMOUT_VALID;
  static const TmoutType TMOUT_TIMEOUT =
    Steering_report_65_TmoutType_TMOUT_TIMEOUT;
  static inline bool TmoutType_IsValid(int value) {
    return Steering_report_65_TmoutType_IsValid(value);
  }
  static const TmoutType TmoutType_MIN =
    Steering_report_65_TmoutType_TmoutType_MIN;
  static const TmoutType TmoutType_MAX =
    Steering_report_65_TmoutType_TmoutType_MAX;
  static const int TmoutType_ARRAYSIZE =
    Steering_report_65_TmoutType_TmoutType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // double angle = 1;
  void clear_angle();
  static const int kAngleFieldNumber = 1;
  double angle() const;
  void set_angle(double value);

  // double cmd = 2;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  double cmd() const;
  void set_cmd(double value);

  // double speed = 3;
  void clear_speed();
  static const int kSpeedFieldNumber = 3;
  double speed() const;
  void set_speed(double value);

  // double torque = 4;
  void clear_torque();
  static const int kTorqueFieldNumber = 4;
  double torque() const;
  void set_torque(double value);

  // .Calmcar.drivers.IMU.Steering_report_65.EnType en = 5;
  void clear_en();
  static const int kEnFieldNumber = 5;
  ::Calmcar::drivers::IMU::Steering_report_65_EnType en() const;
  void set_en(::Calmcar::drivers::IMU::Steering_report_65_EnType value);

  // .Calmcar.drivers.IMU.Steering_report_65.OverrideType override = 6;
  void clear_override();
  static const int kOverrideFieldNumber = 6;
  ::Calmcar::drivers::IMU::Steering_report_65_OverrideType override() const;
  void set_override(::Calmcar::drivers::IMU::Steering_report_65_OverrideType value);

  // .Calmcar.drivers.IMU.Steering_report_65.FltwdcType fltwdc = 7;
  void clear_fltwdc();
  static const int kFltwdcFieldNumber = 7;
  ::Calmcar::drivers::IMU::Steering_report_65_FltwdcType fltwdc() const;
  void set_fltwdc(::Calmcar::drivers::IMU::Steering_report_65_FltwdcType value);

  // .Calmcar.drivers.IMU.Steering_report_65.Flt1Type flt1 = 8;
  void clear_flt1();
  static const int kFlt1FieldNumber = 8;
  ::Calmcar::drivers::IMU::Steering_report_65_Flt1Type flt1() const;
  void set_flt1(::Calmcar::drivers::IMU::Steering_report_65_Flt1Type value);

  // .Calmcar.drivers.IMU.Steering_report_65.Flt2Type flt2 = 9;
  void clear_flt2();
  static const int kFlt2FieldNumber = 9;
  ::Calmcar::drivers::IMU::Steering_report_65_Flt2Type flt2() const;
  void set_flt2(::Calmcar::drivers::IMU::Steering_report_65_Flt2Type value);

  // .Calmcar.drivers.IMU.Steering_report_65.FltcalType fltcal = 10;
  void clear_fltcal();
  static const int kFltcalFieldNumber = 10;
  ::Calmcar::drivers::IMU::Steering_report_65_FltcalType fltcal() const;
  void set_fltcal(::Calmcar::drivers::IMU::Steering_report_65_FltcalType value);

  // .Calmcar.drivers.IMU.Steering_report_65.TmoutType tmout = 11;
  void clear_tmout();
  static const int kTmoutFieldNumber = 11;
  ::Calmcar::drivers::IMU::Steering_report_65_TmoutType tmout() const;
  void set_tmout(::Calmcar::drivers::IMU::Steering_report_65_TmoutType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Steering_report_65)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double angle_;
  double cmd_;
  double speed_;
  double torque_;
  int en_;
  int override_;
  int fltwdc_;
  int flt1_;
  int flt2_;
  int fltcal_;
  int tmout_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gear_report_67 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Gear_report_67) */ {
 public:
  Gear_report_67();
  virtual ~Gear_report_67();

  Gear_report_67(const Gear_report_67& from);

  inline Gear_report_67& operator=(const Gear_report_67& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gear_report_67(Gear_report_67&& from) noexcept
    : Gear_report_67() {
    *this = ::std::move(from);
  }

  inline Gear_report_67& operator=(Gear_report_67&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gear_report_67& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gear_report_67* internal_default_instance() {
    return reinterpret_cast<const Gear_report_67*>(
               &_Gear_report_67_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Gear_report_67* other);
  friend void swap(Gear_report_67& a, Gear_report_67& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gear_report_67* New() const final {
    return CreateMaybeMessage<Gear_report_67>(NULL);
  }

  Gear_report_67* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gear_report_67>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gear_report_67& from);
  void MergeFrom(const Gear_report_67& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gear_report_67* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Gear_report_67_StateType StateType;
  static const StateType STATE_NONE =
    Gear_report_67_StateType_STATE_NONE;
  static const StateType STATE_PARK =
    Gear_report_67_StateType_STATE_PARK;
  static const StateType STATE_REVERSE =
    Gear_report_67_StateType_STATE_REVERSE;
  static const StateType STATE_NEUTRAL =
    Gear_report_67_StateType_STATE_NEUTRAL;
  static const StateType STATE_DRIVE =
    Gear_report_67_StateType_STATE_DRIVE;
  static const StateType STATE_LOW =
    Gear_report_67_StateType_STATE_LOW;
  static inline bool StateType_IsValid(int value) {
    return Gear_report_67_StateType_IsValid(value);
  }
  static const StateType StateType_MIN =
    Gear_report_67_StateType_StateType_MIN;
  static const StateType StateType_MAX =
    Gear_report_67_StateType_StateType_MAX;
  static const int StateType_ARRAYSIZE =
    Gear_report_67_StateType_StateType_ARRAYSIZE;

  typedef Gear_report_67_DriverType DriverType;
  static const DriverType DRIVER_LAST_SHIFT_REQUESTED_BY_WIRE =
    Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_WIRE;
  static const DriverType DRIVER_LAST_SHIFT_REQUESTED_BY_DRIVER =
    Gear_report_67_DriverType_DRIVER_LAST_SHIFT_REQUESTED_BY_DRIVER;
  static inline bool DriverType_IsValid(int value) {
    return Gear_report_67_DriverType_IsValid(value);
  }
  static const DriverType DriverType_MIN =
    Gear_report_67_DriverType_DriverType_MIN;
  static const DriverType DriverType_MAX =
    Gear_report_67_DriverType_DriverType_MAX;
  static const int DriverType_ARRAYSIZE =
    Gear_report_67_DriverType_DriverType_ARRAYSIZE;

  typedef Gear_report_67_CmdType CmdType;
  static const CmdType CMD_NONE =
    Gear_report_67_CmdType_CMD_NONE;
  static const CmdType CMD_PARK =
    Gear_report_67_CmdType_CMD_PARK;
  static const CmdType CMD_REVERSE =
    Gear_report_67_CmdType_CMD_REVERSE;
  static const CmdType CMD_NEUTRAL =
    Gear_report_67_CmdType_CMD_NEUTRAL;
  static const CmdType CMD_DRIVE =
    Gear_report_67_CmdType_CMD_DRIVE;
  static const CmdType CMD_LOW =
    Gear_report_67_CmdType_CMD_LOW;
  static inline bool CmdType_IsValid(int value) {
    return Gear_report_67_CmdType_IsValid(value);
  }
  static const CmdType CmdType_MIN =
    Gear_report_67_CmdType_CmdType_MIN;
  static const CmdType CmdType_MAX =
    Gear_report_67_CmdType_CmdType_MAX;
  static const int CmdType_ARRAYSIZE =
    Gear_report_67_CmdType_CmdType_ARRAYSIZE;

  typedef Gear_report_67_FltbusType FltbusType;
  static const FltbusType FLTBUS_NO_FAULT =
    Gear_report_67_FltbusType_FLTBUS_NO_FAULT;
  static const FltbusType FLTBUS_FAULT =
    Gear_report_67_FltbusType_FLTBUS_FAULT;
  static inline bool FltbusType_IsValid(int value) {
    return Gear_report_67_FltbusType_IsValid(value);
  }
  static const FltbusType FltbusType_MIN =
    Gear_report_67_FltbusType_FltbusType_MIN;
  static const FltbusType FltbusType_MAX =
    Gear_report_67_FltbusType_FltbusType_MAX;
  static const int FltbusType_ARRAYSIZE =
    Gear_report_67_FltbusType_FltbusType_ARRAYSIZE;

  typedef Gear_report_67_RejectType RejectType;
  static const RejectType REJECT_NOT_REJECTED =
    Gear_report_67_RejectType_REJECT_NOT_REJECTED;
  static const RejectType REJECT_OVERRIDE =
    Gear_report_67_RejectType_REJECT_OVERRIDE;
  static const RejectType REJECT_SHIFT_IN_PROGRESS =
    Gear_report_67_RejectType_REJECT_SHIFT_IN_PROGRESS;
  static const RejectType REJECT_REPEAT =
    Gear_report_67_RejectType_REJECT_REPEAT;
  static const RejectType REJECT_CMD_ILLEGAL =
    Gear_report_67_RejectType_REJECT_CMD_ILLEGAL;
  static const RejectType REJECT_SPEED_NOT_2KPH =
    Gear_report_67_RejectType_REJECT_SPEED_NOT_2KPH;
  static const RejectType REJECT_REJECTED_BY_VEHICLE_TIMEOUT =
    Gear_report_67_RejectType_REJECT_REJECTED_BY_VEHICLE_TIMEOUT;
  static inline bool RejectType_IsValid(int value) {
    return Gear_report_67_RejectType_IsValid(value);
  }
  static const RejectType RejectType_MIN =
    Gear_report_67_RejectType_RejectType_MIN;
  static const RejectType RejectType_MAX =
    Gear_report_67_RejectType_RejectType_MAX;
  static const int RejectType_ARRAYSIZE =
    Gear_report_67_RejectType_RejectType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.IMU.Gear_report_67.StateType state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::Calmcar::drivers::IMU::Gear_report_67_StateType state() const;
  void set_state(::Calmcar::drivers::IMU::Gear_report_67_StateType value);

  // .Calmcar.drivers.IMU.Gear_report_67.DriverType driver = 2;
  void clear_driver();
  static const int kDriverFieldNumber = 2;
  ::Calmcar::drivers::IMU::Gear_report_67_DriverType driver() const;
  void set_driver(::Calmcar::drivers::IMU::Gear_report_67_DriverType value);

  // .Calmcar.drivers.IMU.Gear_report_67.CmdType cmd = 3;
  void clear_cmd();
  static const int kCmdFieldNumber = 3;
  ::Calmcar::drivers::IMU::Gear_report_67_CmdType cmd() const;
  void set_cmd(::Calmcar::drivers::IMU::Gear_report_67_CmdType value);

  // .Calmcar.drivers.IMU.Gear_report_67.FltbusType fltbus = 4;
  void clear_fltbus();
  static const int kFltbusFieldNumber = 4;
  ::Calmcar::drivers::IMU::Gear_report_67_FltbusType fltbus() const;
  void set_fltbus(::Calmcar::drivers::IMU::Gear_report_67_FltbusType value);

  // int32 acc_state = 5;
  void clear_acc_state();
  static const int kAccStateFieldNumber = 5;
  ::google::protobuf::int32 acc_state() const;
  void set_acc_state(::google::protobuf::int32 value);

  // .Calmcar.drivers.IMU.Gear_report_67.RejectType reject = 6;
  void clear_reject();
  static const int kRejectFieldNumber = 6;
  ::Calmcar::drivers::IMU::Gear_report_67_RejectType reject() const;
  void set_reject(::Calmcar::drivers::IMU::Gear_report_67_RejectType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Gear_report_67)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int state_;
  int driver_;
  int cmd_;
  int fltbus_;
  ::google::protobuf::int32 acc_state_;
  int reject_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gnss_dop_50b : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Gnss_dop_50b) */ {
 public:
  Gnss_dop_50b();
  virtual ~Gnss_dop_50b();

  Gnss_dop_50b(const Gnss_dop_50b& from);

  inline Gnss_dop_50b& operator=(const Gnss_dop_50b& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gnss_dop_50b(Gnss_dop_50b&& from) noexcept
    : Gnss_dop_50b() {
    *this = ::std::move(from);
  }

  inline Gnss_dop_50b& operator=(Gnss_dop_50b&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gnss_dop_50b& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gnss_dop_50b* internal_default_instance() {
    return reinterpret_cast<const Gnss_dop_50b*>(
               &_Gnss_dop_50b_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Gnss_dop_50b* other);
  friend void swap(Gnss_dop_50b& a, Gnss_dop_50b& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gnss_dop_50b* New() const final {
    return CreateMaybeMessage<Gnss_dop_50b>(NULL);
  }

  Gnss_dop_50b* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gnss_dop_50b>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gnss_dop_50b& from);
  void MergeFrom(const Gnss_dop_50b& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gnss_dop_50b* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double gnss_htdop = 1;
  void clear_gnss_htdop();
  static const int kGnssHtdopFieldNumber = 1;
  double gnss_htdop() const;
  void set_gnss_htdop(double value);

  // double gnss_pdop = 2;
  void clear_gnss_pdop();
  static const int kGnssPdopFieldNumber = 2;
  double gnss_pdop() const;
  void set_gnss_pdop(double value);

  // double gnss_hdop = 3;
  void clear_gnss_hdop();
  static const int kGnssHdopFieldNumber = 3;
  double gnss_hdop() const;
  void set_gnss_hdop(double value);

  // double gnss_gdop = 4;
  void clear_gnss_gdop();
  static const int kGnssGdopFieldNumber = 4;
  double gnss_gdop() const;
  void set_gnss_gdop(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Gnss_dop_50b)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double gnss_htdop_;
  double gnss_pdop_;
  double gnss_hdop_;
  double gnss_gdop_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gnss_headingandpitch_50c : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Gnss_headingandpitch_50c) */ {
 public:
  Gnss_headingandpitch_50c();
  virtual ~Gnss_headingandpitch_50c();

  Gnss_headingandpitch_50c(const Gnss_headingandpitch_50c& from);

  inline Gnss_headingandpitch_50c& operator=(const Gnss_headingandpitch_50c& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gnss_headingandpitch_50c(Gnss_headingandpitch_50c&& from) noexcept
    : Gnss_headingandpitch_50c() {
    *this = ::std::move(from);
  }

  inline Gnss_headingandpitch_50c& operator=(Gnss_headingandpitch_50c&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gnss_headingandpitch_50c& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gnss_headingandpitch_50c* internal_default_instance() {
    return reinterpret_cast<const Gnss_headingandpitch_50c*>(
               &_Gnss_headingandpitch_50c_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Gnss_headingandpitch_50c* other);
  friend void swap(Gnss_headingandpitch_50c& a, Gnss_headingandpitch_50c& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gnss_headingandpitch_50c* New() const final {
    return CreateMaybeMessage<Gnss_headingandpitch_50c>(NULL);
  }

  Gnss_headingandpitch_50c* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gnss_headingandpitch_50c>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gnss_headingandpitch_50c& from);
  void MergeFrom(const Gnss_headingandpitch_50c& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gnss_headingandpitch_50c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double gnss_pitch = 1;
  void clear_gnss_pitch();
  static const int kGnssPitchFieldNumber = 1;
  double gnss_pitch() const;
  void set_gnss_pitch(double value);

  // double gnss_heading = 2;
  void clear_gnss_heading();
  static const int kGnssHeadingFieldNumber = 2;
  double gnss_heading() const;
  void set_gnss_heading(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Gnss_headingandpitch_50c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double gnss_pitch_;
  double gnss_heading_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gnss_heightandweek_50a : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Gnss_heightandweek_50a) */ {
 public:
  Gnss_heightandweek_50a();
  virtual ~Gnss_heightandweek_50a();

  Gnss_heightandweek_50a(const Gnss_heightandweek_50a& from);

  inline Gnss_heightandweek_50a& operator=(const Gnss_heightandweek_50a& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gnss_heightandweek_50a(Gnss_heightandweek_50a&& from) noexcept
    : Gnss_heightandweek_50a() {
    *this = ::std::move(from);
  }

  inline Gnss_heightandweek_50a& operator=(Gnss_heightandweek_50a&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gnss_heightandweek_50a& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gnss_heightandweek_50a* internal_default_instance() {
    return reinterpret_cast<const Gnss_heightandweek_50a*>(
               &_Gnss_heightandweek_50a_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Gnss_heightandweek_50a* other);
  friend void swap(Gnss_heightandweek_50a& a, Gnss_heightandweek_50a& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gnss_heightandweek_50a* New() const final {
    return CreateMaybeMessage<Gnss_heightandweek_50a>(NULL);
  }

  Gnss_heightandweek_50a* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gnss_heightandweek_50a>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gnss_heightandweek_50a& from);
  void MergeFrom(const Gnss_heightandweek_50a& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gnss_heightandweek_50a* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double gnss_locatheight = 2;
  void clear_gnss_locatheight();
  static const int kGnssLocatheightFieldNumber = 2;
  double gnss_locatheight() const;
  void set_gnss_locatheight(double value);

  // int32 gps_week = 1;
  void clear_gps_week();
  static const int kGpsWeekFieldNumber = 1;
  ::google::protobuf::int32 gps_week() const;
  void set_gps_week(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Gnss_heightandweek_50a)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double gnss_locatheight_;
  ::google::protobuf::int32 gps_week_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gnss_utc_508 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Gnss_utc_508) */ {
 public:
  Gnss_utc_508();
  virtual ~Gnss_utc_508();

  Gnss_utc_508(const Gnss_utc_508& from);

  inline Gnss_utc_508& operator=(const Gnss_utc_508& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gnss_utc_508(Gnss_utc_508&& from) noexcept
    : Gnss_utc_508() {
    *this = ::std::move(from);
  }

  inline Gnss_utc_508& operator=(Gnss_utc_508&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gnss_utc_508& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gnss_utc_508* internal_default_instance() {
    return reinterpret_cast<const Gnss_utc_508*>(
               &_Gnss_utc_508_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Gnss_utc_508* other);
  friend void swap(Gnss_utc_508& a, Gnss_utc_508& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gnss_utc_508* New() const final {
    return CreateMaybeMessage<Gnss_utc_508>(NULL);
  }

  Gnss_utc_508* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gnss_utc_508>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gnss_utc_508& from);
  void MergeFrom(const Gnss_utc_508& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gnss_utc_508* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 utc_year = 1;
  void clear_utc_year();
  static const int kUtcYearFieldNumber = 1;
  ::google::protobuf::int32 utc_year() const;
  void set_utc_year(::google::protobuf::int32 value);

  // int32 utc_sec = 2;
  void clear_utc_sec();
  static const int kUtcSecFieldNumber = 2;
  ::google::protobuf::int32 utc_sec() const;
  void set_utc_sec(::google::protobuf::int32 value);

  // int32 utc_msec = 3;
  void clear_utc_msec();
  static const int kUtcMsecFieldNumber = 3;
  ::google::protobuf::int32 utc_msec() const;
  void set_utc_msec(::google::protobuf::int32 value);

  // int32 utc_month = 4;
  void clear_utc_month();
  static const int kUtcMonthFieldNumber = 4;
  ::google::protobuf::int32 utc_month() const;
  void set_utc_month(::google::protobuf::int32 value);

  // int32 utc_min = 5;
  void clear_utc_min();
  static const int kUtcMinFieldNumber = 5;
  ::google::protobuf::int32 utc_min() const;
  void set_utc_min(::google::protobuf::int32 value);

  // int32 utc_hour = 6;
  void clear_utc_hour();
  static const int kUtcHourFieldNumber = 6;
  ::google::protobuf::int32 utc_hour() const;
  void set_utc_hour(::google::protobuf::int32 value);

  // int32 utc_day = 7;
  void clear_utc_day();
  static const int kUtcDayFieldNumber = 7;
  ::google::protobuf::int32 utc_day() const;
  void set_utc_day(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Gnss_utc_508)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 utc_year_;
  ::google::protobuf::int32 utc_sec_;
  ::google::protobuf::int32 utc_msec_;
  ::google::protobuf::int32 utc_month_;
  ::google::protobuf::int32 utc_min_;
  ::google::protobuf::int32 utc_hour_;
  ::google::protobuf::int32 utc_day_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gnss_latitudelongitude_509 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Gnss_latitudelongitude_509) */ {
 public:
  Gnss_latitudelongitude_509();
  virtual ~Gnss_latitudelongitude_509();

  Gnss_latitudelongitude_509(const Gnss_latitudelongitude_509& from);

  inline Gnss_latitudelongitude_509& operator=(const Gnss_latitudelongitude_509& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gnss_latitudelongitude_509(Gnss_latitudelongitude_509&& from) noexcept
    : Gnss_latitudelongitude_509() {
    *this = ::std::move(from);
  }

  inline Gnss_latitudelongitude_509& operator=(Gnss_latitudelongitude_509&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Gnss_latitudelongitude_509& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gnss_latitudelongitude_509* internal_default_instance() {
    return reinterpret_cast<const Gnss_latitudelongitude_509*>(
               &_Gnss_latitudelongitude_509_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Gnss_latitudelongitude_509* other);
  friend void swap(Gnss_latitudelongitude_509& a, Gnss_latitudelongitude_509& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gnss_latitudelongitude_509* New() const final {
    return CreateMaybeMessage<Gnss_latitudelongitude_509>(NULL);
  }

  Gnss_latitudelongitude_509* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gnss_latitudelongitude_509>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Gnss_latitudelongitude_509& from);
  void MergeFrom(const Gnss_latitudelongitude_509& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gnss_latitudelongitude_509* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double gnss_longitude = 1;
  void clear_gnss_longitude();
  static const int kGnssLongitudeFieldNumber = 1;
  double gnss_longitude() const;
  void set_gnss_longitude(double value);

  // double gnss_latitude = 2;
  void clear_gnss_latitude();
  static const int kGnssLatitudeFieldNumber = 2;
  double gnss_latitude() const;
  void set_gnss_latitude(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Gnss_latitudelongitude_509)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double gnss_longitude_;
  double gnss_latitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ins_datainfo_506 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Ins_datainfo_506) */ {
 public:
  Ins_datainfo_506();
  virtual ~Ins_datainfo_506();

  Ins_datainfo_506(const Ins_datainfo_506& from);

  inline Ins_datainfo_506& operator=(const Ins_datainfo_506& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ins_datainfo_506(Ins_datainfo_506&& from) noexcept
    : Ins_datainfo_506() {
    *this = ::std::move(from);
  }

  inline Ins_datainfo_506& operator=(Ins_datainfo_506&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Ins_datainfo_506& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ins_datainfo_506* internal_default_instance() {
    return reinterpret_cast<const Ins_datainfo_506*>(
               &_Ins_datainfo_506_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Ins_datainfo_506* other);
  friend void swap(Ins_datainfo_506& a, Ins_datainfo_506& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ins_datainfo_506* New() const final {
    return CreateMaybeMessage<Ins_datainfo_506>(NULL);
  }

  Ins_datainfo_506* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ins_datainfo_506>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Ins_datainfo_506& from);
  void MergeFrom(const Ins_datainfo_506& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ins_datainfo_506* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Ins_datainfo_506_Ins_car_statusType Ins_car_statusType;
  static const Ins_car_statusType INS_CAR_STATUS_NO_VEHICLE_INFO =
    Ins_datainfo_506_Ins_car_statusType_INS_CAR_STATUS_NO_VEHICLE_INFO;
  static const Ins_car_statusType INS_CAR_STATUS_NORMALLY =
    Ins_datainfo_506_Ins_car_statusType_INS_CAR_STATUS_NORMALLY;
  static inline bool Ins_car_statusType_IsValid(int value) {
    return Ins_datainfo_506_Ins_car_statusType_IsValid(value);
  }
  static const Ins_car_statusType Ins_car_statusType_MIN =
    Ins_datainfo_506_Ins_car_statusType_Ins_car_statusType_MIN;
  static const Ins_car_statusType Ins_car_statusType_MAX =
    Ins_datainfo_506_Ins_car_statusType_Ins_car_statusType_MAX;
  static const int Ins_car_statusType_ARRAYSIZE =
    Ins_datainfo_506_Ins_car_statusType_Ins_car_statusType_ARRAYSIZE;

  typedef Ins_datainfo_506_Ins_gnssflag_headingType Ins_gnssflag_headingType;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_NONE_ =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_NONE_;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_FIXEDPOS__FIX =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_FIXEDPOS__FIX;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_DOPPLER_VELOCITY_ =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_DOPPLER_VELOCITY_;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_SINGLE_ =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_SINGLE_;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_PSRDIFF_ =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_PSRDIFF_;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_SBAS_ =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_SBAS_;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_L1_FLOAT_L1 =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_L1_FLOAT_L1;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_IONOFREE_FLOAT__ =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_IONOFREE_FLOAT__;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_NARROW_FLOAT_ =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_NARROW_FLOAT_;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_L1_INT_L1 =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_L1_INT_L1;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_WIDE_INT_ =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_WIDE_INT_;
  static const Ins_gnssflag_headingType INS_GNSSFLAG_HEADING_NARROW_INT_ =
    Ins_datainfo_506_Ins_gnssflag_headingType_INS_GNSSFLAG_HEADING_NARROW_INT_;
  static inline bool Ins_gnssflag_headingType_IsValid(int value) {
    return Ins_datainfo_506_Ins_gnssflag_headingType_IsValid(value);
  }
  static const Ins_gnssflag_headingType Ins_gnssflag_headingType_MIN =
    Ins_datainfo_506_Ins_gnssflag_headingType_Ins_gnssflag_headingType_MIN;
  static const Ins_gnssflag_headingType Ins_gnssflag_headingType_MAX =
    Ins_datainfo_506_Ins_gnssflag_headingType_Ins_gnssflag_headingType_MAX;
  static const int Ins_gnssflag_headingType_ARRAYSIZE =
    Ins_datainfo_506_Ins_gnssflag_headingType_Ins_gnssflag_headingType_ARRAYSIZE;

  typedef Ins_datainfo_506_Ins_gnssflag_posType Ins_gnssflag_posType;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_NONE_ =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_NONE_;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_FIXEDPOS__FIX =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_FIXEDPOS__FIX;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_DOPPLER_VELOCITY_ =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_DOPPLER_VELOCITY_;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_SINGLE_ =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_SINGLE_;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_PSRDIFF_ =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_PSRDIFF_;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_SBAS_ =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_SBAS_;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_L1_FLOAT_L1 =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_L1_FLOAT_L1;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_IONOFREE_FLOAT__ =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_IONOFREE_FLOAT__;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_NARROW_FLOAT_ =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_NARROW_FLOAT_;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_L1_INT__L1 =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_L1_INT__L1;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_WIDE_INT_ =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_WIDE_INT_;
  static const Ins_gnssflag_posType INS_GNSSFLAG_POS_NARROW_INT_ =
    Ins_datainfo_506_Ins_gnssflag_posType_INS_GNSSFLAG_POS_NARROW_INT_;
  static inline bool Ins_gnssflag_posType_IsValid(int value) {
    return Ins_datainfo_506_Ins_gnssflag_posType_IsValid(value);
  }
  static const Ins_gnssflag_posType Ins_gnssflag_posType_MIN =
    Ins_datainfo_506_Ins_gnssflag_posType_Ins_gnssflag_posType_MIN;
  static const Ins_gnssflag_posType Ins_gnssflag_posType_MAX =
    Ins_datainfo_506_Ins_gnssflag_posType_Ins_gnssflag_posType_MAX;
  static const int Ins_gnssflag_posType_ARRAYSIZE =
    Ins_datainfo_506_Ins_gnssflag_posType_Ins_gnssflag_posType_ARRAYSIZE;

  typedef Ins_datainfo_506_Ins_statusType Ins_statusType;
  static const Ins_statusType INS_STATUS_NONE =
    Ins_datainfo_506_Ins_statusType_INS_STATUS_NONE;
  static const Ins_statusType INS_STATUS_POSE_INITIALIZATION =
    Ins_datainfo_506_Ins_statusType_INS_STATUS_POSE_INITIALIZATION;
  static const Ins_statusType INS_STATUS_COMBINED_NAVIGATION =
    Ins_datainfo_506_Ins_statusType_INS_STATUS_COMBINED_NAVIGATION;
  static inline bool Ins_statusType_IsValid(int value) {
    return Ins_datainfo_506_Ins_statusType_IsValid(value);
  }
  static const Ins_statusType Ins_statusType_MIN =
    Ins_datainfo_506_Ins_statusType_Ins_statusType_MIN;
  static const Ins_statusType Ins_statusType_MAX =
    Ins_datainfo_506_Ins_statusType_Ins_statusType_MAX;
  static const int Ins_statusType_ARRAYSIZE =
    Ins_datainfo_506_Ins_statusType_Ins_statusType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // int32 ins_gnss_age = 1;
  void clear_ins_gnss_age();
  static const int kInsGnssAgeFieldNumber = 1;
  ::google::protobuf::int32 ins_gnss_age() const;
  void set_ins_gnss_age(::google::protobuf::int32 value);

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_car_statusType ins_car_status = 2;
  void clear_ins_car_status();
  static const int kInsCarStatusFieldNumber = 2;
  ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_car_statusType ins_car_status() const;
  void set_ins_car_status(::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_car_statusType value);

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_gnssflag_headingType ins_gnssflag_heading = 3;
  void clear_ins_gnssflag_heading();
  static const int kInsGnssflagHeadingFieldNumber = 3;
  ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_headingType ins_gnssflag_heading() const;
  void set_ins_gnssflag_heading(::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_headingType value);

  // int32 ins_numsv = 4;
  void clear_ins_numsv();
  static const int kInsNumsvFieldNumber = 4;
  ::google::protobuf::int32 ins_numsv() const;
  void set_ins_numsv(::google::protobuf::int32 value);

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_gnssflag_posType ins_gnssflag_pos = 5;
  void clear_ins_gnssflag_pos();
  static const int kInsGnssflagPosFieldNumber = 5;
  ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_posType ins_gnssflag_pos() const;
  void set_ins_gnssflag_pos(::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_posType value);

  // .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_statusType ins_status = 6;
  void clear_ins_status();
  static const int kInsStatusFieldNumber = 6;
  ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_statusType ins_status() const;
  void set_ins_status(::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_statusType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Ins_datainfo_506)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 ins_gnss_age_;
  int ins_car_status_;
  int ins_gnssflag_heading_;
  ::google::protobuf::int32 ins_numsv_;
  int ins_gnssflag_pos_;
  int ins_status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ins_std_507 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Ins_std_507) */ {
 public:
  Ins_std_507();
  virtual ~Ins_std_507();

  Ins_std_507(const Ins_std_507& from);

  inline Ins_std_507& operator=(const Ins_std_507& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ins_std_507(Ins_std_507&& from) noexcept
    : Ins_std_507() {
    *this = ::std::move(from);
  }

  inline Ins_std_507& operator=(Ins_std_507&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Ins_std_507& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ins_std_507* internal_default_instance() {
    return reinterpret_cast<const Ins_std_507*>(
               &_Ins_std_507_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Ins_std_507* other);
  friend void swap(Ins_std_507& a, Ins_std_507& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ins_std_507* New() const final {
    return CreateMaybeMessage<Ins_std_507>(NULL);
  }

  Ins_std_507* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ins_std_507>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Ins_std_507& from);
  void MergeFrom(const Ins_std_507& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ins_std_507* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double ins_std_lat = 1;
  void clear_ins_std_lat();
  static const int kInsStdLatFieldNumber = 1;
  double ins_std_lat() const;
  void set_ins_std_lat(double value);

  // double ins_std_lon = 2;
  void clear_ins_std_lon();
  static const int kInsStdLonFieldNumber = 2;
  double ins_std_lon() const;
  void set_ins_std_lon(double value);

  // double ins_std_locatheight = 3;
  void clear_ins_std_locatheight();
  static const int kInsStdLocatheightFieldNumber = 3;
  double ins_std_locatheight() const;
  void set_ins_std_locatheight(double value);

  // double ins_std_heading = 4;
  void clear_ins_std_heading();
  static const int kInsStdHeadingFieldNumber = 4;
  double ins_std_heading() const;
  void set_ins_std_heading(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Ins_std_507)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double ins_std_lat_;
  double ins_std_lon_;
  double ins_std_locatheight_;
  double ins_std_heading_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ins_latitudelongitude_504 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Ins_latitudelongitude_504) */ {
 public:
  Ins_latitudelongitude_504();
  virtual ~Ins_latitudelongitude_504();

  Ins_latitudelongitude_504(const Ins_latitudelongitude_504& from);

  inline Ins_latitudelongitude_504& operator=(const Ins_latitudelongitude_504& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ins_latitudelongitude_504(Ins_latitudelongitude_504&& from) noexcept
    : Ins_latitudelongitude_504() {
    *this = ::std::move(from);
  }

  inline Ins_latitudelongitude_504& operator=(Ins_latitudelongitude_504&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Ins_latitudelongitude_504& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ins_latitudelongitude_504* internal_default_instance() {
    return reinterpret_cast<const Ins_latitudelongitude_504*>(
               &_Ins_latitudelongitude_504_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Ins_latitudelongitude_504* other);
  friend void swap(Ins_latitudelongitude_504& a, Ins_latitudelongitude_504& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ins_latitudelongitude_504* New() const final {
    return CreateMaybeMessage<Ins_latitudelongitude_504>(NULL);
  }

  Ins_latitudelongitude_504* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ins_latitudelongitude_504>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Ins_latitudelongitude_504& from);
  void MergeFrom(const Ins_latitudelongitude_504& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ins_latitudelongitude_504* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double ins_latitude = 1;
  void clear_ins_latitude();
  static const int kInsLatitudeFieldNumber = 1;
  double ins_latitude() const;
  void set_ins_latitude(double value);

  // double ins_longitude = 2;
  void clear_ins_longitude();
  static const int kInsLongitudeFieldNumber = 2;
  double ins_longitude() const;
  void set_ins_longitude(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Ins_latitudelongitude_504)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double ins_latitude_;
  double ins_longitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ins_speed_505 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Ins_speed_505) */ {
 public:
  Ins_speed_505();
  virtual ~Ins_speed_505();

  Ins_speed_505(const Ins_speed_505& from);

  inline Ins_speed_505& operator=(const Ins_speed_505& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ins_speed_505(Ins_speed_505&& from) noexcept
    : Ins_speed_505() {
    *this = ::std::move(from);
  }

  inline Ins_speed_505& operator=(Ins_speed_505&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Ins_speed_505& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ins_speed_505* internal_default_instance() {
    return reinterpret_cast<const Ins_speed_505*>(
               &_Ins_speed_505_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Ins_speed_505* other);
  friend void swap(Ins_speed_505& a, Ins_speed_505& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ins_speed_505* New() const final {
    return CreateMaybeMessage<Ins_speed_505>(NULL);
  }

  Ins_speed_505* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ins_speed_505>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Ins_speed_505& from);
  void MergeFrom(const Ins_speed_505& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ins_speed_505* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double ins_eastspd = 1;
  void clear_ins_eastspd();
  static const int kInsEastspdFieldNumber = 1;
  double ins_eastspd() const;
  void set_ins_eastspd(double value);

  // double ins_northspd = 2;
  void clear_ins_northspd();
  static const int kInsNorthspdFieldNumber = 2;
  double ins_northspd() const;
  void set_ins_northspd(double value);

  // double ins_togroundspd = 3;
  void clear_ins_togroundspd();
  static const int kInsTogroundspdFieldNumber = 3;
  double ins_togroundspd() const;
  void set_ins_togroundspd(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Ins_speed_505)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double ins_eastspd_;
  double ins_northspd_;
  double ins_togroundspd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ins_headingpitchroll_502 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Ins_headingpitchroll_502) */ {
 public:
  Ins_headingpitchroll_502();
  virtual ~Ins_headingpitchroll_502();

  Ins_headingpitchroll_502(const Ins_headingpitchroll_502& from);

  inline Ins_headingpitchroll_502& operator=(const Ins_headingpitchroll_502& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ins_headingpitchroll_502(Ins_headingpitchroll_502&& from) noexcept
    : Ins_headingpitchroll_502() {
    *this = ::std::move(from);
  }

  inline Ins_headingpitchroll_502& operator=(Ins_headingpitchroll_502&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Ins_headingpitchroll_502& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ins_headingpitchroll_502* internal_default_instance() {
    return reinterpret_cast<const Ins_headingpitchroll_502*>(
               &_Ins_headingpitchroll_502_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(Ins_headingpitchroll_502* other);
  friend void swap(Ins_headingpitchroll_502& a, Ins_headingpitchroll_502& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ins_headingpitchroll_502* New() const final {
    return CreateMaybeMessage<Ins_headingpitchroll_502>(NULL);
  }

  Ins_headingpitchroll_502* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ins_headingpitchroll_502>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Ins_headingpitchroll_502& from);
  void MergeFrom(const Ins_headingpitchroll_502& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ins_headingpitchroll_502* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double ins_pitchangle = 1;
  void clear_ins_pitchangle();
  static const int kInsPitchangleFieldNumber = 1;
  double ins_pitchangle() const;
  void set_ins_pitchangle(double value);

  // double ins_rollangle = 2;
  void clear_ins_rollangle();
  static const int kInsRollangleFieldNumber = 2;
  double ins_rollangle() const;
  void set_ins_rollangle(double value);

  // double ins_headingangle = 3;
  void clear_ins_headingangle();
  static const int kInsHeadingangleFieldNumber = 3;
  double ins_headingangle() const;
  void set_ins_headingangle(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Ins_headingpitchroll_502)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double ins_pitchangle_;
  double ins_rollangle_;
  double ins_headingangle_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ins_heightandtime_503 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Ins_heightandtime_503) */ {
 public:
  Ins_heightandtime_503();
  virtual ~Ins_heightandtime_503();

  Ins_heightandtime_503(const Ins_heightandtime_503& from);

  inline Ins_heightandtime_503& operator=(const Ins_heightandtime_503& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ins_heightandtime_503(Ins_heightandtime_503&& from) noexcept
    : Ins_heightandtime_503() {
    *this = ::std::move(from);
  }

  inline Ins_heightandtime_503& operator=(Ins_heightandtime_503&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Ins_heightandtime_503& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ins_heightandtime_503* internal_default_instance() {
    return reinterpret_cast<const Ins_heightandtime_503*>(
               &_Ins_heightandtime_503_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(Ins_heightandtime_503* other);
  friend void swap(Ins_heightandtime_503& a, Ins_heightandtime_503& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ins_heightandtime_503* New() const final {
    return CreateMaybeMessage<Ins_heightandtime_503>(NULL);
  }

  Ins_heightandtime_503* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ins_heightandtime_503>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Ins_heightandtime_503& from);
  void MergeFrom(const Ins_heightandtime_503& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ins_heightandtime_503* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double ins_locatheight = 1;
  void clear_ins_locatheight();
  static const int kInsLocatheightFieldNumber = 1;
  double ins_locatheight() const;
  void set_ins_locatheight(double value);

  // uint32 ins_time = 2;
  void clear_ins_time();
  static const int kInsTimeFieldNumber = 2;
  ::google::protobuf::uint32 ins_time() const;
  void set_ins_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Ins_heightandtime_503)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double ins_locatheight_;
  ::google::protobuf::uint32 ins_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ins_acc_500 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Ins_acc_500) */ {
 public:
  Ins_acc_500();
  virtual ~Ins_acc_500();

  Ins_acc_500(const Ins_acc_500& from);

  inline Ins_acc_500& operator=(const Ins_acc_500& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ins_acc_500(Ins_acc_500&& from) noexcept
    : Ins_acc_500() {
    *this = ::std::move(from);
  }

  inline Ins_acc_500& operator=(Ins_acc_500&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Ins_acc_500& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ins_acc_500* internal_default_instance() {
    return reinterpret_cast<const Ins_acc_500*>(
               &_Ins_acc_500_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(Ins_acc_500* other);
  friend void swap(Ins_acc_500& a, Ins_acc_500& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ins_acc_500* New() const final {
    return CreateMaybeMessage<Ins_acc_500>(NULL);
  }

  Ins_acc_500* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ins_acc_500>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Ins_acc_500& from);
  void MergeFrom(const Ins_acc_500& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ins_acc_500* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double ins_acc_x = 1;
  void clear_ins_acc_x();
  static const int kInsAccXFieldNumber = 1;
  double ins_acc_x() const;
  void set_ins_acc_x(double value);

  // double ins_acc_y = 2;
  void clear_ins_acc_y();
  static const int kInsAccYFieldNumber = 2;
  double ins_acc_y() const;
  void set_ins_acc_y(double value);

  // double ins_acc_z = 3;
  void clear_ins_acc_z();
  static const int kInsAccZFieldNumber = 3;
  double ins_acc_z() const;
  void set_ins_acc_z(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Ins_acc_500)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double ins_acc_x_;
  double ins_acc_y_;
  double ins_acc_z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ins_gyro_501 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Ins_gyro_501) */ {
 public:
  Ins_gyro_501();
  virtual ~Ins_gyro_501();

  Ins_gyro_501(const Ins_gyro_501& from);

  inline Ins_gyro_501& operator=(const Ins_gyro_501& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ins_gyro_501(Ins_gyro_501&& from) noexcept
    : Ins_gyro_501() {
    *this = ::std::move(from);
  }

  inline Ins_gyro_501& operator=(Ins_gyro_501&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Ins_gyro_501& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ins_gyro_501* internal_default_instance() {
    return reinterpret_cast<const Ins_gyro_501*>(
               &_Ins_gyro_501_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(Ins_gyro_501* other);
  friend void swap(Ins_gyro_501& a, Ins_gyro_501& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ins_gyro_501* New() const final {
    return CreateMaybeMessage<Ins_gyro_501>(NULL);
  }

  Ins_gyro_501* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ins_gyro_501>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Ins_gyro_501& from);
  void MergeFrom(const Ins_gyro_501& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ins_gyro_501* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double ins_gyro_x = 1;
  void clear_ins_gyro_x();
  static const int kInsGyroXFieldNumber = 1;
  double ins_gyro_x() const;
  void set_ins_gyro_x(double value);

  // double ins_gyro_y = 2;
  void clear_ins_gyro_y();
  static const int kInsGyroYFieldNumber = 2;
  double ins_gyro_y() const;
  void set_ins_gyro_y(double value);

  // double ins_gyro_z = 3;
  void clear_ins_gyro_z();
  static const int kInsGyroZFieldNumber = 3;
  double ins_gyro_z() const;
  void set_ins_gyro_z(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Ins_gyro_501)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  double ins_gyro_x_;
  double ins_gyro_y_;
  double ins_gyro_z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Imu : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.IMU.Imu) */ {
 public:
  Imu();
  virtual ~Imu();

  Imu(const Imu& from);

  inline Imu& operator=(const Imu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Imu(Imu&& from) noexcept
    : Imu() {
    *this = ::std::move(from);
  }

  inline Imu& operator=(Imu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Imu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Imu* internal_default_instance() {
    return reinterpret_cast<const Imu*>(
               &_Imu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(Imu* other);
  friend void swap(Imu& a, Imu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Imu* New() const final {
    return CreateMaybeMessage<Imu>(NULL);
  }

  Imu* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Imu>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Imu& from);
  void MergeFrom(const Imu& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Imu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Calmcar.common.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::Calmcar::common::Header& _internal_header() const;
  public:
  const ::Calmcar::common::Header& header() const;
  ::Calmcar::common::Header* release_header();
  ::Calmcar::common::Header* mutable_header();
  void set_allocated_header(::Calmcar::common::Header* header);

  // .Calmcar.drivers.IMU.Wheelspeed_report_6a wheelspeed_report_6a = 2;
  bool has_wheelspeed_report_6a() const;
  void clear_wheelspeed_report_6a();
  static const int kWheelspeedReport6AFieldNumber = 2;
  private:
  const ::Calmcar::drivers::IMU::Wheelspeed_report_6a& _internal_wheelspeed_report_6a() const;
  public:
  const ::Calmcar::drivers::IMU::Wheelspeed_report_6a& wheelspeed_report_6a() const;
  ::Calmcar::drivers::IMU::Wheelspeed_report_6a* release_wheelspeed_report_6a();
  ::Calmcar::drivers::IMU::Wheelspeed_report_6a* mutable_wheelspeed_report_6a();
  void set_allocated_wheelspeed_report_6a(::Calmcar::drivers::IMU::Wheelspeed_report_6a* wheelspeed_report_6a);

  // .Calmcar.drivers.IMU.Steering_report_65 steering_report_65 = 3;
  bool has_steering_report_65() const;
  void clear_steering_report_65();
  static const int kSteeringReport65FieldNumber = 3;
  private:
  const ::Calmcar::drivers::IMU::Steering_report_65& _internal_steering_report_65() const;
  public:
  const ::Calmcar::drivers::IMU::Steering_report_65& steering_report_65() const;
  ::Calmcar::drivers::IMU::Steering_report_65* release_steering_report_65();
  ::Calmcar::drivers::IMU::Steering_report_65* mutable_steering_report_65();
  void set_allocated_steering_report_65(::Calmcar::drivers::IMU::Steering_report_65* steering_report_65);

  // .Calmcar.drivers.IMU.Gear_report_67 gear_report_67 = 4;
  bool has_gear_report_67() const;
  void clear_gear_report_67();
  static const int kGearReport67FieldNumber = 4;
  private:
  const ::Calmcar::drivers::IMU::Gear_report_67& _internal_gear_report_67() const;
  public:
  const ::Calmcar::drivers::IMU::Gear_report_67& gear_report_67() const;
  ::Calmcar::drivers::IMU::Gear_report_67* release_gear_report_67();
  ::Calmcar::drivers::IMU::Gear_report_67* mutable_gear_report_67();
  void set_allocated_gear_report_67(::Calmcar::drivers::IMU::Gear_report_67* gear_report_67);

  // .Calmcar.drivers.IMU.Gnss_dop_50b gnss_dop_50b = 5;
  bool has_gnss_dop_50b() const;
  void clear_gnss_dop_50b();
  static const int kGnssDop50BFieldNumber = 5;
  private:
  const ::Calmcar::drivers::IMU::Gnss_dop_50b& _internal_gnss_dop_50b() const;
  public:
  const ::Calmcar::drivers::IMU::Gnss_dop_50b& gnss_dop_50b() const;
  ::Calmcar::drivers::IMU::Gnss_dop_50b* release_gnss_dop_50b();
  ::Calmcar::drivers::IMU::Gnss_dop_50b* mutable_gnss_dop_50b();
  void set_allocated_gnss_dop_50b(::Calmcar::drivers::IMU::Gnss_dop_50b* gnss_dop_50b);

  // .Calmcar.drivers.IMU.Gnss_headingandpitch_50c gnss_headingandpitch_50c = 6;
  bool has_gnss_headingandpitch_50c() const;
  void clear_gnss_headingandpitch_50c();
  static const int kGnssHeadingandpitch50CFieldNumber = 6;
  private:
  const ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c& _internal_gnss_headingandpitch_50c() const;
  public:
  const ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c& gnss_headingandpitch_50c() const;
  ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c* release_gnss_headingandpitch_50c();
  ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c* mutable_gnss_headingandpitch_50c();
  void set_allocated_gnss_headingandpitch_50c(::Calmcar::drivers::IMU::Gnss_headingandpitch_50c* gnss_headingandpitch_50c);

  // .Calmcar.drivers.IMU.Gnss_heightandweek_50a gnss_heightandweek_50a = 7;
  bool has_gnss_heightandweek_50a() const;
  void clear_gnss_heightandweek_50a();
  static const int kGnssHeightandweek50AFieldNumber = 7;
  private:
  const ::Calmcar::drivers::IMU::Gnss_heightandweek_50a& _internal_gnss_heightandweek_50a() const;
  public:
  const ::Calmcar::drivers::IMU::Gnss_heightandweek_50a& gnss_heightandweek_50a() const;
  ::Calmcar::drivers::IMU::Gnss_heightandweek_50a* release_gnss_heightandweek_50a();
  ::Calmcar::drivers::IMU::Gnss_heightandweek_50a* mutable_gnss_heightandweek_50a();
  void set_allocated_gnss_heightandweek_50a(::Calmcar::drivers::IMU::Gnss_heightandweek_50a* gnss_heightandweek_50a);

  // .Calmcar.drivers.IMU.Gnss_utc_508 gnss_utc_508 = 8;
  bool has_gnss_utc_508() const;
  void clear_gnss_utc_508();
  static const int kGnssUtc508FieldNumber = 8;
  private:
  const ::Calmcar::drivers::IMU::Gnss_utc_508& _internal_gnss_utc_508() const;
  public:
  const ::Calmcar::drivers::IMU::Gnss_utc_508& gnss_utc_508() const;
  ::Calmcar::drivers::IMU::Gnss_utc_508* release_gnss_utc_508();
  ::Calmcar::drivers::IMU::Gnss_utc_508* mutable_gnss_utc_508();
  void set_allocated_gnss_utc_508(::Calmcar::drivers::IMU::Gnss_utc_508* gnss_utc_508);

  // .Calmcar.drivers.IMU.Gnss_latitudelongitude_509 gnss_latitudelongitude_509 = 9;
  bool has_gnss_latitudelongitude_509() const;
  void clear_gnss_latitudelongitude_509();
  static const int kGnssLatitudelongitude509FieldNumber = 9;
  private:
  const ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509& _internal_gnss_latitudelongitude_509() const;
  public:
  const ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509& gnss_latitudelongitude_509() const;
  ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509* release_gnss_latitudelongitude_509();
  ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509* mutable_gnss_latitudelongitude_509();
  void set_allocated_gnss_latitudelongitude_509(::Calmcar::drivers::IMU::Gnss_latitudelongitude_509* gnss_latitudelongitude_509);

  // .Calmcar.drivers.IMU.Ins_datainfo_506 ins_datainfo_506 = 10;
  bool has_ins_datainfo_506() const;
  void clear_ins_datainfo_506();
  static const int kInsDatainfo506FieldNumber = 10;
  private:
  const ::Calmcar::drivers::IMU::Ins_datainfo_506& _internal_ins_datainfo_506() const;
  public:
  const ::Calmcar::drivers::IMU::Ins_datainfo_506& ins_datainfo_506() const;
  ::Calmcar::drivers::IMU::Ins_datainfo_506* release_ins_datainfo_506();
  ::Calmcar::drivers::IMU::Ins_datainfo_506* mutable_ins_datainfo_506();
  void set_allocated_ins_datainfo_506(::Calmcar::drivers::IMU::Ins_datainfo_506* ins_datainfo_506);

  // .Calmcar.drivers.IMU.Ins_std_507 ins_std_507 = 11;
  bool has_ins_std_507() const;
  void clear_ins_std_507();
  static const int kInsStd507FieldNumber = 11;
  private:
  const ::Calmcar::drivers::IMU::Ins_std_507& _internal_ins_std_507() const;
  public:
  const ::Calmcar::drivers::IMU::Ins_std_507& ins_std_507() const;
  ::Calmcar::drivers::IMU::Ins_std_507* release_ins_std_507();
  ::Calmcar::drivers::IMU::Ins_std_507* mutable_ins_std_507();
  void set_allocated_ins_std_507(::Calmcar::drivers::IMU::Ins_std_507* ins_std_507);

  // .Calmcar.drivers.IMU.Ins_latitudelongitude_504 ins_latitudelongitude_504 = 12;
  bool has_ins_latitudelongitude_504() const;
  void clear_ins_latitudelongitude_504();
  static const int kInsLatitudelongitude504FieldNumber = 12;
  private:
  const ::Calmcar::drivers::IMU::Ins_latitudelongitude_504& _internal_ins_latitudelongitude_504() const;
  public:
  const ::Calmcar::drivers::IMU::Ins_latitudelongitude_504& ins_latitudelongitude_504() const;
  ::Calmcar::drivers::IMU::Ins_latitudelongitude_504* release_ins_latitudelongitude_504();
  ::Calmcar::drivers::IMU::Ins_latitudelongitude_504* mutable_ins_latitudelongitude_504();
  void set_allocated_ins_latitudelongitude_504(::Calmcar::drivers::IMU::Ins_latitudelongitude_504* ins_latitudelongitude_504);

  // .Calmcar.drivers.IMU.Ins_speed_505 ins_speed_505 = 13;
  bool has_ins_speed_505() const;
  void clear_ins_speed_505();
  static const int kInsSpeed505FieldNumber = 13;
  private:
  const ::Calmcar::drivers::IMU::Ins_speed_505& _internal_ins_speed_505() const;
  public:
  const ::Calmcar::drivers::IMU::Ins_speed_505& ins_speed_505() const;
  ::Calmcar::drivers::IMU::Ins_speed_505* release_ins_speed_505();
  ::Calmcar::drivers::IMU::Ins_speed_505* mutable_ins_speed_505();
  void set_allocated_ins_speed_505(::Calmcar::drivers::IMU::Ins_speed_505* ins_speed_505);

  // .Calmcar.drivers.IMU.Ins_headingpitchroll_502 ins_headingpitchroll_502 = 14;
  bool has_ins_headingpitchroll_502() const;
  void clear_ins_headingpitchroll_502();
  static const int kInsHeadingpitchroll502FieldNumber = 14;
  private:
  const ::Calmcar::drivers::IMU::Ins_headingpitchroll_502& _internal_ins_headingpitchroll_502() const;
  public:
  const ::Calmcar::drivers::IMU::Ins_headingpitchroll_502& ins_headingpitchroll_502() const;
  ::Calmcar::drivers::IMU::Ins_headingpitchroll_502* release_ins_headingpitchroll_502();
  ::Calmcar::drivers::IMU::Ins_headingpitchroll_502* mutable_ins_headingpitchroll_502();
  void set_allocated_ins_headingpitchroll_502(::Calmcar::drivers::IMU::Ins_headingpitchroll_502* ins_headingpitchroll_502);

  // .Calmcar.drivers.IMU.Ins_heightandtime_503 ins_heightandtime_503 = 15;
  bool has_ins_heightandtime_503() const;
  void clear_ins_heightandtime_503();
  static const int kInsHeightandtime503FieldNumber = 15;
  private:
  const ::Calmcar::drivers::IMU::Ins_heightandtime_503& _internal_ins_heightandtime_503() const;
  public:
  const ::Calmcar::drivers::IMU::Ins_heightandtime_503& ins_heightandtime_503() const;
  ::Calmcar::drivers::IMU::Ins_heightandtime_503* release_ins_heightandtime_503();
  ::Calmcar::drivers::IMU::Ins_heightandtime_503* mutable_ins_heightandtime_503();
  void set_allocated_ins_heightandtime_503(::Calmcar::drivers::IMU::Ins_heightandtime_503* ins_heightandtime_503);

  // .Calmcar.drivers.IMU.Ins_acc_500 ins_acc_500 = 16;
  bool has_ins_acc_500() const;
  void clear_ins_acc_500();
  static const int kInsAcc500FieldNumber = 16;
  private:
  const ::Calmcar::drivers::IMU::Ins_acc_500& _internal_ins_acc_500() const;
  public:
  const ::Calmcar::drivers::IMU::Ins_acc_500& ins_acc_500() const;
  ::Calmcar::drivers::IMU::Ins_acc_500* release_ins_acc_500();
  ::Calmcar::drivers::IMU::Ins_acc_500* mutable_ins_acc_500();
  void set_allocated_ins_acc_500(::Calmcar::drivers::IMU::Ins_acc_500* ins_acc_500);

  // .Calmcar.drivers.IMU.Ins_gyro_501 ins_gyro_501 = 17;
  bool has_ins_gyro_501() const;
  void clear_ins_gyro_501();
  static const int kInsGyro501FieldNumber = 17;
  private:
  const ::Calmcar::drivers::IMU::Ins_gyro_501& _internal_ins_gyro_501() const;
  public:
  const ::Calmcar::drivers::IMU::Ins_gyro_501& ins_gyro_501() const;
  ::Calmcar::drivers::IMU::Ins_gyro_501* release_ins_gyro_501();
  ::Calmcar::drivers::IMU::Ins_gyro_501* mutable_ins_gyro_501();
  void set_allocated_ins_gyro_501(::Calmcar::drivers::IMU::Ins_gyro_501* ins_gyro_501);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.IMU.Imu)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::Calmcar::common::Header* header_;
  ::Calmcar::drivers::IMU::Wheelspeed_report_6a* wheelspeed_report_6a_;
  ::Calmcar::drivers::IMU::Steering_report_65* steering_report_65_;
  ::Calmcar::drivers::IMU::Gear_report_67* gear_report_67_;
  ::Calmcar::drivers::IMU::Gnss_dop_50b* gnss_dop_50b_;
  ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c* gnss_headingandpitch_50c_;
  ::Calmcar::drivers::IMU::Gnss_heightandweek_50a* gnss_heightandweek_50a_;
  ::Calmcar::drivers::IMU::Gnss_utc_508* gnss_utc_508_;
  ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509* gnss_latitudelongitude_509_;
  ::Calmcar::drivers::IMU::Ins_datainfo_506* ins_datainfo_506_;
  ::Calmcar::drivers::IMU::Ins_std_507* ins_std_507_;
  ::Calmcar::drivers::IMU::Ins_latitudelongitude_504* ins_latitudelongitude_504_;
  ::Calmcar::drivers::IMU::Ins_speed_505* ins_speed_505_;
  ::Calmcar::drivers::IMU::Ins_headingpitchroll_502* ins_headingpitchroll_502_;
  ::Calmcar::drivers::IMU::Ins_heightandtime_503* ins_heightandtime_503_;
  ::Calmcar::drivers::IMU::Ins_acc_500* ins_acc_500_;
  ::Calmcar::drivers::IMU::Ins_gyro_501* ins_gyro_501_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_imu_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Wheelspeed_report_6a

// double fl = 1;
inline void Wheelspeed_report_6a::clear_fl() {
  fl_ = 0;
}
inline double Wheelspeed_report_6a::fl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Wheelspeed_report_6a.fl)
  return fl_;
}
inline void Wheelspeed_report_6a::set_fl(double value) {
  
  fl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Wheelspeed_report_6a.fl)
}

// double fr = 2;
inline void Wheelspeed_report_6a::clear_fr() {
  fr_ = 0;
}
inline double Wheelspeed_report_6a::fr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Wheelspeed_report_6a.fr)
  return fr_;
}
inline void Wheelspeed_report_6a::set_fr(double value) {
  
  fr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Wheelspeed_report_6a.fr)
}

// double rl = 3;
inline void Wheelspeed_report_6a::clear_rl() {
  rl_ = 0;
}
inline double Wheelspeed_report_6a::rl() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Wheelspeed_report_6a.rl)
  return rl_;
}
inline void Wheelspeed_report_6a::set_rl(double value) {
  
  rl_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Wheelspeed_report_6a.rl)
}

// double rr = 4;
inline void Wheelspeed_report_6a::clear_rr() {
  rr_ = 0;
}
inline double Wheelspeed_report_6a::rr() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Wheelspeed_report_6a.rr)
  return rr_;
}
inline void Wheelspeed_report_6a::set_rr(double value) {
  
  rr_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Wheelspeed_report_6a.rr)
}

// -------------------------------------------------------------------

// Steering_report_65

// double angle = 1;
inline void Steering_report_65::clear_angle() {
  angle_ = 0;
}
inline double Steering_report_65::angle() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Steering_report_65.angle)
  return angle_;
}
inline void Steering_report_65::set_angle(double value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Steering_report_65.angle)
}

// double cmd = 2;
inline void Steering_report_65::clear_cmd() {
  cmd_ = 0;
}
inline double Steering_report_65::cmd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Steering_report_65.cmd)
  return cmd_;
}
inline void Steering_report_65::set_cmd(double value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Steering_report_65.cmd)
}

// double speed = 3;
inline void Steering_report_65::clear_speed() {
  speed_ = 0;
}
inline double Steering_report_65::speed() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Steering_report_65.speed)
  return speed_;
}
inline void Steering_report_65::set_speed(double value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Steering_report_65.speed)
}

// double torque = 4;
inline void Steering_report_65::clear_torque() {
  torque_ = 0;
}
inline double Steering_report_65::torque() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Steering_report_65.torque)
  return torque_;
}
inline void Steering_report_65::set_torque(double value) {
  
  torque_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Steering_report_65.torque)
}

// .Calmcar.drivers.IMU.Steering_report_65.EnType en = 5;
inline void Steering_report_65::clear_en() {
  en_ = 0;
}
inline ::Calmcar::drivers::IMU::Steering_report_65_EnType Steering_report_65::en() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Steering_report_65.en)
  return static_cast< ::Calmcar::drivers::IMU::Steering_report_65_EnType >(en_);
}
inline void Steering_report_65::set_en(::Calmcar::drivers::IMU::Steering_report_65_EnType value) {
  
  en_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Steering_report_65.en)
}

// .Calmcar.drivers.IMU.Steering_report_65.OverrideType override = 6;
inline void Steering_report_65::clear_override() {
  override_ = 0;
}
inline ::Calmcar::drivers::IMU::Steering_report_65_OverrideType Steering_report_65::override() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Steering_report_65.override)
  return static_cast< ::Calmcar::drivers::IMU::Steering_report_65_OverrideType >(override_);
}
inline void Steering_report_65::set_override(::Calmcar::drivers::IMU::Steering_report_65_OverrideType value) {
  
  override_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Steering_report_65.override)
}

// .Calmcar.drivers.IMU.Steering_report_65.FltwdcType fltwdc = 7;
inline void Steering_report_65::clear_fltwdc() {
  fltwdc_ = 0;
}
inline ::Calmcar::drivers::IMU::Steering_report_65_FltwdcType Steering_report_65::fltwdc() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Steering_report_65.fltwdc)
  return static_cast< ::Calmcar::drivers::IMU::Steering_report_65_FltwdcType >(fltwdc_);
}
inline void Steering_report_65::set_fltwdc(::Calmcar::drivers::IMU::Steering_report_65_FltwdcType value) {
  
  fltwdc_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Steering_report_65.fltwdc)
}

// .Calmcar.drivers.IMU.Steering_report_65.Flt1Type flt1 = 8;
inline void Steering_report_65::clear_flt1() {
  flt1_ = 0;
}
inline ::Calmcar::drivers::IMU::Steering_report_65_Flt1Type Steering_report_65::flt1() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Steering_report_65.flt1)
  return static_cast< ::Calmcar::drivers::IMU::Steering_report_65_Flt1Type >(flt1_);
}
inline void Steering_report_65::set_flt1(::Calmcar::drivers::IMU::Steering_report_65_Flt1Type value) {
  
  flt1_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Steering_report_65.flt1)
}

// .Calmcar.drivers.IMU.Steering_report_65.Flt2Type flt2 = 9;
inline void Steering_report_65::clear_flt2() {
  flt2_ = 0;
}
inline ::Calmcar::drivers::IMU::Steering_report_65_Flt2Type Steering_report_65::flt2() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Steering_report_65.flt2)
  return static_cast< ::Calmcar::drivers::IMU::Steering_report_65_Flt2Type >(flt2_);
}
inline void Steering_report_65::set_flt2(::Calmcar::drivers::IMU::Steering_report_65_Flt2Type value) {
  
  flt2_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Steering_report_65.flt2)
}

// .Calmcar.drivers.IMU.Steering_report_65.FltcalType fltcal = 10;
inline void Steering_report_65::clear_fltcal() {
  fltcal_ = 0;
}
inline ::Calmcar::drivers::IMU::Steering_report_65_FltcalType Steering_report_65::fltcal() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Steering_report_65.fltcal)
  return static_cast< ::Calmcar::drivers::IMU::Steering_report_65_FltcalType >(fltcal_);
}
inline void Steering_report_65::set_fltcal(::Calmcar::drivers::IMU::Steering_report_65_FltcalType value) {
  
  fltcal_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Steering_report_65.fltcal)
}

// .Calmcar.drivers.IMU.Steering_report_65.TmoutType tmout = 11;
inline void Steering_report_65::clear_tmout() {
  tmout_ = 0;
}
inline ::Calmcar::drivers::IMU::Steering_report_65_TmoutType Steering_report_65::tmout() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Steering_report_65.tmout)
  return static_cast< ::Calmcar::drivers::IMU::Steering_report_65_TmoutType >(tmout_);
}
inline void Steering_report_65::set_tmout(::Calmcar::drivers::IMU::Steering_report_65_TmoutType value) {
  
  tmout_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Steering_report_65.tmout)
}

// -------------------------------------------------------------------

// Gear_report_67

// .Calmcar.drivers.IMU.Gear_report_67.StateType state = 1;
inline void Gear_report_67::clear_state() {
  state_ = 0;
}
inline ::Calmcar::drivers::IMU::Gear_report_67_StateType Gear_report_67::state() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gear_report_67.state)
  return static_cast< ::Calmcar::drivers::IMU::Gear_report_67_StateType >(state_);
}
inline void Gear_report_67::set_state(::Calmcar::drivers::IMU::Gear_report_67_StateType value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gear_report_67.state)
}

// .Calmcar.drivers.IMU.Gear_report_67.DriverType driver = 2;
inline void Gear_report_67::clear_driver() {
  driver_ = 0;
}
inline ::Calmcar::drivers::IMU::Gear_report_67_DriverType Gear_report_67::driver() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gear_report_67.driver)
  return static_cast< ::Calmcar::drivers::IMU::Gear_report_67_DriverType >(driver_);
}
inline void Gear_report_67::set_driver(::Calmcar::drivers::IMU::Gear_report_67_DriverType value) {
  
  driver_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gear_report_67.driver)
}

// .Calmcar.drivers.IMU.Gear_report_67.CmdType cmd = 3;
inline void Gear_report_67::clear_cmd() {
  cmd_ = 0;
}
inline ::Calmcar::drivers::IMU::Gear_report_67_CmdType Gear_report_67::cmd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gear_report_67.cmd)
  return static_cast< ::Calmcar::drivers::IMU::Gear_report_67_CmdType >(cmd_);
}
inline void Gear_report_67::set_cmd(::Calmcar::drivers::IMU::Gear_report_67_CmdType value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gear_report_67.cmd)
}

// .Calmcar.drivers.IMU.Gear_report_67.FltbusType fltbus = 4;
inline void Gear_report_67::clear_fltbus() {
  fltbus_ = 0;
}
inline ::Calmcar::drivers::IMU::Gear_report_67_FltbusType Gear_report_67::fltbus() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gear_report_67.fltbus)
  return static_cast< ::Calmcar::drivers::IMU::Gear_report_67_FltbusType >(fltbus_);
}
inline void Gear_report_67::set_fltbus(::Calmcar::drivers::IMU::Gear_report_67_FltbusType value) {
  
  fltbus_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gear_report_67.fltbus)
}

// int32 acc_state = 5;
inline void Gear_report_67::clear_acc_state() {
  acc_state_ = 0;
}
inline ::google::protobuf::int32 Gear_report_67::acc_state() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gear_report_67.acc_state)
  return acc_state_;
}
inline void Gear_report_67::set_acc_state(::google::protobuf::int32 value) {
  
  acc_state_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gear_report_67.acc_state)
}

// .Calmcar.drivers.IMU.Gear_report_67.RejectType reject = 6;
inline void Gear_report_67::clear_reject() {
  reject_ = 0;
}
inline ::Calmcar::drivers::IMU::Gear_report_67_RejectType Gear_report_67::reject() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gear_report_67.reject)
  return static_cast< ::Calmcar::drivers::IMU::Gear_report_67_RejectType >(reject_);
}
inline void Gear_report_67::set_reject(::Calmcar::drivers::IMU::Gear_report_67_RejectType value) {
  
  reject_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gear_report_67.reject)
}

// -------------------------------------------------------------------

// Gnss_dop_50b

// double gnss_htdop = 1;
inline void Gnss_dop_50b::clear_gnss_htdop() {
  gnss_htdop_ = 0;
}
inline double Gnss_dop_50b::gnss_htdop() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_dop_50b.gnss_htdop)
  return gnss_htdop_;
}
inline void Gnss_dop_50b::set_gnss_htdop(double value) {
  
  gnss_htdop_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_dop_50b.gnss_htdop)
}

// double gnss_pdop = 2;
inline void Gnss_dop_50b::clear_gnss_pdop() {
  gnss_pdop_ = 0;
}
inline double Gnss_dop_50b::gnss_pdop() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_dop_50b.gnss_pdop)
  return gnss_pdop_;
}
inline void Gnss_dop_50b::set_gnss_pdop(double value) {
  
  gnss_pdop_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_dop_50b.gnss_pdop)
}

// double gnss_hdop = 3;
inline void Gnss_dop_50b::clear_gnss_hdop() {
  gnss_hdop_ = 0;
}
inline double Gnss_dop_50b::gnss_hdop() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_dop_50b.gnss_hdop)
  return gnss_hdop_;
}
inline void Gnss_dop_50b::set_gnss_hdop(double value) {
  
  gnss_hdop_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_dop_50b.gnss_hdop)
}

// double gnss_gdop = 4;
inline void Gnss_dop_50b::clear_gnss_gdop() {
  gnss_gdop_ = 0;
}
inline double Gnss_dop_50b::gnss_gdop() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_dop_50b.gnss_gdop)
  return gnss_gdop_;
}
inline void Gnss_dop_50b::set_gnss_gdop(double value) {
  
  gnss_gdop_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_dop_50b.gnss_gdop)
}

// -------------------------------------------------------------------

// Gnss_headingandpitch_50c

// double gnss_pitch = 1;
inline void Gnss_headingandpitch_50c::clear_gnss_pitch() {
  gnss_pitch_ = 0;
}
inline double Gnss_headingandpitch_50c::gnss_pitch() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_headingandpitch_50c.gnss_pitch)
  return gnss_pitch_;
}
inline void Gnss_headingandpitch_50c::set_gnss_pitch(double value) {
  
  gnss_pitch_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_headingandpitch_50c.gnss_pitch)
}

// double gnss_heading = 2;
inline void Gnss_headingandpitch_50c::clear_gnss_heading() {
  gnss_heading_ = 0;
}
inline double Gnss_headingandpitch_50c::gnss_heading() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_headingandpitch_50c.gnss_heading)
  return gnss_heading_;
}
inline void Gnss_headingandpitch_50c::set_gnss_heading(double value) {
  
  gnss_heading_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_headingandpitch_50c.gnss_heading)
}

// -------------------------------------------------------------------

// Gnss_heightandweek_50a

// int32 gps_week = 1;
inline void Gnss_heightandweek_50a::clear_gps_week() {
  gps_week_ = 0;
}
inline ::google::protobuf::int32 Gnss_heightandweek_50a::gps_week() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_heightandweek_50a.gps_week)
  return gps_week_;
}
inline void Gnss_heightandweek_50a::set_gps_week(::google::protobuf::int32 value) {
  
  gps_week_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_heightandweek_50a.gps_week)
}

// double gnss_locatheight = 2;
inline void Gnss_heightandweek_50a::clear_gnss_locatheight() {
  gnss_locatheight_ = 0;
}
inline double Gnss_heightandweek_50a::gnss_locatheight() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_heightandweek_50a.gnss_locatheight)
  return gnss_locatheight_;
}
inline void Gnss_heightandweek_50a::set_gnss_locatheight(double value) {
  
  gnss_locatheight_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_heightandweek_50a.gnss_locatheight)
}

// -------------------------------------------------------------------

// Gnss_utc_508

// int32 utc_year = 1;
inline void Gnss_utc_508::clear_utc_year() {
  utc_year_ = 0;
}
inline ::google::protobuf::int32 Gnss_utc_508::utc_year() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_utc_508.utc_year)
  return utc_year_;
}
inline void Gnss_utc_508::set_utc_year(::google::protobuf::int32 value) {
  
  utc_year_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_utc_508.utc_year)
}

// int32 utc_sec = 2;
inline void Gnss_utc_508::clear_utc_sec() {
  utc_sec_ = 0;
}
inline ::google::protobuf::int32 Gnss_utc_508::utc_sec() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_utc_508.utc_sec)
  return utc_sec_;
}
inline void Gnss_utc_508::set_utc_sec(::google::protobuf::int32 value) {
  
  utc_sec_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_utc_508.utc_sec)
}

// int32 utc_msec = 3;
inline void Gnss_utc_508::clear_utc_msec() {
  utc_msec_ = 0;
}
inline ::google::protobuf::int32 Gnss_utc_508::utc_msec() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_utc_508.utc_msec)
  return utc_msec_;
}
inline void Gnss_utc_508::set_utc_msec(::google::protobuf::int32 value) {
  
  utc_msec_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_utc_508.utc_msec)
}

// int32 utc_month = 4;
inline void Gnss_utc_508::clear_utc_month() {
  utc_month_ = 0;
}
inline ::google::protobuf::int32 Gnss_utc_508::utc_month() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_utc_508.utc_month)
  return utc_month_;
}
inline void Gnss_utc_508::set_utc_month(::google::protobuf::int32 value) {
  
  utc_month_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_utc_508.utc_month)
}

// int32 utc_min = 5;
inline void Gnss_utc_508::clear_utc_min() {
  utc_min_ = 0;
}
inline ::google::protobuf::int32 Gnss_utc_508::utc_min() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_utc_508.utc_min)
  return utc_min_;
}
inline void Gnss_utc_508::set_utc_min(::google::protobuf::int32 value) {
  
  utc_min_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_utc_508.utc_min)
}

// int32 utc_hour = 6;
inline void Gnss_utc_508::clear_utc_hour() {
  utc_hour_ = 0;
}
inline ::google::protobuf::int32 Gnss_utc_508::utc_hour() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_utc_508.utc_hour)
  return utc_hour_;
}
inline void Gnss_utc_508::set_utc_hour(::google::protobuf::int32 value) {
  
  utc_hour_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_utc_508.utc_hour)
}

// int32 utc_day = 7;
inline void Gnss_utc_508::clear_utc_day() {
  utc_day_ = 0;
}
inline ::google::protobuf::int32 Gnss_utc_508::utc_day() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_utc_508.utc_day)
  return utc_day_;
}
inline void Gnss_utc_508::set_utc_day(::google::protobuf::int32 value) {
  
  utc_day_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_utc_508.utc_day)
}

// -------------------------------------------------------------------

// Gnss_latitudelongitude_509

// double gnss_longitude = 1;
inline void Gnss_latitudelongitude_509::clear_gnss_longitude() {
  gnss_longitude_ = 0;
}
inline double Gnss_latitudelongitude_509::gnss_longitude() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_latitudelongitude_509.gnss_longitude)
  return gnss_longitude_;
}
inline void Gnss_latitudelongitude_509::set_gnss_longitude(double value) {
  
  gnss_longitude_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_latitudelongitude_509.gnss_longitude)
}

// double gnss_latitude = 2;
inline void Gnss_latitudelongitude_509::clear_gnss_latitude() {
  gnss_latitude_ = 0;
}
inline double Gnss_latitudelongitude_509::gnss_latitude() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Gnss_latitudelongitude_509.gnss_latitude)
  return gnss_latitude_;
}
inline void Gnss_latitudelongitude_509::set_gnss_latitude(double value) {
  
  gnss_latitude_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Gnss_latitudelongitude_509.gnss_latitude)
}

// -------------------------------------------------------------------

// Ins_datainfo_506

// int32 ins_gnss_age = 1;
inline void Ins_datainfo_506::clear_ins_gnss_age() {
  ins_gnss_age_ = 0;
}
inline ::google::protobuf::int32 Ins_datainfo_506::ins_gnss_age() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_datainfo_506.ins_gnss_age)
  return ins_gnss_age_;
}
inline void Ins_datainfo_506::set_ins_gnss_age(::google::protobuf::int32 value) {
  
  ins_gnss_age_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_datainfo_506.ins_gnss_age)
}

// .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_car_statusType ins_car_status = 2;
inline void Ins_datainfo_506::clear_ins_car_status() {
  ins_car_status_ = 0;
}
inline ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_car_statusType Ins_datainfo_506::ins_car_status() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_datainfo_506.ins_car_status)
  return static_cast< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_car_statusType >(ins_car_status_);
}
inline void Ins_datainfo_506::set_ins_car_status(::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_car_statusType value) {
  
  ins_car_status_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_datainfo_506.ins_car_status)
}

// .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_gnssflag_headingType ins_gnssflag_heading = 3;
inline void Ins_datainfo_506::clear_ins_gnssflag_heading() {
  ins_gnssflag_heading_ = 0;
}
inline ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_headingType Ins_datainfo_506::ins_gnssflag_heading() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_datainfo_506.ins_gnssflag_heading)
  return static_cast< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_headingType >(ins_gnssflag_heading_);
}
inline void Ins_datainfo_506::set_ins_gnssflag_heading(::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_headingType value) {
  
  ins_gnssflag_heading_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_datainfo_506.ins_gnssflag_heading)
}

// int32 ins_numsv = 4;
inline void Ins_datainfo_506::clear_ins_numsv() {
  ins_numsv_ = 0;
}
inline ::google::protobuf::int32 Ins_datainfo_506::ins_numsv() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_datainfo_506.ins_numsv)
  return ins_numsv_;
}
inline void Ins_datainfo_506::set_ins_numsv(::google::protobuf::int32 value) {
  
  ins_numsv_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_datainfo_506.ins_numsv)
}

// .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_gnssflag_posType ins_gnssflag_pos = 5;
inline void Ins_datainfo_506::clear_ins_gnssflag_pos() {
  ins_gnssflag_pos_ = 0;
}
inline ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_posType Ins_datainfo_506::ins_gnssflag_pos() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_datainfo_506.ins_gnssflag_pos)
  return static_cast< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_posType >(ins_gnssflag_pos_);
}
inline void Ins_datainfo_506::set_ins_gnssflag_pos(::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_posType value) {
  
  ins_gnssflag_pos_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_datainfo_506.ins_gnssflag_pos)
}

// .Calmcar.drivers.IMU.Ins_datainfo_506.Ins_statusType ins_status = 6;
inline void Ins_datainfo_506::clear_ins_status() {
  ins_status_ = 0;
}
inline ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_statusType Ins_datainfo_506::ins_status() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_datainfo_506.ins_status)
  return static_cast< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_statusType >(ins_status_);
}
inline void Ins_datainfo_506::set_ins_status(::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_statusType value) {
  
  ins_status_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_datainfo_506.ins_status)
}

// -------------------------------------------------------------------

// Ins_std_507

// double ins_std_lat = 1;
inline void Ins_std_507::clear_ins_std_lat() {
  ins_std_lat_ = 0;
}
inline double Ins_std_507::ins_std_lat() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_std_507.ins_std_lat)
  return ins_std_lat_;
}
inline void Ins_std_507::set_ins_std_lat(double value) {
  
  ins_std_lat_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_std_507.ins_std_lat)
}

// double ins_std_lon = 2;
inline void Ins_std_507::clear_ins_std_lon() {
  ins_std_lon_ = 0;
}
inline double Ins_std_507::ins_std_lon() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_std_507.ins_std_lon)
  return ins_std_lon_;
}
inline void Ins_std_507::set_ins_std_lon(double value) {
  
  ins_std_lon_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_std_507.ins_std_lon)
}

// double ins_std_locatheight = 3;
inline void Ins_std_507::clear_ins_std_locatheight() {
  ins_std_locatheight_ = 0;
}
inline double Ins_std_507::ins_std_locatheight() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_std_507.ins_std_locatheight)
  return ins_std_locatheight_;
}
inline void Ins_std_507::set_ins_std_locatheight(double value) {
  
  ins_std_locatheight_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_std_507.ins_std_locatheight)
}

// double ins_std_heading = 4;
inline void Ins_std_507::clear_ins_std_heading() {
  ins_std_heading_ = 0;
}
inline double Ins_std_507::ins_std_heading() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_std_507.ins_std_heading)
  return ins_std_heading_;
}
inline void Ins_std_507::set_ins_std_heading(double value) {
  
  ins_std_heading_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_std_507.ins_std_heading)
}

// -------------------------------------------------------------------

// Ins_latitudelongitude_504

// double ins_latitude = 1;
inline void Ins_latitudelongitude_504::clear_ins_latitude() {
  ins_latitude_ = 0;
}
inline double Ins_latitudelongitude_504::ins_latitude() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_latitudelongitude_504.ins_latitude)
  return ins_latitude_;
}
inline void Ins_latitudelongitude_504::set_ins_latitude(double value) {
  
  ins_latitude_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_latitudelongitude_504.ins_latitude)
}

// double ins_longitude = 2;
inline void Ins_latitudelongitude_504::clear_ins_longitude() {
  ins_longitude_ = 0;
}
inline double Ins_latitudelongitude_504::ins_longitude() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_latitudelongitude_504.ins_longitude)
  return ins_longitude_;
}
inline void Ins_latitudelongitude_504::set_ins_longitude(double value) {
  
  ins_longitude_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_latitudelongitude_504.ins_longitude)
}

// -------------------------------------------------------------------

// Ins_speed_505

// double ins_eastspd = 1;
inline void Ins_speed_505::clear_ins_eastspd() {
  ins_eastspd_ = 0;
}
inline double Ins_speed_505::ins_eastspd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_speed_505.ins_eastspd)
  return ins_eastspd_;
}
inline void Ins_speed_505::set_ins_eastspd(double value) {
  
  ins_eastspd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_speed_505.ins_eastspd)
}

// double ins_northspd = 2;
inline void Ins_speed_505::clear_ins_northspd() {
  ins_northspd_ = 0;
}
inline double Ins_speed_505::ins_northspd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_speed_505.ins_northspd)
  return ins_northspd_;
}
inline void Ins_speed_505::set_ins_northspd(double value) {
  
  ins_northspd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_speed_505.ins_northspd)
}

// double ins_togroundspd = 3;
inline void Ins_speed_505::clear_ins_togroundspd() {
  ins_togroundspd_ = 0;
}
inline double Ins_speed_505::ins_togroundspd() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_speed_505.ins_togroundspd)
  return ins_togroundspd_;
}
inline void Ins_speed_505::set_ins_togroundspd(double value) {
  
  ins_togroundspd_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_speed_505.ins_togroundspd)
}

// -------------------------------------------------------------------

// Ins_headingpitchroll_502

// double ins_pitchangle = 1;
inline void Ins_headingpitchroll_502::clear_ins_pitchangle() {
  ins_pitchangle_ = 0;
}
inline double Ins_headingpitchroll_502::ins_pitchangle() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_headingpitchroll_502.ins_pitchangle)
  return ins_pitchangle_;
}
inline void Ins_headingpitchroll_502::set_ins_pitchangle(double value) {
  
  ins_pitchangle_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_headingpitchroll_502.ins_pitchangle)
}

// double ins_rollangle = 2;
inline void Ins_headingpitchroll_502::clear_ins_rollangle() {
  ins_rollangle_ = 0;
}
inline double Ins_headingpitchroll_502::ins_rollangle() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_headingpitchroll_502.ins_rollangle)
  return ins_rollangle_;
}
inline void Ins_headingpitchroll_502::set_ins_rollangle(double value) {
  
  ins_rollangle_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_headingpitchroll_502.ins_rollangle)
}

// double ins_headingangle = 3;
inline void Ins_headingpitchroll_502::clear_ins_headingangle() {
  ins_headingangle_ = 0;
}
inline double Ins_headingpitchroll_502::ins_headingangle() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_headingpitchroll_502.ins_headingangle)
  return ins_headingangle_;
}
inline void Ins_headingpitchroll_502::set_ins_headingangle(double value) {
  
  ins_headingangle_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_headingpitchroll_502.ins_headingangle)
}

// -------------------------------------------------------------------

// Ins_heightandtime_503

// double ins_locatheight = 1;
inline void Ins_heightandtime_503::clear_ins_locatheight() {
  ins_locatheight_ = 0;
}
inline double Ins_heightandtime_503::ins_locatheight() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_heightandtime_503.ins_locatheight)
  return ins_locatheight_;
}
inline void Ins_heightandtime_503::set_ins_locatheight(double value) {
  
  ins_locatheight_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_heightandtime_503.ins_locatheight)
}

// uint32 ins_time = 2;
inline void Ins_heightandtime_503::clear_ins_time() {
  ins_time_ = 0u;
}
inline ::google::protobuf::uint32 Ins_heightandtime_503::ins_time() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_heightandtime_503.ins_time)
  return ins_time_;
}
inline void Ins_heightandtime_503::set_ins_time(::google::protobuf::uint32 value) {
  
  ins_time_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_heightandtime_503.ins_time)
}

// -------------------------------------------------------------------

// Ins_acc_500

// double ins_acc_x = 1;
inline void Ins_acc_500::clear_ins_acc_x() {
  ins_acc_x_ = 0;
}
inline double Ins_acc_500::ins_acc_x() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_acc_500.ins_acc_x)
  return ins_acc_x_;
}
inline void Ins_acc_500::set_ins_acc_x(double value) {
  
  ins_acc_x_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_acc_500.ins_acc_x)
}

// double ins_acc_y = 2;
inline void Ins_acc_500::clear_ins_acc_y() {
  ins_acc_y_ = 0;
}
inline double Ins_acc_500::ins_acc_y() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_acc_500.ins_acc_y)
  return ins_acc_y_;
}
inline void Ins_acc_500::set_ins_acc_y(double value) {
  
  ins_acc_y_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_acc_500.ins_acc_y)
}

// double ins_acc_z = 3;
inline void Ins_acc_500::clear_ins_acc_z() {
  ins_acc_z_ = 0;
}
inline double Ins_acc_500::ins_acc_z() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_acc_500.ins_acc_z)
  return ins_acc_z_;
}
inline void Ins_acc_500::set_ins_acc_z(double value) {
  
  ins_acc_z_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_acc_500.ins_acc_z)
}

// -------------------------------------------------------------------

// Ins_gyro_501

// double ins_gyro_x = 1;
inline void Ins_gyro_501::clear_ins_gyro_x() {
  ins_gyro_x_ = 0;
}
inline double Ins_gyro_501::ins_gyro_x() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_gyro_501.ins_gyro_x)
  return ins_gyro_x_;
}
inline void Ins_gyro_501::set_ins_gyro_x(double value) {
  
  ins_gyro_x_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_gyro_501.ins_gyro_x)
}

// double ins_gyro_y = 2;
inline void Ins_gyro_501::clear_ins_gyro_y() {
  ins_gyro_y_ = 0;
}
inline double Ins_gyro_501::ins_gyro_y() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_gyro_501.ins_gyro_y)
  return ins_gyro_y_;
}
inline void Ins_gyro_501::set_ins_gyro_y(double value) {
  
  ins_gyro_y_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_gyro_501.ins_gyro_y)
}

// double ins_gyro_z = 3;
inline void Ins_gyro_501::clear_ins_gyro_z() {
  ins_gyro_z_ = 0;
}
inline double Ins_gyro_501::ins_gyro_z() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Ins_gyro_501.ins_gyro_z)
  return ins_gyro_z_;
}
inline void Ins_gyro_501::set_ins_gyro_z(double value) {
  
  ins_gyro_z_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.IMU.Ins_gyro_501.ins_gyro_z)
}

// -------------------------------------------------------------------

// Imu

// .Calmcar.common.Header header = 1;
inline bool Imu::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::Calmcar::common::Header& Imu::_internal_header() const {
  return *header_;
}
inline const ::Calmcar::common::Header& Imu::header() const {
  const ::Calmcar::common::Header* p = header_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.header)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::common::Header*>(
      &::Calmcar::common::_Header_default_instance_);
}
inline ::Calmcar::common::Header* Imu::release_header() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.header)
  
  ::Calmcar::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::Calmcar::common::Header* Imu::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::common::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.header)
  return header_;
}
inline void Imu::set_allocated_header(::Calmcar::common::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.header)
}

// .Calmcar.drivers.IMU.Wheelspeed_report_6a wheelspeed_report_6a = 2;
inline bool Imu::has_wheelspeed_report_6a() const {
  return this != internal_default_instance() && wheelspeed_report_6a_ != NULL;
}
inline void Imu::clear_wheelspeed_report_6a() {
  if (GetArenaNoVirtual() == NULL && wheelspeed_report_6a_ != NULL) {
    delete wheelspeed_report_6a_;
  }
  wheelspeed_report_6a_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Wheelspeed_report_6a& Imu::_internal_wheelspeed_report_6a() const {
  return *wheelspeed_report_6a_;
}
inline const ::Calmcar::drivers::IMU::Wheelspeed_report_6a& Imu::wheelspeed_report_6a() const {
  const ::Calmcar::drivers::IMU::Wheelspeed_report_6a* p = wheelspeed_report_6a_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.wheelspeed_report_6a)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Wheelspeed_report_6a*>(
      &::Calmcar::drivers::IMU::_Wheelspeed_report_6a_default_instance_);
}
inline ::Calmcar::drivers::IMU::Wheelspeed_report_6a* Imu::release_wheelspeed_report_6a() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.wheelspeed_report_6a)
  
  ::Calmcar::drivers::IMU::Wheelspeed_report_6a* temp = wheelspeed_report_6a_;
  wheelspeed_report_6a_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Wheelspeed_report_6a* Imu::mutable_wheelspeed_report_6a() {
  
  if (wheelspeed_report_6a_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Wheelspeed_report_6a>(GetArenaNoVirtual());
    wheelspeed_report_6a_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.wheelspeed_report_6a)
  return wheelspeed_report_6a_;
}
inline void Imu::set_allocated_wheelspeed_report_6a(::Calmcar::drivers::IMU::Wheelspeed_report_6a* wheelspeed_report_6a) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wheelspeed_report_6a_;
  }
  if (wheelspeed_report_6a) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wheelspeed_report_6a = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wheelspeed_report_6a, submessage_arena);
    }
    
  } else {
    
  }
  wheelspeed_report_6a_ = wheelspeed_report_6a;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.wheelspeed_report_6a)
}

// .Calmcar.drivers.IMU.Steering_report_65 steering_report_65 = 3;
inline bool Imu::has_steering_report_65() const {
  return this != internal_default_instance() && steering_report_65_ != NULL;
}
inline void Imu::clear_steering_report_65() {
  if (GetArenaNoVirtual() == NULL && steering_report_65_ != NULL) {
    delete steering_report_65_;
  }
  steering_report_65_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Steering_report_65& Imu::_internal_steering_report_65() const {
  return *steering_report_65_;
}
inline const ::Calmcar::drivers::IMU::Steering_report_65& Imu::steering_report_65() const {
  const ::Calmcar::drivers::IMU::Steering_report_65* p = steering_report_65_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.steering_report_65)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Steering_report_65*>(
      &::Calmcar::drivers::IMU::_Steering_report_65_default_instance_);
}
inline ::Calmcar::drivers::IMU::Steering_report_65* Imu::release_steering_report_65() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.steering_report_65)
  
  ::Calmcar::drivers::IMU::Steering_report_65* temp = steering_report_65_;
  steering_report_65_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Steering_report_65* Imu::mutable_steering_report_65() {
  
  if (steering_report_65_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Steering_report_65>(GetArenaNoVirtual());
    steering_report_65_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.steering_report_65)
  return steering_report_65_;
}
inline void Imu::set_allocated_steering_report_65(::Calmcar::drivers::IMU::Steering_report_65* steering_report_65) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete steering_report_65_;
  }
  if (steering_report_65) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      steering_report_65 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, steering_report_65, submessage_arena);
    }
    
  } else {
    
  }
  steering_report_65_ = steering_report_65;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.steering_report_65)
}

// .Calmcar.drivers.IMU.Gear_report_67 gear_report_67 = 4;
inline bool Imu::has_gear_report_67() const {
  return this != internal_default_instance() && gear_report_67_ != NULL;
}
inline void Imu::clear_gear_report_67() {
  if (GetArenaNoVirtual() == NULL && gear_report_67_ != NULL) {
    delete gear_report_67_;
  }
  gear_report_67_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Gear_report_67& Imu::_internal_gear_report_67() const {
  return *gear_report_67_;
}
inline const ::Calmcar::drivers::IMU::Gear_report_67& Imu::gear_report_67() const {
  const ::Calmcar::drivers::IMU::Gear_report_67* p = gear_report_67_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.gear_report_67)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Gear_report_67*>(
      &::Calmcar::drivers::IMU::_Gear_report_67_default_instance_);
}
inline ::Calmcar::drivers::IMU::Gear_report_67* Imu::release_gear_report_67() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.gear_report_67)
  
  ::Calmcar::drivers::IMU::Gear_report_67* temp = gear_report_67_;
  gear_report_67_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Gear_report_67* Imu::mutable_gear_report_67() {
  
  if (gear_report_67_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Gear_report_67>(GetArenaNoVirtual());
    gear_report_67_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.gear_report_67)
  return gear_report_67_;
}
inline void Imu::set_allocated_gear_report_67(::Calmcar::drivers::IMU::Gear_report_67* gear_report_67) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gear_report_67_;
  }
  if (gear_report_67) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gear_report_67 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gear_report_67, submessage_arena);
    }
    
  } else {
    
  }
  gear_report_67_ = gear_report_67;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.gear_report_67)
}

// .Calmcar.drivers.IMU.Gnss_dop_50b gnss_dop_50b = 5;
inline bool Imu::has_gnss_dop_50b() const {
  return this != internal_default_instance() && gnss_dop_50b_ != NULL;
}
inline void Imu::clear_gnss_dop_50b() {
  if (GetArenaNoVirtual() == NULL && gnss_dop_50b_ != NULL) {
    delete gnss_dop_50b_;
  }
  gnss_dop_50b_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Gnss_dop_50b& Imu::_internal_gnss_dop_50b() const {
  return *gnss_dop_50b_;
}
inline const ::Calmcar::drivers::IMU::Gnss_dop_50b& Imu::gnss_dop_50b() const {
  const ::Calmcar::drivers::IMU::Gnss_dop_50b* p = gnss_dop_50b_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.gnss_dop_50b)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Gnss_dop_50b*>(
      &::Calmcar::drivers::IMU::_Gnss_dop_50b_default_instance_);
}
inline ::Calmcar::drivers::IMU::Gnss_dop_50b* Imu::release_gnss_dop_50b() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.gnss_dop_50b)
  
  ::Calmcar::drivers::IMU::Gnss_dop_50b* temp = gnss_dop_50b_;
  gnss_dop_50b_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Gnss_dop_50b* Imu::mutable_gnss_dop_50b() {
  
  if (gnss_dop_50b_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Gnss_dop_50b>(GetArenaNoVirtual());
    gnss_dop_50b_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.gnss_dop_50b)
  return gnss_dop_50b_;
}
inline void Imu::set_allocated_gnss_dop_50b(::Calmcar::drivers::IMU::Gnss_dop_50b* gnss_dop_50b) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gnss_dop_50b_;
  }
  if (gnss_dop_50b) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gnss_dop_50b = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gnss_dop_50b, submessage_arena);
    }
    
  } else {
    
  }
  gnss_dop_50b_ = gnss_dop_50b;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.gnss_dop_50b)
}

// .Calmcar.drivers.IMU.Gnss_headingandpitch_50c gnss_headingandpitch_50c = 6;
inline bool Imu::has_gnss_headingandpitch_50c() const {
  return this != internal_default_instance() && gnss_headingandpitch_50c_ != NULL;
}
inline void Imu::clear_gnss_headingandpitch_50c() {
  if (GetArenaNoVirtual() == NULL && gnss_headingandpitch_50c_ != NULL) {
    delete gnss_headingandpitch_50c_;
  }
  gnss_headingandpitch_50c_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c& Imu::_internal_gnss_headingandpitch_50c() const {
  return *gnss_headingandpitch_50c_;
}
inline const ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c& Imu::gnss_headingandpitch_50c() const {
  const ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c* p = gnss_headingandpitch_50c_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.gnss_headingandpitch_50c)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c*>(
      &::Calmcar::drivers::IMU::_Gnss_headingandpitch_50c_default_instance_);
}
inline ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c* Imu::release_gnss_headingandpitch_50c() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.gnss_headingandpitch_50c)
  
  ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c* temp = gnss_headingandpitch_50c_;
  gnss_headingandpitch_50c_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Gnss_headingandpitch_50c* Imu::mutable_gnss_headingandpitch_50c() {
  
  if (gnss_headingandpitch_50c_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Gnss_headingandpitch_50c>(GetArenaNoVirtual());
    gnss_headingandpitch_50c_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.gnss_headingandpitch_50c)
  return gnss_headingandpitch_50c_;
}
inline void Imu::set_allocated_gnss_headingandpitch_50c(::Calmcar::drivers::IMU::Gnss_headingandpitch_50c* gnss_headingandpitch_50c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gnss_headingandpitch_50c_;
  }
  if (gnss_headingandpitch_50c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gnss_headingandpitch_50c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gnss_headingandpitch_50c, submessage_arena);
    }
    
  } else {
    
  }
  gnss_headingandpitch_50c_ = gnss_headingandpitch_50c;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.gnss_headingandpitch_50c)
}

// .Calmcar.drivers.IMU.Gnss_heightandweek_50a gnss_heightandweek_50a = 7;
inline bool Imu::has_gnss_heightandweek_50a() const {
  return this != internal_default_instance() && gnss_heightandweek_50a_ != NULL;
}
inline void Imu::clear_gnss_heightandweek_50a() {
  if (GetArenaNoVirtual() == NULL && gnss_heightandweek_50a_ != NULL) {
    delete gnss_heightandweek_50a_;
  }
  gnss_heightandweek_50a_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Gnss_heightandweek_50a& Imu::_internal_gnss_heightandweek_50a() const {
  return *gnss_heightandweek_50a_;
}
inline const ::Calmcar::drivers::IMU::Gnss_heightandweek_50a& Imu::gnss_heightandweek_50a() const {
  const ::Calmcar::drivers::IMU::Gnss_heightandweek_50a* p = gnss_heightandweek_50a_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.gnss_heightandweek_50a)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Gnss_heightandweek_50a*>(
      &::Calmcar::drivers::IMU::_Gnss_heightandweek_50a_default_instance_);
}
inline ::Calmcar::drivers::IMU::Gnss_heightandweek_50a* Imu::release_gnss_heightandweek_50a() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.gnss_heightandweek_50a)
  
  ::Calmcar::drivers::IMU::Gnss_heightandweek_50a* temp = gnss_heightandweek_50a_;
  gnss_heightandweek_50a_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Gnss_heightandweek_50a* Imu::mutable_gnss_heightandweek_50a() {
  
  if (gnss_heightandweek_50a_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Gnss_heightandweek_50a>(GetArenaNoVirtual());
    gnss_heightandweek_50a_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.gnss_heightandweek_50a)
  return gnss_heightandweek_50a_;
}
inline void Imu::set_allocated_gnss_heightandweek_50a(::Calmcar::drivers::IMU::Gnss_heightandweek_50a* gnss_heightandweek_50a) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gnss_heightandweek_50a_;
  }
  if (gnss_heightandweek_50a) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gnss_heightandweek_50a = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gnss_heightandweek_50a, submessage_arena);
    }
    
  } else {
    
  }
  gnss_heightandweek_50a_ = gnss_heightandweek_50a;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.gnss_heightandweek_50a)
}

// .Calmcar.drivers.IMU.Gnss_utc_508 gnss_utc_508 = 8;
inline bool Imu::has_gnss_utc_508() const {
  return this != internal_default_instance() && gnss_utc_508_ != NULL;
}
inline void Imu::clear_gnss_utc_508() {
  if (GetArenaNoVirtual() == NULL && gnss_utc_508_ != NULL) {
    delete gnss_utc_508_;
  }
  gnss_utc_508_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Gnss_utc_508& Imu::_internal_gnss_utc_508() const {
  return *gnss_utc_508_;
}
inline const ::Calmcar::drivers::IMU::Gnss_utc_508& Imu::gnss_utc_508() const {
  const ::Calmcar::drivers::IMU::Gnss_utc_508* p = gnss_utc_508_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.gnss_utc_508)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Gnss_utc_508*>(
      &::Calmcar::drivers::IMU::_Gnss_utc_508_default_instance_);
}
inline ::Calmcar::drivers::IMU::Gnss_utc_508* Imu::release_gnss_utc_508() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.gnss_utc_508)
  
  ::Calmcar::drivers::IMU::Gnss_utc_508* temp = gnss_utc_508_;
  gnss_utc_508_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Gnss_utc_508* Imu::mutable_gnss_utc_508() {
  
  if (gnss_utc_508_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Gnss_utc_508>(GetArenaNoVirtual());
    gnss_utc_508_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.gnss_utc_508)
  return gnss_utc_508_;
}
inline void Imu::set_allocated_gnss_utc_508(::Calmcar::drivers::IMU::Gnss_utc_508* gnss_utc_508) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gnss_utc_508_;
  }
  if (gnss_utc_508) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gnss_utc_508 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gnss_utc_508, submessage_arena);
    }
    
  } else {
    
  }
  gnss_utc_508_ = gnss_utc_508;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.gnss_utc_508)
}

// .Calmcar.drivers.IMU.Gnss_latitudelongitude_509 gnss_latitudelongitude_509 = 9;
inline bool Imu::has_gnss_latitudelongitude_509() const {
  return this != internal_default_instance() && gnss_latitudelongitude_509_ != NULL;
}
inline void Imu::clear_gnss_latitudelongitude_509() {
  if (GetArenaNoVirtual() == NULL && gnss_latitudelongitude_509_ != NULL) {
    delete gnss_latitudelongitude_509_;
  }
  gnss_latitudelongitude_509_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509& Imu::_internal_gnss_latitudelongitude_509() const {
  return *gnss_latitudelongitude_509_;
}
inline const ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509& Imu::gnss_latitudelongitude_509() const {
  const ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509* p = gnss_latitudelongitude_509_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.gnss_latitudelongitude_509)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509*>(
      &::Calmcar::drivers::IMU::_Gnss_latitudelongitude_509_default_instance_);
}
inline ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509* Imu::release_gnss_latitudelongitude_509() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.gnss_latitudelongitude_509)
  
  ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509* temp = gnss_latitudelongitude_509_;
  gnss_latitudelongitude_509_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Gnss_latitudelongitude_509* Imu::mutable_gnss_latitudelongitude_509() {
  
  if (gnss_latitudelongitude_509_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Gnss_latitudelongitude_509>(GetArenaNoVirtual());
    gnss_latitudelongitude_509_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.gnss_latitudelongitude_509)
  return gnss_latitudelongitude_509_;
}
inline void Imu::set_allocated_gnss_latitudelongitude_509(::Calmcar::drivers::IMU::Gnss_latitudelongitude_509* gnss_latitudelongitude_509) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gnss_latitudelongitude_509_;
  }
  if (gnss_latitudelongitude_509) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gnss_latitudelongitude_509 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gnss_latitudelongitude_509, submessage_arena);
    }
    
  } else {
    
  }
  gnss_latitudelongitude_509_ = gnss_latitudelongitude_509;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.gnss_latitudelongitude_509)
}

// .Calmcar.drivers.IMU.Ins_datainfo_506 ins_datainfo_506 = 10;
inline bool Imu::has_ins_datainfo_506() const {
  return this != internal_default_instance() && ins_datainfo_506_ != NULL;
}
inline void Imu::clear_ins_datainfo_506() {
  if (GetArenaNoVirtual() == NULL && ins_datainfo_506_ != NULL) {
    delete ins_datainfo_506_;
  }
  ins_datainfo_506_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Ins_datainfo_506& Imu::_internal_ins_datainfo_506() const {
  return *ins_datainfo_506_;
}
inline const ::Calmcar::drivers::IMU::Ins_datainfo_506& Imu::ins_datainfo_506() const {
  const ::Calmcar::drivers::IMU::Ins_datainfo_506* p = ins_datainfo_506_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.ins_datainfo_506)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Ins_datainfo_506*>(
      &::Calmcar::drivers::IMU::_Ins_datainfo_506_default_instance_);
}
inline ::Calmcar::drivers::IMU::Ins_datainfo_506* Imu::release_ins_datainfo_506() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.ins_datainfo_506)
  
  ::Calmcar::drivers::IMU::Ins_datainfo_506* temp = ins_datainfo_506_;
  ins_datainfo_506_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Ins_datainfo_506* Imu::mutable_ins_datainfo_506() {
  
  if (ins_datainfo_506_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_datainfo_506>(GetArenaNoVirtual());
    ins_datainfo_506_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.ins_datainfo_506)
  return ins_datainfo_506_;
}
inline void Imu::set_allocated_ins_datainfo_506(::Calmcar::drivers::IMU::Ins_datainfo_506* ins_datainfo_506) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ins_datainfo_506_;
  }
  if (ins_datainfo_506) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ins_datainfo_506 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ins_datainfo_506, submessage_arena);
    }
    
  } else {
    
  }
  ins_datainfo_506_ = ins_datainfo_506;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.ins_datainfo_506)
}

// .Calmcar.drivers.IMU.Ins_std_507 ins_std_507 = 11;
inline bool Imu::has_ins_std_507() const {
  return this != internal_default_instance() && ins_std_507_ != NULL;
}
inline void Imu::clear_ins_std_507() {
  if (GetArenaNoVirtual() == NULL && ins_std_507_ != NULL) {
    delete ins_std_507_;
  }
  ins_std_507_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Ins_std_507& Imu::_internal_ins_std_507() const {
  return *ins_std_507_;
}
inline const ::Calmcar::drivers::IMU::Ins_std_507& Imu::ins_std_507() const {
  const ::Calmcar::drivers::IMU::Ins_std_507* p = ins_std_507_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.ins_std_507)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Ins_std_507*>(
      &::Calmcar::drivers::IMU::_Ins_std_507_default_instance_);
}
inline ::Calmcar::drivers::IMU::Ins_std_507* Imu::release_ins_std_507() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.ins_std_507)
  
  ::Calmcar::drivers::IMU::Ins_std_507* temp = ins_std_507_;
  ins_std_507_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Ins_std_507* Imu::mutable_ins_std_507() {
  
  if (ins_std_507_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_std_507>(GetArenaNoVirtual());
    ins_std_507_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.ins_std_507)
  return ins_std_507_;
}
inline void Imu::set_allocated_ins_std_507(::Calmcar::drivers::IMU::Ins_std_507* ins_std_507) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ins_std_507_;
  }
  if (ins_std_507) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ins_std_507 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ins_std_507, submessage_arena);
    }
    
  } else {
    
  }
  ins_std_507_ = ins_std_507;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.ins_std_507)
}

// .Calmcar.drivers.IMU.Ins_latitudelongitude_504 ins_latitudelongitude_504 = 12;
inline bool Imu::has_ins_latitudelongitude_504() const {
  return this != internal_default_instance() && ins_latitudelongitude_504_ != NULL;
}
inline void Imu::clear_ins_latitudelongitude_504() {
  if (GetArenaNoVirtual() == NULL && ins_latitudelongitude_504_ != NULL) {
    delete ins_latitudelongitude_504_;
  }
  ins_latitudelongitude_504_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Ins_latitudelongitude_504& Imu::_internal_ins_latitudelongitude_504() const {
  return *ins_latitudelongitude_504_;
}
inline const ::Calmcar::drivers::IMU::Ins_latitudelongitude_504& Imu::ins_latitudelongitude_504() const {
  const ::Calmcar::drivers::IMU::Ins_latitudelongitude_504* p = ins_latitudelongitude_504_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.ins_latitudelongitude_504)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Ins_latitudelongitude_504*>(
      &::Calmcar::drivers::IMU::_Ins_latitudelongitude_504_default_instance_);
}
inline ::Calmcar::drivers::IMU::Ins_latitudelongitude_504* Imu::release_ins_latitudelongitude_504() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.ins_latitudelongitude_504)
  
  ::Calmcar::drivers::IMU::Ins_latitudelongitude_504* temp = ins_latitudelongitude_504_;
  ins_latitudelongitude_504_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Ins_latitudelongitude_504* Imu::mutable_ins_latitudelongitude_504() {
  
  if (ins_latitudelongitude_504_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_latitudelongitude_504>(GetArenaNoVirtual());
    ins_latitudelongitude_504_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.ins_latitudelongitude_504)
  return ins_latitudelongitude_504_;
}
inline void Imu::set_allocated_ins_latitudelongitude_504(::Calmcar::drivers::IMU::Ins_latitudelongitude_504* ins_latitudelongitude_504) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ins_latitudelongitude_504_;
  }
  if (ins_latitudelongitude_504) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ins_latitudelongitude_504 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ins_latitudelongitude_504, submessage_arena);
    }
    
  } else {
    
  }
  ins_latitudelongitude_504_ = ins_latitudelongitude_504;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.ins_latitudelongitude_504)
}

// .Calmcar.drivers.IMU.Ins_speed_505 ins_speed_505 = 13;
inline bool Imu::has_ins_speed_505() const {
  return this != internal_default_instance() && ins_speed_505_ != NULL;
}
inline void Imu::clear_ins_speed_505() {
  if (GetArenaNoVirtual() == NULL && ins_speed_505_ != NULL) {
    delete ins_speed_505_;
  }
  ins_speed_505_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Ins_speed_505& Imu::_internal_ins_speed_505() const {
  return *ins_speed_505_;
}
inline const ::Calmcar::drivers::IMU::Ins_speed_505& Imu::ins_speed_505() const {
  const ::Calmcar::drivers::IMU::Ins_speed_505* p = ins_speed_505_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.ins_speed_505)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Ins_speed_505*>(
      &::Calmcar::drivers::IMU::_Ins_speed_505_default_instance_);
}
inline ::Calmcar::drivers::IMU::Ins_speed_505* Imu::release_ins_speed_505() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.ins_speed_505)
  
  ::Calmcar::drivers::IMU::Ins_speed_505* temp = ins_speed_505_;
  ins_speed_505_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Ins_speed_505* Imu::mutable_ins_speed_505() {
  
  if (ins_speed_505_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_speed_505>(GetArenaNoVirtual());
    ins_speed_505_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.ins_speed_505)
  return ins_speed_505_;
}
inline void Imu::set_allocated_ins_speed_505(::Calmcar::drivers::IMU::Ins_speed_505* ins_speed_505) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ins_speed_505_;
  }
  if (ins_speed_505) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ins_speed_505 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ins_speed_505, submessage_arena);
    }
    
  } else {
    
  }
  ins_speed_505_ = ins_speed_505;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.ins_speed_505)
}

// .Calmcar.drivers.IMU.Ins_headingpitchroll_502 ins_headingpitchroll_502 = 14;
inline bool Imu::has_ins_headingpitchroll_502() const {
  return this != internal_default_instance() && ins_headingpitchroll_502_ != NULL;
}
inline void Imu::clear_ins_headingpitchroll_502() {
  if (GetArenaNoVirtual() == NULL && ins_headingpitchroll_502_ != NULL) {
    delete ins_headingpitchroll_502_;
  }
  ins_headingpitchroll_502_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Ins_headingpitchroll_502& Imu::_internal_ins_headingpitchroll_502() const {
  return *ins_headingpitchroll_502_;
}
inline const ::Calmcar::drivers::IMU::Ins_headingpitchroll_502& Imu::ins_headingpitchroll_502() const {
  const ::Calmcar::drivers::IMU::Ins_headingpitchroll_502* p = ins_headingpitchroll_502_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.ins_headingpitchroll_502)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Ins_headingpitchroll_502*>(
      &::Calmcar::drivers::IMU::_Ins_headingpitchroll_502_default_instance_);
}
inline ::Calmcar::drivers::IMU::Ins_headingpitchroll_502* Imu::release_ins_headingpitchroll_502() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.ins_headingpitchroll_502)
  
  ::Calmcar::drivers::IMU::Ins_headingpitchroll_502* temp = ins_headingpitchroll_502_;
  ins_headingpitchroll_502_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Ins_headingpitchroll_502* Imu::mutable_ins_headingpitchroll_502() {
  
  if (ins_headingpitchroll_502_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_headingpitchroll_502>(GetArenaNoVirtual());
    ins_headingpitchroll_502_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.ins_headingpitchroll_502)
  return ins_headingpitchroll_502_;
}
inline void Imu::set_allocated_ins_headingpitchroll_502(::Calmcar::drivers::IMU::Ins_headingpitchroll_502* ins_headingpitchroll_502) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ins_headingpitchroll_502_;
  }
  if (ins_headingpitchroll_502) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ins_headingpitchroll_502 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ins_headingpitchroll_502, submessage_arena);
    }
    
  } else {
    
  }
  ins_headingpitchroll_502_ = ins_headingpitchroll_502;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.ins_headingpitchroll_502)
}

// .Calmcar.drivers.IMU.Ins_heightandtime_503 ins_heightandtime_503 = 15;
inline bool Imu::has_ins_heightandtime_503() const {
  return this != internal_default_instance() && ins_heightandtime_503_ != NULL;
}
inline void Imu::clear_ins_heightandtime_503() {
  if (GetArenaNoVirtual() == NULL && ins_heightandtime_503_ != NULL) {
    delete ins_heightandtime_503_;
  }
  ins_heightandtime_503_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Ins_heightandtime_503& Imu::_internal_ins_heightandtime_503() const {
  return *ins_heightandtime_503_;
}
inline const ::Calmcar::drivers::IMU::Ins_heightandtime_503& Imu::ins_heightandtime_503() const {
  const ::Calmcar::drivers::IMU::Ins_heightandtime_503* p = ins_heightandtime_503_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.ins_heightandtime_503)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Ins_heightandtime_503*>(
      &::Calmcar::drivers::IMU::_Ins_heightandtime_503_default_instance_);
}
inline ::Calmcar::drivers::IMU::Ins_heightandtime_503* Imu::release_ins_heightandtime_503() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.ins_heightandtime_503)
  
  ::Calmcar::drivers::IMU::Ins_heightandtime_503* temp = ins_heightandtime_503_;
  ins_heightandtime_503_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Ins_heightandtime_503* Imu::mutable_ins_heightandtime_503() {
  
  if (ins_heightandtime_503_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_heightandtime_503>(GetArenaNoVirtual());
    ins_heightandtime_503_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.ins_heightandtime_503)
  return ins_heightandtime_503_;
}
inline void Imu::set_allocated_ins_heightandtime_503(::Calmcar::drivers::IMU::Ins_heightandtime_503* ins_heightandtime_503) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ins_heightandtime_503_;
  }
  if (ins_heightandtime_503) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ins_heightandtime_503 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ins_heightandtime_503, submessage_arena);
    }
    
  } else {
    
  }
  ins_heightandtime_503_ = ins_heightandtime_503;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.ins_heightandtime_503)
}

// .Calmcar.drivers.IMU.Ins_acc_500 ins_acc_500 = 16;
inline bool Imu::has_ins_acc_500() const {
  return this != internal_default_instance() && ins_acc_500_ != NULL;
}
inline void Imu::clear_ins_acc_500() {
  if (GetArenaNoVirtual() == NULL && ins_acc_500_ != NULL) {
    delete ins_acc_500_;
  }
  ins_acc_500_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Ins_acc_500& Imu::_internal_ins_acc_500() const {
  return *ins_acc_500_;
}
inline const ::Calmcar::drivers::IMU::Ins_acc_500& Imu::ins_acc_500() const {
  const ::Calmcar::drivers::IMU::Ins_acc_500* p = ins_acc_500_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.ins_acc_500)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Ins_acc_500*>(
      &::Calmcar::drivers::IMU::_Ins_acc_500_default_instance_);
}
inline ::Calmcar::drivers::IMU::Ins_acc_500* Imu::release_ins_acc_500() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.ins_acc_500)
  
  ::Calmcar::drivers::IMU::Ins_acc_500* temp = ins_acc_500_;
  ins_acc_500_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Ins_acc_500* Imu::mutable_ins_acc_500() {
  
  if (ins_acc_500_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_acc_500>(GetArenaNoVirtual());
    ins_acc_500_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.ins_acc_500)
  return ins_acc_500_;
}
inline void Imu::set_allocated_ins_acc_500(::Calmcar::drivers::IMU::Ins_acc_500* ins_acc_500) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ins_acc_500_;
  }
  if (ins_acc_500) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ins_acc_500 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ins_acc_500, submessage_arena);
    }
    
  } else {
    
  }
  ins_acc_500_ = ins_acc_500;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.ins_acc_500)
}

// .Calmcar.drivers.IMU.Ins_gyro_501 ins_gyro_501 = 17;
inline bool Imu::has_ins_gyro_501() const {
  return this != internal_default_instance() && ins_gyro_501_ != NULL;
}
inline void Imu::clear_ins_gyro_501() {
  if (GetArenaNoVirtual() == NULL && ins_gyro_501_ != NULL) {
    delete ins_gyro_501_;
  }
  ins_gyro_501_ = NULL;
}
inline const ::Calmcar::drivers::IMU::Ins_gyro_501& Imu::_internal_ins_gyro_501() const {
  return *ins_gyro_501_;
}
inline const ::Calmcar::drivers::IMU::Ins_gyro_501& Imu::ins_gyro_501() const {
  const ::Calmcar::drivers::IMU::Ins_gyro_501* p = ins_gyro_501_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.IMU.Imu.ins_gyro_501)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::IMU::Ins_gyro_501*>(
      &::Calmcar::drivers::IMU::_Ins_gyro_501_default_instance_);
}
inline ::Calmcar::drivers::IMU::Ins_gyro_501* Imu::release_ins_gyro_501() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.IMU.Imu.ins_gyro_501)
  
  ::Calmcar::drivers::IMU::Ins_gyro_501* temp = ins_gyro_501_;
  ins_gyro_501_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::IMU::Ins_gyro_501* Imu::mutable_ins_gyro_501() {
  
  if (ins_gyro_501_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::IMU::Ins_gyro_501>(GetArenaNoVirtual());
    ins_gyro_501_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.IMU.Imu.ins_gyro_501)
  return ins_gyro_501_;
}
inline void Imu::set_allocated_ins_gyro_501(::Calmcar::drivers::IMU::Ins_gyro_501* ins_gyro_501) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ins_gyro_501_;
  }
  if (ins_gyro_501) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ins_gyro_501 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ins_gyro_501, submessage_arena);
    }
    
  } else {
    
  }
  ins_gyro_501_ = ins_gyro_501;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.IMU.Imu.ins_gyro_501)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace IMU
}  // namespace drivers
}  // namespace Calmcar

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Steering_report_65_EnType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Steering_report_65_OverrideType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Steering_report_65_FltwdcType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Steering_report_65_Flt1Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Steering_report_65_Flt2Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Steering_report_65_FltcalType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Steering_report_65_TmoutType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Gear_report_67_StateType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Gear_report_67_DriverType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Gear_report_67_CmdType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Gear_report_67_FltbusType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Gear_report_67_RejectType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_car_statusType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_headingType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_gnssflag_posType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::IMU::Ins_datainfo_506_Ins_statusType> : ::std::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_imu_2eproto
