// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tsr.proto

#ifndef PROTOBUF_INCLUDED_tsr_2eproto
#define PROTOBUF_INCLUDED_tsr_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "header.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tsr_2eproto 

namespace protobuf_tsr_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_tsr_2eproto
namespace Calmcar {
namespace drivers {
namespace TSR {
class Aftermarket_ext_669;
class Aftermarket_ext_669DefaultTypeInternal;
extern Aftermarket_ext_669DefaultTypeInternal _Aftermarket_ext_669_default_instance_;
class Aws_700;
class Aws_700DefaultTypeInternal;
extern Aws_700DefaultTypeInternal _Aws_700_default_instance_;
class Signal_car_760;
class Signal_car_760DefaultTypeInternal;
extern Signal_car_760DefaultTypeInternal _Signal_car_760_default_instance_;
class Tsr;
class TsrDefaultTypeInternal;
extern TsrDefaultTypeInternal _Tsr_default_instance_;
class Tsr_detail_1_720;
class Tsr_detail_1_720DefaultTypeInternal;
extern Tsr_detail_1_720DefaultTypeInternal _Tsr_detail_1_720_default_instance_;
class Tsr_detail_2_721;
class Tsr_detail_2_721DefaultTypeInternal;
extern Tsr_detail_2_721DefaultTypeInternal _Tsr_detail_2_721_default_instance_;
class Tsr_detail_3_722;
class Tsr_detail_3_722DefaultTypeInternal;
extern Tsr_detail_3_722DefaultTypeInternal _Tsr_detail_3_722_default_instance_;
class Tsr_detail_4_723;
class Tsr_detail_4_723DefaultTypeInternal;
extern Tsr_detail_4_723DefaultTypeInternal _Tsr_detail_4_723_default_instance_;
class Tsr_detail_5_724;
class Tsr_detail_5_724DefaultTypeInternal;
extern Tsr_detail_5_724DefaultTypeInternal _Tsr_detail_5_724_default_instance_;
class Tsr_detail_6_725;
class Tsr_detail_6_725DefaultTypeInternal;
extern Tsr_detail_6_725DefaultTypeInternal _Tsr_detail_6_725_default_instance_;
class Tsr_detail_7_726;
class Tsr_detail_7_726DefaultTypeInternal;
extern Tsr_detail_7_726DefaultTypeInternal _Tsr_detail_7_726_default_instance_;
class Vision_only_tsr_727;
class Vision_only_tsr_727DefaultTypeInternal;
extern Vision_only_tsr_727DefaultTypeInternal _Vision_only_tsr_727_default_instance_;
}  // namespace TSR
}  // namespace drivers
}  // namespace Calmcar
namespace google {
namespace protobuf {
template<> ::Calmcar::drivers::TSR::Aftermarket_ext_669* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Aftermarket_ext_669>(Arena*);
template<> ::Calmcar::drivers::TSR::Aws_700* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Aws_700>(Arena*);
template<> ::Calmcar::drivers::TSR::Signal_car_760* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Signal_car_760>(Arena*);
template<> ::Calmcar::drivers::TSR::Tsr* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr>(Arena*);
template<> ::Calmcar::drivers::TSR::Tsr_detail_1_720* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_1_720>(Arena*);
template<> ::Calmcar::drivers::TSR::Tsr_detail_2_721* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_2_721>(Arena*);
template<> ::Calmcar::drivers::TSR::Tsr_detail_3_722* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_3_722>(Arena*);
template<> ::Calmcar::drivers::TSR::Tsr_detail_4_723* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_4_723>(Arena*);
template<> ::Calmcar::drivers::TSR::Tsr_detail_5_724* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_5_724>(Arena*);
template<> ::Calmcar::drivers::TSR::Tsr_detail_6_725* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_6_725>(Arena*);
template<> ::Calmcar::drivers::TSR::Tsr_detail_7_726* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_7_726>(Arena*);
template<> ::Calmcar::drivers::TSR::Vision_only_tsr_727* Arena::CreateMaybeMessage<::Calmcar::drivers::TSR::Vision_only_tsr_727>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Calmcar {
namespace drivers {
namespace TSR {

enum Aftermarket_ext_669_Ldw_availability_rightType {
  Aftermarket_ext_669_Ldw_availability_rightType_LDW_AVAILABILITY_RIGHT_UNAVALABLE = 0,
  Aftermarket_ext_669_Ldw_availability_rightType_LDW_AVAILABILITY_RIGHT_AVAILABLE = 1,
  Aftermarket_ext_669_Ldw_availability_rightType_Aftermarket_ext_669_Ldw_availability_rightType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aftermarket_ext_669_Ldw_availability_rightType_Aftermarket_ext_669_Ldw_availability_rightType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aftermarket_ext_669_Ldw_availability_rightType_IsValid(int value);
const Aftermarket_ext_669_Ldw_availability_rightType Aftermarket_ext_669_Ldw_availability_rightType_Ldw_availability_rightType_MIN = Aftermarket_ext_669_Ldw_availability_rightType_LDW_AVAILABILITY_RIGHT_UNAVALABLE;
const Aftermarket_ext_669_Ldw_availability_rightType Aftermarket_ext_669_Ldw_availability_rightType_Ldw_availability_rightType_MAX = Aftermarket_ext_669_Ldw_availability_rightType_LDW_AVAILABILITY_RIGHT_AVAILABLE;
const int Aftermarket_ext_669_Ldw_availability_rightType_Ldw_availability_rightType_ARRAYSIZE = Aftermarket_ext_669_Ldw_availability_rightType_Ldw_availability_rightType_MAX + 1;

enum Aftermarket_ext_669_Ldw_availability_leftType {
  Aftermarket_ext_669_Ldw_availability_leftType_LDW_AVAILABILITY_LEFT_UNAVALABLE = 0,
  Aftermarket_ext_669_Ldw_availability_leftType_LDW_AVAILABILITY_LEFT_AVAILABLE = 1,
  Aftermarket_ext_669_Ldw_availability_leftType_Aftermarket_ext_669_Ldw_availability_leftType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aftermarket_ext_669_Ldw_availability_leftType_Aftermarket_ext_669_Ldw_availability_leftType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aftermarket_ext_669_Ldw_availability_leftType_IsValid(int value);
const Aftermarket_ext_669_Ldw_availability_leftType Aftermarket_ext_669_Ldw_availability_leftType_Ldw_availability_leftType_MIN = Aftermarket_ext_669_Ldw_availability_leftType_LDW_AVAILABILITY_LEFT_UNAVALABLE;
const Aftermarket_ext_669_Ldw_availability_leftType Aftermarket_ext_669_Ldw_availability_leftType_Ldw_availability_leftType_MAX = Aftermarket_ext_669_Ldw_availability_leftType_LDW_AVAILABILITY_LEFT_AVAILABLE;
const int Aftermarket_ext_669_Ldw_availability_leftType_Ldw_availability_leftType_ARRAYSIZE = Aftermarket_ext_669_Ldw_availability_leftType_Ldw_availability_leftType_MAX + 1;

enum Aftermarket_ext_669_Lane_type_rightType {
  Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_DASHED = 0,
  Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_SOLID = 1,
  Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_NONE = 2,
  Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_ROAD_EDGE = 3,
  Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_DOUBLE_LANE_MARK = 4,
  Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_BOTT_S_DOTS = 5,
  Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_INVALID = 6,
  Aftermarket_ext_669_Lane_type_rightType_Aftermarket_ext_669_Lane_type_rightType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aftermarket_ext_669_Lane_type_rightType_Aftermarket_ext_669_Lane_type_rightType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aftermarket_ext_669_Lane_type_rightType_IsValid(int value);
const Aftermarket_ext_669_Lane_type_rightType Aftermarket_ext_669_Lane_type_rightType_Lane_type_rightType_MIN = Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_DASHED;
const Aftermarket_ext_669_Lane_type_rightType Aftermarket_ext_669_Lane_type_rightType_Lane_type_rightType_MAX = Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_INVALID;
const int Aftermarket_ext_669_Lane_type_rightType_Lane_type_rightType_ARRAYSIZE = Aftermarket_ext_669_Lane_type_rightType_Lane_type_rightType_MAX + 1;

enum Aftermarket_ext_669_Lane_type_leftType {
  Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_DASHED = 0,
  Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_SOLID = 1,
  Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_NONE = 2,
  Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_ROAD_EDGE = 3,
  Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_DOUBLE_LANE_MARK = 4,
  Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_BOTT_S_DOTS = 5,
  Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_INVALID = 6,
  Aftermarket_ext_669_Lane_type_leftType_Aftermarket_ext_669_Lane_type_leftType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aftermarket_ext_669_Lane_type_leftType_Aftermarket_ext_669_Lane_type_leftType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aftermarket_ext_669_Lane_type_leftType_IsValid(int value);
const Aftermarket_ext_669_Lane_type_leftType Aftermarket_ext_669_Lane_type_leftType_Lane_type_leftType_MIN = Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_DASHED;
const Aftermarket_ext_669_Lane_type_leftType Aftermarket_ext_669_Lane_type_leftType_Lane_type_leftType_MAX = Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_INVALID;
const int Aftermarket_ext_669_Lane_type_leftType_Lane_type_leftType_ARRAYSIZE = Aftermarket_ext_669_Lane_type_leftType_Lane_type_leftType_MAX + 1;

enum Aftermarket_ext_669_Lane_conf_rightType {
  Aftermarket_ext_669_Lane_conf_rightType_LANE_CONF_RIGHT_NO_LANE_CONF = 0,
  Aftermarket_ext_669_Lane_conf_rightType_LANE_CONF_RIGHT_BAD_LANE_CONF = 1,
  Aftermarket_ext_669_Lane_conf_rightType_LANE_CONF_RIGHT_GODD_LANE_CONF = 2,
  Aftermarket_ext_669_Lane_conf_rightType_LANE_CONF_RIGHT_VERY_GOOD_LANE_CONF = 3,
  Aftermarket_ext_669_Lane_conf_rightType_Aftermarket_ext_669_Lane_conf_rightType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aftermarket_ext_669_Lane_conf_rightType_Aftermarket_ext_669_Lane_conf_rightType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aftermarket_ext_669_Lane_conf_rightType_IsValid(int value);
const Aftermarket_ext_669_Lane_conf_rightType Aftermarket_ext_669_Lane_conf_rightType_Lane_conf_rightType_MIN = Aftermarket_ext_669_Lane_conf_rightType_LANE_CONF_RIGHT_NO_LANE_CONF;
const Aftermarket_ext_669_Lane_conf_rightType Aftermarket_ext_669_Lane_conf_rightType_Lane_conf_rightType_MAX = Aftermarket_ext_669_Lane_conf_rightType_LANE_CONF_RIGHT_VERY_GOOD_LANE_CONF;
const int Aftermarket_ext_669_Lane_conf_rightType_Lane_conf_rightType_ARRAYSIZE = Aftermarket_ext_669_Lane_conf_rightType_Lane_conf_rightType_MAX + 1;

enum Aftermarket_ext_669_Lane_conf_leftType {
  Aftermarket_ext_669_Lane_conf_leftType_LANE_CONF_LEFT_NO_LANE_CONF = 0,
  Aftermarket_ext_669_Lane_conf_leftType_LANE_CONF_LEFT_BAD_LANE_CONF = 1,
  Aftermarket_ext_669_Lane_conf_leftType_LANE_CONF_LEFT_GODD_LANE_CONF = 2,
  Aftermarket_ext_669_Lane_conf_leftType_LANE_CONF_LEFT_VERY_GOOD_LANE_CONF = 3,
  Aftermarket_ext_669_Lane_conf_leftType_Aftermarket_ext_669_Lane_conf_leftType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aftermarket_ext_669_Lane_conf_leftType_Aftermarket_ext_669_Lane_conf_leftType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aftermarket_ext_669_Lane_conf_leftType_IsValid(int value);
const Aftermarket_ext_669_Lane_conf_leftType Aftermarket_ext_669_Lane_conf_leftType_Lane_conf_leftType_MIN = Aftermarket_ext_669_Lane_conf_leftType_LANE_CONF_LEFT_NO_LANE_CONF;
const Aftermarket_ext_669_Lane_conf_leftType Aftermarket_ext_669_Lane_conf_leftType_Lane_conf_leftType_MAX = Aftermarket_ext_669_Lane_conf_leftType_LANE_CONF_LEFT_VERY_GOOD_LANE_CONF;
const int Aftermarket_ext_669_Lane_conf_leftType_Lane_conf_leftType_ARRAYSIZE = Aftermarket_ext_669_Lane_conf_leftType_Lane_conf_leftType_MAX + 1;

enum Signal_car_760_Wipers_availabledType {
  Signal_car_760_Wipers_availabledType_WIPERS_AVAILABLED_OFF = 0,
  Signal_car_760_Wipers_availabledType_WIPERS_AVAILABLED_ON = 1,
  Signal_car_760_Wipers_availabledType_Signal_car_760_Wipers_availabledType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Signal_car_760_Wipers_availabledType_Signal_car_760_Wipers_availabledType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Signal_car_760_Wipers_availabledType_IsValid(int value);
const Signal_car_760_Wipers_availabledType Signal_car_760_Wipers_availabledType_Wipers_availabledType_MIN = Signal_car_760_Wipers_availabledType_WIPERS_AVAILABLED_OFF;
const Signal_car_760_Wipers_availabledType Signal_car_760_Wipers_availabledType_Wipers_availabledType_MAX = Signal_car_760_Wipers_availabledType_WIPERS_AVAILABLED_ON;
const int Signal_car_760_Wipers_availabledType_Wipers_availabledType_ARRAYSIZE = Signal_car_760_Wipers_availabledType_Wipers_availabledType_MAX + 1;

enum Signal_car_760_Highbeam_availabledType {
  Signal_car_760_Highbeam_availabledType_HIGHBEAM_AVAILABLED_OFF = 0,
  Signal_car_760_Highbeam_availabledType_HIGHBEAM_AVAILABLED_ON = 1,
  Signal_car_760_Highbeam_availabledType_Signal_car_760_Highbeam_availabledType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Signal_car_760_Highbeam_availabledType_Signal_car_760_Highbeam_availabledType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Signal_car_760_Highbeam_availabledType_IsValid(int value);
const Signal_car_760_Highbeam_availabledType Signal_car_760_Highbeam_availabledType_Highbeam_availabledType_MIN = Signal_car_760_Highbeam_availabledType_HIGHBEAM_AVAILABLED_OFF;
const Signal_car_760_Highbeam_availabledType Signal_car_760_Highbeam_availabledType_Highbeam_availabledType_MAX = Signal_car_760_Highbeam_availabledType_HIGHBEAM_AVAILABLED_ON;
const int Signal_car_760_Highbeam_availabledType_Highbeam_availabledType_ARRAYSIZE = Signal_car_760_Highbeam_availabledType_Highbeam_availabledType_MAX + 1;

enum Signal_car_760_Lowbeam_availabledType {
  Signal_car_760_Lowbeam_availabledType_LOWBEAM_AVAILABLED_OFF = 0,
  Signal_car_760_Lowbeam_availabledType_LOWBEAM_AVAILABLED_ON = 1,
  Signal_car_760_Lowbeam_availabledType_Signal_car_760_Lowbeam_availabledType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Signal_car_760_Lowbeam_availabledType_Signal_car_760_Lowbeam_availabledType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Signal_car_760_Lowbeam_availabledType_IsValid(int value);
const Signal_car_760_Lowbeam_availabledType Signal_car_760_Lowbeam_availabledType_Lowbeam_availabledType_MIN = Signal_car_760_Lowbeam_availabledType_LOWBEAM_AVAILABLED_OFF;
const Signal_car_760_Lowbeam_availabledType Signal_car_760_Lowbeam_availabledType_Lowbeam_availabledType_MAX = Signal_car_760_Lowbeam_availabledType_LOWBEAM_AVAILABLED_ON;
const int Signal_car_760_Lowbeam_availabledType_Lowbeam_availabledType_ARRAYSIZE = Signal_car_760_Lowbeam_availabledType_Lowbeam_availabledType_MAX + 1;

enum Signal_car_760_BrakesType {
  Signal_car_760_BrakesType_BRAKES_OFF = 0,
  Signal_car_760_BrakesType_BRAKES_ON = 1,
  Signal_car_760_BrakesType_Signal_car_760_BrakesType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Signal_car_760_BrakesType_Signal_car_760_BrakesType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Signal_car_760_BrakesType_IsValid(int value);
const Signal_car_760_BrakesType Signal_car_760_BrakesType_BrakesType_MIN = Signal_car_760_BrakesType_BRAKES_OFF;
const Signal_car_760_BrakesType Signal_car_760_BrakesType_BrakesType_MAX = Signal_car_760_BrakesType_BRAKES_ON;
const int Signal_car_760_BrakesType_BrakesType_ARRAYSIZE = Signal_car_760_BrakesType_BrakesType_MAX + 1;

enum Signal_car_760_Left_blinkType {
  Signal_car_760_Left_blinkType_LEFT_BLINK_OFF = 0,
  Signal_car_760_Left_blinkType_LEFT_BLINK_ON = 1,
  Signal_car_760_Left_blinkType_Signal_car_760_Left_blinkType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Signal_car_760_Left_blinkType_Signal_car_760_Left_blinkType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Signal_car_760_Left_blinkType_IsValid(int value);
const Signal_car_760_Left_blinkType Signal_car_760_Left_blinkType_Left_blinkType_MIN = Signal_car_760_Left_blinkType_LEFT_BLINK_OFF;
const Signal_car_760_Left_blinkType Signal_car_760_Left_blinkType_Left_blinkType_MAX = Signal_car_760_Left_blinkType_LEFT_BLINK_ON;
const int Signal_car_760_Left_blinkType_Left_blinkType_ARRAYSIZE = Signal_car_760_Left_blinkType_Left_blinkType_MAX + 1;

enum Signal_car_760_Right_blinkType {
  Signal_car_760_Right_blinkType_RIGHT_BLINK_OFF = 0,
  Signal_car_760_Right_blinkType_RIGHT_BLINK_ON = 1,
  Signal_car_760_Right_blinkType_Signal_car_760_Right_blinkType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Signal_car_760_Right_blinkType_Signal_car_760_Right_blinkType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Signal_car_760_Right_blinkType_IsValid(int value);
const Signal_car_760_Right_blinkType Signal_car_760_Right_blinkType_Right_blinkType_MIN = Signal_car_760_Right_blinkType_RIGHT_BLINK_OFF;
const Signal_car_760_Right_blinkType Signal_car_760_Right_blinkType_Right_blinkType_MAX = Signal_car_760_Right_blinkType_RIGHT_BLINK_ON;
const int Signal_car_760_Right_blinkType_Right_blinkType_ARRAYSIZE = Signal_car_760_Right_blinkType_Right_blinkType_MAX + 1;

enum Signal_car_760_WippersType {
  Signal_car_760_WippersType_WIPPERS_OFF = 0,
  Signal_car_760_WippersType_WIPPERS_ON = 1,
  Signal_car_760_WippersType_Signal_car_760_WippersType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Signal_car_760_WippersType_Signal_car_760_WippersType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Signal_car_760_WippersType_IsValid(int value);
const Signal_car_760_WippersType Signal_car_760_WippersType_WippersType_MIN = Signal_car_760_WippersType_WIPPERS_OFF;
const Signal_car_760_WippersType Signal_car_760_WippersType_WippersType_MAX = Signal_car_760_WippersType_WIPPERS_ON;
const int Signal_car_760_WippersType_WippersType_ARRAYSIZE = Signal_car_760_WippersType_WippersType_MAX + 1;

enum Signal_car_760_LowbeamType {
  Signal_car_760_LowbeamType_LOWBEAM_OFF = 0,
  Signal_car_760_LowbeamType_LOWBEAM_ON = 1,
  Signal_car_760_LowbeamType_Signal_car_760_LowbeamType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Signal_car_760_LowbeamType_Signal_car_760_LowbeamType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Signal_car_760_LowbeamType_IsValid(int value);
const Signal_car_760_LowbeamType Signal_car_760_LowbeamType_LowbeamType_MIN = Signal_car_760_LowbeamType_LOWBEAM_OFF;
const Signal_car_760_LowbeamType Signal_car_760_LowbeamType_LowbeamType_MAX = Signal_car_760_LowbeamType_LOWBEAM_ON;
const int Signal_car_760_LowbeamType_LowbeamType_ARRAYSIZE = Signal_car_760_LowbeamType_LowbeamType_MAX + 1;

enum Signal_car_760_HighbeamType {
  Signal_car_760_HighbeamType_HIGHBEAM_OFF = 0,
  Signal_car_760_HighbeamType_HIGHBEAM_ON = 1,
  Signal_car_760_HighbeamType_Signal_car_760_HighbeamType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Signal_car_760_HighbeamType_Signal_car_760_HighbeamType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Signal_car_760_HighbeamType_IsValid(int value);
const Signal_car_760_HighbeamType Signal_car_760_HighbeamType_HighbeamType_MIN = Signal_car_760_HighbeamType_HIGHBEAM_OFF;
const Signal_car_760_HighbeamType Signal_car_760_HighbeamType_HighbeamType_MAX = Signal_car_760_HighbeamType_HIGHBEAM_ON;
const int Signal_car_760_HighbeamType_HighbeamType_ARRAYSIZE = Signal_car_760_HighbeamType_HighbeamType_MAX + 1;

enum Aws_700_Tsr_warning_levelType {
  Aws_700_Tsr_warning_levelType_TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_LESS_EQUAL_SPEED_10 = 0,
  Aws_700_Tsr_warning_levelType_TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_MORE_SPEED_10 = 1,
  Aws_700_Tsr_warning_levelType_TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_MORE_SPEED_20 = 2,
  Aws_700_Tsr_warning_levelType_TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_MORE_SPEED_30 = 3,
  Aws_700_Tsr_warning_levelType_Aws_700_Tsr_warning_levelType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Tsr_warning_levelType_Aws_700_Tsr_warning_levelType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Tsr_warning_levelType_IsValid(int value);
const Aws_700_Tsr_warning_levelType Aws_700_Tsr_warning_levelType_Tsr_warning_levelType_MIN = Aws_700_Tsr_warning_levelType_TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_LESS_EQUAL_SPEED_10;
const Aws_700_Tsr_warning_levelType Aws_700_Tsr_warning_levelType_Tsr_warning_levelType_MAX = Aws_700_Tsr_warning_levelType_TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_MORE_SPEED_30;
const int Aws_700_Tsr_warning_levelType_Tsr_warning_levelType_ARRAYSIZE = Aws_700_Tsr_warning_levelType_Tsr_warning_levelType_MAX + 1;

enum Aws_700_Tsr_enabbledType {
  Aws_700_Tsr_enabbledType_TSR_ENABBLED_OFF = 0,
  Aws_700_Tsr_enabbledType_TSR_ENABBLED_ON = 1,
  Aws_700_Tsr_enabbledType_Aws_700_Tsr_enabbledType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Tsr_enabbledType_Aws_700_Tsr_enabbledType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Tsr_enabbledType_IsValid(int value);
const Aws_700_Tsr_enabbledType Aws_700_Tsr_enabbledType_Tsr_enabbledType_MIN = Aws_700_Tsr_enabbledType_TSR_ENABBLED_OFF;
const Aws_700_Tsr_enabbledType Aws_700_Tsr_enabbledType_Tsr_enabbledType_MAX = Aws_700_Tsr_enabbledType_TSR_ENABBLED_ON;
const int Aws_700_Tsr_enabbledType_Tsr_enabbledType_ARRAYSIZE = Aws_700_Tsr_enabbledType_Tsr_enabbledType_MAX + 1;

enum Aws_700_Rainy_hw_enabledType {
  Aws_700_Rainy_hw_enabledType_RAINY_HW_ENABLED_OFF = 0,
  Aws_700_Rainy_hw_enabledType_RAINY_HW_ENABLED_ON = 1,
  Aws_700_Rainy_hw_enabledType_Aws_700_Rainy_hw_enabledType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Rainy_hw_enabledType_Aws_700_Rainy_hw_enabledType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Rainy_hw_enabledType_IsValid(int value);
const Aws_700_Rainy_hw_enabledType Aws_700_Rainy_hw_enabledType_Rainy_hw_enabledType_MIN = Aws_700_Rainy_hw_enabledType_RAINY_HW_ENABLED_OFF;
const Aws_700_Rainy_hw_enabledType Aws_700_Rainy_hw_enabledType_Rainy_hw_enabledType_MAX = Aws_700_Rainy_hw_enabledType_RAINY_HW_ENABLED_ON;
const int Aws_700_Rainy_hw_enabledType_Rainy_hw_enabledType_ARRAYSIZE = Aws_700_Rainy_hw_enabledType_Rainy_hw_enabledType_MAX + 1;

enum Aws_700_Rain_hwType {
  Aws_700_Rain_hwType_RAIN_HW_OFF = 0,
  Aws_700_Rain_hwType_RAIN_HW_ON = 1,
  Aws_700_Rain_hwType_Aws_700_Rain_hwType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Rain_hwType_Aws_700_Rain_hwType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Rain_hwType_IsValid(int value);
const Aws_700_Rain_hwType Aws_700_Rain_hwType_Rain_hwType_MIN = Aws_700_Rain_hwType_RAIN_HW_OFF;
const Aws_700_Rain_hwType Aws_700_Rain_hwType_Rain_hwType_MAX = Aws_700_Rain_hwType_RAIN_HW_ON;
const int Aws_700_Rain_hwType_Rain_hwType_ARRAYSIZE = Aws_700_Rain_hwType_Rain_hwType_MAX + 1;

enum Aws_700_Pcw_peddzType {
  Aws_700_Pcw_peddzType_PCW_PEDDZ_NO_PEDESTRIAN = 0,
  Aws_700_Pcw_peddzType_PCW_PEDDZ_PEDESTRIAN_IN_DANGER_ZONE = 2,
  Aws_700_Pcw_peddzType_PCW_PEDDZ_PCW = 3,
  Aws_700_Pcw_peddzType_Aws_700_Pcw_peddzType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Pcw_peddzType_Aws_700_Pcw_peddzType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Pcw_peddzType_IsValid(int value);
const Aws_700_Pcw_peddzType Aws_700_Pcw_peddzType_Pcw_peddzType_MIN = Aws_700_Pcw_peddzType_PCW_PEDDZ_NO_PEDESTRIAN;
const Aws_700_Pcw_peddzType Aws_700_Pcw_peddzType_Pcw_peddzType_MAX = Aws_700_Pcw_peddzType_PCW_PEDDZ_PCW;
const int Aws_700_Pcw_peddzType_Pcw_peddzType_ARRAYSIZE = Aws_700_Pcw_peddzType_Pcw_peddzType_MAX + 1;

enum Aws_700_Hw_warning_levelType {
  Aws_700_Hw_warning_levelType_HW_WARNING_LEVEL_NO_CIPV_IN_FRAME = 0,
  Aws_700_Hw_warning_levelType_HW_WARNING_LEVEL_CIPV_HW_CONFIGURATION = 1,
  Aws_700_Hw_warning_levelType_HW_WARNING_LEVEL_CIPV_HW_COFIGURATION = 2,
  Aws_700_Hw_warning_levelType_Aws_700_Hw_warning_levelType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Hw_warning_levelType_Aws_700_Hw_warning_levelType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Hw_warning_levelType_IsValid(int value);
const Aws_700_Hw_warning_levelType Aws_700_Hw_warning_levelType_Hw_warning_levelType_MIN = Aws_700_Hw_warning_levelType_HW_WARNING_LEVEL_NO_CIPV_IN_FRAME;
const Aws_700_Hw_warning_levelType Aws_700_Hw_warning_levelType_Hw_warning_levelType_MAX = Aws_700_Hw_warning_levelType_HW_WARNING_LEVEL_CIPV_HW_COFIGURATION;
const int Aws_700_Hw_warning_levelType_Hw_warning_levelType_ARRAYSIZE = Aws_700_Hw_warning_levelType_Hw_warning_levelType_MAX + 1;

enum Aws_700_Hw_repeatable_enabledType {
  Aws_700_Hw_repeatable_enabledType_HW_REPEATABLE_ENABLED_OFF = 0,
  Aws_700_Hw_repeatable_enabledType_HW_REPEATABLE_ENABLED_ON = 1,
  Aws_700_Hw_repeatable_enabledType_Aws_700_Hw_repeatable_enabledType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Hw_repeatable_enabledType_Aws_700_Hw_repeatable_enabledType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Hw_repeatable_enabledType_IsValid(int value);
const Aws_700_Hw_repeatable_enabledType Aws_700_Hw_repeatable_enabledType_Hw_repeatable_enabledType_MIN = Aws_700_Hw_repeatable_enabledType_HW_REPEATABLE_ENABLED_OFF;
const Aws_700_Hw_repeatable_enabledType Aws_700_Hw_repeatable_enabledType_Hw_repeatable_enabledType_MAX = Aws_700_Hw_repeatable_enabledType_HW_REPEATABLE_ENABLED_ON;
const int Aws_700_Hw_repeatable_enabledType_Hw_repeatable_enabledType_ARRAYSIZE = Aws_700_Hw_repeatable_enabledType_Hw_repeatable_enabledType_MAX + 1;

enum Aws_700_General_pedestrianType {
  Aws_700_General_pedestrianType_GENERAL_PEDESTRIAN_OFF = 0,
  Aws_700_General_pedestrianType_GENERAL_PEDESTRIAN_ON = 1,
  Aws_700_General_pedestrianType_Aws_700_General_pedestrianType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_General_pedestrianType_Aws_700_General_pedestrianType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_General_pedestrianType_IsValid(int value);
const Aws_700_General_pedestrianType Aws_700_General_pedestrianType_General_pedestrianType_MIN = Aws_700_General_pedestrianType_GENERAL_PEDESTRIAN_OFF;
const Aws_700_General_pedestrianType Aws_700_General_pedestrianType_General_pedestrianType_MAX = Aws_700_General_pedestrianType_GENERAL_PEDESTRIAN_ON;
const int Aws_700_General_pedestrianType_General_pedestrianType_ARRAYSIZE = Aws_700_General_pedestrianType_General_pedestrianType_MAX + 1;

enum Aws_700_Blinker_reminder_enabledType {
  Aws_700_Blinker_reminder_enabledType_BLINKER_REMINDER_ENABLED_OFF = 0,
  Aws_700_Blinker_reminder_enabledType_BLINKER_REMINDER_ENABLED_ON = 1,
  Aws_700_Blinker_reminder_enabledType_Aws_700_Blinker_reminder_enabledType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Blinker_reminder_enabledType_Aws_700_Blinker_reminder_enabledType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Blinker_reminder_enabledType_IsValid(int value);
const Aws_700_Blinker_reminder_enabledType Aws_700_Blinker_reminder_enabledType_Blinker_reminder_enabledType_MIN = Aws_700_Blinker_reminder_enabledType_BLINKER_REMINDER_ENABLED_OFF;
const Aws_700_Blinker_reminder_enabledType Aws_700_Blinker_reminder_enabledType_Blinker_reminder_enabledType_MAX = Aws_700_Blinker_reminder_enabledType_BLINKER_REMINDER_ENABLED_ON;
const int Aws_700_Blinker_reminder_enabledType_Blinker_reminder_enabledType_ARRAYSIZE = Aws_700_Blinker_reminder_enabledType_Blinker_reminder_enabledType_MAX + 1;

enum Aws_700_Blinker_reminderType {
  Aws_700_Blinker_reminderType_BLINKER_REMINDER_OFF = 0,
  Aws_700_Blinker_reminderType_BLINKER_REMINDER_ON = 1,
  Aws_700_Blinker_reminderType_Aws_700_Blinker_reminderType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Blinker_reminderType_Aws_700_Blinker_reminderType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Blinker_reminderType_IsValid(int value);
const Aws_700_Blinker_reminderType Aws_700_Blinker_reminderType_Blinker_reminderType_MIN = Aws_700_Blinker_reminderType_BLINKER_REMINDER_OFF;
const Aws_700_Blinker_reminderType Aws_700_Blinker_reminderType_Blinker_reminderType_MAX = Aws_700_Blinker_reminderType_BLINKER_REMINDER_ON;
const int Aws_700_Blinker_reminderType_Blinker_reminderType_ARRAYSIZE = Aws_700_Blinker_reminderType_Blinker_reminderType_MAX + 1;

enum Aws_700_Fcw_onType {
  Aws_700_Fcw_onType_FCW_ON_OFF = 0,
  Aws_700_Fcw_onType_FCW_ON_ON = 1,
  Aws_700_Fcw_onType_Aws_700_Fcw_onType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Fcw_onType_Aws_700_Fcw_onType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Fcw_onType_IsValid(int value);
const Aws_700_Fcw_onType Aws_700_Fcw_onType_Fcw_onType_MIN = Aws_700_Fcw_onType_FCW_ON_OFF;
const Aws_700_Fcw_onType Aws_700_Fcw_onType_Fcw_onType_MAX = Aws_700_Fcw_onType_FCW_ON_ON;
const int Aws_700_Fcw_onType_Fcw_onType_ARRAYSIZE = Aws_700_Fcw_onType_Fcw_onType_MAX + 1;

enum Aws_700_Rldw_onType {
  Aws_700_Rldw_onType_RLDW_ON_OFF = 0,
  Aws_700_Rldw_onType_RLDW_ON_ON = 1,
  Aws_700_Rldw_onType_Aws_700_Rldw_onType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Rldw_onType_Aws_700_Rldw_onType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Rldw_onType_IsValid(int value);
const Aws_700_Rldw_onType Aws_700_Rldw_onType_Rldw_onType_MIN = Aws_700_Rldw_onType_RLDW_ON_OFF;
const Aws_700_Rldw_onType Aws_700_Rldw_onType_Rldw_onType_MAX = Aws_700_Rldw_onType_RLDW_ON_ON;
const int Aws_700_Rldw_onType_Rldw_onType_ARRAYSIZE = Aws_700_Rldw_onType_Rldw_onType_MAX + 1;

enum Aws_700_Lldw_onType {
  Aws_700_Lldw_onType_LLDW_ON_OFF = 0,
  Aws_700_Lldw_onType_LLDW_ON_ON = 1,
  Aws_700_Lldw_onType_Aws_700_Lldw_onType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Lldw_onType_Aws_700_Lldw_onType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Lldw_onType_IsValid(int value);
const Aws_700_Lldw_onType Aws_700_Lldw_onType_Lldw_onType_MIN = Aws_700_Lldw_onType_LLDW_ON_OFF;
const Aws_700_Lldw_onType Aws_700_Lldw_onType_Lldw_onType_MAX = Aws_700_Lldw_onType_LLDW_ON_ON;
const int Aws_700_Lldw_onType_Lldw_onType_ARRAYSIZE = Aws_700_Lldw_onType_Lldw_onType_MAX + 1;

enum Aws_700_Ldw_offType {
  Aws_700_Ldw_offType_LDW_OFF_OFF = 0,
  Aws_700_Ldw_offType_LDW_OFF_ON = 1,
  Aws_700_Ldw_offType_Aws_700_Ldw_offType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Ldw_offType_Aws_700_Ldw_offType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Ldw_offType_IsValid(int value);
const Aws_700_Ldw_offType Aws_700_Ldw_offType_Ldw_offType_MIN = Aws_700_Ldw_offType_LDW_OFF_OFF;
const Aws_700_Ldw_offType Aws_700_Ldw_offType_Ldw_offType_MAX = Aws_700_Ldw_offType_LDW_OFF_ON;
const int Aws_700_Ldw_offType_Ldw_offType_ARRAYSIZE = Aws_700_Ldw_offType_Ldw_offType_MAX + 1;

enum Aws_700_MaintenanceType {
  Aws_700_MaintenanceType_MAINTENANCE_OFF = 0,
  Aws_700_MaintenanceType_MAINTENANCE_ON = 1,
  Aws_700_MaintenanceType_Aws_700_MaintenanceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_MaintenanceType_Aws_700_MaintenanceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_MaintenanceType_IsValid(int value);
const Aws_700_MaintenanceType Aws_700_MaintenanceType_MaintenanceType_MIN = Aws_700_MaintenanceType_MAINTENANCE_OFF;
const Aws_700_MaintenanceType Aws_700_MaintenanceType_MaintenanceType_MAX = Aws_700_MaintenanceType_MAINTENANCE_ON;
const int Aws_700_MaintenanceType_MaintenanceType_ARRAYSIZE = Aws_700_MaintenanceType_MaintenanceType_MAX + 1;

enum Aws_700_Fail_safeType {
  Aws_700_Fail_safeType_FAIL_SAFE_OFF = 0,
  Aws_700_Fail_safeType_FAIL_SAFE_ON = 1,
  Aws_700_Fail_safeType_Aws_700_Fail_safeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Fail_safeType_Aws_700_Fail_safeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Fail_safeType_IsValid(int value);
const Aws_700_Fail_safeType Aws_700_Fail_safeType_Fail_safeType_MIN = Aws_700_Fail_safeType_FAIL_SAFE_OFF;
const Aws_700_Fail_safeType Aws_700_Fail_safeType_Fail_safeType_MAX = Aws_700_Fail_safeType_FAIL_SAFE_ON;
const int Aws_700_Fail_safeType_Fail_safeType_ARRAYSIZE = Aws_700_Fail_safeType_Fail_safeType_MAX + 1;

enum Aws_700_Error_activeType {
  Aws_700_Error_activeType_ERROR_ACTIVE_OFF = 0,
  Aws_700_Error_activeType_ERROR_ACTIVE_ON = 1,
  Aws_700_Error_activeType_Aws_700_Error_activeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Error_activeType_Aws_700_Error_activeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Error_activeType_IsValid(int value);
const Aws_700_Error_activeType Aws_700_Error_activeType_Error_activeType_MIN = Aws_700_Error_activeType_ERROR_ACTIVE_OFF;
const Aws_700_Error_activeType Aws_700_Error_activeType_Error_activeType_MAX = Aws_700_Error_activeType_ERROR_ACTIVE_ON;
const int Aws_700_Error_activeType_Error_activeType_ARRAYSIZE = Aws_700_Error_activeType_Error_activeType_MAX + 1;

enum Aws_700_Headway_validType {
  Aws_700_Headway_validType_HEADWAY_VALID_OFF = 0,
  Aws_700_Headway_validType_HEADWAY_VALID_ON = 1,
  Aws_700_Headway_validType_Aws_700_Headway_validType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Headway_validType_Aws_700_Headway_validType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Headway_validType_IsValid(int value);
const Aws_700_Headway_validType Aws_700_Headway_validType_Headway_validType_MIN = Aws_700_Headway_validType_HEADWAY_VALID_OFF;
const Aws_700_Headway_validType Aws_700_Headway_validType_Headway_validType_MAX = Aws_700_Headway_validType_HEADWAY_VALID_ON;
const int Aws_700_Headway_validType_Headway_validType_ARRAYSIZE = Aws_700_Headway_validType_Headway_validType_MAX + 1;

enum Aws_700_Fla_armedType {
  Aws_700_Fla_armedType_FLA_ARMED_OFF = 0,
  Aws_700_Fla_armedType_FLA_ARMED_ON = 1,
  Aws_700_Fla_armedType_Aws_700_Fla_armedType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Fla_armedType_Aws_700_Fla_armedType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Fla_armedType_IsValid(int value);
const Aws_700_Fla_armedType Aws_700_Fla_armedType_Fla_armedType_MIN = Aws_700_Fla_armedType_FLA_ARMED_OFF;
const Aws_700_Fla_armedType Aws_700_Fla_armedType_Fla_armedType_MAX = Aws_700_Fla_armedType_FLA_ARMED_ON;
const int Aws_700_Fla_armedType_Fla_armedType_ARRAYSIZE = Aws_700_Fla_armedType_Fla_armedType_MAX + 1;

enum Aws_700_Hi_low_beamcontrolType {
  Aws_700_Hi_low_beamcontrolType_HI_LOW_BEAMCONTROL_OFF = 0,
  Aws_700_Hi_low_beamcontrolType_HI_LOW_BEAMCONTROL_ON = 1,
  Aws_700_Hi_low_beamcontrolType_Aws_700_Hi_low_beamcontrolType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Hi_low_beamcontrolType_Aws_700_Hi_low_beamcontrolType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Hi_low_beamcontrolType_IsValid(int value);
const Aws_700_Hi_low_beamcontrolType Aws_700_Hi_low_beamcontrolType_Hi_low_beamcontrolType_MIN = Aws_700_Hi_low_beamcontrolType_HI_LOW_BEAMCONTROL_OFF;
const Aws_700_Hi_low_beamcontrolType Aws_700_Hi_low_beamcontrolType_Hi_low_beamcontrolType_MAX = Aws_700_Hi_low_beamcontrolType_HI_LOW_BEAMCONTROL_ON;
const int Aws_700_Hi_low_beamcontrolType_Hi_low_beamcontrolType_ARRAYSIZE = Aws_700_Hi_low_beamcontrolType_Hi_low_beamcontrolType_MAX + 1;

enum Aws_700_Zero_speedType {
  Aws_700_Zero_speedType_ZERO_SPEED_OFF = 0,
  Aws_700_Zero_speedType_ZERO_SPEED_ON = 1,
  Aws_700_Zero_speedType_Aws_700_Zero_speedType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Zero_speedType_Aws_700_Zero_speedType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Zero_speedType_IsValid(int value);
const Aws_700_Zero_speedType Aws_700_Zero_speedType_Zero_speedType_MIN = Aws_700_Zero_speedType_ZERO_SPEED_OFF;
const Aws_700_Zero_speedType Aws_700_Zero_speedType_Zero_speedType_MAX = Aws_700_Zero_speedType_ZERO_SPEED_ON;
const int Aws_700_Zero_speedType_Zero_speedType_ARRAYSIZE = Aws_700_Zero_speedType_Zero_speedType_MAX + 1;

enum Aws_700_Time_indicatorType {
  Aws_700_Time_indicatorType_TIME_INDICATOR_DAY = 0,
  Aws_700_Time_indicatorType_TIME_INDICATOR_DUSK = 1,
  Aws_700_Time_indicatorType_TIME_INDICATOR_NIGHT = 2,
  Aws_700_Time_indicatorType_TIME_INDICATOR_NOT_IN_USE = 3,
  Aws_700_Time_indicatorType_Aws_700_Time_indicatorType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Time_indicatorType_Aws_700_Time_indicatorType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Time_indicatorType_IsValid(int value);
const Aws_700_Time_indicatorType Aws_700_Time_indicatorType_Time_indicatorType_MIN = Aws_700_Time_indicatorType_TIME_INDICATOR_DAY;
const Aws_700_Time_indicatorType Aws_700_Time_indicatorType_Time_indicatorType_MAX = Aws_700_Time_indicatorType_TIME_INDICATOR_NOT_IN_USE;
const int Aws_700_Time_indicatorType_Time_indicatorType_ARRAYSIZE = Aws_700_Time_indicatorType_Time_indicatorType_MAX + 1;

enum Aws_700_Sound_typeType {
  Aws_700_Sound_typeType_SOUND_TYPE_NO_SOUND = 0,
  Aws_700_Sound_typeType_SOUND_TYPE_LEFT_LDW = 1,
  Aws_700_Sound_typeType_SOUND_TYPE_RIGHT_LDW = 2,
  Aws_700_Sound_typeType_SOUND_TYPE_HW = 3,
  Aws_700_Sound_typeType_SOUND_TYPE_TSR_WARNING = 4,
  Aws_700_Sound_typeType_SOUND_TYPE_SOFT_FCW_VIRTUAL_BUMPER = 5,
  Aws_700_Sound_typeType_SOUND_TYPE_FCW_PCW = 6,
  Aws_700_Sound_typeType_SOUND_TYPE_PEDESTRIAN_IN_DZ = 7,
  Aws_700_Sound_typeType_Aws_700_Sound_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Aws_700_Sound_typeType_Aws_700_Sound_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Aws_700_Sound_typeType_IsValid(int value);
const Aws_700_Sound_typeType Aws_700_Sound_typeType_Sound_typeType_MIN = Aws_700_Sound_typeType_SOUND_TYPE_NO_SOUND;
const Aws_700_Sound_typeType Aws_700_Sound_typeType_Sound_typeType_MAX = Aws_700_Sound_typeType_SOUND_TYPE_PEDESTRIAN_IN_DZ;
const int Aws_700_Sound_typeType_Sound_typeType_ARRAYSIZE = Aws_700_Sound_typeType_Sound_typeType_MAX + 1;

enum Tsr_detail_7_726_Vision_only_sign_typeType {
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H = 0,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H = 1,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H = 2,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H = 3,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H = 4,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H = 5,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H = 6,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H = 7,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H = 8,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H = 9,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H = 10,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H = 11,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H = 12,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H = 13,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR = 20,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H = 28,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H = 29,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H = 30,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H = 31,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H = 32,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H = 33,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H = 34,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H = 35,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H = 36,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H = 37,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H = 38,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H = 39,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H = 40,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H = 41,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI = 50,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR = 64,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC = 65,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H = 100,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H = 101,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H = 102,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H = 103,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H = 104,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H = 105,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H = 106,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H = 107,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H = 108,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H = 109,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H = 110,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H = 111,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H = 112,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H = 113,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H = 114,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H = 115,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H = 116,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H = 117,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H = 118,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H = 119,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H = 120,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H = 121,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H = 122,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H = 123,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H = 124,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H = 125,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H = 126,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H = 127,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H = 128,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H = 129,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN = 171,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END = 172,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN = 173,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END = 174,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN = 175,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END = 176,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR = 200,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING = 201,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC = 220,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC = 221,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED = 254,
  Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN = 255,
  Tsr_detail_7_726_Vision_only_sign_typeType_Tsr_detail_7_726_Vision_only_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_7_726_Vision_only_sign_typeType_Tsr_detail_7_726_Vision_only_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_7_726_Vision_only_sign_typeType_IsValid(int value);
const Tsr_detail_7_726_Vision_only_sign_typeType Tsr_detail_7_726_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN = Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
const Tsr_detail_7_726_Vision_only_sign_typeType Tsr_detail_7_726_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX = Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
const int Tsr_detail_7_726_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE = Tsr_detail_7_726_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX + 1;

enum Tsr_detail_7_726_Supplementary_sign_typeType {
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE = 0,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN = 1,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW = 2,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER = 3,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME = 4,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT = 5,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT = 6,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT = 7,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT = 8,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK = 9,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR = 10,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT = 11,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN = 12,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR = 13,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN = 14,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL = 15,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD = 16,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG = 17,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS = 18,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT = 19,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC = 20,
  Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP = 255,
  Tsr_detail_7_726_Supplementary_sign_typeType_Tsr_detail_7_726_Supplementary_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_7_726_Supplementary_sign_typeType_Tsr_detail_7_726_Supplementary_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_7_726_Supplementary_sign_typeType_IsValid(int value);
const Tsr_detail_7_726_Supplementary_sign_typeType Tsr_detail_7_726_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN = Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
const Tsr_detail_7_726_Supplementary_sign_typeType Tsr_detail_7_726_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX = Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
const int Tsr_detail_7_726_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE = Tsr_detail_7_726_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX + 1;

enum Tsr_detail_7_726_Filter_typeType {
  Tsr_detail_7_726_Filter_typeType_FILTER_TYPE_NOT_FILTERED = 0,
  Tsr_detail_7_726_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST = 1,
  Tsr_detail_7_726_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK = 2,
  Tsr_detail_7_726_Filter_typeType_FILTER_TYPE_EMBEDDED = 3,
  Tsr_detail_7_726_Filter_typeType_Tsr_detail_7_726_Filter_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_7_726_Filter_typeType_Tsr_detail_7_726_Filter_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_7_726_Filter_typeType_IsValid(int value);
const Tsr_detail_7_726_Filter_typeType Tsr_detail_7_726_Filter_typeType_Filter_typeType_MIN = Tsr_detail_7_726_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
const Tsr_detail_7_726_Filter_typeType Tsr_detail_7_726_Filter_typeType_Filter_typeType_MAX = Tsr_detail_7_726_Filter_typeType_FILTER_TYPE_EMBEDDED;
const int Tsr_detail_7_726_Filter_typeType_Filter_typeType_ARRAYSIZE = Tsr_detail_7_726_Filter_typeType_Filter_typeType_MAX + 1;

enum Vision_only_tsr_727_Sign_type_4Type {
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_10_KM_H = 0,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_20_KM_H = 1,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_30_KM_H = 2,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_40_KM_H = 3,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_50_KM_H = 4,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_60_KM_H = 5,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_70_KM_H = 6,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_80_KM_H = 7,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_90_KM_H = 8,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_100_KM_H = 9,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_110_KM_H = 10,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_120_KM_H = 11,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_130_KM_H = 12,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_140_KM_H = 13,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_OF_NUMBER_STANDARD_REGULAR = 20,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_10_KM_H = 28,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_20_KM_H = 29,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_30_KM_H = 30,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_40_KM_H = 31,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_50_KM_H = 32,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_60_KM_H = 33,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_70_KM_H = 34,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_80_KM_H = 35,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_90_KM_H = 36,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_100_KM_H = 37,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_110_KM_H = 38,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_120_KM_H = 39,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_130_KM_H = 40,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_140_KM_H = 41,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_OF_NUMBER_STANDARD_ELECTRONI = 50,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_ALL_RESTRICTION_REGULAR = 64,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_ALL_RESTRICTION_ELECTRONIC = 65,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_5_KM_H_MP_H = 100,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_15_KM_H_MP_H = 101,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_25_KM_H_MP_H = 102,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_35_KM_H_MP_H = 103,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_45_KM_H_MP_H = 104,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_55_KM_H_MP_H = 105,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_65_KM_H_MP_H = 106,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_75_KM_H_MP_H = 107,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_85_KM_H_MP_H = 108,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_95_KM_H_MP_H = 109,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_105_KM_H_MP_H = 110,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_115_KM_H_MP_H = 111,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_125_KM_H_MP_H = 112,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_135_KM_H_MP_H = 113,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_145_KM_H_MP_H = 114,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_5_KM_H_MP_H = 115,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_15_KM_H_MP_H = 116,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_25_KM_H_MP_H = 117,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_35_KM_H_MP_H = 118,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_45_KM_H_MP_H = 119,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_55_KM_H_MP_H = 120,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_65_KM_H_MP_H = 121,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_75_KM_H_MP_H = 122,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_85_KM_H_MP_H = 123,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_95_KM_H_MP_H = 124,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONI_105_KM_H_MP_H = 125,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONI_115_KM_H_MP_H = 126,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONI_125_KM_H_MP_H = 127,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONI_135_KM_H_MP_H = 128,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONI_145_KM_H_MP_H = 129,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_MOTORWAY_BEGIN = 171,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_MOTORWAY_END = 172,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_EXPRESSWAY_BEGIN = 173,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_EXPRESSWAY_END = 174,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_PLAYFROUND_AREA_BEGIN = 175,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_PLAYGROUND_AREA_END = 176,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_NO_PASSING_START_REGULAR = 200,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_OF_NO_PASSING = 201,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_NO_PASSING_START_ELECTRONIC = 220,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_OF_NO_PASSING_ELECTRONIC = 221,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_NO_SIGN_DETECTED = 254,
  Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_E_INVALID_SIGN = 255,
  Vision_only_tsr_727_Sign_type_4Type_Vision_only_tsr_727_Sign_type_4Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Vision_only_tsr_727_Sign_type_4Type_Vision_only_tsr_727_Sign_type_4Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Vision_only_tsr_727_Sign_type_4Type_IsValid(int value);
const Vision_only_tsr_727_Sign_type_4Type Vision_only_tsr_727_Sign_type_4Type_Sign_type_4Type_MIN = Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_10_KM_H;
const Vision_only_tsr_727_Sign_type_4Type Vision_only_tsr_727_Sign_type_4Type_Sign_type_4Type_MAX = Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_E_INVALID_SIGN;
const int Vision_only_tsr_727_Sign_type_4Type_Sign_type_4Type_ARRAYSIZE = Vision_only_tsr_727_Sign_type_4Type_Sign_type_4Type_MAX + 1;

enum Vision_only_tsr_727_Sign_type_3Type {
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_10_KM_H = 0,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_20_KM_H = 1,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_30_KM_H = 2,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_40_KM_H = 3,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_50_KM_H = 4,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_60_KM_H = 5,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_70_KM_H = 6,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_80_KM_H = 7,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_90_KM_H = 8,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_100_KM_H = 9,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_110_KM_H = 10,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_120_KM_H = 11,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_130_KM_H = 12,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_140_KM_H = 13,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_OF_NUMBER_STANDARD_REGULAR = 20,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_10_KM_H = 28,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_20_KM_H = 29,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_30_KM_H = 30,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_40_KM_H = 31,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_50_KM_H = 32,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_60_KM_H = 33,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_70_KM_H = 34,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_80_KM_H = 35,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_90_KM_H = 36,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_100_KM_H = 37,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_110_KM_H = 38,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_120_KM_H = 39,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_130_KM_H = 40,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_140_KM_H = 41,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_OF_NUMBER_STANDARD_ELECTRONI = 50,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_ALL_RESTRICTION_REGULAR = 64,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_ALL_RESTRICTION_ELECTRONIC = 65,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_5_KM_H_MP_H = 100,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_15_KM_H_MP_H = 101,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_25_KM_H_MP_H = 102,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_35_KM_H_MP_H = 103,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_45_KM_H_MP_H = 104,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_55_KM_H_MP_H = 105,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_65_KM_H_MP_H = 106,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_75_KM_H_MP_H = 107,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_85_KM_H_MP_H = 108,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_95_KM_H_MP_H = 109,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_105_KM_H_MP_H = 110,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_115_KM_H_MP_H = 111,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_125_KM_H_MP_H = 112,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_135_KM_H_MP_H = 113,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_145_KM_H_MP_H = 114,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_5_KM_H_MP_H = 115,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_15_KM_H_MP_H = 116,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_25_KM_H_MP_H = 117,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_35_KM_H_MP_H = 118,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_45_KM_H_MP_H = 119,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_55_KM_H_MP_H = 120,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_65_KM_H_MP_H = 121,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_75_KM_H_MP_H = 122,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_85_KM_H_MP_H = 123,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_95_KM_H_MP_H = 124,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONI_105_KM_H_MP_H = 125,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONI_115_KM_H_MP_H = 126,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONI_125_KM_H_MP_H = 127,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONI_135_KM_H_MP_H = 128,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONI_145_KM_H_MP_H = 129,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_MOTORWAY_BEGIN = 171,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_MOTORWAY_END = 172,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_EXPRESSWAY_BEGIN = 173,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_EXPRESSWAY_END = 174,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_PLAYFROUND_AREA_BEGIN = 175,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_PLAYGROUND_AREA_END = 176,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_NO_PASSING_START_REGULAR = 200,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_OF_NO_PASSING = 201,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_NO_PASSING_START_ELECTRONIC = 220,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_OF_NO_PASSING_ELECTRONIC = 221,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_NO_SIGN_DETECTED = 254,
  Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_E_INVALID_SIGN = 255,
  Vision_only_tsr_727_Sign_type_3Type_Vision_only_tsr_727_Sign_type_3Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Vision_only_tsr_727_Sign_type_3Type_Vision_only_tsr_727_Sign_type_3Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Vision_only_tsr_727_Sign_type_3Type_IsValid(int value);
const Vision_only_tsr_727_Sign_type_3Type Vision_only_tsr_727_Sign_type_3Type_Sign_type_3Type_MIN = Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_10_KM_H;
const Vision_only_tsr_727_Sign_type_3Type Vision_only_tsr_727_Sign_type_3Type_Sign_type_3Type_MAX = Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_E_INVALID_SIGN;
const int Vision_only_tsr_727_Sign_type_3Type_Sign_type_3Type_ARRAYSIZE = Vision_only_tsr_727_Sign_type_3Type_Sign_type_3Type_MAX + 1;

enum Vision_only_tsr_727_Sign_type_2Type {
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_10_KM_H = 0,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_20_KM_H = 1,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_30_KM_H = 2,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_40_KM_H = 3,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_50_KM_H = 4,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_60_KM_H = 5,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_70_KM_H = 6,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_80_KM_H = 7,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_90_KM_H = 8,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_100_KM_H = 9,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_110_KM_H = 10,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_120_KM_H = 11,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_130_KM_H = 12,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_140_KM_H = 13,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_OF_NUMBER_STANDARD_REGULAR = 20,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_10_KM_H = 28,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_20_KM_H = 29,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_30_KM_H = 30,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_40_KM_H = 31,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_50_KM_H = 32,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_60_KM_H = 33,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_70_KM_H = 34,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_80_KM_H = 35,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_90_KM_H = 36,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_100_KM_H = 37,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_110_KM_H = 38,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_120_KM_H = 39,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_130_KM_H = 40,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_140_KM_H = 41,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_OF_NUMBER_STANDARD_ELECTRONI = 50,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_ALL_RESTRICTION_REGULAR = 64,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_ALL_RESTRICTION_ELECTRONIC = 65,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_5_KM_H_MP_H = 100,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_15_KM_H_MP_H = 101,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_25_KM_H_MP_H = 102,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_35_KM_H_MP_H = 103,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_45_KM_H_MP_H = 104,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_55_KM_H_MP_H = 105,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_65_KM_H_MP_H = 106,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_75_KM_H_MP_H = 107,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_85_KM_H_MP_H = 108,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_95_KM_H_MP_H = 109,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_105_KM_H_MP_H = 110,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_115_KM_H_MP_H = 111,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_125_KM_H_MP_H = 112,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_135_KM_H_MP_H = 113,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_145_KM_H_MP_H = 114,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_5_KM_H_MP_H = 115,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_15_KM_H_MP_H = 116,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_25_KM_H_MP_H = 117,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_35_KM_H_MP_H = 118,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_45_KM_H_MP_H = 119,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_55_KM_H_MP_H = 120,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_65_KM_H_MP_H = 121,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_75_KM_H_MP_H = 122,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_85_KM_H_MP_H = 123,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_95_KM_H_MP_H = 124,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONI_105_KM_H_MP_H = 125,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONI_115_KM_H_MP_H = 126,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONI_125_KM_H_MP_H = 127,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONI_135_KM_H_MP_H = 128,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONI_145_KM_H_MP_H = 129,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_MOTORWAY_BEGIN = 171,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_MOTORWAY_END = 172,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_EXPRESSWAY_BEGIN = 173,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_EXPRESSWAY_END = 174,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_PLAYFROUND_AREA_BEGIN = 175,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_PLAYGROUND_AREA_END = 176,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_NO_PASSING_START_REGULAR = 200,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_OF_NO_PASSING = 201,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_NO_PASSING_START_ELECTRONIC = 220,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_OF_NO_PASSING_ELECTRONIC = 221,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_NO_SIGN_DETECTED = 254,
  Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_E_INVALID_SIGN = 255,
  Vision_only_tsr_727_Sign_type_2Type_Vision_only_tsr_727_Sign_type_2Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Vision_only_tsr_727_Sign_type_2Type_Vision_only_tsr_727_Sign_type_2Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Vision_only_tsr_727_Sign_type_2Type_IsValid(int value);
const Vision_only_tsr_727_Sign_type_2Type Vision_only_tsr_727_Sign_type_2Type_Sign_type_2Type_MIN = Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_10_KM_H;
const Vision_only_tsr_727_Sign_type_2Type Vision_only_tsr_727_Sign_type_2Type_Sign_type_2Type_MAX = Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_E_INVALID_SIGN;
const int Vision_only_tsr_727_Sign_type_2Type_Sign_type_2Type_ARRAYSIZE = Vision_only_tsr_727_Sign_type_2Type_Sign_type_2Type_MAX + 1;

enum Vision_only_tsr_727_Sign_type_1Type {
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_10_KM_H = 0,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_20_KM_H = 1,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_30_KM_H = 2,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_40_KM_H = 3,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_50_KM_H = 4,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_60_KM_H = 5,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_70_KM_H = 6,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_80_KM_H = 7,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_90_KM_H = 8,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_100_KM_H = 9,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_110_KM_H = 10,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_120_KM_H = 11,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_130_KM_H = 12,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_140_KM_H = 13,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_OF_NUMBER_STANDARD_REGULAR = 20,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_10_KM_H = 28,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_20_KM_H = 29,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_30_KM_H = 30,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_40_KM_H = 31,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_50_KM_H = 32,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_60_KM_H = 33,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_70_KM_H = 34,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_80_KM_H = 35,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_90_KM_H = 36,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_100_KM_H = 37,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_110_KM_H = 38,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_120_KM_H = 39,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_130_KM_H = 40,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_140_KM_H = 41,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_OF_NUMBER_STANDARD_ELECTRONI = 50,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_ALL_RESTRICTION_REGULAR = 64,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_ALL_RESTRICTION_ELECTRONIC = 65,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_5_KM_H_MP_H = 100,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_15_KM_H_MP_H = 101,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_25_KM_H_MP_H = 102,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_35_KM_H_MP_H = 103,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_45_KM_H_MP_H = 104,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_55_KM_H_MP_H = 105,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_65_KM_H_MP_H = 106,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_75_KM_H_MP_H = 107,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_85_KM_H_MP_H = 108,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_95_KM_H_MP_H = 109,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_105_KM_H_MP_H = 110,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_115_KM_H_MP_H = 111,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_125_KM_H_MP_H = 112,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_135_KM_H_MP_H = 113,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_145_KM_H_MP_H = 114,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_5_KM_H_MP_H = 115,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_15_KM_H_MP_H = 116,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_25_KM_H_MP_H = 117,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_35_KM_H_MP_H = 118,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_45_KM_H_MP_H = 119,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_55_KM_H_MP_H = 120,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_65_KM_H_MP_H = 121,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_75_KM_H_MP_H = 122,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_85_KM_H_MP_H = 123,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_95_KM_H_MP_H = 124,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONI_105_KM_H_MP_H = 125,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONI_115_KM_H_MP_H = 126,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONI_125_KM_H_MP_H = 127,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONI_135_KM_H_MP_H = 128,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONI_145_KM_H_MP_H = 129,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_MOTORWAY_BEGIN = 171,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_MOTORWAY_END = 172,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_EXPRESSWAY_BEGIN = 173,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_EXPRESSWAY_END = 174,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_PLAYFROUND_AREA_BEGIN = 175,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_PLAYGROUND_AREA_END = 176,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_NO_PASSING_START_REGULAR = 200,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_OF_NO_PASSING = 201,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_NO_PASSING_START_ELECTRONIC = 220,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_OF_NO_PASSING_ELECTRONIC = 221,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_NO_SIGN_DETECTED = 254,
  Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_E_INVALID_SIGN = 255,
  Vision_only_tsr_727_Sign_type_1Type_Vision_only_tsr_727_Sign_type_1Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Vision_only_tsr_727_Sign_type_1Type_Vision_only_tsr_727_Sign_type_1Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Vision_only_tsr_727_Sign_type_1Type_IsValid(int value);
const Vision_only_tsr_727_Sign_type_1Type Vision_only_tsr_727_Sign_type_1Type_Sign_type_1Type_MIN = Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_10_KM_H;
const Vision_only_tsr_727_Sign_type_1Type Vision_only_tsr_727_Sign_type_1Type_Sign_type_1Type_MAX = Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_E_INVALID_SIGN;
const int Vision_only_tsr_727_Sign_type_1Type_Sign_type_1Type_ARRAYSIZE = Vision_only_tsr_727_Sign_type_1Type_Sign_type_1Type_MAX + 1;

enum Vision_only_tsr_727_Supplementary_sign_type_4Type {
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_NONE = 0,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_RAIN = 1,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_SNOW = 2,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_TRAILER = 3,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_TIME = 4,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_ARROW_LEFT = 5,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_ARROW_RIGHT = 6,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_BENDARRIOW_LEFT = 7,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_BENDARROW_RIGHT = 8,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_TRUCK = 9,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_DISTANCE_AROW_DIST_FOR = 10,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_WEIGHT = 11,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_DISTANCE_IN = 12,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_TRACTOR = 13,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_SNOW_RAIN = 14,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_SCHOOL = 15,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_RAIN_CLOUD = 16,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_FOG = 17,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_HAZARDOUS_METERIALS = 18,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_NIGHT = 19,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_SUPP_SIGN_GENERIC = 20,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_INVALID_SUPP = 255,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_Vision_only_tsr_727_Supplementary_sign_type_4Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Vision_only_tsr_727_Supplementary_sign_type_4Type_Vision_only_tsr_727_Supplementary_sign_type_4Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Vision_only_tsr_727_Supplementary_sign_type_4Type_IsValid(int value);
const Vision_only_tsr_727_Supplementary_sign_type_4Type Vision_only_tsr_727_Supplementary_sign_type_4Type_Supplementary_sign_type_4Type_MIN = Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_NONE;
const Vision_only_tsr_727_Supplementary_sign_type_4Type Vision_only_tsr_727_Supplementary_sign_type_4Type_Supplementary_sign_type_4Type_MAX = Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_INVALID_SUPP;
const int Vision_only_tsr_727_Supplementary_sign_type_4Type_Supplementary_sign_type_4Type_ARRAYSIZE = Vision_only_tsr_727_Supplementary_sign_type_4Type_Supplementary_sign_type_4Type_MAX + 1;

enum Vision_only_tsr_727_Supplementary_sign_type_3Type {
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_NONE = 0,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_RAIN = 1,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_SNOW = 2,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_TRAILER = 3,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_TIME = 4,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_ARROW_LEFT = 5,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_ARROW_RIGHT = 6,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_BENDARRIOW_LEFT = 7,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_BENDARROW_RIGHT = 8,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_TRUCK = 9,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_DISTANCE_AROW_DIST_FOR = 10,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_WEIGHT = 11,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_DISTANCE_IN = 12,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_TRACTOR = 13,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_SNOW_RAIN = 14,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_SCHOOL = 15,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_RAIN_CLOUD = 16,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_FOG = 17,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_HAZARDOUS_METERIALS = 18,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_NIGHT = 19,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_SUPP_SIGN_GENERIC = 20,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_INVALID_SUPP = 255,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_Vision_only_tsr_727_Supplementary_sign_type_3Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Vision_only_tsr_727_Supplementary_sign_type_3Type_Vision_only_tsr_727_Supplementary_sign_type_3Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Vision_only_tsr_727_Supplementary_sign_type_3Type_IsValid(int value);
const Vision_only_tsr_727_Supplementary_sign_type_3Type Vision_only_tsr_727_Supplementary_sign_type_3Type_Supplementary_sign_type_3Type_MIN = Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_NONE;
const Vision_only_tsr_727_Supplementary_sign_type_3Type Vision_only_tsr_727_Supplementary_sign_type_3Type_Supplementary_sign_type_3Type_MAX = Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_INVALID_SUPP;
const int Vision_only_tsr_727_Supplementary_sign_type_3Type_Supplementary_sign_type_3Type_ARRAYSIZE = Vision_only_tsr_727_Supplementary_sign_type_3Type_Supplementary_sign_type_3Type_MAX + 1;

enum Vision_only_tsr_727_Supplementary_sign_type_2Type {
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_NONE = 0,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_RAIN = 1,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_SNOW = 2,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_TRAILER = 3,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_TIME = 4,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_ARROW_LEFT = 5,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_ARROW_RIGHT = 6,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_BENDARRIOW_LEFT = 7,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_BENDARROW_RIGHT = 8,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_TRUCK = 9,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_DISTANCE_AROW_DIST_FOR = 10,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_WEIGHT = 11,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_DISTANCE_IN = 12,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_TRACTOR = 13,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_SNOW_RAIN = 14,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_SCHOOL = 15,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_RAIN_CLOUD = 16,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_FOG = 17,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_HAZARDOUS_METERIALS = 18,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_NIGHT = 19,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_SUPP_SIGN_GENERIC = 20,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_INVALID_SUPP = 255,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_Vision_only_tsr_727_Supplementary_sign_type_2Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Vision_only_tsr_727_Supplementary_sign_type_2Type_Vision_only_tsr_727_Supplementary_sign_type_2Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Vision_only_tsr_727_Supplementary_sign_type_2Type_IsValid(int value);
const Vision_only_tsr_727_Supplementary_sign_type_2Type Vision_only_tsr_727_Supplementary_sign_type_2Type_Supplementary_sign_type_2Type_MIN = Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_NONE;
const Vision_only_tsr_727_Supplementary_sign_type_2Type Vision_only_tsr_727_Supplementary_sign_type_2Type_Supplementary_sign_type_2Type_MAX = Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_INVALID_SUPP;
const int Vision_only_tsr_727_Supplementary_sign_type_2Type_Supplementary_sign_type_2Type_ARRAYSIZE = Vision_only_tsr_727_Supplementary_sign_type_2Type_Supplementary_sign_type_2Type_MAX + 1;

enum Vision_only_tsr_727_Supplementary_sign_type_1Type {
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_NONE = 0,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_RAIN = 1,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_SNOW = 2,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_TRAILER = 3,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_TIME = 4,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_ARROW_LEFT = 5,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_ARROW_RIGHT = 6,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_BENDARRIOW_LEFT = 7,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_BENDARROW_RIGHT = 8,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_TRUCK = 9,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_DISTANCE_AROW_DIST_FOR = 10,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_WEIGHT = 11,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_DISTANCE_IN = 12,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_TRACTOR = 13,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_SNOW_RAIN = 14,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_SCHOOL = 15,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_RAIN_CLOUD = 16,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_FOG = 17,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_HAZARDOUS_METERIALS = 18,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_NIGHT = 19,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_SUPP_SIGN_GENERIC = 20,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_INVALID_SUPP = 255,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_Vision_only_tsr_727_Supplementary_sign_type_1Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Vision_only_tsr_727_Supplementary_sign_type_1Type_Vision_only_tsr_727_Supplementary_sign_type_1Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Vision_only_tsr_727_Supplementary_sign_type_1Type_IsValid(int value);
const Vision_only_tsr_727_Supplementary_sign_type_1Type Vision_only_tsr_727_Supplementary_sign_type_1Type_Supplementary_sign_type_1Type_MIN = Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_NONE;
const Vision_only_tsr_727_Supplementary_sign_type_1Type Vision_only_tsr_727_Supplementary_sign_type_1Type_Supplementary_sign_type_1Type_MAX = Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_INVALID_SUPP;
const int Vision_only_tsr_727_Supplementary_sign_type_1Type_Supplementary_sign_type_1Type_ARRAYSIZE = Vision_only_tsr_727_Supplementary_sign_type_1Type_Supplementary_sign_type_1Type_MAX + 1;

enum Tsr_detail_5_724_Vision_only_sign_typeType {
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H = 0,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H = 1,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H = 2,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H = 3,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H = 4,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H = 5,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H = 6,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H = 7,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H = 8,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H = 9,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H = 10,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H = 11,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H = 12,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H = 13,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR = 20,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H = 28,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H = 29,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H = 30,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H = 31,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H = 32,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H = 33,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H = 34,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H = 35,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H = 36,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H = 37,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H = 38,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H = 39,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H = 40,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H = 41,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI = 50,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR = 64,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC = 65,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H = 100,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H = 101,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H = 102,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H = 103,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H = 104,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H = 105,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H = 106,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H = 107,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H = 108,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H = 109,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H = 110,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H = 111,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H = 112,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H = 113,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H = 114,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H = 115,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H = 116,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H = 117,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H = 118,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H = 119,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H = 120,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H = 121,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H = 122,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H = 123,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H = 124,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H = 125,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H = 126,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H = 127,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H = 128,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H = 129,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN = 171,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END = 172,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN = 173,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END = 174,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN = 175,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END = 176,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR = 200,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING = 201,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC = 220,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC = 221,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED = 254,
  Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN = 255,
  Tsr_detail_5_724_Vision_only_sign_typeType_Tsr_detail_5_724_Vision_only_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_5_724_Vision_only_sign_typeType_Tsr_detail_5_724_Vision_only_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_5_724_Vision_only_sign_typeType_IsValid(int value);
const Tsr_detail_5_724_Vision_only_sign_typeType Tsr_detail_5_724_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN = Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
const Tsr_detail_5_724_Vision_only_sign_typeType Tsr_detail_5_724_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX = Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
const int Tsr_detail_5_724_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE = Tsr_detail_5_724_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX + 1;

enum Tsr_detail_5_724_Supplementary_sign_typeType {
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE = 0,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN = 1,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW = 2,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER = 3,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME = 4,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT = 5,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT = 6,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT = 7,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT = 8,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK = 9,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR = 10,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT = 11,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN = 12,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR = 13,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN = 14,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL = 15,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD = 16,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG = 17,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS = 18,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT = 19,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC = 20,
  Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP = 255,
  Tsr_detail_5_724_Supplementary_sign_typeType_Tsr_detail_5_724_Supplementary_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_5_724_Supplementary_sign_typeType_Tsr_detail_5_724_Supplementary_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_5_724_Supplementary_sign_typeType_IsValid(int value);
const Tsr_detail_5_724_Supplementary_sign_typeType Tsr_detail_5_724_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN = Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
const Tsr_detail_5_724_Supplementary_sign_typeType Tsr_detail_5_724_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX = Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
const int Tsr_detail_5_724_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE = Tsr_detail_5_724_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX + 1;

enum Tsr_detail_5_724_Filter_typeType {
  Tsr_detail_5_724_Filter_typeType_FILTER_TYPE_NOT_FILTERED = 0,
  Tsr_detail_5_724_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST = 1,
  Tsr_detail_5_724_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK = 2,
  Tsr_detail_5_724_Filter_typeType_FILTER_TYPE_EMBEDDED = 3,
  Tsr_detail_5_724_Filter_typeType_Tsr_detail_5_724_Filter_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_5_724_Filter_typeType_Tsr_detail_5_724_Filter_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_5_724_Filter_typeType_IsValid(int value);
const Tsr_detail_5_724_Filter_typeType Tsr_detail_5_724_Filter_typeType_Filter_typeType_MIN = Tsr_detail_5_724_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
const Tsr_detail_5_724_Filter_typeType Tsr_detail_5_724_Filter_typeType_Filter_typeType_MAX = Tsr_detail_5_724_Filter_typeType_FILTER_TYPE_EMBEDDED;
const int Tsr_detail_5_724_Filter_typeType_Filter_typeType_ARRAYSIZE = Tsr_detail_5_724_Filter_typeType_Filter_typeType_MAX + 1;

enum Tsr_detail_6_725_Vision_only_sign_typeType {
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H = 0,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H = 1,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H = 2,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H = 3,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H = 4,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H = 5,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H = 6,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H = 7,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H = 8,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H = 9,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H = 10,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H = 11,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H = 12,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H = 13,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR = 20,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H = 28,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H = 29,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H = 30,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H = 31,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H = 32,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H = 33,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H = 34,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H = 35,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H = 36,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H = 37,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H = 38,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H = 39,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H = 40,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H = 41,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI = 50,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR = 64,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC = 65,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H = 100,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H = 101,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H = 102,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H = 103,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H = 104,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H = 105,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H = 106,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H = 107,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H = 108,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H = 109,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H = 110,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H = 111,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H = 112,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H = 113,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H = 114,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H = 115,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H = 116,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H = 117,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H = 118,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H = 119,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H = 120,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H = 121,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H = 122,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H = 123,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H = 124,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H = 125,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H = 126,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H = 127,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H = 128,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H = 129,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN = 171,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END = 172,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN = 173,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END = 174,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN = 175,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END = 176,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR = 200,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING = 201,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC = 220,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC = 221,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED = 254,
  Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN = 255,
  Tsr_detail_6_725_Vision_only_sign_typeType_Tsr_detail_6_725_Vision_only_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_6_725_Vision_only_sign_typeType_Tsr_detail_6_725_Vision_only_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_6_725_Vision_only_sign_typeType_IsValid(int value);
const Tsr_detail_6_725_Vision_only_sign_typeType Tsr_detail_6_725_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN = Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
const Tsr_detail_6_725_Vision_only_sign_typeType Tsr_detail_6_725_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX = Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
const int Tsr_detail_6_725_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE = Tsr_detail_6_725_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX + 1;

enum Tsr_detail_6_725_Supplementary_sign_typeType {
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE = 0,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN = 1,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW = 2,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER = 3,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME = 4,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT = 5,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT = 6,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT = 7,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT = 8,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK = 9,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR = 10,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT = 11,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN = 12,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR = 13,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN = 14,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL = 15,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD = 16,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG = 17,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS = 18,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT = 19,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC = 20,
  Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP = 255,
  Tsr_detail_6_725_Supplementary_sign_typeType_Tsr_detail_6_725_Supplementary_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_6_725_Supplementary_sign_typeType_Tsr_detail_6_725_Supplementary_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_6_725_Supplementary_sign_typeType_IsValid(int value);
const Tsr_detail_6_725_Supplementary_sign_typeType Tsr_detail_6_725_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN = Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
const Tsr_detail_6_725_Supplementary_sign_typeType Tsr_detail_6_725_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX = Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
const int Tsr_detail_6_725_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE = Tsr_detail_6_725_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX + 1;

enum Tsr_detail_6_725_Filter_typeType {
  Tsr_detail_6_725_Filter_typeType_FILTER_TYPE_NOT_FILTERED = 0,
  Tsr_detail_6_725_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST = 1,
  Tsr_detail_6_725_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK = 2,
  Tsr_detail_6_725_Filter_typeType_FILTER_TYPE_EMBEDDED = 3,
  Tsr_detail_6_725_Filter_typeType_Tsr_detail_6_725_Filter_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_6_725_Filter_typeType_Tsr_detail_6_725_Filter_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_6_725_Filter_typeType_IsValid(int value);
const Tsr_detail_6_725_Filter_typeType Tsr_detail_6_725_Filter_typeType_Filter_typeType_MIN = Tsr_detail_6_725_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
const Tsr_detail_6_725_Filter_typeType Tsr_detail_6_725_Filter_typeType_Filter_typeType_MAX = Tsr_detail_6_725_Filter_typeType_FILTER_TYPE_EMBEDDED;
const int Tsr_detail_6_725_Filter_typeType_Filter_typeType_ARRAYSIZE = Tsr_detail_6_725_Filter_typeType_Filter_typeType_MAX + 1;

enum Tsr_detail_3_722_Vision_only_sign_typeType {
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H = 0,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H = 1,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H = 2,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H = 3,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H = 4,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H = 5,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H = 6,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H = 7,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H = 8,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H = 9,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H = 10,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H = 11,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H = 12,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H = 13,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR = 20,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H = 28,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H = 29,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H = 30,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H = 31,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H = 32,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H = 33,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H = 34,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H = 35,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H = 36,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H = 37,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H = 38,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H = 39,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H = 40,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H = 41,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI = 50,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR = 64,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC = 65,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H = 100,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H = 101,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H = 102,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H = 103,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H = 104,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H = 105,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H = 106,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H = 107,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H = 108,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H = 109,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H = 110,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H = 111,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H = 112,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H = 113,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H = 114,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H = 115,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H = 116,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H = 117,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H = 118,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H = 119,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H = 120,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H = 121,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H = 122,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H = 123,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H = 124,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H = 125,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H = 126,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H = 127,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H = 128,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H = 129,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN = 171,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END = 172,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN = 173,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END = 174,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN = 175,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END = 176,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR = 200,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING = 201,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC = 220,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC = 221,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED = 254,
  Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN = 255,
  Tsr_detail_3_722_Vision_only_sign_typeType_Tsr_detail_3_722_Vision_only_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_3_722_Vision_only_sign_typeType_Tsr_detail_3_722_Vision_only_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_3_722_Vision_only_sign_typeType_IsValid(int value);
const Tsr_detail_3_722_Vision_only_sign_typeType Tsr_detail_3_722_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN = Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
const Tsr_detail_3_722_Vision_only_sign_typeType Tsr_detail_3_722_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX = Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
const int Tsr_detail_3_722_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE = Tsr_detail_3_722_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX + 1;

enum Tsr_detail_3_722_Supplementary_sign_typeType {
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE = 0,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN = 1,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW = 2,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER = 3,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME = 4,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT = 5,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT = 6,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT = 7,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT = 8,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK = 9,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR = 10,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT = 11,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN = 12,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR = 13,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN = 14,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL = 15,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD = 16,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG = 17,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS = 18,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT = 19,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC = 20,
  Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP = 255,
  Tsr_detail_3_722_Supplementary_sign_typeType_Tsr_detail_3_722_Supplementary_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_3_722_Supplementary_sign_typeType_Tsr_detail_3_722_Supplementary_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_3_722_Supplementary_sign_typeType_IsValid(int value);
const Tsr_detail_3_722_Supplementary_sign_typeType Tsr_detail_3_722_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN = Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
const Tsr_detail_3_722_Supplementary_sign_typeType Tsr_detail_3_722_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX = Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
const int Tsr_detail_3_722_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE = Tsr_detail_3_722_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX + 1;

enum Tsr_detail_3_722_Filter_typeType {
  Tsr_detail_3_722_Filter_typeType_FILTER_TYPE_NOT_FILTERED = 0,
  Tsr_detail_3_722_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST = 1,
  Tsr_detail_3_722_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK = 2,
  Tsr_detail_3_722_Filter_typeType_FILTER_TYPE_EMBEDDED = 3,
  Tsr_detail_3_722_Filter_typeType_Tsr_detail_3_722_Filter_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_3_722_Filter_typeType_Tsr_detail_3_722_Filter_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_3_722_Filter_typeType_IsValid(int value);
const Tsr_detail_3_722_Filter_typeType Tsr_detail_3_722_Filter_typeType_Filter_typeType_MIN = Tsr_detail_3_722_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
const Tsr_detail_3_722_Filter_typeType Tsr_detail_3_722_Filter_typeType_Filter_typeType_MAX = Tsr_detail_3_722_Filter_typeType_FILTER_TYPE_EMBEDDED;
const int Tsr_detail_3_722_Filter_typeType_Filter_typeType_ARRAYSIZE = Tsr_detail_3_722_Filter_typeType_Filter_typeType_MAX + 1;

enum Tsr_detail_4_723_Vision_only_sign_typeType {
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H = 0,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H = 1,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H = 2,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H = 3,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H = 4,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H = 5,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H = 6,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H = 7,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H = 8,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H = 9,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H = 10,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H = 11,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H = 12,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H = 13,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR = 20,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H = 28,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H = 29,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H = 30,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H = 31,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H = 32,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H = 33,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H = 34,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H = 35,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H = 36,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H = 37,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H = 38,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H = 39,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H = 40,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H = 41,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI = 50,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR = 64,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC = 65,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H = 100,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H = 101,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H = 102,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H = 103,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H = 104,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H = 105,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H = 106,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H = 107,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H = 108,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H = 109,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H = 110,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H = 111,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H = 112,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H = 113,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H = 114,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H = 115,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H = 116,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H = 117,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H = 118,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H = 119,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H = 120,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H = 121,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H = 122,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H = 123,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H = 124,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H = 125,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H = 126,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H = 127,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H = 128,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H = 129,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN = 171,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END = 172,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN = 173,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END = 174,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN = 175,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END = 176,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR = 200,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING = 201,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC = 220,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC = 221,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED = 254,
  Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN = 255,
  Tsr_detail_4_723_Vision_only_sign_typeType_Tsr_detail_4_723_Vision_only_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_4_723_Vision_only_sign_typeType_Tsr_detail_4_723_Vision_only_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_4_723_Vision_only_sign_typeType_IsValid(int value);
const Tsr_detail_4_723_Vision_only_sign_typeType Tsr_detail_4_723_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN = Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
const Tsr_detail_4_723_Vision_only_sign_typeType Tsr_detail_4_723_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX = Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
const int Tsr_detail_4_723_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE = Tsr_detail_4_723_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX + 1;

enum Tsr_detail_4_723_Supplementary_sign_typeType {
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE = 0,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN = 1,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW = 2,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER = 3,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME = 4,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT = 5,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT = 6,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT = 7,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT = 8,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK = 9,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR = 10,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT = 11,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN = 12,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR = 13,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN = 14,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL = 15,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD = 16,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG = 17,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS = 18,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT = 19,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC = 20,
  Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP = 255,
  Tsr_detail_4_723_Supplementary_sign_typeType_Tsr_detail_4_723_Supplementary_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_4_723_Supplementary_sign_typeType_Tsr_detail_4_723_Supplementary_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_4_723_Supplementary_sign_typeType_IsValid(int value);
const Tsr_detail_4_723_Supplementary_sign_typeType Tsr_detail_4_723_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN = Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
const Tsr_detail_4_723_Supplementary_sign_typeType Tsr_detail_4_723_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX = Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
const int Tsr_detail_4_723_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE = Tsr_detail_4_723_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX + 1;

enum Tsr_detail_4_723_Filter_typeType {
  Tsr_detail_4_723_Filter_typeType_FILTER_TYPE_NOT_FILTERED = 0,
  Tsr_detail_4_723_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST = 1,
  Tsr_detail_4_723_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK = 2,
  Tsr_detail_4_723_Filter_typeType_FILTER_TYPE_EMBEDDED = 3,
  Tsr_detail_4_723_Filter_typeType_Tsr_detail_4_723_Filter_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_4_723_Filter_typeType_Tsr_detail_4_723_Filter_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_4_723_Filter_typeType_IsValid(int value);
const Tsr_detail_4_723_Filter_typeType Tsr_detail_4_723_Filter_typeType_Filter_typeType_MIN = Tsr_detail_4_723_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
const Tsr_detail_4_723_Filter_typeType Tsr_detail_4_723_Filter_typeType_Filter_typeType_MAX = Tsr_detail_4_723_Filter_typeType_FILTER_TYPE_EMBEDDED;
const int Tsr_detail_4_723_Filter_typeType_Filter_typeType_ARRAYSIZE = Tsr_detail_4_723_Filter_typeType_Filter_typeType_MAX + 1;

enum Tsr_detail_1_720_Vision_only_sign_typeType {
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H = 0,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H = 1,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H = 2,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H = 3,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H = 4,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H = 5,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H = 6,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H = 7,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H = 8,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H = 9,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H = 10,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H = 11,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H = 12,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H = 13,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR = 20,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H = 28,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H = 29,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H = 30,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H = 31,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H = 32,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H = 33,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H = 34,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H = 35,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H = 36,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H = 37,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H = 38,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H = 39,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H = 40,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H = 41,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI = 50,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR = 64,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC = 65,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H = 100,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H = 101,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H = 102,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H = 103,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H = 104,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H = 105,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H = 106,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H = 107,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H = 108,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H = 109,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H = 110,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H = 111,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H = 112,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H = 113,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H = 114,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H = 115,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H = 116,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H = 117,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H = 118,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H = 119,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H = 120,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H = 121,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H = 122,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H = 123,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H = 124,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H = 125,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H = 126,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H = 127,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H = 128,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H = 129,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN = 171,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END = 172,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN = 173,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END = 174,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN = 175,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END = 176,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR = 200,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING = 201,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC = 220,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC = 221,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED = 254,
  Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN = 255,
  Tsr_detail_1_720_Vision_only_sign_typeType_Tsr_detail_1_720_Vision_only_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_1_720_Vision_only_sign_typeType_Tsr_detail_1_720_Vision_only_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_1_720_Vision_only_sign_typeType_IsValid(int value);
const Tsr_detail_1_720_Vision_only_sign_typeType Tsr_detail_1_720_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN = Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
const Tsr_detail_1_720_Vision_only_sign_typeType Tsr_detail_1_720_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX = Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
const int Tsr_detail_1_720_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE = Tsr_detail_1_720_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX + 1;

enum Tsr_detail_1_720_Supplementary_sign_typeType {
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE = 0,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN = 1,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW = 2,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER = 3,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME = 4,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT = 5,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT = 6,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT = 7,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT = 8,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK = 9,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR = 10,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT = 11,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN = 12,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR = 13,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN = 14,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL = 15,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD = 16,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG = 17,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS = 18,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT = 19,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC = 20,
  Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP = 255,
  Tsr_detail_1_720_Supplementary_sign_typeType_Tsr_detail_1_720_Supplementary_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_1_720_Supplementary_sign_typeType_Tsr_detail_1_720_Supplementary_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_1_720_Supplementary_sign_typeType_IsValid(int value);
const Tsr_detail_1_720_Supplementary_sign_typeType Tsr_detail_1_720_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN = Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
const Tsr_detail_1_720_Supplementary_sign_typeType Tsr_detail_1_720_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX = Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
const int Tsr_detail_1_720_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE = Tsr_detail_1_720_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX + 1;

enum Tsr_detail_1_720_Filter_typeType {
  Tsr_detail_1_720_Filter_typeType_FILTER_TYPE_NOT_FILTERED = 0,
  Tsr_detail_1_720_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST = 1,
  Tsr_detail_1_720_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK = 2,
  Tsr_detail_1_720_Filter_typeType_FILTER_TYPE_EMBEDDED = 3,
  Tsr_detail_1_720_Filter_typeType_Tsr_detail_1_720_Filter_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_1_720_Filter_typeType_Tsr_detail_1_720_Filter_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_1_720_Filter_typeType_IsValid(int value);
const Tsr_detail_1_720_Filter_typeType Tsr_detail_1_720_Filter_typeType_Filter_typeType_MIN = Tsr_detail_1_720_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
const Tsr_detail_1_720_Filter_typeType Tsr_detail_1_720_Filter_typeType_Filter_typeType_MAX = Tsr_detail_1_720_Filter_typeType_FILTER_TYPE_EMBEDDED;
const int Tsr_detail_1_720_Filter_typeType_Filter_typeType_ARRAYSIZE = Tsr_detail_1_720_Filter_typeType_Filter_typeType_MAX + 1;

enum Tsr_detail_2_721_Vision_only_sign_typeType {
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H = 0,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H = 1,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H = 2,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H = 3,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H = 4,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H = 5,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H = 6,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H = 7,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H = 8,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H = 9,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H = 10,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H = 11,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H = 12,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H = 13,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR = 20,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H = 28,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H = 29,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H = 30,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H = 31,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H = 32,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H = 33,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H = 34,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H = 35,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H = 36,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H = 37,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H = 38,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H = 39,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H = 40,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H = 41,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI = 50,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR = 64,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC = 65,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H = 100,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H = 101,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H = 102,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H = 103,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H = 104,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H = 105,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H = 106,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H = 107,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H = 108,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H = 109,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H = 110,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H = 111,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H = 112,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H = 113,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H = 114,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H = 115,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H = 116,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H = 117,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H = 118,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H = 119,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H = 120,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H = 121,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H = 122,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H = 123,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H = 124,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H = 125,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H = 126,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H = 127,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H = 128,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H = 129,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN = 171,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END = 172,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN = 173,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END = 174,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN = 175,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END = 176,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR = 200,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING = 201,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC = 220,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC = 221,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED = 254,
  Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN = 255,
  Tsr_detail_2_721_Vision_only_sign_typeType_Tsr_detail_2_721_Vision_only_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_2_721_Vision_only_sign_typeType_Tsr_detail_2_721_Vision_only_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_2_721_Vision_only_sign_typeType_IsValid(int value);
const Tsr_detail_2_721_Vision_only_sign_typeType Tsr_detail_2_721_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN = Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
const Tsr_detail_2_721_Vision_only_sign_typeType Tsr_detail_2_721_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX = Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
const int Tsr_detail_2_721_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE = Tsr_detail_2_721_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX + 1;

enum Tsr_detail_2_721_Supplementary_sign_typeType {
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE = 0,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN = 1,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW = 2,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER = 3,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME = 4,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT = 5,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT = 6,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT = 7,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT = 8,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK = 9,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR = 10,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT = 11,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN = 12,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR = 13,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN = 14,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL = 15,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD = 16,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG = 17,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS = 18,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT = 19,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC = 20,
  Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP = 255,
  Tsr_detail_2_721_Supplementary_sign_typeType_Tsr_detail_2_721_Supplementary_sign_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_2_721_Supplementary_sign_typeType_Tsr_detail_2_721_Supplementary_sign_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_2_721_Supplementary_sign_typeType_IsValid(int value);
const Tsr_detail_2_721_Supplementary_sign_typeType Tsr_detail_2_721_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN = Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
const Tsr_detail_2_721_Supplementary_sign_typeType Tsr_detail_2_721_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX = Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
const int Tsr_detail_2_721_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE = Tsr_detail_2_721_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX + 1;

enum Tsr_detail_2_721_Filter_typeType {
  Tsr_detail_2_721_Filter_typeType_FILTER_TYPE_NOT_FILTERED = 0,
  Tsr_detail_2_721_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST = 1,
  Tsr_detail_2_721_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK = 2,
  Tsr_detail_2_721_Filter_typeType_FILTER_TYPE_EMBEDDED = 3,
  Tsr_detail_2_721_Filter_typeType_Tsr_detail_2_721_Filter_typeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Tsr_detail_2_721_Filter_typeType_Tsr_detail_2_721_Filter_typeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Tsr_detail_2_721_Filter_typeType_IsValid(int value);
const Tsr_detail_2_721_Filter_typeType Tsr_detail_2_721_Filter_typeType_Filter_typeType_MIN = Tsr_detail_2_721_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
const Tsr_detail_2_721_Filter_typeType Tsr_detail_2_721_Filter_typeType_Filter_typeType_MAX = Tsr_detail_2_721_Filter_typeType_FILTER_TYPE_EMBEDDED;
const int Tsr_detail_2_721_Filter_typeType_Filter_typeType_ARRAYSIZE = Tsr_detail_2_721_Filter_typeType_Filter_typeType_MAX + 1;

// ===================================================================

class Aftermarket_ext_669 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Aftermarket_ext_669) */ {
 public:
  Aftermarket_ext_669();
  virtual ~Aftermarket_ext_669();

  Aftermarket_ext_669(const Aftermarket_ext_669& from);

  inline Aftermarket_ext_669& operator=(const Aftermarket_ext_669& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Aftermarket_ext_669(Aftermarket_ext_669&& from) noexcept
    : Aftermarket_ext_669() {
    *this = ::std::move(from);
  }

  inline Aftermarket_ext_669& operator=(Aftermarket_ext_669&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Aftermarket_ext_669& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Aftermarket_ext_669* internal_default_instance() {
    return reinterpret_cast<const Aftermarket_ext_669*>(
               &_Aftermarket_ext_669_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Aftermarket_ext_669* other);
  friend void swap(Aftermarket_ext_669& a, Aftermarket_ext_669& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Aftermarket_ext_669* New() const final {
    return CreateMaybeMessage<Aftermarket_ext_669>(NULL);
  }

  Aftermarket_ext_669* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Aftermarket_ext_669>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Aftermarket_ext_669& from);
  void MergeFrom(const Aftermarket_ext_669& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Aftermarket_ext_669* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Aftermarket_ext_669_Ldw_availability_rightType Ldw_availability_rightType;
  static const Ldw_availability_rightType LDW_AVAILABILITY_RIGHT_UNAVALABLE =
    Aftermarket_ext_669_Ldw_availability_rightType_LDW_AVAILABILITY_RIGHT_UNAVALABLE;
  static const Ldw_availability_rightType LDW_AVAILABILITY_RIGHT_AVAILABLE =
    Aftermarket_ext_669_Ldw_availability_rightType_LDW_AVAILABILITY_RIGHT_AVAILABLE;
  static inline bool Ldw_availability_rightType_IsValid(int value) {
    return Aftermarket_ext_669_Ldw_availability_rightType_IsValid(value);
  }
  static const Ldw_availability_rightType Ldw_availability_rightType_MIN =
    Aftermarket_ext_669_Ldw_availability_rightType_Ldw_availability_rightType_MIN;
  static const Ldw_availability_rightType Ldw_availability_rightType_MAX =
    Aftermarket_ext_669_Ldw_availability_rightType_Ldw_availability_rightType_MAX;
  static const int Ldw_availability_rightType_ARRAYSIZE =
    Aftermarket_ext_669_Ldw_availability_rightType_Ldw_availability_rightType_ARRAYSIZE;

  typedef Aftermarket_ext_669_Ldw_availability_leftType Ldw_availability_leftType;
  static const Ldw_availability_leftType LDW_AVAILABILITY_LEFT_UNAVALABLE =
    Aftermarket_ext_669_Ldw_availability_leftType_LDW_AVAILABILITY_LEFT_UNAVALABLE;
  static const Ldw_availability_leftType LDW_AVAILABILITY_LEFT_AVAILABLE =
    Aftermarket_ext_669_Ldw_availability_leftType_LDW_AVAILABILITY_LEFT_AVAILABLE;
  static inline bool Ldw_availability_leftType_IsValid(int value) {
    return Aftermarket_ext_669_Ldw_availability_leftType_IsValid(value);
  }
  static const Ldw_availability_leftType Ldw_availability_leftType_MIN =
    Aftermarket_ext_669_Ldw_availability_leftType_Ldw_availability_leftType_MIN;
  static const Ldw_availability_leftType Ldw_availability_leftType_MAX =
    Aftermarket_ext_669_Ldw_availability_leftType_Ldw_availability_leftType_MAX;
  static const int Ldw_availability_leftType_ARRAYSIZE =
    Aftermarket_ext_669_Ldw_availability_leftType_Ldw_availability_leftType_ARRAYSIZE;

  typedef Aftermarket_ext_669_Lane_type_rightType Lane_type_rightType;
  static const Lane_type_rightType LANE_TYPE_RIGHT_DASHED =
    Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_DASHED;
  static const Lane_type_rightType LANE_TYPE_RIGHT_SOLID =
    Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_SOLID;
  static const Lane_type_rightType LANE_TYPE_RIGHT_NONE =
    Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_NONE;
  static const Lane_type_rightType LANE_TYPE_RIGHT_ROAD_EDGE =
    Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_ROAD_EDGE;
  static const Lane_type_rightType LANE_TYPE_RIGHT_DOUBLE_LANE_MARK =
    Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_DOUBLE_LANE_MARK;
  static const Lane_type_rightType LANE_TYPE_RIGHT_BOTT_S_DOTS =
    Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_BOTT_S_DOTS;
  static const Lane_type_rightType LANE_TYPE_RIGHT_INVALID =
    Aftermarket_ext_669_Lane_type_rightType_LANE_TYPE_RIGHT_INVALID;
  static inline bool Lane_type_rightType_IsValid(int value) {
    return Aftermarket_ext_669_Lane_type_rightType_IsValid(value);
  }
  static const Lane_type_rightType Lane_type_rightType_MIN =
    Aftermarket_ext_669_Lane_type_rightType_Lane_type_rightType_MIN;
  static const Lane_type_rightType Lane_type_rightType_MAX =
    Aftermarket_ext_669_Lane_type_rightType_Lane_type_rightType_MAX;
  static const int Lane_type_rightType_ARRAYSIZE =
    Aftermarket_ext_669_Lane_type_rightType_Lane_type_rightType_ARRAYSIZE;

  typedef Aftermarket_ext_669_Lane_type_leftType Lane_type_leftType;
  static const Lane_type_leftType LANE_TYPE_LEFT_DASHED =
    Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_DASHED;
  static const Lane_type_leftType LANE_TYPE_LEFT_SOLID =
    Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_SOLID;
  static const Lane_type_leftType LANE_TYPE_LEFT_NONE =
    Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_NONE;
  static const Lane_type_leftType LANE_TYPE_LEFT_ROAD_EDGE =
    Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_ROAD_EDGE;
  static const Lane_type_leftType LANE_TYPE_LEFT_DOUBLE_LANE_MARK =
    Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_DOUBLE_LANE_MARK;
  static const Lane_type_leftType LANE_TYPE_LEFT_BOTT_S_DOTS =
    Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_BOTT_S_DOTS;
  static const Lane_type_leftType LANE_TYPE_LEFT_INVALID =
    Aftermarket_ext_669_Lane_type_leftType_LANE_TYPE_LEFT_INVALID;
  static inline bool Lane_type_leftType_IsValid(int value) {
    return Aftermarket_ext_669_Lane_type_leftType_IsValid(value);
  }
  static const Lane_type_leftType Lane_type_leftType_MIN =
    Aftermarket_ext_669_Lane_type_leftType_Lane_type_leftType_MIN;
  static const Lane_type_leftType Lane_type_leftType_MAX =
    Aftermarket_ext_669_Lane_type_leftType_Lane_type_leftType_MAX;
  static const int Lane_type_leftType_ARRAYSIZE =
    Aftermarket_ext_669_Lane_type_leftType_Lane_type_leftType_ARRAYSIZE;

  typedef Aftermarket_ext_669_Lane_conf_rightType Lane_conf_rightType;
  static const Lane_conf_rightType LANE_CONF_RIGHT_NO_LANE_CONF =
    Aftermarket_ext_669_Lane_conf_rightType_LANE_CONF_RIGHT_NO_LANE_CONF;
  static const Lane_conf_rightType LANE_CONF_RIGHT_BAD_LANE_CONF =
    Aftermarket_ext_669_Lane_conf_rightType_LANE_CONF_RIGHT_BAD_LANE_CONF;
  static const Lane_conf_rightType LANE_CONF_RIGHT_GODD_LANE_CONF =
    Aftermarket_ext_669_Lane_conf_rightType_LANE_CONF_RIGHT_GODD_LANE_CONF;
  static const Lane_conf_rightType LANE_CONF_RIGHT_VERY_GOOD_LANE_CONF =
    Aftermarket_ext_669_Lane_conf_rightType_LANE_CONF_RIGHT_VERY_GOOD_LANE_CONF;
  static inline bool Lane_conf_rightType_IsValid(int value) {
    return Aftermarket_ext_669_Lane_conf_rightType_IsValid(value);
  }
  static const Lane_conf_rightType Lane_conf_rightType_MIN =
    Aftermarket_ext_669_Lane_conf_rightType_Lane_conf_rightType_MIN;
  static const Lane_conf_rightType Lane_conf_rightType_MAX =
    Aftermarket_ext_669_Lane_conf_rightType_Lane_conf_rightType_MAX;
  static const int Lane_conf_rightType_ARRAYSIZE =
    Aftermarket_ext_669_Lane_conf_rightType_Lane_conf_rightType_ARRAYSIZE;

  typedef Aftermarket_ext_669_Lane_conf_leftType Lane_conf_leftType;
  static const Lane_conf_leftType LANE_CONF_LEFT_NO_LANE_CONF =
    Aftermarket_ext_669_Lane_conf_leftType_LANE_CONF_LEFT_NO_LANE_CONF;
  static const Lane_conf_leftType LANE_CONF_LEFT_BAD_LANE_CONF =
    Aftermarket_ext_669_Lane_conf_leftType_LANE_CONF_LEFT_BAD_LANE_CONF;
  static const Lane_conf_leftType LANE_CONF_LEFT_GODD_LANE_CONF =
    Aftermarket_ext_669_Lane_conf_leftType_LANE_CONF_LEFT_GODD_LANE_CONF;
  static const Lane_conf_leftType LANE_CONF_LEFT_VERY_GOOD_LANE_CONF =
    Aftermarket_ext_669_Lane_conf_leftType_LANE_CONF_LEFT_VERY_GOOD_LANE_CONF;
  static inline bool Lane_conf_leftType_IsValid(int value) {
    return Aftermarket_ext_669_Lane_conf_leftType_IsValid(value);
  }
  static const Lane_conf_leftType Lane_conf_leftType_MIN =
    Aftermarket_ext_669_Lane_conf_leftType_Lane_conf_leftType_MIN;
  static const Lane_conf_leftType Lane_conf_leftType_MAX =
    Aftermarket_ext_669_Lane_conf_leftType_Lane_conf_leftType_MAX;
  static const int Lane_conf_leftType_ARRAYSIZE =
    Aftermarket_ext_669_Lane_conf_leftType_Lane_conf_leftType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.TSR.Aftermarket_ext_669.Ldw_availability_rightType ldw_availability_right = 1;
  void clear_ldw_availability_right();
  static const int kLdwAvailabilityRightFieldNumber = 1;
  ::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_rightType ldw_availability_right() const;
  void set_ldw_availability_right(::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_rightType value);

  // .Calmcar.drivers.TSR.Aftermarket_ext_669.Ldw_availability_leftType ldw_availability_left = 2;
  void clear_ldw_availability_left();
  static const int kLdwAvailabilityLeftFieldNumber = 2;
  ::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_leftType ldw_availability_left() const;
  void set_ldw_availability_left(::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_leftType value);

  // .Calmcar.drivers.TSR.Aftermarket_ext_669.Lane_type_rightType lane_type_right = 3;
  void clear_lane_type_right();
  static const int kLaneTypeRightFieldNumber = 3;
  ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_rightType lane_type_right() const;
  void set_lane_type_right(::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_rightType value);

  // .Calmcar.drivers.TSR.Aftermarket_ext_669.Lane_type_leftType lane_type_left = 4;
  void clear_lane_type_left();
  static const int kLaneTypeLeftFieldNumber = 4;
  ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_leftType lane_type_left() const;
  void set_lane_type_left(::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_leftType value);

  // .Calmcar.drivers.TSR.Aftermarket_ext_669.Lane_conf_rightType lane_conf_right = 5;
  void clear_lane_conf_right();
  static const int kLaneConfRightFieldNumber = 5;
  ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_rightType lane_conf_right() const;
  void set_lane_conf_right(::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_rightType value);

  // .Calmcar.drivers.TSR.Aftermarket_ext_669.Lane_conf_leftType lane_conf_left = 6;
  void clear_lane_conf_left();
  static const int kLaneConfLeftFieldNumber = 6;
  ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_leftType lane_conf_left() const;
  void set_lane_conf_left(::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_leftType value);

  // double distance_to_lane_r = 7;
  void clear_distance_to_lane_r();
  static const int kDistanceToLaneRFieldNumber = 7;
  double distance_to_lane_r() const;
  void set_distance_to_lane_r(double value);

  // double distance_to_lane_l = 8;
  void clear_distance_to_lane_l();
  static const int kDistanceToLaneLFieldNumber = 8;
  double distance_to_lane_l() const;
  void set_distance_to_lane_l(double value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Aftermarket_ext_669)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int ldw_availability_right_;
  int ldw_availability_left_;
  int lane_type_right_;
  int lane_type_left_;
  int lane_conf_right_;
  int lane_conf_left_;
  double distance_to_lane_r_;
  double distance_to_lane_l_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Signal_car_760 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Signal_car_760) */ {
 public:
  Signal_car_760();
  virtual ~Signal_car_760();

  Signal_car_760(const Signal_car_760& from);

  inline Signal_car_760& operator=(const Signal_car_760& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Signal_car_760(Signal_car_760&& from) noexcept
    : Signal_car_760() {
    *this = ::std::move(from);
  }

  inline Signal_car_760& operator=(Signal_car_760&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Signal_car_760& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Signal_car_760* internal_default_instance() {
    return reinterpret_cast<const Signal_car_760*>(
               &_Signal_car_760_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Signal_car_760* other);
  friend void swap(Signal_car_760& a, Signal_car_760& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Signal_car_760* New() const final {
    return CreateMaybeMessage<Signal_car_760>(NULL);
  }

  Signal_car_760* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Signal_car_760>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Signal_car_760& from);
  void MergeFrom(const Signal_car_760& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Signal_car_760* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Signal_car_760_Wipers_availabledType Wipers_availabledType;
  static const Wipers_availabledType WIPERS_AVAILABLED_OFF =
    Signal_car_760_Wipers_availabledType_WIPERS_AVAILABLED_OFF;
  static const Wipers_availabledType WIPERS_AVAILABLED_ON =
    Signal_car_760_Wipers_availabledType_WIPERS_AVAILABLED_ON;
  static inline bool Wipers_availabledType_IsValid(int value) {
    return Signal_car_760_Wipers_availabledType_IsValid(value);
  }
  static const Wipers_availabledType Wipers_availabledType_MIN =
    Signal_car_760_Wipers_availabledType_Wipers_availabledType_MIN;
  static const Wipers_availabledType Wipers_availabledType_MAX =
    Signal_car_760_Wipers_availabledType_Wipers_availabledType_MAX;
  static const int Wipers_availabledType_ARRAYSIZE =
    Signal_car_760_Wipers_availabledType_Wipers_availabledType_ARRAYSIZE;

  typedef Signal_car_760_Highbeam_availabledType Highbeam_availabledType;
  static const Highbeam_availabledType HIGHBEAM_AVAILABLED_OFF =
    Signal_car_760_Highbeam_availabledType_HIGHBEAM_AVAILABLED_OFF;
  static const Highbeam_availabledType HIGHBEAM_AVAILABLED_ON =
    Signal_car_760_Highbeam_availabledType_HIGHBEAM_AVAILABLED_ON;
  static inline bool Highbeam_availabledType_IsValid(int value) {
    return Signal_car_760_Highbeam_availabledType_IsValid(value);
  }
  static const Highbeam_availabledType Highbeam_availabledType_MIN =
    Signal_car_760_Highbeam_availabledType_Highbeam_availabledType_MIN;
  static const Highbeam_availabledType Highbeam_availabledType_MAX =
    Signal_car_760_Highbeam_availabledType_Highbeam_availabledType_MAX;
  static const int Highbeam_availabledType_ARRAYSIZE =
    Signal_car_760_Highbeam_availabledType_Highbeam_availabledType_ARRAYSIZE;

  typedef Signal_car_760_Lowbeam_availabledType Lowbeam_availabledType;
  static const Lowbeam_availabledType LOWBEAM_AVAILABLED_OFF =
    Signal_car_760_Lowbeam_availabledType_LOWBEAM_AVAILABLED_OFF;
  static const Lowbeam_availabledType LOWBEAM_AVAILABLED_ON =
    Signal_car_760_Lowbeam_availabledType_LOWBEAM_AVAILABLED_ON;
  static inline bool Lowbeam_availabledType_IsValid(int value) {
    return Signal_car_760_Lowbeam_availabledType_IsValid(value);
  }
  static const Lowbeam_availabledType Lowbeam_availabledType_MIN =
    Signal_car_760_Lowbeam_availabledType_Lowbeam_availabledType_MIN;
  static const Lowbeam_availabledType Lowbeam_availabledType_MAX =
    Signal_car_760_Lowbeam_availabledType_Lowbeam_availabledType_MAX;
  static const int Lowbeam_availabledType_ARRAYSIZE =
    Signal_car_760_Lowbeam_availabledType_Lowbeam_availabledType_ARRAYSIZE;

  typedef Signal_car_760_BrakesType BrakesType;
  static const BrakesType BRAKES_OFF =
    Signal_car_760_BrakesType_BRAKES_OFF;
  static const BrakesType BRAKES_ON =
    Signal_car_760_BrakesType_BRAKES_ON;
  static inline bool BrakesType_IsValid(int value) {
    return Signal_car_760_BrakesType_IsValid(value);
  }
  static const BrakesType BrakesType_MIN =
    Signal_car_760_BrakesType_BrakesType_MIN;
  static const BrakesType BrakesType_MAX =
    Signal_car_760_BrakesType_BrakesType_MAX;
  static const int BrakesType_ARRAYSIZE =
    Signal_car_760_BrakesType_BrakesType_ARRAYSIZE;

  typedef Signal_car_760_Left_blinkType Left_blinkType;
  static const Left_blinkType LEFT_BLINK_OFF =
    Signal_car_760_Left_blinkType_LEFT_BLINK_OFF;
  static const Left_blinkType LEFT_BLINK_ON =
    Signal_car_760_Left_blinkType_LEFT_BLINK_ON;
  static inline bool Left_blinkType_IsValid(int value) {
    return Signal_car_760_Left_blinkType_IsValid(value);
  }
  static const Left_blinkType Left_blinkType_MIN =
    Signal_car_760_Left_blinkType_Left_blinkType_MIN;
  static const Left_blinkType Left_blinkType_MAX =
    Signal_car_760_Left_blinkType_Left_blinkType_MAX;
  static const int Left_blinkType_ARRAYSIZE =
    Signal_car_760_Left_blinkType_Left_blinkType_ARRAYSIZE;

  typedef Signal_car_760_Right_blinkType Right_blinkType;
  static const Right_blinkType RIGHT_BLINK_OFF =
    Signal_car_760_Right_blinkType_RIGHT_BLINK_OFF;
  static const Right_blinkType RIGHT_BLINK_ON =
    Signal_car_760_Right_blinkType_RIGHT_BLINK_ON;
  static inline bool Right_blinkType_IsValid(int value) {
    return Signal_car_760_Right_blinkType_IsValid(value);
  }
  static const Right_blinkType Right_blinkType_MIN =
    Signal_car_760_Right_blinkType_Right_blinkType_MIN;
  static const Right_blinkType Right_blinkType_MAX =
    Signal_car_760_Right_blinkType_Right_blinkType_MAX;
  static const int Right_blinkType_ARRAYSIZE =
    Signal_car_760_Right_blinkType_Right_blinkType_ARRAYSIZE;

  typedef Signal_car_760_WippersType WippersType;
  static const WippersType WIPPERS_OFF =
    Signal_car_760_WippersType_WIPPERS_OFF;
  static const WippersType WIPPERS_ON =
    Signal_car_760_WippersType_WIPPERS_ON;
  static inline bool WippersType_IsValid(int value) {
    return Signal_car_760_WippersType_IsValid(value);
  }
  static const WippersType WippersType_MIN =
    Signal_car_760_WippersType_WippersType_MIN;
  static const WippersType WippersType_MAX =
    Signal_car_760_WippersType_WippersType_MAX;
  static const int WippersType_ARRAYSIZE =
    Signal_car_760_WippersType_WippersType_ARRAYSIZE;

  typedef Signal_car_760_LowbeamType LowbeamType;
  static const LowbeamType LOWBEAM_OFF =
    Signal_car_760_LowbeamType_LOWBEAM_OFF;
  static const LowbeamType LOWBEAM_ON =
    Signal_car_760_LowbeamType_LOWBEAM_ON;
  static inline bool LowbeamType_IsValid(int value) {
    return Signal_car_760_LowbeamType_IsValid(value);
  }
  static const LowbeamType LowbeamType_MIN =
    Signal_car_760_LowbeamType_LowbeamType_MIN;
  static const LowbeamType LowbeamType_MAX =
    Signal_car_760_LowbeamType_LowbeamType_MAX;
  static const int LowbeamType_ARRAYSIZE =
    Signal_car_760_LowbeamType_LowbeamType_ARRAYSIZE;

  typedef Signal_car_760_HighbeamType HighbeamType;
  static const HighbeamType HIGHBEAM_OFF =
    Signal_car_760_HighbeamType_HIGHBEAM_OFF;
  static const HighbeamType HIGHBEAM_ON =
    Signal_car_760_HighbeamType_HIGHBEAM_ON;
  static inline bool HighbeamType_IsValid(int value) {
    return Signal_car_760_HighbeamType_IsValid(value);
  }
  static const HighbeamType HighbeamType_MIN =
    Signal_car_760_HighbeamType_HighbeamType_MIN;
  static const HighbeamType HighbeamType_MAX =
    Signal_car_760_HighbeamType_HighbeamType_MAX;
  static const int HighbeamType_ARRAYSIZE =
    Signal_car_760_HighbeamType_HighbeamType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.TSR.Signal_car_760.Wipers_availabledType wipers_availabled = 1;
  void clear_wipers_availabled();
  static const int kWipersAvailabledFieldNumber = 1;
  ::Calmcar::drivers::TSR::Signal_car_760_Wipers_availabledType wipers_availabled() const;
  void set_wipers_availabled(::Calmcar::drivers::TSR::Signal_car_760_Wipers_availabledType value);

  // .Calmcar.drivers.TSR.Signal_car_760.Highbeam_availabledType highbeam_availabled = 2;
  void clear_highbeam_availabled();
  static const int kHighbeamAvailabledFieldNumber = 2;
  ::Calmcar::drivers::TSR::Signal_car_760_Highbeam_availabledType highbeam_availabled() const;
  void set_highbeam_availabled(::Calmcar::drivers::TSR::Signal_car_760_Highbeam_availabledType value);

  // .Calmcar.drivers.TSR.Signal_car_760.Lowbeam_availabledType lowbeam_availabled = 3;
  void clear_lowbeam_availabled();
  static const int kLowbeamAvailabledFieldNumber = 3;
  ::Calmcar::drivers::TSR::Signal_car_760_Lowbeam_availabledType lowbeam_availabled() const;
  void set_lowbeam_availabled(::Calmcar::drivers::TSR::Signal_car_760_Lowbeam_availabledType value);

  // .Calmcar.drivers.TSR.Signal_car_760.BrakesType brakes = 4;
  void clear_brakes();
  static const int kBrakesFieldNumber = 4;
  ::Calmcar::drivers::TSR::Signal_car_760_BrakesType brakes() const;
  void set_brakes(::Calmcar::drivers::TSR::Signal_car_760_BrakesType value);

  // .Calmcar.drivers.TSR.Signal_car_760.Left_blinkType left_blink = 5;
  void clear_left_blink();
  static const int kLeftBlinkFieldNumber = 5;
  ::Calmcar::drivers::TSR::Signal_car_760_Left_blinkType left_blink() const;
  void set_left_blink(::Calmcar::drivers::TSR::Signal_car_760_Left_blinkType value);

  // .Calmcar.drivers.TSR.Signal_car_760.Right_blinkType right_blink = 6;
  void clear_right_blink();
  static const int kRightBlinkFieldNumber = 6;
  ::Calmcar::drivers::TSR::Signal_car_760_Right_blinkType right_blink() const;
  void set_right_blink(::Calmcar::drivers::TSR::Signal_car_760_Right_blinkType value);

  // .Calmcar.drivers.TSR.Signal_car_760.WippersType wippers = 7;
  void clear_wippers();
  static const int kWippersFieldNumber = 7;
  ::Calmcar::drivers::TSR::Signal_car_760_WippersType wippers() const;
  void set_wippers(::Calmcar::drivers::TSR::Signal_car_760_WippersType value);

  // .Calmcar.drivers.TSR.Signal_car_760.LowbeamType lowbeam = 8;
  void clear_lowbeam();
  static const int kLowbeamFieldNumber = 8;
  ::Calmcar::drivers::TSR::Signal_car_760_LowbeamType lowbeam() const;
  void set_lowbeam(::Calmcar::drivers::TSR::Signal_car_760_LowbeamType value);

  // .Calmcar.drivers.TSR.Signal_car_760.HighbeamType highbeam = 9;
  void clear_highbeam();
  static const int kHighbeamFieldNumber = 9;
  ::Calmcar::drivers::TSR::Signal_car_760_HighbeamType highbeam() const;
  void set_highbeam(::Calmcar::drivers::TSR::Signal_car_760_HighbeamType value);

  // int32 reserved1 = 10;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 10;
  ::google::protobuf::int32 reserved1() const;
  void set_reserved1(::google::protobuf::int32 value);

  // int32 reserved2 = 11;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 11;
  ::google::protobuf::int32 reserved2() const;
  void set_reserved2(::google::protobuf::int32 value);

  // int32 reserved3 = 12;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 12;
  ::google::protobuf::int32 reserved3() const;
  void set_reserved3(::google::protobuf::int32 value);

  // int32 speed = 13;
  void clear_speed();
  static const int kSpeedFieldNumber = 13;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // int32 reserved = 14;
  void clear_reserved();
  static const int kReservedFieldNumber = 14;
  ::google::protobuf::int32 reserved() const;
  void set_reserved(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Signal_car_760)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int wipers_availabled_;
  int highbeam_availabled_;
  int lowbeam_availabled_;
  int brakes_;
  int left_blink_;
  int right_blink_;
  int wippers_;
  int lowbeam_;
  int highbeam_;
  ::google::protobuf::int32 reserved1_;
  ::google::protobuf::int32 reserved2_;
  ::google::protobuf::int32 reserved3_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 reserved_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Aws_700 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Aws_700) */ {
 public:
  Aws_700();
  virtual ~Aws_700();

  Aws_700(const Aws_700& from);

  inline Aws_700& operator=(const Aws_700& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Aws_700(Aws_700&& from) noexcept
    : Aws_700() {
    *this = ::std::move(from);
  }

  inline Aws_700& operator=(Aws_700&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Aws_700& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Aws_700* internal_default_instance() {
    return reinterpret_cast<const Aws_700*>(
               &_Aws_700_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Aws_700* other);
  friend void swap(Aws_700& a, Aws_700& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Aws_700* New() const final {
    return CreateMaybeMessage<Aws_700>(NULL);
  }

  Aws_700* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Aws_700>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Aws_700& from);
  void MergeFrom(const Aws_700& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Aws_700* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Aws_700_Tsr_warning_levelType Tsr_warning_levelType;
  static const Tsr_warning_levelType TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_LESS_EQUAL_SPEED_10 =
    Aws_700_Tsr_warning_levelType_TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_LESS_EQUAL_SPEED_10;
  static const Tsr_warning_levelType TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_MORE_SPEED_10 =
    Aws_700_Tsr_warning_levelType_TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_MORE_SPEED_10;
  static const Tsr_warning_levelType TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_MORE_SPEED_20 =
    Aws_700_Tsr_warning_levelType_TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_MORE_SPEED_20;
  static const Tsr_warning_levelType TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_MORE_SPEED_30 =
    Aws_700_Tsr_warning_levelType_TSR_WARNING_LEVEL_SPEED_VEHICLE_ROAD_MORE_SPEED_30;
  static inline bool Tsr_warning_levelType_IsValid(int value) {
    return Aws_700_Tsr_warning_levelType_IsValid(value);
  }
  static const Tsr_warning_levelType Tsr_warning_levelType_MIN =
    Aws_700_Tsr_warning_levelType_Tsr_warning_levelType_MIN;
  static const Tsr_warning_levelType Tsr_warning_levelType_MAX =
    Aws_700_Tsr_warning_levelType_Tsr_warning_levelType_MAX;
  static const int Tsr_warning_levelType_ARRAYSIZE =
    Aws_700_Tsr_warning_levelType_Tsr_warning_levelType_ARRAYSIZE;

  typedef Aws_700_Tsr_enabbledType Tsr_enabbledType;
  static const Tsr_enabbledType TSR_ENABBLED_OFF =
    Aws_700_Tsr_enabbledType_TSR_ENABBLED_OFF;
  static const Tsr_enabbledType TSR_ENABBLED_ON =
    Aws_700_Tsr_enabbledType_TSR_ENABBLED_ON;
  static inline bool Tsr_enabbledType_IsValid(int value) {
    return Aws_700_Tsr_enabbledType_IsValid(value);
  }
  static const Tsr_enabbledType Tsr_enabbledType_MIN =
    Aws_700_Tsr_enabbledType_Tsr_enabbledType_MIN;
  static const Tsr_enabbledType Tsr_enabbledType_MAX =
    Aws_700_Tsr_enabbledType_Tsr_enabbledType_MAX;
  static const int Tsr_enabbledType_ARRAYSIZE =
    Aws_700_Tsr_enabbledType_Tsr_enabbledType_ARRAYSIZE;

  typedef Aws_700_Rainy_hw_enabledType Rainy_hw_enabledType;
  static const Rainy_hw_enabledType RAINY_HW_ENABLED_OFF =
    Aws_700_Rainy_hw_enabledType_RAINY_HW_ENABLED_OFF;
  static const Rainy_hw_enabledType RAINY_HW_ENABLED_ON =
    Aws_700_Rainy_hw_enabledType_RAINY_HW_ENABLED_ON;
  static inline bool Rainy_hw_enabledType_IsValid(int value) {
    return Aws_700_Rainy_hw_enabledType_IsValid(value);
  }
  static const Rainy_hw_enabledType Rainy_hw_enabledType_MIN =
    Aws_700_Rainy_hw_enabledType_Rainy_hw_enabledType_MIN;
  static const Rainy_hw_enabledType Rainy_hw_enabledType_MAX =
    Aws_700_Rainy_hw_enabledType_Rainy_hw_enabledType_MAX;
  static const int Rainy_hw_enabledType_ARRAYSIZE =
    Aws_700_Rainy_hw_enabledType_Rainy_hw_enabledType_ARRAYSIZE;

  typedef Aws_700_Rain_hwType Rain_hwType;
  static const Rain_hwType RAIN_HW_OFF =
    Aws_700_Rain_hwType_RAIN_HW_OFF;
  static const Rain_hwType RAIN_HW_ON =
    Aws_700_Rain_hwType_RAIN_HW_ON;
  static inline bool Rain_hwType_IsValid(int value) {
    return Aws_700_Rain_hwType_IsValid(value);
  }
  static const Rain_hwType Rain_hwType_MIN =
    Aws_700_Rain_hwType_Rain_hwType_MIN;
  static const Rain_hwType Rain_hwType_MAX =
    Aws_700_Rain_hwType_Rain_hwType_MAX;
  static const int Rain_hwType_ARRAYSIZE =
    Aws_700_Rain_hwType_Rain_hwType_ARRAYSIZE;

  typedef Aws_700_Pcw_peddzType Pcw_peddzType;
  static const Pcw_peddzType PCW_PEDDZ_NO_PEDESTRIAN =
    Aws_700_Pcw_peddzType_PCW_PEDDZ_NO_PEDESTRIAN;
  static const Pcw_peddzType PCW_PEDDZ_PEDESTRIAN_IN_DANGER_ZONE =
    Aws_700_Pcw_peddzType_PCW_PEDDZ_PEDESTRIAN_IN_DANGER_ZONE;
  static const Pcw_peddzType PCW_PEDDZ_PCW =
    Aws_700_Pcw_peddzType_PCW_PEDDZ_PCW;
  static inline bool Pcw_peddzType_IsValid(int value) {
    return Aws_700_Pcw_peddzType_IsValid(value);
  }
  static const Pcw_peddzType Pcw_peddzType_MIN =
    Aws_700_Pcw_peddzType_Pcw_peddzType_MIN;
  static const Pcw_peddzType Pcw_peddzType_MAX =
    Aws_700_Pcw_peddzType_Pcw_peddzType_MAX;
  static const int Pcw_peddzType_ARRAYSIZE =
    Aws_700_Pcw_peddzType_Pcw_peddzType_ARRAYSIZE;

  typedef Aws_700_Hw_warning_levelType Hw_warning_levelType;
  static const Hw_warning_levelType HW_WARNING_LEVEL_NO_CIPV_IN_FRAME =
    Aws_700_Hw_warning_levelType_HW_WARNING_LEVEL_NO_CIPV_IN_FRAME;
  static const Hw_warning_levelType HW_WARNING_LEVEL_CIPV_HW_CONFIGURATION =
    Aws_700_Hw_warning_levelType_HW_WARNING_LEVEL_CIPV_HW_CONFIGURATION;
  static const Hw_warning_levelType HW_WARNING_LEVEL_CIPV_HW_COFIGURATION =
    Aws_700_Hw_warning_levelType_HW_WARNING_LEVEL_CIPV_HW_COFIGURATION;
  static inline bool Hw_warning_levelType_IsValid(int value) {
    return Aws_700_Hw_warning_levelType_IsValid(value);
  }
  static const Hw_warning_levelType Hw_warning_levelType_MIN =
    Aws_700_Hw_warning_levelType_Hw_warning_levelType_MIN;
  static const Hw_warning_levelType Hw_warning_levelType_MAX =
    Aws_700_Hw_warning_levelType_Hw_warning_levelType_MAX;
  static const int Hw_warning_levelType_ARRAYSIZE =
    Aws_700_Hw_warning_levelType_Hw_warning_levelType_ARRAYSIZE;

  typedef Aws_700_Hw_repeatable_enabledType Hw_repeatable_enabledType;
  static const Hw_repeatable_enabledType HW_REPEATABLE_ENABLED_OFF =
    Aws_700_Hw_repeatable_enabledType_HW_REPEATABLE_ENABLED_OFF;
  static const Hw_repeatable_enabledType HW_REPEATABLE_ENABLED_ON =
    Aws_700_Hw_repeatable_enabledType_HW_REPEATABLE_ENABLED_ON;
  static inline bool Hw_repeatable_enabledType_IsValid(int value) {
    return Aws_700_Hw_repeatable_enabledType_IsValid(value);
  }
  static const Hw_repeatable_enabledType Hw_repeatable_enabledType_MIN =
    Aws_700_Hw_repeatable_enabledType_Hw_repeatable_enabledType_MIN;
  static const Hw_repeatable_enabledType Hw_repeatable_enabledType_MAX =
    Aws_700_Hw_repeatable_enabledType_Hw_repeatable_enabledType_MAX;
  static const int Hw_repeatable_enabledType_ARRAYSIZE =
    Aws_700_Hw_repeatable_enabledType_Hw_repeatable_enabledType_ARRAYSIZE;

  typedef Aws_700_General_pedestrianType General_pedestrianType;
  static const General_pedestrianType GENERAL_PEDESTRIAN_OFF =
    Aws_700_General_pedestrianType_GENERAL_PEDESTRIAN_OFF;
  static const General_pedestrianType GENERAL_PEDESTRIAN_ON =
    Aws_700_General_pedestrianType_GENERAL_PEDESTRIAN_ON;
  static inline bool General_pedestrianType_IsValid(int value) {
    return Aws_700_General_pedestrianType_IsValid(value);
  }
  static const General_pedestrianType General_pedestrianType_MIN =
    Aws_700_General_pedestrianType_General_pedestrianType_MIN;
  static const General_pedestrianType General_pedestrianType_MAX =
    Aws_700_General_pedestrianType_General_pedestrianType_MAX;
  static const int General_pedestrianType_ARRAYSIZE =
    Aws_700_General_pedestrianType_General_pedestrianType_ARRAYSIZE;

  typedef Aws_700_Blinker_reminder_enabledType Blinker_reminder_enabledType;
  static const Blinker_reminder_enabledType BLINKER_REMINDER_ENABLED_OFF =
    Aws_700_Blinker_reminder_enabledType_BLINKER_REMINDER_ENABLED_OFF;
  static const Blinker_reminder_enabledType BLINKER_REMINDER_ENABLED_ON =
    Aws_700_Blinker_reminder_enabledType_BLINKER_REMINDER_ENABLED_ON;
  static inline bool Blinker_reminder_enabledType_IsValid(int value) {
    return Aws_700_Blinker_reminder_enabledType_IsValid(value);
  }
  static const Blinker_reminder_enabledType Blinker_reminder_enabledType_MIN =
    Aws_700_Blinker_reminder_enabledType_Blinker_reminder_enabledType_MIN;
  static const Blinker_reminder_enabledType Blinker_reminder_enabledType_MAX =
    Aws_700_Blinker_reminder_enabledType_Blinker_reminder_enabledType_MAX;
  static const int Blinker_reminder_enabledType_ARRAYSIZE =
    Aws_700_Blinker_reminder_enabledType_Blinker_reminder_enabledType_ARRAYSIZE;

  typedef Aws_700_Blinker_reminderType Blinker_reminderType;
  static const Blinker_reminderType BLINKER_REMINDER_OFF =
    Aws_700_Blinker_reminderType_BLINKER_REMINDER_OFF;
  static const Blinker_reminderType BLINKER_REMINDER_ON =
    Aws_700_Blinker_reminderType_BLINKER_REMINDER_ON;
  static inline bool Blinker_reminderType_IsValid(int value) {
    return Aws_700_Blinker_reminderType_IsValid(value);
  }
  static const Blinker_reminderType Blinker_reminderType_MIN =
    Aws_700_Blinker_reminderType_Blinker_reminderType_MIN;
  static const Blinker_reminderType Blinker_reminderType_MAX =
    Aws_700_Blinker_reminderType_Blinker_reminderType_MAX;
  static const int Blinker_reminderType_ARRAYSIZE =
    Aws_700_Blinker_reminderType_Blinker_reminderType_ARRAYSIZE;

  typedef Aws_700_Fcw_onType Fcw_onType;
  static const Fcw_onType FCW_ON_OFF =
    Aws_700_Fcw_onType_FCW_ON_OFF;
  static const Fcw_onType FCW_ON_ON =
    Aws_700_Fcw_onType_FCW_ON_ON;
  static inline bool Fcw_onType_IsValid(int value) {
    return Aws_700_Fcw_onType_IsValid(value);
  }
  static const Fcw_onType Fcw_onType_MIN =
    Aws_700_Fcw_onType_Fcw_onType_MIN;
  static const Fcw_onType Fcw_onType_MAX =
    Aws_700_Fcw_onType_Fcw_onType_MAX;
  static const int Fcw_onType_ARRAYSIZE =
    Aws_700_Fcw_onType_Fcw_onType_ARRAYSIZE;

  typedef Aws_700_Rldw_onType Rldw_onType;
  static const Rldw_onType RLDW_ON_OFF =
    Aws_700_Rldw_onType_RLDW_ON_OFF;
  static const Rldw_onType RLDW_ON_ON =
    Aws_700_Rldw_onType_RLDW_ON_ON;
  static inline bool Rldw_onType_IsValid(int value) {
    return Aws_700_Rldw_onType_IsValid(value);
  }
  static const Rldw_onType Rldw_onType_MIN =
    Aws_700_Rldw_onType_Rldw_onType_MIN;
  static const Rldw_onType Rldw_onType_MAX =
    Aws_700_Rldw_onType_Rldw_onType_MAX;
  static const int Rldw_onType_ARRAYSIZE =
    Aws_700_Rldw_onType_Rldw_onType_ARRAYSIZE;

  typedef Aws_700_Lldw_onType Lldw_onType;
  static const Lldw_onType LLDW_ON_OFF =
    Aws_700_Lldw_onType_LLDW_ON_OFF;
  static const Lldw_onType LLDW_ON_ON =
    Aws_700_Lldw_onType_LLDW_ON_ON;
  static inline bool Lldw_onType_IsValid(int value) {
    return Aws_700_Lldw_onType_IsValid(value);
  }
  static const Lldw_onType Lldw_onType_MIN =
    Aws_700_Lldw_onType_Lldw_onType_MIN;
  static const Lldw_onType Lldw_onType_MAX =
    Aws_700_Lldw_onType_Lldw_onType_MAX;
  static const int Lldw_onType_ARRAYSIZE =
    Aws_700_Lldw_onType_Lldw_onType_ARRAYSIZE;

  typedef Aws_700_Ldw_offType Ldw_offType;
  static const Ldw_offType LDW_OFF_OFF =
    Aws_700_Ldw_offType_LDW_OFF_OFF;
  static const Ldw_offType LDW_OFF_ON =
    Aws_700_Ldw_offType_LDW_OFF_ON;
  static inline bool Ldw_offType_IsValid(int value) {
    return Aws_700_Ldw_offType_IsValid(value);
  }
  static const Ldw_offType Ldw_offType_MIN =
    Aws_700_Ldw_offType_Ldw_offType_MIN;
  static const Ldw_offType Ldw_offType_MAX =
    Aws_700_Ldw_offType_Ldw_offType_MAX;
  static const int Ldw_offType_ARRAYSIZE =
    Aws_700_Ldw_offType_Ldw_offType_ARRAYSIZE;

  typedef Aws_700_MaintenanceType MaintenanceType;
  static const MaintenanceType MAINTENANCE_OFF =
    Aws_700_MaintenanceType_MAINTENANCE_OFF;
  static const MaintenanceType MAINTENANCE_ON =
    Aws_700_MaintenanceType_MAINTENANCE_ON;
  static inline bool MaintenanceType_IsValid(int value) {
    return Aws_700_MaintenanceType_IsValid(value);
  }
  static const MaintenanceType MaintenanceType_MIN =
    Aws_700_MaintenanceType_MaintenanceType_MIN;
  static const MaintenanceType MaintenanceType_MAX =
    Aws_700_MaintenanceType_MaintenanceType_MAX;
  static const int MaintenanceType_ARRAYSIZE =
    Aws_700_MaintenanceType_MaintenanceType_ARRAYSIZE;

  typedef Aws_700_Fail_safeType Fail_safeType;
  static const Fail_safeType FAIL_SAFE_OFF =
    Aws_700_Fail_safeType_FAIL_SAFE_OFF;
  static const Fail_safeType FAIL_SAFE_ON =
    Aws_700_Fail_safeType_FAIL_SAFE_ON;
  static inline bool Fail_safeType_IsValid(int value) {
    return Aws_700_Fail_safeType_IsValid(value);
  }
  static const Fail_safeType Fail_safeType_MIN =
    Aws_700_Fail_safeType_Fail_safeType_MIN;
  static const Fail_safeType Fail_safeType_MAX =
    Aws_700_Fail_safeType_Fail_safeType_MAX;
  static const int Fail_safeType_ARRAYSIZE =
    Aws_700_Fail_safeType_Fail_safeType_ARRAYSIZE;

  typedef Aws_700_Error_activeType Error_activeType;
  static const Error_activeType ERROR_ACTIVE_OFF =
    Aws_700_Error_activeType_ERROR_ACTIVE_OFF;
  static const Error_activeType ERROR_ACTIVE_ON =
    Aws_700_Error_activeType_ERROR_ACTIVE_ON;
  static inline bool Error_activeType_IsValid(int value) {
    return Aws_700_Error_activeType_IsValid(value);
  }
  static const Error_activeType Error_activeType_MIN =
    Aws_700_Error_activeType_Error_activeType_MIN;
  static const Error_activeType Error_activeType_MAX =
    Aws_700_Error_activeType_Error_activeType_MAX;
  static const int Error_activeType_ARRAYSIZE =
    Aws_700_Error_activeType_Error_activeType_ARRAYSIZE;

  typedef Aws_700_Headway_validType Headway_validType;
  static const Headway_validType HEADWAY_VALID_OFF =
    Aws_700_Headway_validType_HEADWAY_VALID_OFF;
  static const Headway_validType HEADWAY_VALID_ON =
    Aws_700_Headway_validType_HEADWAY_VALID_ON;
  static inline bool Headway_validType_IsValid(int value) {
    return Aws_700_Headway_validType_IsValid(value);
  }
  static const Headway_validType Headway_validType_MIN =
    Aws_700_Headway_validType_Headway_validType_MIN;
  static const Headway_validType Headway_validType_MAX =
    Aws_700_Headway_validType_Headway_validType_MAX;
  static const int Headway_validType_ARRAYSIZE =
    Aws_700_Headway_validType_Headway_validType_ARRAYSIZE;

  typedef Aws_700_Fla_armedType Fla_armedType;
  static const Fla_armedType FLA_ARMED_OFF =
    Aws_700_Fla_armedType_FLA_ARMED_OFF;
  static const Fla_armedType FLA_ARMED_ON =
    Aws_700_Fla_armedType_FLA_ARMED_ON;
  static inline bool Fla_armedType_IsValid(int value) {
    return Aws_700_Fla_armedType_IsValid(value);
  }
  static const Fla_armedType Fla_armedType_MIN =
    Aws_700_Fla_armedType_Fla_armedType_MIN;
  static const Fla_armedType Fla_armedType_MAX =
    Aws_700_Fla_armedType_Fla_armedType_MAX;
  static const int Fla_armedType_ARRAYSIZE =
    Aws_700_Fla_armedType_Fla_armedType_ARRAYSIZE;

  typedef Aws_700_Hi_low_beamcontrolType Hi_low_beamcontrolType;
  static const Hi_low_beamcontrolType HI_LOW_BEAMCONTROL_OFF =
    Aws_700_Hi_low_beamcontrolType_HI_LOW_BEAMCONTROL_OFF;
  static const Hi_low_beamcontrolType HI_LOW_BEAMCONTROL_ON =
    Aws_700_Hi_low_beamcontrolType_HI_LOW_BEAMCONTROL_ON;
  static inline bool Hi_low_beamcontrolType_IsValid(int value) {
    return Aws_700_Hi_low_beamcontrolType_IsValid(value);
  }
  static const Hi_low_beamcontrolType Hi_low_beamcontrolType_MIN =
    Aws_700_Hi_low_beamcontrolType_Hi_low_beamcontrolType_MIN;
  static const Hi_low_beamcontrolType Hi_low_beamcontrolType_MAX =
    Aws_700_Hi_low_beamcontrolType_Hi_low_beamcontrolType_MAX;
  static const int Hi_low_beamcontrolType_ARRAYSIZE =
    Aws_700_Hi_low_beamcontrolType_Hi_low_beamcontrolType_ARRAYSIZE;

  typedef Aws_700_Zero_speedType Zero_speedType;
  static const Zero_speedType ZERO_SPEED_OFF =
    Aws_700_Zero_speedType_ZERO_SPEED_OFF;
  static const Zero_speedType ZERO_SPEED_ON =
    Aws_700_Zero_speedType_ZERO_SPEED_ON;
  static inline bool Zero_speedType_IsValid(int value) {
    return Aws_700_Zero_speedType_IsValid(value);
  }
  static const Zero_speedType Zero_speedType_MIN =
    Aws_700_Zero_speedType_Zero_speedType_MIN;
  static const Zero_speedType Zero_speedType_MAX =
    Aws_700_Zero_speedType_Zero_speedType_MAX;
  static const int Zero_speedType_ARRAYSIZE =
    Aws_700_Zero_speedType_Zero_speedType_ARRAYSIZE;

  typedef Aws_700_Time_indicatorType Time_indicatorType;
  static const Time_indicatorType TIME_INDICATOR_DAY =
    Aws_700_Time_indicatorType_TIME_INDICATOR_DAY;
  static const Time_indicatorType TIME_INDICATOR_DUSK =
    Aws_700_Time_indicatorType_TIME_INDICATOR_DUSK;
  static const Time_indicatorType TIME_INDICATOR_NIGHT =
    Aws_700_Time_indicatorType_TIME_INDICATOR_NIGHT;
  static const Time_indicatorType TIME_INDICATOR_NOT_IN_USE =
    Aws_700_Time_indicatorType_TIME_INDICATOR_NOT_IN_USE;
  static inline bool Time_indicatorType_IsValid(int value) {
    return Aws_700_Time_indicatorType_IsValid(value);
  }
  static const Time_indicatorType Time_indicatorType_MIN =
    Aws_700_Time_indicatorType_Time_indicatorType_MIN;
  static const Time_indicatorType Time_indicatorType_MAX =
    Aws_700_Time_indicatorType_Time_indicatorType_MAX;
  static const int Time_indicatorType_ARRAYSIZE =
    Aws_700_Time_indicatorType_Time_indicatorType_ARRAYSIZE;

  typedef Aws_700_Sound_typeType Sound_typeType;
  static const Sound_typeType SOUND_TYPE_NO_SOUND =
    Aws_700_Sound_typeType_SOUND_TYPE_NO_SOUND;
  static const Sound_typeType SOUND_TYPE_LEFT_LDW =
    Aws_700_Sound_typeType_SOUND_TYPE_LEFT_LDW;
  static const Sound_typeType SOUND_TYPE_RIGHT_LDW =
    Aws_700_Sound_typeType_SOUND_TYPE_RIGHT_LDW;
  static const Sound_typeType SOUND_TYPE_HW =
    Aws_700_Sound_typeType_SOUND_TYPE_HW;
  static const Sound_typeType SOUND_TYPE_TSR_WARNING =
    Aws_700_Sound_typeType_SOUND_TYPE_TSR_WARNING;
  static const Sound_typeType SOUND_TYPE_SOFT_FCW_VIRTUAL_BUMPER =
    Aws_700_Sound_typeType_SOUND_TYPE_SOFT_FCW_VIRTUAL_BUMPER;
  static const Sound_typeType SOUND_TYPE_FCW_PCW =
    Aws_700_Sound_typeType_SOUND_TYPE_FCW_PCW;
  static const Sound_typeType SOUND_TYPE_PEDESTRIAN_IN_DZ =
    Aws_700_Sound_typeType_SOUND_TYPE_PEDESTRIAN_IN_DZ;
  static inline bool Sound_typeType_IsValid(int value) {
    return Aws_700_Sound_typeType_IsValid(value);
  }
  static const Sound_typeType Sound_typeType_MIN =
    Aws_700_Sound_typeType_Sound_typeType_MIN;
  static const Sound_typeType Sound_typeType_MAX =
    Aws_700_Sound_typeType_Sound_typeType_MAX;
  static const int Sound_typeType_ARRAYSIZE =
    Aws_700_Sound_typeType_Sound_typeType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // int32 reserved1 = 1;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 1;
  ::google::protobuf::int32 reserved1() const;
  void set_reserved1(::google::protobuf::int32 value);

  // int32 reserved2 = 2;
  void clear_reserved2();
  static const int kReserved2FieldNumber = 2;
  ::google::protobuf::int32 reserved2() const;
  void set_reserved2(::google::protobuf::int32 value);

  // int32 reserved3 = 3;
  void clear_reserved3();
  static const int kReserved3FieldNumber = 3;
  ::google::protobuf::int32 reserved3() const;
  void set_reserved3(::google::protobuf::int32 value);

  // bool reserved4 = 4;
  void clear_reserved4();
  static const int kReserved4FieldNumber = 4;
  bool reserved4() const;
  void set_reserved4(bool value);

  // int32 reserved5 = 5;
  void clear_reserved5();
  static const int kReserved5FieldNumber = 5;
  ::google::protobuf::int32 reserved5() const;
  void set_reserved5(::google::protobuf::int32 value);

  // int32 reserved6 = 6;
  void clear_reserved6();
  static const int kReserved6FieldNumber = 6;
  ::google::protobuf::int32 reserved6() const;
  void set_reserved6(::google::protobuf::int32 value);

  // .Calmcar.drivers.TSR.Aws_700.Tsr_warning_levelType tsr_warning_level = 7;
  void clear_tsr_warning_level();
  static const int kTsrWarningLevelFieldNumber = 7;
  ::Calmcar::drivers::TSR::Aws_700_Tsr_warning_levelType tsr_warning_level() const;
  void set_tsr_warning_level(::Calmcar::drivers::TSR::Aws_700_Tsr_warning_levelType value);

  // .Calmcar.drivers.TSR.Aws_700.Tsr_enabbledType tsr_enabbled = 8;
  void clear_tsr_enabbled();
  static const int kTsrEnabbledFieldNumber = 8;
  ::Calmcar::drivers::TSR::Aws_700_Tsr_enabbledType tsr_enabbled() const;
  void set_tsr_enabbled(::Calmcar::drivers::TSR::Aws_700_Tsr_enabbledType value);

  // .Calmcar.drivers.TSR.Aws_700.Rainy_hw_enabledType rainy_hw_enabled = 9;
  void clear_rainy_hw_enabled();
  static const int kRainyHwEnabledFieldNumber = 9;
  ::Calmcar::drivers::TSR::Aws_700_Rainy_hw_enabledType rainy_hw_enabled() const;
  void set_rainy_hw_enabled(::Calmcar::drivers::TSR::Aws_700_Rainy_hw_enabledType value);

  // .Calmcar.drivers.TSR.Aws_700.Rain_hwType rain_hw = 10;
  void clear_rain_hw();
  static const int kRainHwFieldNumber = 10;
  ::Calmcar::drivers::TSR::Aws_700_Rain_hwType rain_hw() const;
  void set_rain_hw(::Calmcar::drivers::TSR::Aws_700_Rain_hwType value);

  // .Calmcar.drivers.TSR.Aws_700.Pcw_peddzType pcw_peddz = 11;
  void clear_pcw_peddz();
  static const int kPcwPeddzFieldNumber = 11;
  ::Calmcar::drivers::TSR::Aws_700_Pcw_peddzType pcw_peddz() const;
  void set_pcw_peddz(::Calmcar::drivers::TSR::Aws_700_Pcw_peddzType value);

  // .Calmcar.drivers.TSR.Aws_700.Hw_warning_levelType hw_warning_level = 12;
  void clear_hw_warning_level();
  static const int kHwWarningLevelFieldNumber = 12;
  ::Calmcar::drivers::TSR::Aws_700_Hw_warning_levelType hw_warning_level() const;
  void set_hw_warning_level(::Calmcar::drivers::TSR::Aws_700_Hw_warning_levelType value);

  // .Calmcar.drivers.TSR.Aws_700.Hw_repeatable_enabledType hw_repeatable_enabled = 13;
  void clear_hw_repeatable_enabled();
  static const int kHwRepeatableEnabledFieldNumber = 13;
  ::Calmcar::drivers::TSR::Aws_700_Hw_repeatable_enabledType hw_repeatable_enabled() const;
  void set_hw_repeatable_enabled(::Calmcar::drivers::TSR::Aws_700_Hw_repeatable_enabledType value);

  // .Calmcar.drivers.TSR.Aws_700.General_pedestrianType general_pedestrian = 14;
  void clear_general_pedestrian();
  static const int kGeneralPedestrianFieldNumber = 14;
  ::Calmcar::drivers::TSR::Aws_700_General_pedestrianType general_pedestrian() const;
  void set_general_pedestrian(::Calmcar::drivers::TSR::Aws_700_General_pedestrianType value);

  // .Calmcar.drivers.TSR.Aws_700.Blinker_reminder_enabledType blinker_reminder_enabled = 15;
  void clear_blinker_reminder_enabled();
  static const int kBlinkerReminderEnabledFieldNumber = 15;
  ::Calmcar::drivers::TSR::Aws_700_Blinker_reminder_enabledType blinker_reminder_enabled() const;
  void set_blinker_reminder_enabled(::Calmcar::drivers::TSR::Aws_700_Blinker_reminder_enabledType value);

  // .Calmcar.drivers.TSR.Aws_700.Blinker_reminderType blinker_reminder = 16;
  void clear_blinker_reminder();
  static const int kBlinkerReminderFieldNumber = 16;
  ::Calmcar::drivers::TSR::Aws_700_Blinker_reminderType blinker_reminder() const;
  void set_blinker_reminder(::Calmcar::drivers::TSR::Aws_700_Blinker_reminderType value);

  // .Calmcar.drivers.TSR.Aws_700.Fcw_onType fcw_on = 17;
  void clear_fcw_on();
  static const int kFcwOnFieldNumber = 17;
  ::Calmcar::drivers::TSR::Aws_700_Fcw_onType fcw_on() const;
  void set_fcw_on(::Calmcar::drivers::TSR::Aws_700_Fcw_onType value);

  // .Calmcar.drivers.TSR.Aws_700.Rldw_onType rldw_on = 18;
  void clear_rldw_on();
  static const int kRldwOnFieldNumber = 18;
  ::Calmcar::drivers::TSR::Aws_700_Rldw_onType rldw_on() const;
  void set_rldw_on(::Calmcar::drivers::TSR::Aws_700_Rldw_onType value);

  // .Calmcar.drivers.TSR.Aws_700.Lldw_onType lldw_on = 19;
  void clear_lldw_on();
  static const int kLldwOnFieldNumber = 19;
  ::Calmcar::drivers::TSR::Aws_700_Lldw_onType lldw_on() const;
  void set_lldw_on(::Calmcar::drivers::TSR::Aws_700_Lldw_onType value);

  // .Calmcar.drivers.TSR.Aws_700.Ldw_offType ldw_off = 20;
  void clear_ldw_off();
  static const int kLdwOffFieldNumber = 20;
  ::Calmcar::drivers::TSR::Aws_700_Ldw_offType ldw_off() const;
  void set_ldw_off(::Calmcar::drivers::TSR::Aws_700_Ldw_offType value);

  // .Calmcar.drivers.TSR.Aws_700.MaintenanceType maintenance = 21;
  void clear_maintenance();
  static const int kMaintenanceFieldNumber = 21;
  ::Calmcar::drivers::TSR::Aws_700_MaintenanceType maintenance() const;
  void set_maintenance(::Calmcar::drivers::TSR::Aws_700_MaintenanceType value);

  // .Calmcar.drivers.TSR.Aws_700.Fail_safeType fail_safe = 22;
  void clear_fail_safe();
  static const int kFailSafeFieldNumber = 22;
  ::Calmcar::drivers::TSR::Aws_700_Fail_safeType fail_safe() const;
  void set_fail_safe(::Calmcar::drivers::TSR::Aws_700_Fail_safeType value);

  // int32 error_code = 23;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 23;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // .Calmcar.drivers.TSR.Aws_700.Error_activeType error_active = 24;
  void clear_error_active();
  static const int kErrorActiveFieldNumber = 24;
  ::Calmcar::drivers::TSR::Aws_700_Error_activeType error_active() const;
  void set_error_active(::Calmcar::drivers::TSR::Aws_700_Error_activeType value);

  // int32 headway_measurement = 25;
  void clear_headway_measurement();
  static const int kHeadwayMeasurementFieldNumber = 25;
  ::google::protobuf::int32 headway_measurement() const;
  void set_headway_measurement(::google::protobuf::int32 value);

  // .Calmcar.drivers.TSR.Aws_700.Headway_validType headway_valid = 26;
  void clear_headway_valid();
  static const int kHeadwayValidFieldNumber = 26;
  ::Calmcar::drivers::TSR::Aws_700_Headway_validType headway_valid() const;
  void set_headway_valid(::Calmcar::drivers::TSR::Aws_700_Headway_validType value);

  // .Calmcar.drivers.TSR.Aws_700.Fla_armedType fla_armed = 27;
  void clear_fla_armed();
  static const int kFlaArmedFieldNumber = 27;
  ::Calmcar::drivers::TSR::Aws_700_Fla_armedType fla_armed() const;
  void set_fla_armed(::Calmcar::drivers::TSR::Aws_700_Fla_armedType value);

  // .Calmcar.drivers.TSR.Aws_700.Hi_low_beamcontrolType hi_low_beamcontrol = 28;
  void clear_hi_low_beamcontrol();
  static const int kHiLowBeamcontrolFieldNumber = 28;
  ::Calmcar::drivers::TSR::Aws_700_Hi_low_beamcontrolType hi_low_beamcontrol() const;
  void set_hi_low_beamcontrol(::Calmcar::drivers::TSR::Aws_700_Hi_low_beamcontrolType value);

  // .Calmcar.drivers.TSR.Aws_700.Zero_speedType zero_speed = 29;
  void clear_zero_speed();
  static const int kZeroSpeedFieldNumber = 29;
  ::Calmcar::drivers::TSR::Aws_700_Zero_speedType zero_speed() const;
  void set_zero_speed(::Calmcar::drivers::TSR::Aws_700_Zero_speedType value);

  // .Calmcar.drivers.TSR.Aws_700.Time_indicatorType time_indicator = 30;
  void clear_time_indicator();
  static const int kTimeIndicatorFieldNumber = 30;
  ::Calmcar::drivers::TSR::Aws_700_Time_indicatorType time_indicator() const;
  void set_time_indicator(::Calmcar::drivers::TSR::Aws_700_Time_indicatorType value);

  // .Calmcar.drivers.TSR.Aws_700.Sound_typeType sound_type = 31;
  void clear_sound_type();
  static const int kSoundTypeFieldNumber = 31;
  ::Calmcar::drivers::TSR::Aws_700_Sound_typeType sound_type() const;
  void set_sound_type(::Calmcar::drivers::TSR::Aws_700_Sound_typeType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Aws_700)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 reserved1_;
  ::google::protobuf::int32 reserved2_;
  ::google::protobuf::int32 reserved3_;
  bool reserved4_;
  ::google::protobuf::int32 reserved5_;
  ::google::protobuf::int32 reserved6_;
  int tsr_warning_level_;
  int tsr_enabbled_;
  int rainy_hw_enabled_;
  int rain_hw_;
  int pcw_peddz_;
  int hw_warning_level_;
  int hw_repeatable_enabled_;
  int general_pedestrian_;
  int blinker_reminder_enabled_;
  int blinker_reminder_;
  int fcw_on_;
  int rldw_on_;
  int lldw_on_;
  int ldw_off_;
  int maintenance_;
  int fail_safe_;
  ::google::protobuf::int32 error_code_;
  int error_active_;
  ::google::protobuf::int32 headway_measurement_;
  int headway_valid_;
  int fla_armed_;
  int hi_low_beamcontrol_;
  int zero_speed_;
  int time_indicator_;
  int sound_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tsr_detail_7_726 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Tsr_detail_7_726) */ {
 public:
  Tsr_detail_7_726();
  virtual ~Tsr_detail_7_726();

  Tsr_detail_7_726(const Tsr_detail_7_726& from);

  inline Tsr_detail_7_726& operator=(const Tsr_detail_7_726& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tsr_detail_7_726(Tsr_detail_7_726&& from) noexcept
    : Tsr_detail_7_726() {
    *this = ::std::move(from);
  }

  inline Tsr_detail_7_726& operator=(Tsr_detail_7_726&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Tsr_detail_7_726& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tsr_detail_7_726* internal_default_instance() {
    return reinterpret_cast<const Tsr_detail_7_726*>(
               &_Tsr_detail_7_726_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Tsr_detail_7_726* other);
  friend void swap(Tsr_detail_7_726& a, Tsr_detail_7_726& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tsr_detail_7_726* New() const final {
    return CreateMaybeMessage<Tsr_detail_7_726>(NULL);
  }

  Tsr_detail_7_726* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tsr_detail_7_726>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Tsr_detail_7_726& from);
  void MergeFrom(const Tsr_detail_7_726& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tsr_detail_7_726* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Tsr_detail_7_726_Vision_only_sign_typeType Vision_only_sign_typeType;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_END =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN =
    Tsr_detail_7_726_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
  static inline bool Vision_only_sign_typeType_IsValid(int value) {
    return Tsr_detail_7_726_Vision_only_sign_typeType_IsValid(value);
  }
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MIN =
    Tsr_detail_7_726_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN;
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MAX =
    Tsr_detail_7_726_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX;
  static const int Vision_only_sign_typeType_ARRAYSIZE =
    Tsr_detail_7_726_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_7_726_Supplementary_sign_typeType Supplementary_sign_typeType;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NONE =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRAILER =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TIME =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRUCK =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_WEIGHT =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRACTOR =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SCHOOL =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_FOG =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NIGHT =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP =
    Tsr_detail_7_726_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
  static inline bool Supplementary_sign_typeType_IsValid(int value) {
    return Tsr_detail_7_726_Supplementary_sign_typeType_IsValid(value);
  }
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MIN =
    Tsr_detail_7_726_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN;
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MAX =
    Tsr_detail_7_726_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX;
  static const int Supplementary_sign_typeType_ARRAYSIZE =
    Tsr_detail_7_726_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_7_726_Filter_typeType Filter_typeType;
  static const Filter_typeType FILTER_TYPE_NOT_FILTERED =
    Tsr_detail_7_726_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
  static const Filter_typeType FILTER_TYPE_IRRELEVANT_TO_THE_HOST =
    Tsr_detail_7_726_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST;
  static const Filter_typeType FILTER_TYPE_ON_VEHICLE_TRUCK =
    Tsr_detail_7_726_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK;
  static const Filter_typeType FILTER_TYPE_EMBEDDED =
    Tsr_detail_7_726_Filter_typeType_FILTER_TYPE_EMBEDDED;
  static inline bool Filter_typeType_IsValid(int value) {
    return Tsr_detail_7_726_Filter_typeType_IsValid(value);
  }
  static const Filter_typeType Filter_typeType_MIN =
    Tsr_detail_7_726_Filter_typeType_Filter_typeType_MIN;
  static const Filter_typeType Filter_typeType_MAX =
    Tsr_detail_7_726_Filter_typeType_Filter_typeType_MAX;
  static const int Filter_typeType_ARRAYSIZE =
    Tsr_detail_7_726_Filter_typeType_Filter_typeType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.TSR.Tsr_detail_7_726.Vision_only_sign_typeType vision_only_sign_type = 1;
  void clear_vision_only_sign_type();
  static const int kVisionOnlySignTypeFieldNumber = 1;
  ::Calmcar::drivers::TSR::Tsr_detail_7_726_Vision_only_sign_typeType vision_only_sign_type() const;
  void set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_7_726_Vision_only_sign_typeType value);

  // .Calmcar.drivers.TSR.Tsr_detail_7_726.Supplementary_sign_typeType supplementary_sign_type = 2;
  void clear_supplementary_sign_type();
  static const int kSupplementarySignTypeFieldNumber = 2;
  ::Calmcar::drivers::TSR::Tsr_detail_7_726_Supplementary_sign_typeType supplementary_sign_type() const;
  void set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_7_726_Supplementary_sign_typeType value);

  // double sign_pos_z = 3;
  void clear_sign_pos_z();
  static const int kSignPosZFieldNumber = 3;
  double sign_pos_z() const;
  void set_sign_pos_z(double value);

  // double sign_pos_y = 4;
  void clear_sign_pos_y();
  static const int kSignPosYFieldNumber = 4;
  double sign_pos_y() const;
  void set_sign_pos_y(double value);

  // double sign_pos_x = 5;
  void clear_sign_pos_x();
  static const int kSignPosXFieldNumber = 5;
  double sign_pos_x() const;
  void set_sign_pos_x(double value);

  // .Calmcar.drivers.TSR.Tsr_detail_7_726.Filter_typeType filter_type = 6;
  void clear_filter_type();
  static const int kFilterTypeFieldNumber = 6;
  ::Calmcar::drivers::TSR::Tsr_detail_7_726_Filter_typeType filter_type() const;
  void set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_7_726_Filter_typeType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Tsr_detail_7_726)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int vision_only_sign_type_;
  int supplementary_sign_type_;
  double sign_pos_z_;
  double sign_pos_y_;
  double sign_pos_x_;
  int filter_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vision_only_tsr_727 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Vision_only_tsr_727) */ {
 public:
  Vision_only_tsr_727();
  virtual ~Vision_only_tsr_727();

  Vision_only_tsr_727(const Vision_only_tsr_727& from);

  inline Vision_only_tsr_727& operator=(const Vision_only_tsr_727& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vision_only_tsr_727(Vision_only_tsr_727&& from) noexcept
    : Vision_only_tsr_727() {
    *this = ::std::move(from);
  }

  inline Vision_only_tsr_727& operator=(Vision_only_tsr_727&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Vision_only_tsr_727& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vision_only_tsr_727* internal_default_instance() {
    return reinterpret_cast<const Vision_only_tsr_727*>(
               &_Vision_only_tsr_727_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Vision_only_tsr_727* other);
  friend void swap(Vision_only_tsr_727& a, Vision_only_tsr_727& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vision_only_tsr_727* New() const final {
    return CreateMaybeMessage<Vision_only_tsr_727>(NULL);
  }

  Vision_only_tsr_727* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Vision_only_tsr_727>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Vision_only_tsr_727& from);
  void MergeFrom(const Vision_only_tsr_727& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Vision_only_tsr_727* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Vision_only_tsr_727_Sign_type_4Type Sign_type_4Type;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_10_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_10_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_20_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_20_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_30_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_30_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_40_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_40_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_50_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_50_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_60_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_60_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_70_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_70_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_80_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_80_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_90_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_90_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_100_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_100_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_110_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_110_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_120_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_120_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_130_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_130_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_140_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_140_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_END_OF_NUMBER_STANDARD_REGULAR =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_OF_NUMBER_STANDARD_REGULAR;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_10_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_10_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_20_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_20_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_30_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_30_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_40_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_40_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_50_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_50_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_60_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_60_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_70_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_70_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_80_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_80_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_90_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_90_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_100_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_100_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_110_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_110_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_120_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_120_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_130_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_130_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_140_KM_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_140_KM_H;
  static const Sign_type_4Type SIGN_TYPE_4_END_OF_NUMBER_STANDARD_ELECTRONI =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_OF_NUMBER_STANDARD_ELECTRONI;
  static const Sign_type_4Type SIGN_TYPE_4_END_ALL_RESTRICTION_REGULAR =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_ALL_RESTRICTION_REGULAR;
  static const Sign_type_4Type SIGN_TYPE_4_END_ALL_RESTRICTION_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_ALL_RESTRICTION_ELECTRONIC;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_5_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_5_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_15_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_15_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_25_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_25_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_35_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_35_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_45_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_45_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_55_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_55_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_65_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_65_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_75_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_75_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_85_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_85_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_95_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_95_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_105_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_105_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_115_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_115_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_125_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_125_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_135_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_135_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_REGULAR_145_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_REGULAR_145_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_5_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_5_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_15_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_15_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_25_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_25_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_35_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_35_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_45_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_45_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_55_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_55_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_65_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_65_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_75_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_75_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_85_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_85_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONIC_95_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONIC_95_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONI_105_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONI_105_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONI_115_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONI_115_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONI_125_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONI_125_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONI_135_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONI_135_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_STANDARD_ELECTRONI_145_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_STANDARD_ELECTRONI_145_KM_H_MP_H;
  static const Sign_type_4Type SIGN_TYPE_4_MOTORWAY_BEGIN =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_MOTORWAY_BEGIN;
  static const Sign_type_4Type SIGN_TYPE_4_MOTORWAY_END =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_MOTORWAY_END;
  static const Sign_type_4Type SIGN_TYPE_4_EXPRESSWAY_BEGIN =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_EXPRESSWAY_BEGIN;
  static const Sign_type_4Type SIGN_TYPE_4_EXPRESSWAY_END =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_EXPRESSWAY_END;
  static const Sign_type_4Type SIGN_TYPE_4_PLAYFROUND_AREA_BEGIN =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_PLAYFROUND_AREA_BEGIN;
  static const Sign_type_4Type SIGN_TYPE_4_PLAYGROUND_AREA_END =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_PLAYGROUND_AREA_END;
  static const Sign_type_4Type SIGN_TYPE_4_NO_PASSING_START_REGULAR =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_NO_PASSING_START_REGULAR;
  static const Sign_type_4Type SIGN_TYPE_4_END_OF_NO_PASSING =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_OF_NO_PASSING;
  static const Sign_type_4Type SIGN_TYPE_4_NO_PASSING_START_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_NO_PASSING_START_ELECTRONIC;
  static const Sign_type_4Type SIGN_TYPE_4_END_OF_NO_PASSING_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_END_OF_NO_PASSING_ELECTRONIC;
  static const Sign_type_4Type SIGN_TYPE_4_NO_SIGN_DETECTED =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_NO_SIGN_DETECTED;
  static const Sign_type_4Type SIGN_TYPE_4_E_INVALID_SIGN =
    Vision_only_tsr_727_Sign_type_4Type_SIGN_TYPE_4_E_INVALID_SIGN;
  static inline bool Sign_type_4Type_IsValid(int value) {
    return Vision_only_tsr_727_Sign_type_4Type_IsValid(value);
  }
  static const Sign_type_4Type Sign_type_4Type_MIN =
    Vision_only_tsr_727_Sign_type_4Type_Sign_type_4Type_MIN;
  static const Sign_type_4Type Sign_type_4Type_MAX =
    Vision_only_tsr_727_Sign_type_4Type_Sign_type_4Type_MAX;
  static const int Sign_type_4Type_ARRAYSIZE =
    Vision_only_tsr_727_Sign_type_4Type_Sign_type_4Type_ARRAYSIZE;

  typedef Vision_only_tsr_727_Sign_type_3Type Sign_type_3Type;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_10_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_10_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_20_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_20_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_30_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_30_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_40_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_40_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_50_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_50_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_60_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_60_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_70_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_70_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_80_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_80_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_90_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_90_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_100_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_100_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_110_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_110_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_120_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_120_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_130_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_130_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_140_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_140_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_END_OF_NUMBER_STANDARD_REGULAR =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_OF_NUMBER_STANDARD_REGULAR;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_10_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_10_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_20_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_20_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_30_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_30_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_40_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_40_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_50_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_50_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_60_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_60_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_70_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_70_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_80_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_80_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_90_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_90_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_100_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_100_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_110_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_110_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_120_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_120_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_130_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_130_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_140_KM_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_140_KM_H;
  static const Sign_type_3Type SIGN_TYPE_3_END_OF_NUMBER_STANDARD_ELECTRONI =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_OF_NUMBER_STANDARD_ELECTRONI;
  static const Sign_type_3Type SIGN_TYPE_3_END_ALL_RESTRICTION_REGULAR =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_ALL_RESTRICTION_REGULAR;
  static const Sign_type_3Type SIGN_TYPE_3_END_ALL_RESTRICTION_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_ALL_RESTRICTION_ELECTRONIC;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_5_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_5_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_15_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_15_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_25_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_25_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_35_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_35_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_45_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_45_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_55_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_55_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_65_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_65_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_75_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_75_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_85_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_85_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_95_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_95_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_105_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_105_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_115_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_115_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_125_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_125_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_135_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_135_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_REGULAR_145_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_REGULAR_145_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_5_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_5_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_15_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_15_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_25_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_25_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_35_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_35_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_45_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_45_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_55_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_55_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_65_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_65_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_75_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_75_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_85_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_85_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONIC_95_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONIC_95_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONI_105_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONI_105_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONI_115_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONI_115_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONI_125_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONI_125_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONI_135_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONI_135_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_STANDARD_ELECTRONI_145_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_STANDARD_ELECTRONI_145_KM_H_MP_H;
  static const Sign_type_3Type SIGN_TYPE_3_MOTORWAY_BEGIN =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_MOTORWAY_BEGIN;
  static const Sign_type_3Type SIGN_TYPE_3_MOTORWAY_END =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_MOTORWAY_END;
  static const Sign_type_3Type SIGN_TYPE_3_EXPRESSWAY_BEGIN =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_EXPRESSWAY_BEGIN;
  static const Sign_type_3Type SIGN_TYPE_3_EXPRESSWAY_END =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_EXPRESSWAY_END;
  static const Sign_type_3Type SIGN_TYPE_3_PLAYFROUND_AREA_BEGIN =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_PLAYFROUND_AREA_BEGIN;
  static const Sign_type_3Type SIGN_TYPE_3_PLAYGROUND_AREA_END =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_PLAYGROUND_AREA_END;
  static const Sign_type_3Type SIGN_TYPE_3_NO_PASSING_START_REGULAR =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_NO_PASSING_START_REGULAR;
  static const Sign_type_3Type SIGN_TYPE_3_END_OF_NO_PASSING =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_OF_NO_PASSING;
  static const Sign_type_3Type SIGN_TYPE_3_NO_PASSING_START_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_NO_PASSING_START_ELECTRONIC;
  static const Sign_type_3Type SIGN_TYPE_3_END_OF_NO_PASSING_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_END_OF_NO_PASSING_ELECTRONIC;
  static const Sign_type_3Type SIGN_TYPE_3_NO_SIGN_DETECTED =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_NO_SIGN_DETECTED;
  static const Sign_type_3Type SIGN_TYPE_3_E_INVALID_SIGN =
    Vision_only_tsr_727_Sign_type_3Type_SIGN_TYPE_3_E_INVALID_SIGN;
  static inline bool Sign_type_3Type_IsValid(int value) {
    return Vision_only_tsr_727_Sign_type_3Type_IsValid(value);
  }
  static const Sign_type_3Type Sign_type_3Type_MIN =
    Vision_only_tsr_727_Sign_type_3Type_Sign_type_3Type_MIN;
  static const Sign_type_3Type Sign_type_3Type_MAX =
    Vision_only_tsr_727_Sign_type_3Type_Sign_type_3Type_MAX;
  static const int Sign_type_3Type_ARRAYSIZE =
    Vision_only_tsr_727_Sign_type_3Type_Sign_type_3Type_ARRAYSIZE;

  typedef Vision_only_tsr_727_Sign_type_2Type Sign_type_2Type;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_10_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_10_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_20_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_20_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_30_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_30_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_40_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_40_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_50_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_50_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_60_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_60_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_70_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_70_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_80_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_80_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_90_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_90_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_100_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_100_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_110_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_110_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_120_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_120_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_130_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_130_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_140_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_140_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_END_OF_NUMBER_STANDARD_REGULAR =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_OF_NUMBER_STANDARD_REGULAR;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_10_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_10_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_20_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_20_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_30_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_30_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_40_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_40_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_50_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_50_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_60_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_60_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_70_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_70_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_80_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_80_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_90_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_90_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_100_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_100_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_110_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_110_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_120_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_120_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_130_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_130_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_140_KM_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_140_KM_H;
  static const Sign_type_2Type SIGN_TYPE_2_END_OF_NUMBER_STANDARD_ELECTRONI =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_OF_NUMBER_STANDARD_ELECTRONI;
  static const Sign_type_2Type SIGN_TYPE_2_END_ALL_RESTRICTION_REGULAR =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_ALL_RESTRICTION_REGULAR;
  static const Sign_type_2Type SIGN_TYPE_2_END_ALL_RESTRICTION_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_ALL_RESTRICTION_ELECTRONIC;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_5_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_5_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_15_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_15_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_25_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_25_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_35_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_35_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_45_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_45_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_55_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_55_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_65_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_65_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_75_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_75_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_85_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_85_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_95_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_95_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_105_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_105_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_115_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_115_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_125_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_125_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_135_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_135_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_REGULAR_145_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_REGULAR_145_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_5_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_5_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_15_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_15_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_25_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_25_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_35_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_35_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_45_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_45_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_55_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_55_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_65_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_65_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_75_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_75_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_85_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_85_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONIC_95_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONIC_95_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONI_105_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONI_105_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONI_115_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONI_115_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONI_125_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONI_125_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONI_135_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONI_135_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_STANDARD_ELECTRONI_145_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_STANDARD_ELECTRONI_145_KM_H_MP_H;
  static const Sign_type_2Type SIGN_TYPE_2_MOTORWAY_BEGIN =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_MOTORWAY_BEGIN;
  static const Sign_type_2Type SIGN_TYPE_2_MOTORWAY_END =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_MOTORWAY_END;
  static const Sign_type_2Type SIGN_TYPE_2_EXPRESSWAY_BEGIN =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_EXPRESSWAY_BEGIN;
  static const Sign_type_2Type SIGN_TYPE_2_EXPRESSWAY_END =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_EXPRESSWAY_END;
  static const Sign_type_2Type SIGN_TYPE_2_PLAYFROUND_AREA_BEGIN =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_PLAYFROUND_AREA_BEGIN;
  static const Sign_type_2Type SIGN_TYPE_2_PLAYGROUND_AREA_END =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_PLAYGROUND_AREA_END;
  static const Sign_type_2Type SIGN_TYPE_2_NO_PASSING_START_REGULAR =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_NO_PASSING_START_REGULAR;
  static const Sign_type_2Type SIGN_TYPE_2_END_OF_NO_PASSING =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_OF_NO_PASSING;
  static const Sign_type_2Type SIGN_TYPE_2_NO_PASSING_START_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_NO_PASSING_START_ELECTRONIC;
  static const Sign_type_2Type SIGN_TYPE_2_END_OF_NO_PASSING_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_END_OF_NO_PASSING_ELECTRONIC;
  static const Sign_type_2Type SIGN_TYPE_2_NO_SIGN_DETECTED =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_NO_SIGN_DETECTED;
  static const Sign_type_2Type SIGN_TYPE_2_E_INVALID_SIGN =
    Vision_only_tsr_727_Sign_type_2Type_SIGN_TYPE_2_E_INVALID_SIGN;
  static inline bool Sign_type_2Type_IsValid(int value) {
    return Vision_only_tsr_727_Sign_type_2Type_IsValid(value);
  }
  static const Sign_type_2Type Sign_type_2Type_MIN =
    Vision_only_tsr_727_Sign_type_2Type_Sign_type_2Type_MIN;
  static const Sign_type_2Type Sign_type_2Type_MAX =
    Vision_only_tsr_727_Sign_type_2Type_Sign_type_2Type_MAX;
  static const int Sign_type_2Type_ARRAYSIZE =
    Vision_only_tsr_727_Sign_type_2Type_Sign_type_2Type_ARRAYSIZE;

  typedef Vision_only_tsr_727_Sign_type_1Type Sign_type_1Type;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_10_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_10_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_20_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_20_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_30_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_30_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_40_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_40_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_50_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_50_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_60_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_60_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_70_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_70_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_80_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_80_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_90_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_90_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_100_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_100_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_110_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_110_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_120_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_120_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_130_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_130_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_140_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_140_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_END_OF_NUMBER_STANDARD_REGULAR =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_OF_NUMBER_STANDARD_REGULAR;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_10_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_10_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_20_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_20_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_30_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_30_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_40_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_40_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_50_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_50_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_60_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_60_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_70_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_70_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_80_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_80_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_90_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_90_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_100_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_100_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_110_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_110_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_120_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_120_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_130_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_130_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_140_KM_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_140_KM_H;
  static const Sign_type_1Type SIGN_TYPE_1_END_OF_NUMBER_STANDARD_ELECTRONI =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_OF_NUMBER_STANDARD_ELECTRONI;
  static const Sign_type_1Type SIGN_TYPE_1_END_ALL_RESTRICTION_REGULAR =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_ALL_RESTRICTION_REGULAR;
  static const Sign_type_1Type SIGN_TYPE_1_END_ALL_RESTRICTION_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_ALL_RESTRICTION_ELECTRONIC;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_5_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_5_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_15_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_15_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_25_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_25_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_35_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_35_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_45_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_45_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_55_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_55_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_65_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_65_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_75_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_75_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_85_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_85_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_95_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_95_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_105_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_105_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_115_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_115_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_125_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_125_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_135_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_135_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_REGULAR_145_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_REGULAR_145_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_5_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_5_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_15_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_15_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_25_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_25_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_35_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_35_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_45_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_45_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_55_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_55_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_65_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_65_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_75_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_75_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_85_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_85_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONIC_95_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONIC_95_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONI_105_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONI_105_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONI_115_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONI_115_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONI_125_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONI_125_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONI_135_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONI_135_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_STANDARD_ELECTRONI_145_KM_H_MP_H =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_STANDARD_ELECTRONI_145_KM_H_MP_H;
  static const Sign_type_1Type SIGN_TYPE_1_MOTORWAY_BEGIN =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_MOTORWAY_BEGIN;
  static const Sign_type_1Type SIGN_TYPE_1_MOTORWAY_END =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_MOTORWAY_END;
  static const Sign_type_1Type SIGN_TYPE_1_EXPRESSWAY_BEGIN =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_EXPRESSWAY_BEGIN;
  static const Sign_type_1Type SIGN_TYPE_1_EXPRESSWAY_END =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_EXPRESSWAY_END;
  static const Sign_type_1Type SIGN_TYPE_1_PLAYFROUND_AREA_BEGIN =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_PLAYFROUND_AREA_BEGIN;
  static const Sign_type_1Type SIGN_TYPE_1_PLAYGROUND_AREA_END =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_PLAYGROUND_AREA_END;
  static const Sign_type_1Type SIGN_TYPE_1_NO_PASSING_START_REGULAR =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_NO_PASSING_START_REGULAR;
  static const Sign_type_1Type SIGN_TYPE_1_END_OF_NO_PASSING =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_OF_NO_PASSING;
  static const Sign_type_1Type SIGN_TYPE_1_NO_PASSING_START_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_NO_PASSING_START_ELECTRONIC;
  static const Sign_type_1Type SIGN_TYPE_1_END_OF_NO_PASSING_ELECTRONIC =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_END_OF_NO_PASSING_ELECTRONIC;
  static const Sign_type_1Type SIGN_TYPE_1_NO_SIGN_DETECTED =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_NO_SIGN_DETECTED;
  static const Sign_type_1Type SIGN_TYPE_1_E_INVALID_SIGN =
    Vision_only_tsr_727_Sign_type_1Type_SIGN_TYPE_1_E_INVALID_SIGN;
  static inline bool Sign_type_1Type_IsValid(int value) {
    return Vision_only_tsr_727_Sign_type_1Type_IsValid(value);
  }
  static const Sign_type_1Type Sign_type_1Type_MIN =
    Vision_only_tsr_727_Sign_type_1Type_Sign_type_1Type_MIN;
  static const Sign_type_1Type Sign_type_1Type_MAX =
    Vision_only_tsr_727_Sign_type_1Type_Sign_type_1Type_MAX;
  static const int Sign_type_1Type_ARRAYSIZE =
    Vision_only_tsr_727_Sign_type_1Type_Sign_type_1Type_ARRAYSIZE;

  typedef Vision_only_tsr_727_Supplementary_sign_type_4Type Supplementary_sign_type_4Type;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_NONE =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_NONE;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_RAIN =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_RAIN;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_SNOW =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_SNOW;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_TRAILER =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_TRAILER;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_TIME =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_TIME;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_ARROW_LEFT =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_ARROW_LEFT;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_ARROW_RIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_ARROW_RIGHT;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_BENDARRIOW_LEFT =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_BENDARRIOW_LEFT;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_BENDARROW_RIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_BENDARROW_RIGHT;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_TRUCK =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_TRUCK;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_DISTANCE_AROW_DIST_FOR =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_DISTANCE_AROW_DIST_FOR;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_WEIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_WEIGHT;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_DISTANCE_IN =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_DISTANCE_IN;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_TRACTOR =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_TRACTOR;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_SNOW_RAIN =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_SNOW_RAIN;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_SCHOOL =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_SCHOOL;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_RAIN_CLOUD =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_RAIN_CLOUD;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_FOG =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_FOG;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_HAZARDOUS_METERIALS =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_HAZARDOUS_METERIALS;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_NIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_NIGHT;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_SUPP_SIGN_GENERIC =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_SUPP_SIGN_GENERIC;
  static const Supplementary_sign_type_4Type SUPPLEMENTARY_SIGN_TYPE_4_INVALID_SUPP =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_SUPPLEMENTARY_SIGN_TYPE_4_INVALID_SUPP;
  static inline bool Supplementary_sign_type_4Type_IsValid(int value) {
    return Vision_only_tsr_727_Supplementary_sign_type_4Type_IsValid(value);
  }
  static const Supplementary_sign_type_4Type Supplementary_sign_type_4Type_MIN =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_Supplementary_sign_type_4Type_MIN;
  static const Supplementary_sign_type_4Type Supplementary_sign_type_4Type_MAX =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_Supplementary_sign_type_4Type_MAX;
  static const int Supplementary_sign_type_4Type_ARRAYSIZE =
    Vision_only_tsr_727_Supplementary_sign_type_4Type_Supplementary_sign_type_4Type_ARRAYSIZE;

  typedef Vision_only_tsr_727_Supplementary_sign_type_3Type Supplementary_sign_type_3Type;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_NONE =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_NONE;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_RAIN =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_RAIN;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_SNOW =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_SNOW;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_TRAILER =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_TRAILER;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_TIME =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_TIME;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_ARROW_LEFT =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_ARROW_LEFT;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_ARROW_RIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_ARROW_RIGHT;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_BENDARRIOW_LEFT =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_BENDARRIOW_LEFT;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_BENDARROW_RIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_BENDARROW_RIGHT;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_TRUCK =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_TRUCK;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_DISTANCE_AROW_DIST_FOR =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_DISTANCE_AROW_DIST_FOR;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_WEIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_WEIGHT;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_DISTANCE_IN =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_DISTANCE_IN;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_TRACTOR =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_TRACTOR;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_SNOW_RAIN =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_SNOW_RAIN;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_SCHOOL =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_SCHOOL;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_RAIN_CLOUD =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_RAIN_CLOUD;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_FOG =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_FOG;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_HAZARDOUS_METERIALS =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_HAZARDOUS_METERIALS;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_NIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_NIGHT;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_SUPP_SIGN_GENERIC =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_SUPP_SIGN_GENERIC;
  static const Supplementary_sign_type_3Type SUPPLEMENTARY_SIGN_TYPE_3_INVALID_SUPP =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_SUPPLEMENTARY_SIGN_TYPE_3_INVALID_SUPP;
  static inline bool Supplementary_sign_type_3Type_IsValid(int value) {
    return Vision_only_tsr_727_Supplementary_sign_type_3Type_IsValid(value);
  }
  static const Supplementary_sign_type_3Type Supplementary_sign_type_3Type_MIN =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_Supplementary_sign_type_3Type_MIN;
  static const Supplementary_sign_type_3Type Supplementary_sign_type_3Type_MAX =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_Supplementary_sign_type_3Type_MAX;
  static const int Supplementary_sign_type_3Type_ARRAYSIZE =
    Vision_only_tsr_727_Supplementary_sign_type_3Type_Supplementary_sign_type_3Type_ARRAYSIZE;

  typedef Vision_only_tsr_727_Supplementary_sign_type_2Type Supplementary_sign_type_2Type;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_NONE =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_NONE;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_RAIN =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_RAIN;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_SNOW =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_SNOW;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_TRAILER =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_TRAILER;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_TIME =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_TIME;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_ARROW_LEFT =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_ARROW_LEFT;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_ARROW_RIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_ARROW_RIGHT;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_BENDARRIOW_LEFT =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_BENDARRIOW_LEFT;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_BENDARROW_RIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_BENDARROW_RIGHT;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_TRUCK =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_TRUCK;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_DISTANCE_AROW_DIST_FOR =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_DISTANCE_AROW_DIST_FOR;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_WEIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_WEIGHT;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_DISTANCE_IN =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_DISTANCE_IN;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_TRACTOR =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_TRACTOR;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_SNOW_RAIN =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_SNOW_RAIN;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_SCHOOL =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_SCHOOL;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_RAIN_CLOUD =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_RAIN_CLOUD;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_FOG =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_FOG;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_HAZARDOUS_METERIALS =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_HAZARDOUS_METERIALS;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_NIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_NIGHT;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_SUPP_SIGN_GENERIC =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_SUPP_SIGN_GENERIC;
  static const Supplementary_sign_type_2Type SUPPLEMENTARY_SIGN_TYPE_2_INVALID_SUPP =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_SUPPLEMENTARY_SIGN_TYPE_2_INVALID_SUPP;
  static inline bool Supplementary_sign_type_2Type_IsValid(int value) {
    return Vision_only_tsr_727_Supplementary_sign_type_2Type_IsValid(value);
  }
  static const Supplementary_sign_type_2Type Supplementary_sign_type_2Type_MIN =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_Supplementary_sign_type_2Type_MIN;
  static const Supplementary_sign_type_2Type Supplementary_sign_type_2Type_MAX =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_Supplementary_sign_type_2Type_MAX;
  static const int Supplementary_sign_type_2Type_ARRAYSIZE =
    Vision_only_tsr_727_Supplementary_sign_type_2Type_Supplementary_sign_type_2Type_ARRAYSIZE;

  typedef Vision_only_tsr_727_Supplementary_sign_type_1Type Supplementary_sign_type_1Type;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_NONE =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_NONE;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_RAIN =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_RAIN;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_SNOW =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_SNOW;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_TRAILER =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_TRAILER;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_TIME =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_TIME;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_ARROW_LEFT =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_ARROW_LEFT;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_ARROW_RIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_ARROW_RIGHT;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_BENDARRIOW_LEFT =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_BENDARRIOW_LEFT;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_BENDARROW_RIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_BENDARROW_RIGHT;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_TRUCK =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_TRUCK;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_DISTANCE_AROW_DIST_FOR =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_DISTANCE_AROW_DIST_FOR;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_WEIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_WEIGHT;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_DISTANCE_IN =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_DISTANCE_IN;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_TRACTOR =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_TRACTOR;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_SNOW_RAIN =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_SNOW_RAIN;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_SCHOOL =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_SCHOOL;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_RAIN_CLOUD =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_RAIN_CLOUD;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_FOG =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_FOG;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_HAZARDOUS_METERIALS =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_HAZARDOUS_METERIALS;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_NIGHT =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_NIGHT;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_SUPP_SIGN_GENERIC =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_SUPP_SIGN_GENERIC;
  static const Supplementary_sign_type_1Type SUPPLEMENTARY_SIGN_TYPE_1_INVALID_SUPP =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_SUPPLEMENTARY_SIGN_TYPE_1_INVALID_SUPP;
  static inline bool Supplementary_sign_type_1Type_IsValid(int value) {
    return Vision_only_tsr_727_Supplementary_sign_type_1Type_IsValid(value);
  }
  static const Supplementary_sign_type_1Type Supplementary_sign_type_1Type_MIN =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_Supplementary_sign_type_1Type_MIN;
  static const Supplementary_sign_type_1Type Supplementary_sign_type_1Type_MAX =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_Supplementary_sign_type_1Type_MAX;
  static const int Supplementary_sign_type_1Type_ARRAYSIZE =
    Vision_only_tsr_727_Supplementary_sign_type_1Type_Supplementary_sign_type_1Type_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.TSR.Vision_only_tsr_727.Sign_type_4Type sign_type_4 = 1;
  void clear_sign_type_4();
  static const int kSignType4FieldNumber = 1;
  ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_4Type sign_type_4() const;
  void set_sign_type_4(::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_4Type value);

  // .Calmcar.drivers.TSR.Vision_only_tsr_727.Sign_type_3Type sign_type_3 = 2;
  void clear_sign_type_3();
  static const int kSignType3FieldNumber = 2;
  ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_3Type sign_type_3() const;
  void set_sign_type_3(::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_3Type value);

  // .Calmcar.drivers.TSR.Vision_only_tsr_727.Sign_type_2Type sign_type_2 = 3;
  void clear_sign_type_2();
  static const int kSignType2FieldNumber = 3;
  ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_2Type sign_type_2() const;
  void set_sign_type_2(::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_2Type value);

  // .Calmcar.drivers.TSR.Vision_only_tsr_727.Sign_type_1Type sign_type_1 = 4;
  void clear_sign_type_1();
  static const int kSignType1FieldNumber = 4;
  ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_1Type sign_type_1() const;
  void set_sign_type_1(::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_1Type value);

  // .Calmcar.drivers.TSR.Vision_only_tsr_727.Supplementary_sign_type_4Type supplementary_sign_type_4 = 5;
  void clear_supplementary_sign_type_4();
  static const int kSupplementarySignType4FieldNumber = 5;
  ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_4Type supplementary_sign_type_4() const;
  void set_supplementary_sign_type_4(::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_4Type value);

  // .Calmcar.drivers.TSR.Vision_only_tsr_727.Supplementary_sign_type_3Type supplementary_sign_type_3 = 6;
  void clear_supplementary_sign_type_3();
  static const int kSupplementarySignType3FieldNumber = 6;
  ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_3Type supplementary_sign_type_3() const;
  void set_supplementary_sign_type_3(::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_3Type value);

  // .Calmcar.drivers.TSR.Vision_only_tsr_727.Supplementary_sign_type_2Type supplementary_sign_type_2 = 7;
  void clear_supplementary_sign_type_2();
  static const int kSupplementarySignType2FieldNumber = 7;
  ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_2Type supplementary_sign_type_2() const;
  void set_supplementary_sign_type_2(::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_2Type value);

  // .Calmcar.drivers.TSR.Vision_only_tsr_727.Supplementary_sign_type_1Type supplementary_sign_type_1 = 8;
  void clear_supplementary_sign_type_1();
  static const int kSupplementarySignType1FieldNumber = 8;
  ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_1Type supplementary_sign_type_1() const;
  void set_supplementary_sign_type_1(::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_1Type value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Vision_only_tsr_727)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int sign_type_4_;
  int sign_type_3_;
  int sign_type_2_;
  int sign_type_1_;
  int supplementary_sign_type_4_;
  int supplementary_sign_type_3_;
  int supplementary_sign_type_2_;
  int supplementary_sign_type_1_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tsr_detail_5_724 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Tsr_detail_5_724) */ {
 public:
  Tsr_detail_5_724();
  virtual ~Tsr_detail_5_724();

  Tsr_detail_5_724(const Tsr_detail_5_724& from);

  inline Tsr_detail_5_724& operator=(const Tsr_detail_5_724& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tsr_detail_5_724(Tsr_detail_5_724&& from) noexcept
    : Tsr_detail_5_724() {
    *this = ::std::move(from);
  }

  inline Tsr_detail_5_724& operator=(Tsr_detail_5_724&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Tsr_detail_5_724& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tsr_detail_5_724* internal_default_instance() {
    return reinterpret_cast<const Tsr_detail_5_724*>(
               &_Tsr_detail_5_724_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Tsr_detail_5_724* other);
  friend void swap(Tsr_detail_5_724& a, Tsr_detail_5_724& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tsr_detail_5_724* New() const final {
    return CreateMaybeMessage<Tsr_detail_5_724>(NULL);
  }

  Tsr_detail_5_724* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tsr_detail_5_724>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Tsr_detail_5_724& from);
  void MergeFrom(const Tsr_detail_5_724& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tsr_detail_5_724* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Tsr_detail_5_724_Vision_only_sign_typeType Vision_only_sign_typeType;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_END =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN =
    Tsr_detail_5_724_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
  static inline bool Vision_only_sign_typeType_IsValid(int value) {
    return Tsr_detail_5_724_Vision_only_sign_typeType_IsValid(value);
  }
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MIN =
    Tsr_detail_5_724_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN;
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MAX =
    Tsr_detail_5_724_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX;
  static const int Vision_only_sign_typeType_ARRAYSIZE =
    Tsr_detail_5_724_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_5_724_Supplementary_sign_typeType Supplementary_sign_typeType;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NONE =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRAILER =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TIME =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRUCK =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_WEIGHT =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRACTOR =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SCHOOL =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_FOG =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NIGHT =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP =
    Tsr_detail_5_724_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
  static inline bool Supplementary_sign_typeType_IsValid(int value) {
    return Tsr_detail_5_724_Supplementary_sign_typeType_IsValid(value);
  }
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MIN =
    Tsr_detail_5_724_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN;
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MAX =
    Tsr_detail_5_724_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX;
  static const int Supplementary_sign_typeType_ARRAYSIZE =
    Tsr_detail_5_724_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_5_724_Filter_typeType Filter_typeType;
  static const Filter_typeType FILTER_TYPE_NOT_FILTERED =
    Tsr_detail_5_724_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
  static const Filter_typeType FILTER_TYPE_IRRELEVANT_TO_THE_HOST =
    Tsr_detail_5_724_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST;
  static const Filter_typeType FILTER_TYPE_ON_VEHICLE_TRUCK =
    Tsr_detail_5_724_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK;
  static const Filter_typeType FILTER_TYPE_EMBEDDED =
    Tsr_detail_5_724_Filter_typeType_FILTER_TYPE_EMBEDDED;
  static inline bool Filter_typeType_IsValid(int value) {
    return Tsr_detail_5_724_Filter_typeType_IsValid(value);
  }
  static const Filter_typeType Filter_typeType_MIN =
    Tsr_detail_5_724_Filter_typeType_Filter_typeType_MIN;
  static const Filter_typeType Filter_typeType_MAX =
    Tsr_detail_5_724_Filter_typeType_Filter_typeType_MAX;
  static const int Filter_typeType_ARRAYSIZE =
    Tsr_detail_5_724_Filter_typeType_Filter_typeType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.TSR.Tsr_detail_5_724.Vision_only_sign_typeType vision_only_sign_type = 1;
  void clear_vision_only_sign_type();
  static const int kVisionOnlySignTypeFieldNumber = 1;
  ::Calmcar::drivers::TSR::Tsr_detail_5_724_Vision_only_sign_typeType vision_only_sign_type() const;
  void set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_5_724_Vision_only_sign_typeType value);

  // .Calmcar.drivers.TSR.Tsr_detail_5_724.Supplementary_sign_typeType supplementary_sign_type = 2;
  void clear_supplementary_sign_type();
  static const int kSupplementarySignTypeFieldNumber = 2;
  ::Calmcar::drivers::TSR::Tsr_detail_5_724_Supplementary_sign_typeType supplementary_sign_type() const;
  void set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_5_724_Supplementary_sign_typeType value);

  // double sign_pos_z = 3;
  void clear_sign_pos_z();
  static const int kSignPosZFieldNumber = 3;
  double sign_pos_z() const;
  void set_sign_pos_z(double value);

  // double sign_pos_y = 4;
  void clear_sign_pos_y();
  static const int kSignPosYFieldNumber = 4;
  double sign_pos_y() const;
  void set_sign_pos_y(double value);

  // double sign_pos_x = 5;
  void clear_sign_pos_x();
  static const int kSignPosXFieldNumber = 5;
  double sign_pos_x() const;
  void set_sign_pos_x(double value);

  // .Calmcar.drivers.TSR.Tsr_detail_5_724.Filter_typeType filter_type = 6;
  void clear_filter_type();
  static const int kFilterTypeFieldNumber = 6;
  ::Calmcar::drivers::TSR::Tsr_detail_5_724_Filter_typeType filter_type() const;
  void set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_5_724_Filter_typeType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Tsr_detail_5_724)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int vision_only_sign_type_;
  int supplementary_sign_type_;
  double sign_pos_z_;
  double sign_pos_y_;
  double sign_pos_x_;
  int filter_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tsr_detail_6_725 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Tsr_detail_6_725) */ {
 public:
  Tsr_detail_6_725();
  virtual ~Tsr_detail_6_725();

  Tsr_detail_6_725(const Tsr_detail_6_725& from);

  inline Tsr_detail_6_725& operator=(const Tsr_detail_6_725& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tsr_detail_6_725(Tsr_detail_6_725&& from) noexcept
    : Tsr_detail_6_725() {
    *this = ::std::move(from);
  }

  inline Tsr_detail_6_725& operator=(Tsr_detail_6_725&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Tsr_detail_6_725& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tsr_detail_6_725* internal_default_instance() {
    return reinterpret_cast<const Tsr_detail_6_725*>(
               &_Tsr_detail_6_725_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Tsr_detail_6_725* other);
  friend void swap(Tsr_detail_6_725& a, Tsr_detail_6_725& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tsr_detail_6_725* New() const final {
    return CreateMaybeMessage<Tsr_detail_6_725>(NULL);
  }

  Tsr_detail_6_725* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tsr_detail_6_725>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Tsr_detail_6_725& from);
  void MergeFrom(const Tsr_detail_6_725& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tsr_detail_6_725* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Tsr_detail_6_725_Vision_only_sign_typeType Vision_only_sign_typeType;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_END =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN =
    Tsr_detail_6_725_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
  static inline bool Vision_only_sign_typeType_IsValid(int value) {
    return Tsr_detail_6_725_Vision_only_sign_typeType_IsValid(value);
  }
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MIN =
    Tsr_detail_6_725_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN;
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MAX =
    Tsr_detail_6_725_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX;
  static const int Vision_only_sign_typeType_ARRAYSIZE =
    Tsr_detail_6_725_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_6_725_Supplementary_sign_typeType Supplementary_sign_typeType;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NONE =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRAILER =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TIME =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRUCK =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_WEIGHT =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRACTOR =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SCHOOL =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_FOG =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NIGHT =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP =
    Tsr_detail_6_725_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
  static inline bool Supplementary_sign_typeType_IsValid(int value) {
    return Tsr_detail_6_725_Supplementary_sign_typeType_IsValid(value);
  }
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MIN =
    Tsr_detail_6_725_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN;
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MAX =
    Tsr_detail_6_725_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX;
  static const int Supplementary_sign_typeType_ARRAYSIZE =
    Tsr_detail_6_725_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_6_725_Filter_typeType Filter_typeType;
  static const Filter_typeType FILTER_TYPE_NOT_FILTERED =
    Tsr_detail_6_725_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
  static const Filter_typeType FILTER_TYPE_IRRELEVANT_TO_THE_HOST =
    Tsr_detail_6_725_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST;
  static const Filter_typeType FILTER_TYPE_ON_VEHICLE_TRUCK =
    Tsr_detail_6_725_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK;
  static const Filter_typeType FILTER_TYPE_EMBEDDED =
    Tsr_detail_6_725_Filter_typeType_FILTER_TYPE_EMBEDDED;
  static inline bool Filter_typeType_IsValid(int value) {
    return Tsr_detail_6_725_Filter_typeType_IsValid(value);
  }
  static const Filter_typeType Filter_typeType_MIN =
    Tsr_detail_6_725_Filter_typeType_Filter_typeType_MIN;
  static const Filter_typeType Filter_typeType_MAX =
    Tsr_detail_6_725_Filter_typeType_Filter_typeType_MAX;
  static const int Filter_typeType_ARRAYSIZE =
    Tsr_detail_6_725_Filter_typeType_Filter_typeType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.TSR.Tsr_detail_6_725.Vision_only_sign_typeType vision_only_sign_type = 1;
  void clear_vision_only_sign_type();
  static const int kVisionOnlySignTypeFieldNumber = 1;
  ::Calmcar::drivers::TSR::Tsr_detail_6_725_Vision_only_sign_typeType vision_only_sign_type() const;
  void set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_6_725_Vision_only_sign_typeType value);

  // .Calmcar.drivers.TSR.Tsr_detail_6_725.Supplementary_sign_typeType supplementary_sign_type = 2;
  void clear_supplementary_sign_type();
  static const int kSupplementarySignTypeFieldNumber = 2;
  ::Calmcar::drivers::TSR::Tsr_detail_6_725_Supplementary_sign_typeType supplementary_sign_type() const;
  void set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_6_725_Supplementary_sign_typeType value);

  // double sign_pos_z = 3;
  void clear_sign_pos_z();
  static const int kSignPosZFieldNumber = 3;
  double sign_pos_z() const;
  void set_sign_pos_z(double value);

  // double sign_pos_y = 4;
  void clear_sign_pos_y();
  static const int kSignPosYFieldNumber = 4;
  double sign_pos_y() const;
  void set_sign_pos_y(double value);

  // double sign_pos_x = 5;
  void clear_sign_pos_x();
  static const int kSignPosXFieldNumber = 5;
  double sign_pos_x() const;
  void set_sign_pos_x(double value);

  // .Calmcar.drivers.TSR.Tsr_detail_6_725.Filter_typeType filter_type = 6;
  void clear_filter_type();
  static const int kFilterTypeFieldNumber = 6;
  ::Calmcar::drivers::TSR::Tsr_detail_6_725_Filter_typeType filter_type() const;
  void set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_6_725_Filter_typeType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Tsr_detail_6_725)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int vision_only_sign_type_;
  int supplementary_sign_type_;
  double sign_pos_z_;
  double sign_pos_y_;
  double sign_pos_x_;
  int filter_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tsr_detail_3_722 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Tsr_detail_3_722) */ {
 public:
  Tsr_detail_3_722();
  virtual ~Tsr_detail_3_722();

  Tsr_detail_3_722(const Tsr_detail_3_722& from);

  inline Tsr_detail_3_722& operator=(const Tsr_detail_3_722& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tsr_detail_3_722(Tsr_detail_3_722&& from) noexcept
    : Tsr_detail_3_722() {
    *this = ::std::move(from);
  }

  inline Tsr_detail_3_722& operator=(Tsr_detail_3_722&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Tsr_detail_3_722& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tsr_detail_3_722* internal_default_instance() {
    return reinterpret_cast<const Tsr_detail_3_722*>(
               &_Tsr_detail_3_722_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Tsr_detail_3_722* other);
  friend void swap(Tsr_detail_3_722& a, Tsr_detail_3_722& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tsr_detail_3_722* New() const final {
    return CreateMaybeMessage<Tsr_detail_3_722>(NULL);
  }

  Tsr_detail_3_722* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tsr_detail_3_722>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Tsr_detail_3_722& from);
  void MergeFrom(const Tsr_detail_3_722& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tsr_detail_3_722* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Tsr_detail_3_722_Vision_only_sign_typeType Vision_only_sign_typeType;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_END =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN =
    Tsr_detail_3_722_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
  static inline bool Vision_only_sign_typeType_IsValid(int value) {
    return Tsr_detail_3_722_Vision_only_sign_typeType_IsValid(value);
  }
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MIN =
    Tsr_detail_3_722_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN;
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MAX =
    Tsr_detail_3_722_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX;
  static const int Vision_only_sign_typeType_ARRAYSIZE =
    Tsr_detail_3_722_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_3_722_Supplementary_sign_typeType Supplementary_sign_typeType;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NONE =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRAILER =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TIME =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRUCK =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_WEIGHT =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRACTOR =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SCHOOL =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_FOG =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NIGHT =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP =
    Tsr_detail_3_722_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
  static inline bool Supplementary_sign_typeType_IsValid(int value) {
    return Tsr_detail_3_722_Supplementary_sign_typeType_IsValid(value);
  }
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MIN =
    Tsr_detail_3_722_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN;
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MAX =
    Tsr_detail_3_722_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX;
  static const int Supplementary_sign_typeType_ARRAYSIZE =
    Tsr_detail_3_722_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_3_722_Filter_typeType Filter_typeType;
  static const Filter_typeType FILTER_TYPE_NOT_FILTERED =
    Tsr_detail_3_722_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
  static const Filter_typeType FILTER_TYPE_IRRELEVANT_TO_THE_HOST =
    Tsr_detail_3_722_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST;
  static const Filter_typeType FILTER_TYPE_ON_VEHICLE_TRUCK =
    Tsr_detail_3_722_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK;
  static const Filter_typeType FILTER_TYPE_EMBEDDED =
    Tsr_detail_3_722_Filter_typeType_FILTER_TYPE_EMBEDDED;
  static inline bool Filter_typeType_IsValid(int value) {
    return Tsr_detail_3_722_Filter_typeType_IsValid(value);
  }
  static const Filter_typeType Filter_typeType_MIN =
    Tsr_detail_3_722_Filter_typeType_Filter_typeType_MIN;
  static const Filter_typeType Filter_typeType_MAX =
    Tsr_detail_3_722_Filter_typeType_Filter_typeType_MAX;
  static const int Filter_typeType_ARRAYSIZE =
    Tsr_detail_3_722_Filter_typeType_Filter_typeType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.TSR.Tsr_detail_3_722.Vision_only_sign_typeType vision_only_sign_type = 1;
  void clear_vision_only_sign_type();
  static const int kVisionOnlySignTypeFieldNumber = 1;
  ::Calmcar::drivers::TSR::Tsr_detail_3_722_Vision_only_sign_typeType vision_only_sign_type() const;
  void set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_3_722_Vision_only_sign_typeType value);

  // .Calmcar.drivers.TSR.Tsr_detail_3_722.Supplementary_sign_typeType supplementary_sign_type = 2;
  void clear_supplementary_sign_type();
  static const int kSupplementarySignTypeFieldNumber = 2;
  ::Calmcar::drivers::TSR::Tsr_detail_3_722_Supplementary_sign_typeType supplementary_sign_type() const;
  void set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_3_722_Supplementary_sign_typeType value);

  // double sign_pos_z = 3;
  void clear_sign_pos_z();
  static const int kSignPosZFieldNumber = 3;
  double sign_pos_z() const;
  void set_sign_pos_z(double value);

  // double sign_pos_y = 4;
  void clear_sign_pos_y();
  static const int kSignPosYFieldNumber = 4;
  double sign_pos_y() const;
  void set_sign_pos_y(double value);

  // double sign_pos_x = 5;
  void clear_sign_pos_x();
  static const int kSignPosXFieldNumber = 5;
  double sign_pos_x() const;
  void set_sign_pos_x(double value);

  // .Calmcar.drivers.TSR.Tsr_detail_3_722.Filter_typeType filter_type = 6;
  void clear_filter_type();
  static const int kFilterTypeFieldNumber = 6;
  ::Calmcar::drivers::TSR::Tsr_detail_3_722_Filter_typeType filter_type() const;
  void set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_3_722_Filter_typeType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Tsr_detail_3_722)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int vision_only_sign_type_;
  int supplementary_sign_type_;
  double sign_pos_z_;
  double sign_pos_y_;
  double sign_pos_x_;
  int filter_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tsr_detail_4_723 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Tsr_detail_4_723) */ {
 public:
  Tsr_detail_4_723();
  virtual ~Tsr_detail_4_723();

  Tsr_detail_4_723(const Tsr_detail_4_723& from);

  inline Tsr_detail_4_723& operator=(const Tsr_detail_4_723& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tsr_detail_4_723(Tsr_detail_4_723&& from) noexcept
    : Tsr_detail_4_723() {
    *this = ::std::move(from);
  }

  inline Tsr_detail_4_723& operator=(Tsr_detail_4_723&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Tsr_detail_4_723& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tsr_detail_4_723* internal_default_instance() {
    return reinterpret_cast<const Tsr_detail_4_723*>(
               &_Tsr_detail_4_723_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Tsr_detail_4_723* other);
  friend void swap(Tsr_detail_4_723& a, Tsr_detail_4_723& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tsr_detail_4_723* New() const final {
    return CreateMaybeMessage<Tsr_detail_4_723>(NULL);
  }

  Tsr_detail_4_723* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tsr_detail_4_723>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Tsr_detail_4_723& from);
  void MergeFrom(const Tsr_detail_4_723& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tsr_detail_4_723* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Tsr_detail_4_723_Vision_only_sign_typeType Vision_only_sign_typeType;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_END =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN =
    Tsr_detail_4_723_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
  static inline bool Vision_only_sign_typeType_IsValid(int value) {
    return Tsr_detail_4_723_Vision_only_sign_typeType_IsValid(value);
  }
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MIN =
    Tsr_detail_4_723_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN;
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MAX =
    Tsr_detail_4_723_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX;
  static const int Vision_only_sign_typeType_ARRAYSIZE =
    Tsr_detail_4_723_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_4_723_Supplementary_sign_typeType Supplementary_sign_typeType;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NONE =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRAILER =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TIME =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRUCK =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_WEIGHT =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRACTOR =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SCHOOL =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_FOG =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NIGHT =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP =
    Tsr_detail_4_723_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
  static inline bool Supplementary_sign_typeType_IsValid(int value) {
    return Tsr_detail_4_723_Supplementary_sign_typeType_IsValid(value);
  }
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MIN =
    Tsr_detail_4_723_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN;
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MAX =
    Tsr_detail_4_723_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX;
  static const int Supplementary_sign_typeType_ARRAYSIZE =
    Tsr_detail_4_723_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_4_723_Filter_typeType Filter_typeType;
  static const Filter_typeType FILTER_TYPE_NOT_FILTERED =
    Tsr_detail_4_723_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
  static const Filter_typeType FILTER_TYPE_IRRELEVANT_TO_THE_HOST =
    Tsr_detail_4_723_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST;
  static const Filter_typeType FILTER_TYPE_ON_VEHICLE_TRUCK =
    Tsr_detail_4_723_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK;
  static const Filter_typeType FILTER_TYPE_EMBEDDED =
    Tsr_detail_4_723_Filter_typeType_FILTER_TYPE_EMBEDDED;
  static inline bool Filter_typeType_IsValid(int value) {
    return Tsr_detail_4_723_Filter_typeType_IsValid(value);
  }
  static const Filter_typeType Filter_typeType_MIN =
    Tsr_detail_4_723_Filter_typeType_Filter_typeType_MIN;
  static const Filter_typeType Filter_typeType_MAX =
    Tsr_detail_4_723_Filter_typeType_Filter_typeType_MAX;
  static const int Filter_typeType_ARRAYSIZE =
    Tsr_detail_4_723_Filter_typeType_Filter_typeType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.TSR.Tsr_detail_4_723.Vision_only_sign_typeType vision_only_sign_type = 1;
  void clear_vision_only_sign_type();
  static const int kVisionOnlySignTypeFieldNumber = 1;
  ::Calmcar::drivers::TSR::Tsr_detail_4_723_Vision_only_sign_typeType vision_only_sign_type() const;
  void set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_4_723_Vision_only_sign_typeType value);

  // .Calmcar.drivers.TSR.Tsr_detail_4_723.Supplementary_sign_typeType supplementary_sign_type = 2;
  void clear_supplementary_sign_type();
  static const int kSupplementarySignTypeFieldNumber = 2;
  ::Calmcar::drivers::TSR::Tsr_detail_4_723_Supplementary_sign_typeType supplementary_sign_type() const;
  void set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_4_723_Supplementary_sign_typeType value);

  // double sign_pos_z = 3;
  void clear_sign_pos_z();
  static const int kSignPosZFieldNumber = 3;
  double sign_pos_z() const;
  void set_sign_pos_z(double value);

  // double sign_pos_y = 4;
  void clear_sign_pos_y();
  static const int kSignPosYFieldNumber = 4;
  double sign_pos_y() const;
  void set_sign_pos_y(double value);

  // double sign_pos_x = 5;
  void clear_sign_pos_x();
  static const int kSignPosXFieldNumber = 5;
  double sign_pos_x() const;
  void set_sign_pos_x(double value);

  // .Calmcar.drivers.TSR.Tsr_detail_4_723.Filter_typeType filter_type = 6;
  void clear_filter_type();
  static const int kFilterTypeFieldNumber = 6;
  ::Calmcar::drivers::TSR::Tsr_detail_4_723_Filter_typeType filter_type() const;
  void set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_4_723_Filter_typeType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Tsr_detail_4_723)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int vision_only_sign_type_;
  int supplementary_sign_type_;
  double sign_pos_z_;
  double sign_pos_y_;
  double sign_pos_x_;
  int filter_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tsr_detail_1_720 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Tsr_detail_1_720) */ {
 public:
  Tsr_detail_1_720();
  virtual ~Tsr_detail_1_720();

  Tsr_detail_1_720(const Tsr_detail_1_720& from);

  inline Tsr_detail_1_720& operator=(const Tsr_detail_1_720& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tsr_detail_1_720(Tsr_detail_1_720&& from) noexcept
    : Tsr_detail_1_720() {
    *this = ::std::move(from);
  }

  inline Tsr_detail_1_720& operator=(Tsr_detail_1_720&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Tsr_detail_1_720& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tsr_detail_1_720* internal_default_instance() {
    return reinterpret_cast<const Tsr_detail_1_720*>(
               &_Tsr_detail_1_720_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Tsr_detail_1_720* other);
  friend void swap(Tsr_detail_1_720& a, Tsr_detail_1_720& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tsr_detail_1_720* New() const final {
    return CreateMaybeMessage<Tsr_detail_1_720>(NULL);
  }

  Tsr_detail_1_720* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tsr_detail_1_720>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Tsr_detail_1_720& from);
  void MergeFrom(const Tsr_detail_1_720& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tsr_detail_1_720* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Tsr_detail_1_720_Vision_only_sign_typeType Vision_only_sign_typeType;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_END =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN =
    Tsr_detail_1_720_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
  static inline bool Vision_only_sign_typeType_IsValid(int value) {
    return Tsr_detail_1_720_Vision_only_sign_typeType_IsValid(value);
  }
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MIN =
    Tsr_detail_1_720_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN;
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MAX =
    Tsr_detail_1_720_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX;
  static const int Vision_only_sign_typeType_ARRAYSIZE =
    Tsr_detail_1_720_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_1_720_Supplementary_sign_typeType Supplementary_sign_typeType;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NONE =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRAILER =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TIME =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRUCK =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_WEIGHT =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRACTOR =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SCHOOL =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_FOG =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NIGHT =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP =
    Tsr_detail_1_720_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
  static inline bool Supplementary_sign_typeType_IsValid(int value) {
    return Tsr_detail_1_720_Supplementary_sign_typeType_IsValid(value);
  }
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MIN =
    Tsr_detail_1_720_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN;
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MAX =
    Tsr_detail_1_720_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX;
  static const int Supplementary_sign_typeType_ARRAYSIZE =
    Tsr_detail_1_720_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_1_720_Filter_typeType Filter_typeType;
  static const Filter_typeType FILTER_TYPE_NOT_FILTERED =
    Tsr_detail_1_720_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
  static const Filter_typeType FILTER_TYPE_IRRELEVANT_TO_THE_HOST =
    Tsr_detail_1_720_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST;
  static const Filter_typeType FILTER_TYPE_ON_VEHICLE_TRUCK =
    Tsr_detail_1_720_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK;
  static const Filter_typeType FILTER_TYPE_EMBEDDED =
    Tsr_detail_1_720_Filter_typeType_FILTER_TYPE_EMBEDDED;
  static inline bool Filter_typeType_IsValid(int value) {
    return Tsr_detail_1_720_Filter_typeType_IsValid(value);
  }
  static const Filter_typeType Filter_typeType_MIN =
    Tsr_detail_1_720_Filter_typeType_Filter_typeType_MIN;
  static const Filter_typeType Filter_typeType_MAX =
    Tsr_detail_1_720_Filter_typeType_Filter_typeType_MAX;
  static const int Filter_typeType_ARRAYSIZE =
    Tsr_detail_1_720_Filter_typeType_Filter_typeType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.TSR.Tsr_detail_1_720.Vision_only_sign_typeType vision_only_sign_type = 1;
  void clear_vision_only_sign_type();
  static const int kVisionOnlySignTypeFieldNumber = 1;
  ::Calmcar::drivers::TSR::Tsr_detail_1_720_Vision_only_sign_typeType vision_only_sign_type() const;
  void set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_1_720_Vision_only_sign_typeType value);

  // .Calmcar.drivers.TSR.Tsr_detail_1_720.Supplementary_sign_typeType supplementary_sign_type = 2;
  void clear_supplementary_sign_type();
  static const int kSupplementarySignTypeFieldNumber = 2;
  ::Calmcar::drivers::TSR::Tsr_detail_1_720_Supplementary_sign_typeType supplementary_sign_type() const;
  void set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_1_720_Supplementary_sign_typeType value);

  // double sign_pos_z = 3;
  void clear_sign_pos_z();
  static const int kSignPosZFieldNumber = 3;
  double sign_pos_z() const;
  void set_sign_pos_z(double value);

  // double sign_pos_y = 4;
  void clear_sign_pos_y();
  static const int kSignPosYFieldNumber = 4;
  double sign_pos_y() const;
  void set_sign_pos_y(double value);

  // double sign_pos_x = 5;
  void clear_sign_pos_x();
  static const int kSignPosXFieldNumber = 5;
  double sign_pos_x() const;
  void set_sign_pos_x(double value);

  // .Calmcar.drivers.TSR.Tsr_detail_1_720.Filter_typeType filter_type = 6;
  void clear_filter_type();
  static const int kFilterTypeFieldNumber = 6;
  ::Calmcar::drivers::TSR::Tsr_detail_1_720_Filter_typeType filter_type() const;
  void set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_1_720_Filter_typeType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Tsr_detail_1_720)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int vision_only_sign_type_;
  int supplementary_sign_type_;
  double sign_pos_z_;
  double sign_pos_y_;
  double sign_pos_x_;
  int filter_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tsr_detail_2_721 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Tsr_detail_2_721) */ {
 public:
  Tsr_detail_2_721();
  virtual ~Tsr_detail_2_721();

  Tsr_detail_2_721(const Tsr_detail_2_721& from);

  inline Tsr_detail_2_721& operator=(const Tsr_detail_2_721& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tsr_detail_2_721(Tsr_detail_2_721&& from) noexcept
    : Tsr_detail_2_721() {
    *this = ::std::move(from);
  }

  inline Tsr_detail_2_721& operator=(Tsr_detail_2_721&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Tsr_detail_2_721& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tsr_detail_2_721* internal_default_instance() {
    return reinterpret_cast<const Tsr_detail_2_721*>(
               &_Tsr_detail_2_721_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Tsr_detail_2_721* other);
  friend void swap(Tsr_detail_2_721& a, Tsr_detail_2_721& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tsr_detail_2_721* New() const final {
    return CreateMaybeMessage<Tsr_detail_2_721>(NULL);
  }

  Tsr_detail_2_721* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tsr_detail_2_721>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Tsr_detail_2_721& from);
  void MergeFrom(const Tsr_detail_2_721& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tsr_detail_2_721* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef Tsr_detail_2_721_Vision_only_sign_typeType Vision_only_sign_typeType;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_10_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_20_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_30_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_40_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_50_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_60_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_70_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_80_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_90_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_100_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_110_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_120_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_130_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_140_KM_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NUMBER_STANDARD_ELECTRONI;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_ALL_RESTRICTION_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_REGULAR_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_5_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_15_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_25_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_35_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_45_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_55_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_65_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_75_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_85_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONIC_95_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_105_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_115_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_125_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_135_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_STANDARD_ELECTRONI_145_KM_H_MP_H;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_MOTORWAY_END =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_MOTORWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_EXPRESSWAY_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYFROUND_AREA_BEGIN;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_PLAYGROUND_AREA_END;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_REGULAR;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_PASSING_START_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_END_OF_NO_PASSING_ELECTRONIC;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_NO_SIGN_DETECTED;
  static const Vision_only_sign_typeType VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN =
    Tsr_detail_2_721_Vision_only_sign_typeType_VISION_ONLY_SIGN_TYPE_E_INVALID_SIGN;
  static inline bool Vision_only_sign_typeType_IsValid(int value) {
    return Tsr_detail_2_721_Vision_only_sign_typeType_IsValid(value);
  }
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MIN =
    Tsr_detail_2_721_Vision_only_sign_typeType_Vision_only_sign_typeType_MIN;
  static const Vision_only_sign_typeType Vision_only_sign_typeType_MAX =
    Tsr_detail_2_721_Vision_only_sign_typeType_Vision_only_sign_typeType_MAX;
  static const int Vision_only_sign_typeType_ARRAYSIZE =
    Tsr_detail_2_721_Vision_only_sign_typeType_Vision_only_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_2_721_Supplementary_sign_typeType Supplementary_sign_typeType;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NONE =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NONE;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRAILER =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRAILER;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TIME =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TIME;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_ARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARRIOW_LEFT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_BENDARROW_RIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRUCK =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRUCK;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_AROW_DIST_FOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_WEIGHT =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_WEIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_DISTANCE_IN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_TRACTOR =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_TRACTOR;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SNOW_RAIN;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SCHOOL =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SCHOOL;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_RAIN_CLOUD;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_FOG =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_FOG;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_HAZARDOUS_METERIALS;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_NIGHT =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_NIGHT;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_SUPP_SIGN_GENERIC;
  static const Supplementary_sign_typeType SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP =
    Tsr_detail_2_721_Supplementary_sign_typeType_SUPPLEMENTARY_SIGN_TYPE_INVALID_SUPP;
  static inline bool Supplementary_sign_typeType_IsValid(int value) {
    return Tsr_detail_2_721_Supplementary_sign_typeType_IsValid(value);
  }
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MIN =
    Tsr_detail_2_721_Supplementary_sign_typeType_Supplementary_sign_typeType_MIN;
  static const Supplementary_sign_typeType Supplementary_sign_typeType_MAX =
    Tsr_detail_2_721_Supplementary_sign_typeType_Supplementary_sign_typeType_MAX;
  static const int Supplementary_sign_typeType_ARRAYSIZE =
    Tsr_detail_2_721_Supplementary_sign_typeType_Supplementary_sign_typeType_ARRAYSIZE;

  typedef Tsr_detail_2_721_Filter_typeType Filter_typeType;
  static const Filter_typeType FILTER_TYPE_NOT_FILTERED =
    Tsr_detail_2_721_Filter_typeType_FILTER_TYPE_NOT_FILTERED;
  static const Filter_typeType FILTER_TYPE_IRRELEVANT_TO_THE_HOST =
    Tsr_detail_2_721_Filter_typeType_FILTER_TYPE_IRRELEVANT_TO_THE_HOST;
  static const Filter_typeType FILTER_TYPE_ON_VEHICLE_TRUCK =
    Tsr_detail_2_721_Filter_typeType_FILTER_TYPE_ON_VEHICLE_TRUCK;
  static const Filter_typeType FILTER_TYPE_EMBEDDED =
    Tsr_detail_2_721_Filter_typeType_FILTER_TYPE_EMBEDDED;
  static inline bool Filter_typeType_IsValid(int value) {
    return Tsr_detail_2_721_Filter_typeType_IsValid(value);
  }
  static const Filter_typeType Filter_typeType_MIN =
    Tsr_detail_2_721_Filter_typeType_Filter_typeType_MIN;
  static const Filter_typeType Filter_typeType_MAX =
    Tsr_detail_2_721_Filter_typeType_Filter_typeType_MAX;
  static const int Filter_typeType_ARRAYSIZE =
    Tsr_detail_2_721_Filter_typeType_Filter_typeType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .Calmcar.drivers.TSR.Tsr_detail_2_721.Vision_only_sign_typeType vision_only_sign_type = 1;
  void clear_vision_only_sign_type();
  static const int kVisionOnlySignTypeFieldNumber = 1;
  ::Calmcar::drivers::TSR::Tsr_detail_2_721_Vision_only_sign_typeType vision_only_sign_type() const;
  void set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_2_721_Vision_only_sign_typeType value);

  // .Calmcar.drivers.TSR.Tsr_detail_2_721.Supplementary_sign_typeType supplementary_sign_type = 2;
  void clear_supplementary_sign_type();
  static const int kSupplementarySignTypeFieldNumber = 2;
  ::Calmcar::drivers::TSR::Tsr_detail_2_721_Supplementary_sign_typeType supplementary_sign_type() const;
  void set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_2_721_Supplementary_sign_typeType value);

  // double sign_pos_z = 3;
  void clear_sign_pos_z();
  static const int kSignPosZFieldNumber = 3;
  double sign_pos_z() const;
  void set_sign_pos_z(double value);

  // double sign_pos_y = 4;
  void clear_sign_pos_y();
  static const int kSignPosYFieldNumber = 4;
  double sign_pos_y() const;
  void set_sign_pos_y(double value);

  // double sign_pos_x = 5;
  void clear_sign_pos_x();
  static const int kSignPosXFieldNumber = 5;
  double sign_pos_x() const;
  void set_sign_pos_x(double value);

  // .Calmcar.drivers.TSR.Tsr_detail_2_721.Filter_typeType filter_type = 6;
  void clear_filter_type();
  static const int kFilterTypeFieldNumber = 6;
  ::Calmcar::drivers::TSR::Tsr_detail_2_721_Filter_typeType filter_type() const;
  void set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_2_721_Filter_typeType value);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Tsr_detail_2_721)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int vision_only_sign_type_;
  int supplementary_sign_type_;
  double sign_pos_z_;
  double sign_pos_y_;
  double sign_pos_x_;
  int filter_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tsr : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Calmcar.drivers.TSR.Tsr) */ {
 public:
  Tsr();
  virtual ~Tsr();

  Tsr(const Tsr& from);

  inline Tsr& operator=(const Tsr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tsr(Tsr&& from) noexcept
    : Tsr() {
    *this = ::std::move(from);
  }

  inline Tsr& operator=(Tsr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Tsr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tsr* internal_default_instance() {
    return reinterpret_cast<const Tsr*>(
               &_Tsr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Tsr* other);
  friend void swap(Tsr& a, Tsr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tsr* New() const final {
    return CreateMaybeMessage<Tsr>(NULL);
  }

  Tsr* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tsr>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const Tsr& from);
  void MergeFrom(const Tsr& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tsr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Calmcar.common.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::Calmcar::common::Header& _internal_header() const;
  public:
  const ::Calmcar::common::Header& header() const;
  ::Calmcar::common::Header* release_header();
  ::Calmcar::common::Header* mutable_header();
  void set_allocated_header(::Calmcar::common::Header* header);

  // .Calmcar.drivers.TSR.Aftermarket_ext_669 aftermarket_ext_669 = 2;
  bool has_aftermarket_ext_669() const;
  void clear_aftermarket_ext_669();
  static const int kAftermarketExt669FieldNumber = 2;
  private:
  const ::Calmcar::drivers::TSR::Aftermarket_ext_669& _internal_aftermarket_ext_669() const;
  public:
  const ::Calmcar::drivers::TSR::Aftermarket_ext_669& aftermarket_ext_669() const;
  ::Calmcar::drivers::TSR::Aftermarket_ext_669* release_aftermarket_ext_669();
  ::Calmcar::drivers::TSR::Aftermarket_ext_669* mutable_aftermarket_ext_669();
  void set_allocated_aftermarket_ext_669(::Calmcar::drivers::TSR::Aftermarket_ext_669* aftermarket_ext_669);

  // .Calmcar.drivers.TSR.Signal_car_760 signal_car_760 = 3;
  bool has_signal_car_760() const;
  void clear_signal_car_760();
  static const int kSignalCar760FieldNumber = 3;
  private:
  const ::Calmcar::drivers::TSR::Signal_car_760& _internal_signal_car_760() const;
  public:
  const ::Calmcar::drivers::TSR::Signal_car_760& signal_car_760() const;
  ::Calmcar::drivers::TSR::Signal_car_760* release_signal_car_760();
  ::Calmcar::drivers::TSR::Signal_car_760* mutable_signal_car_760();
  void set_allocated_signal_car_760(::Calmcar::drivers::TSR::Signal_car_760* signal_car_760);

  // .Calmcar.drivers.TSR.Aws_700 aws_700 = 4;
  bool has_aws_700() const;
  void clear_aws_700();
  static const int kAws700FieldNumber = 4;
  private:
  const ::Calmcar::drivers::TSR::Aws_700& _internal_aws_700() const;
  public:
  const ::Calmcar::drivers::TSR::Aws_700& aws_700() const;
  ::Calmcar::drivers::TSR::Aws_700* release_aws_700();
  ::Calmcar::drivers::TSR::Aws_700* mutable_aws_700();
  void set_allocated_aws_700(::Calmcar::drivers::TSR::Aws_700* aws_700);

  // .Calmcar.drivers.TSR.Tsr_detail_7_726 tsr_detail_7_726 = 5;
  bool has_tsr_detail_7_726() const;
  void clear_tsr_detail_7_726();
  static const int kTsrDetail7726FieldNumber = 5;
  private:
  const ::Calmcar::drivers::TSR::Tsr_detail_7_726& _internal_tsr_detail_7_726() const;
  public:
  const ::Calmcar::drivers::TSR::Tsr_detail_7_726& tsr_detail_7_726() const;
  ::Calmcar::drivers::TSR::Tsr_detail_7_726* release_tsr_detail_7_726();
  ::Calmcar::drivers::TSR::Tsr_detail_7_726* mutable_tsr_detail_7_726();
  void set_allocated_tsr_detail_7_726(::Calmcar::drivers::TSR::Tsr_detail_7_726* tsr_detail_7_726);

  // .Calmcar.drivers.TSR.Vision_only_tsr_727 vision_only_tsr_727 = 6;
  bool has_vision_only_tsr_727() const;
  void clear_vision_only_tsr_727();
  static const int kVisionOnlyTsr727FieldNumber = 6;
  private:
  const ::Calmcar::drivers::TSR::Vision_only_tsr_727& _internal_vision_only_tsr_727() const;
  public:
  const ::Calmcar::drivers::TSR::Vision_only_tsr_727& vision_only_tsr_727() const;
  ::Calmcar::drivers::TSR::Vision_only_tsr_727* release_vision_only_tsr_727();
  ::Calmcar::drivers::TSR::Vision_only_tsr_727* mutable_vision_only_tsr_727();
  void set_allocated_vision_only_tsr_727(::Calmcar::drivers::TSR::Vision_only_tsr_727* vision_only_tsr_727);

  // .Calmcar.drivers.TSR.Tsr_detail_5_724 tsr_detail_5_724 = 7;
  bool has_tsr_detail_5_724() const;
  void clear_tsr_detail_5_724();
  static const int kTsrDetail5724FieldNumber = 7;
  private:
  const ::Calmcar::drivers::TSR::Tsr_detail_5_724& _internal_tsr_detail_5_724() const;
  public:
  const ::Calmcar::drivers::TSR::Tsr_detail_5_724& tsr_detail_5_724() const;
  ::Calmcar::drivers::TSR::Tsr_detail_5_724* release_tsr_detail_5_724();
  ::Calmcar::drivers::TSR::Tsr_detail_5_724* mutable_tsr_detail_5_724();
  void set_allocated_tsr_detail_5_724(::Calmcar::drivers::TSR::Tsr_detail_5_724* tsr_detail_5_724);

  // .Calmcar.drivers.TSR.Tsr_detail_6_725 tsr_detail_6_725 = 8;
  bool has_tsr_detail_6_725() const;
  void clear_tsr_detail_6_725();
  static const int kTsrDetail6725FieldNumber = 8;
  private:
  const ::Calmcar::drivers::TSR::Tsr_detail_6_725& _internal_tsr_detail_6_725() const;
  public:
  const ::Calmcar::drivers::TSR::Tsr_detail_6_725& tsr_detail_6_725() const;
  ::Calmcar::drivers::TSR::Tsr_detail_6_725* release_tsr_detail_6_725();
  ::Calmcar::drivers::TSR::Tsr_detail_6_725* mutable_tsr_detail_6_725();
  void set_allocated_tsr_detail_6_725(::Calmcar::drivers::TSR::Tsr_detail_6_725* tsr_detail_6_725);

  // .Calmcar.drivers.TSR.Tsr_detail_3_722 tsr_detail_3_722 = 9;
  bool has_tsr_detail_3_722() const;
  void clear_tsr_detail_3_722();
  static const int kTsrDetail3722FieldNumber = 9;
  private:
  const ::Calmcar::drivers::TSR::Tsr_detail_3_722& _internal_tsr_detail_3_722() const;
  public:
  const ::Calmcar::drivers::TSR::Tsr_detail_3_722& tsr_detail_3_722() const;
  ::Calmcar::drivers::TSR::Tsr_detail_3_722* release_tsr_detail_3_722();
  ::Calmcar::drivers::TSR::Tsr_detail_3_722* mutable_tsr_detail_3_722();
  void set_allocated_tsr_detail_3_722(::Calmcar::drivers::TSR::Tsr_detail_3_722* tsr_detail_3_722);

  // .Calmcar.drivers.TSR.Tsr_detail_4_723 tsr_detail_4_723 = 10;
  bool has_tsr_detail_4_723() const;
  void clear_tsr_detail_4_723();
  static const int kTsrDetail4723FieldNumber = 10;
  private:
  const ::Calmcar::drivers::TSR::Tsr_detail_4_723& _internal_tsr_detail_4_723() const;
  public:
  const ::Calmcar::drivers::TSR::Tsr_detail_4_723& tsr_detail_4_723() const;
  ::Calmcar::drivers::TSR::Tsr_detail_4_723* release_tsr_detail_4_723();
  ::Calmcar::drivers::TSR::Tsr_detail_4_723* mutable_tsr_detail_4_723();
  void set_allocated_tsr_detail_4_723(::Calmcar::drivers::TSR::Tsr_detail_4_723* tsr_detail_4_723);

  // .Calmcar.drivers.TSR.Tsr_detail_1_720 tsr_detail_1_720 = 11;
  bool has_tsr_detail_1_720() const;
  void clear_tsr_detail_1_720();
  static const int kTsrDetail1720FieldNumber = 11;
  private:
  const ::Calmcar::drivers::TSR::Tsr_detail_1_720& _internal_tsr_detail_1_720() const;
  public:
  const ::Calmcar::drivers::TSR::Tsr_detail_1_720& tsr_detail_1_720() const;
  ::Calmcar::drivers::TSR::Tsr_detail_1_720* release_tsr_detail_1_720();
  ::Calmcar::drivers::TSR::Tsr_detail_1_720* mutable_tsr_detail_1_720();
  void set_allocated_tsr_detail_1_720(::Calmcar::drivers::TSR::Tsr_detail_1_720* tsr_detail_1_720);

  // .Calmcar.drivers.TSR.Tsr_detail_2_721 tsr_detail_2_721 = 12;
  bool has_tsr_detail_2_721() const;
  void clear_tsr_detail_2_721();
  static const int kTsrDetail2721FieldNumber = 12;
  private:
  const ::Calmcar::drivers::TSR::Tsr_detail_2_721& _internal_tsr_detail_2_721() const;
  public:
  const ::Calmcar::drivers::TSR::Tsr_detail_2_721& tsr_detail_2_721() const;
  ::Calmcar::drivers::TSR::Tsr_detail_2_721* release_tsr_detail_2_721();
  ::Calmcar::drivers::TSR::Tsr_detail_2_721* mutable_tsr_detail_2_721();
  void set_allocated_tsr_detail_2_721(::Calmcar::drivers::TSR::Tsr_detail_2_721* tsr_detail_2_721);

  // @@protoc_insertion_point(class_scope:Calmcar.drivers.TSR.Tsr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::Calmcar::common::Header* header_;
  ::Calmcar::drivers::TSR::Aftermarket_ext_669* aftermarket_ext_669_;
  ::Calmcar::drivers::TSR::Signal_car_760* signal_car_760_;
  ::Calmcar::drivers::TSR::Aws_700* aws_700_;
  ::Calmcar::drivers::TSR::Tsr_detail_7_726* tsr_detail_7_726_;
  ::Calmcar::drivers::TSR::Vision_only_tsr_727* vision_only_tsr_727_;
  ::Calmcar::drivers::TSR::Tsr_detail_5_724* tsr_detail_5_724_;
  ::Calmcar::drivers::TSR::Tsr_detail_6_725* tsr_detail_6_725_;
  ::Calmcar::drivers::TSR::Tsr_detail_3_722* tsr_detail_3_722_;
  ::Calmcar::drivers::TSR::Tsr_detail_4_723* tsr_detail_4_723_;
  ::Calmcar::drivers::TSR::Tsr_detail_1_720* tsr_detail_1_720_;
  ::Calmcar::drivers::TSR::Tsr_detail_2_721* tsr_detail_2_721_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tsr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Aftermarket_ext_669

// .Calmcar.drivers.TSR.Aftermarket_ext_669.Ldw_availability_rightType ldw_availability_right = 1;
inline void Aftermarket_ext_669::clear_ldw_availability_right() {
  ldw_availability_right_ = 0;
}
inline ::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_rightType Aftermarket_ext_669::ldw_availability_right() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aftermarket_ext_669.ldw_availability_right)
  return static_cast< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_rightType >(ldw_availability_right_);
}
inline void Aftermarket_ext_669::set_ldw_availability_right(::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_rightType value) {
  
  ldw_availability_right_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aftermarket_ext_669.ldw_availability_right)
}

// .Calmcar.drivers.TSR.Aftermarket_ext_669.Ldw_availability_leftType ldw_availability_left = 2;
inline void Aftermarket_ext_669::clear_ldw_availability_left() {
  ldw_availability_left_ = 0;
}
inline ::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_leftType Aftermarket_ext_669::ldw_availability_left() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aftermarket_ext_669.ldw_availability_left)
  return static_cast< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_leftType >(ldw_availability_left_);
}
inline void Aftermarket_ext_669::set_ldw_availability_left(::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_leftType value) {
  
  ldw_availability_left_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aftermarket_ext_669.ldw_availability_left)
}

// .Calmcar.drivers.TSR.Aftermarket_ext_669.Lane_type_rightType lane_type_right = 3;
inline void Aftermarket_ext_669::clear_lane_type_right() {
  lane_type_right_ = 0;
}
inline ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_rightType Aftermarket_ext_669::lane_type_right() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aftermarket_ext_669.lane_type_right)
  return static_cast< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_rightType >(lane_type_right_);
}
inline void Aftermarket_ext_669::set_lane_type_right(::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_rightType value) {
  
  lane_type_right_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aftermarket_ext_669.lane_type_right)
}

// .Calmcar.drivers.TSR.Aftermarket_ext_669.Lane_type_leftType lane_type_left = 4;
inline void Aftermarket_ext_669::clear_lane_type_left() {
  lane_type_left_ = 0;
}
inline ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_leftType Aftermarket_ext_669::lane_type_left() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aftermarket_ext_669.lane_type_left)
  return static_cast< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_leftType >(lane_type_left_);
}
inline void Aftermarket_ext_669::set_lane_type_left(::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_leftType value) {
  
  lane_type_left_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aftermarket_ext_669.lane_type_left)
}

// .Calmcar.drivers.TSR.Aftermarket_ext_669.Lane_conf_rightType lane_conf_right = 5;
inline void Aftermarket_ext_669::clear_lane_conf_right() {
  lane_conf_right_ = 0;
}
inline ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_rightType Aftermarket_ext_669::lane_conf_right() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aftermarket_ext_669.lane_conf_right)
  return static_cast< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_rightType >(lane_conf_right_);
}
inline void Aftermarket_ext_669::set_lane_conf_right(::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_rightType value) {
  
  lane_conf_right_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aftermarket_ext_669.lane_conf_right)
}

// .Calmcar.drivers.TSR.Aftermarket_ext_669.Lane_conf_leftType lane_conf_left = 6;
inline void Aftermarket_ext_669::clear_lane_conf_left() {
  lane_conf_left_ = 0;
}
inline ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_leftType Aftermarket_ext_669::lane_conf_left() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aftermarket_ext_669.lane_conf_left)
  return static_cast< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_leftType >(lane_conf_left_);
}
inline void Aftermarket_ext_669::set_lane_conf_left(::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_leftType value) {
  
  lane_conf_left_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aftermarket_ext_669.lane_conf_left)
}

// double distance_to_lane_r = 7;
inline void Aftermarket_ext_669::clear_distance_to_lane_r() {
  distance_to_lane_r_ = 0;
}
inline double Aftermarket_ext_669::distance_to_lane_r() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aftermarket_ext_669.distance_to_lane_r)
  return distance_to_lane_r_;
}
inline void Aftermarket_ext_669::set_distance_to_lane_r(double value) {
  
  distance_to_lane_r_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aftermarket_ext_669.distance_to_lane_r)
}

// double distance_to_lane_l = 8;
inline void Aftermarket_ext_669::clear_distance_to_lane_l() {
  distance_to_lane_l_ = 0;
}
inline double Aftermarket_ext_669::distance_to_lane_l() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aftermarket_ext_669.distance_to_lane_l)
  return distance_to_lane_l_;
}
inline void Aftermarket_ext_669::set_distance_to_lane_l(double value) {
  
  distance_to_lane_l_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aftermarket_ext_669.distance_to_lane_l)
}

// -------------------------------------------------------------------

// Signal_car_760

// .Calmcar.drivers.TSR.Signal_car_760.Wipers_availabledType wipers_availabled = 1;
inline void Signal_car_760::clear_wipers_availabled() {
  wipers_availabled_ = 0;
}
inline ::Calmcar::drivers::TSR::Signal_car_760_Wipers_availabledType Signal_car_760::wipers_availabled() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.wipers_availabled)
  return static_cast< ::Calmcar::drivers::TSR::Signal_car_760_Wipers_availabledType >(wipers_availabled_);
}
inline void Signal_car_760::set_wipers_availabled(::Calmcar::drivers::TSR::Signal_car_760_Wipers_availabledType value) {
  
  wipers_availabled_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.wipers_availabled)
}

// .Calmcar.drivers.TSR.Signal_car_760.Highbeam_availabledType highbeam_availabled = 2;
inline void Signal_car_760::clear_highbeam_availabled() {
  highbeam_availabled_ = 0;
}
inline ::Calmcar::drivers::TSR::Signal_car_760_Highbeam_availabledType Signal_car_760::highbeam_availabled() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.highbeam_availabled)
  return static_cast< ::Calmcar::drivers::TSR::Signal_car_760_Highbeam_availabledType >(highbeam_availabled_);
}
inline void Signal_car_760::set_highbeam_availabled(::Calmcar::drivers::TSR::Signal_car_760_Highbeam_availabledType value) {
  
  highbeam_availabled_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.highbeam_availabled)
}

// .Calmcar.drivers.TSR.Signal_car_760.Lowbeam_availabledType lowbeam_availabled = 3;
inline void Signal_car_760::clear_lowbeam_availabled() {
  lowbeam_availabled_ = 0;
}
inline ::Calmcar::drivers::TSR::Signal_car_760_Lowbeam_availabledType Signal_car_760::lowbeam_availabled() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.lowbeam_availabled)
  return static_cast< ::Calmcar::drivers::TSR::Signal_car_760_Lowbeam_availabledType >(lowbeam_availabled_);
}
inline void Signal_car_760::set_lowbeam_availabled(::Calmcar::drivers::TSR::Signal_car_760_Lowbeam_availabledType value) {
  
  lowbeam_availabled_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.lowbeam_availabled)
}

// .Calmcar.drivers.TSR.Signal_car_760.BrakesType brakes = 4;
inline void Signal_car_760::clear_brakes() {
  brakes_ = 0;
}
inline ::Calmcar::drivers::TSR::Signal_car_760_BrakesType Signal_car_760::brakes() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.brakes)
  return static_cast< ::Calmcar::drivers::TSR::Signal_car_760_BrakesType >(brakes_);
}
inline void Signal_car_760::set_brakes(::Calmcar::drivers::TSR::Signal_car_760_BrakesType value) {
  
  brakes_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.brakes)
}

// .Calmcar.drivers.TSR.Signal_car_760.Left_blinkType left_blink = 5;
inline void Signal_car_760::clear_left_blink() {
  left_blink_ = 0;
}
inline ::Calmcar::drivers::TSR::Signal_car_760_Left_blinkType Signal_car_760::left_blink() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.left_blink)
  return static_cast< ::Calmcar::drivers::TSR::Signal_car_760_Left_blinkType >(left_blink_);
}
inline void Signal_car_760::set_left_blink(::Calmcar::drivers::TSR::Signal_car_760_Left_blinkType value) {
  
  left_blink_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.left_blink)
}

// .Calmcar.drivers.TSR.Signal_car_760.Right_blinkType right_blink = 6;
inline void Signal_car_760::clear_right_blink() {
  right_blink_ = 0;
}
inline ::Calmcar::drivers::TSR::Signal_car_760_Right_blinkType Signal_car_760::right_blink() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.right_blink)
  return static_cast< ::Calmcar::drivers::TSR::Signal_car_760_Right_blinkType >(right_blink_);
}
inline void Signal_car_760::set_right_blink(::Calmcar::drivers::TSR::Signal_car_760_Right_blinkType value) {
  
  right_blink_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.right_blink)
}

// .Calmcar.drivers.TSR.Signal_car_760.WippersType wippers = 7;
inline void Signal_car_760::clear_wippers() {
  wippers_ = 0;
}
inline ::Calmcar::drivers::TSR::Signal_car_760_WippersType Signal_car_760::wippers() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.wippers)
  return static_cast< ::Calmcar::drivers::TSR::Signal_car_760_WippersType >(wippers_);
}
inline void Signal_car_760::set_wippers(::Calmcar::drivers::TSR::Signal_car_760_WippersType value) {
  
  wippers_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.wippers)
}

// .Calmcar.drivers.TSR.Signal_car_760.LowbeamType lowbeam = 8;
inline void Signal_car_760::clear_lowbeam() {
  lowbeam_ = 0;
}
inline ::Calmcar::drivers::TSR::Signal_car_760_LowbeamType Signal_car_760::lowbeam() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.lowbeam)
  return static_cast< ::Calmcar::drivers::TSR::Signal_car_760_LowbeamType >(lowbeam_);
}
inline void Signal_car_760::set_lowbeam(::Calmcar::drivers::TSR::Signal_car_760_LowbeamType value) {
  
  lowbeam_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.lowbeam)
}

// .Calmcar.drivers.TSR.Signal_car_760.HighbeamType highbeam = 9;
inline void Signal_car_760::clear_highbeam() {
  highbeam_ = 0;
}
inline ::Calmcar::drivers::TSR::Signal_car_760_HighbeamType Signal_car_760::highbeam() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.highbeam)
  return static_cast< ::Calmcar::drivers::TSR::Signal_car_760_HighbeamType >(highbeam_);
}
inline void Signal_car_760::set_highbeam(::Calmcar::drivers::TSR::Signal_car_760_HighbeamType value) {
  
  highbeam_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.highbeam)
}

// int32 reserved1 = 10;
inline void Signal_car_760::clear_reserved1() {
  reserved1_ = 0;
}
inline ::google::protobuf::int32 Signal_car_760::reserved1() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.reserved1)
  return reserved1_;
}
inline void Signal_car_760::set_reserved1(::google::protobuf::int32 value) {
  
  reserved1_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.reserved1)
}

// int32 reserved2 = 11;
inline void Signal_car_760::clear_reserved2() {
  reserved2_ = 0;
}
inline ::google::protobuf::int32 Signal_car_760::reserved2() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.reserved2)
  return reserved2_;
}
inline void Signal_car_760::set_reserved2(::google::protobuf::int32 value) {
  
  reserved2_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.reserved2)
}

// int32 reserved3 = 12;
inline void Signal_car_760::clear_reserved3() {
  reserved3_ = 0;
}
inline ::google::protobuf::int32 Signal_car_760::reserved3() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.reserved3)
  return reserved3_;
}
inline void Signal_car_760::set_reserved3(::google::protobuf::int32 value) {
  
  reserved3_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.reserved3)
}

// int32 speed = 13;
inline void Signal_car_760::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 Signal_car_760::speed() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.speed)
  return speed_;
}
inline void Signal_car_760::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.speed)
}

// int32 reserved = 14;
inline void Signal_car_760::clear_reserved() {
  reserved_ = 0;
}
inline ::google::protobuf::int32 Signal_car_760::reserved() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Signal_car_760.reserved)
  return reserved_;
}
inline void Signal_car_760::set_reserved(::google::protobuf::int32 value) {
  
  reserved_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Signal_car_760.reserved)
}

// -------------------------------------------------------------------

// Aws_700

// int32 reserved1 = 1;
inline void Aws_700::clear_reserved1() {
  reserved1_ = 0;
}
inline ::google::protobuf::int32 Aws_700::reserved1() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.reserved1)
  return reserved1_;
}
inline void Aws_700::set_reserved1(::google::protobuf::int32 value) {
  
  reserved1_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.reserved1)
}

// int32 reserved2 = 2;
inline void Aws_700::clear_reserved2() {
  reserved2_ = 0;
}
inline ::google::protobuf::int32 Aws_700::reserved2() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.reserved2)
  return reserved2_;
}
inline void Aws_700::set_reserved2(::google::protobuf::int32 value) {
  
  reserved2_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.reserved2)
}

// int32 reserved3 = 3;
inline void Aws_700::clear_reserved3() {
  reserved3_ = 0;
}
inline ::google::protobuf::int32 Aws_700::reserved3() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.reserved3)
  return reserved3_;
}
inline void Aws_700::set_reserved3(::google::protobuf::int32 value) {
  
  reserved3_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.reserved3)
}

// bool reserved4 = 4;
inline void Aws_700::clear_reserved4() {
  reserved4_ = false;
}
inline bool Aws_700::reserved4() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.reserved4)
  return reserved4_;
}
inline void Aws_700::set_reserved4(bool value) {
  
  reserved4_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.reserved4)
}

// int32 reserved5 = 5;
inline void Aws_700::clear_reserved5() {
  reserved5_ = 0;
}
inline ::google::protobuf::int32 Aws_700::reserved5() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.reserved5)
  return reserved5_;
}
inline void Aws_700::set_reserved5(::google::protobuf::int32 value) {
  
  reserved5_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.reserved5)
}

// int32 reserved6 = 6;
inline void Aws_700::clear_reserved6() {
  reserved6_ = 0;
}
inline ::google::protobuf::int32 Aws_700::reserved6() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.reserved6)
  return reserved6_;
}
inline void Aws_700::set_reserved6(::google::protobuf::int32 value) {
  
  reserved6_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.reserved6)
}

// .Calmcar.drivers.TSR.Aws_700.Tsr_warning_levelType tsr_warning_level = 7;
inline void Aws_700::clear_tsr_warning_level() {
  tsr_warning_level_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Tsr_warning_levelType Aws_700::tsr_warning_level() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.tsr_warning_level)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Tsr_warning_levelType >(tsr_warning_level_);
}
inline void Aws_700::set_tsr_warning_level(::Calmcar::drivers::TSR::Aws_700_Tsr_warning_levelType value) {
  
  tsr_warning_level_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.tsr_warning_level)
}

// .Calmcar.drivers.TSR.Aws_700.Tsr_enabbledType tsr_enabbled = 8;
inline void Aws_700::clear_tsr_enabbled() {
  tsr_enabbled_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Tsr_enabbledType Aws_700::tsr_enabbled() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.tsr_enabbled)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Tsr_enabbledType >(tsr_enabbled_);
}
inline void Aws_700::set_tsr_enabbled(::Calmcar::drivers::TSR::Aws_700_Tsr_enabbledType value) {
  
  tsr_enabbled_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.tsr_enabbled)
}

// .Calmcar.drivers.TSR.Aws_700.Rainy_hw_enabledType rainy_hw_enabled = 9;
inline void Aws_700::clear_rainy_hw_enabled() {
  rainy_hw_enabled_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Rainy_hw_enabledType Aws_700::rainy_hw_enabled() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.rainy_hw_enabled)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Rainy_hw_enabledType >(rainy_hw_enabled_);
}
inline void Aws_700::set_rainy_hw_enabled(::Calmcar::drivers::TSR::Aws_700_Rainy_hw_enabledType value) {
  
  rainy_hw_enabled_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.rainy_hw_enabled)
}

// .Calmcar.drivers.TSR.Aws_700.Rain_hwType rain_hw = 10;
inline void Aws_700::clear_rain_hw() {
  rain_hw_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Rain_hwType Aws_700::rain_hw() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.rain_hw)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Rain_hwType >(rain_hw_);
}
inline void Aws_700::set_rain_hw(::Calmcar::drivers::TSR::Aws_700_Rain_hwType value) {
  
  rain_hw_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.rain_hw)
}

// .Calmcar.drivers.TSR.Aws_700.Pcw_peddzType pcw_peddz = 11;
inline void Aws_700::clear_pcw_peddz() {
  pcw_peddz_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Pcw_peddzType Aws_700::pcw_peddz() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.pcw_peddz)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Pcw_peddzType >(pcw_peddz_);
}
inline void Aws_700::set_pcw_peddz(::Calmcar::drivers::TSR::Aws_700_Pcw_peddzType value) {
  
  pcw_peddz_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.pcw_peddz)
}

// .Calmcar.drivers.TSR.Aws_700.Hw_warning_levelType hw_warning_level = 12;
inline void Aws_700::clear_hw_warning_level() {
  hw_warning_level_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Hw_warning_levelType Aws_700::hw_warning_level() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.hw_warning_level)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Hw_warning_levelType >(hw_warning_level_);
}
inline void Aws_700::set_hw_warning_level(::Calmcar::drivers::TSR::Aws_700_Hw_warning_levelType value) {
  
  hw_warning_level_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.hw_warning_level)
}

// .Calmcar.drivers.TSR.Aws_700.Hw_repeatable_enabledType hw_repeatable_enabled = 13;
inline void Aws_700::clear_hw_repeatable_enabled() {
  hw_repeatable_enabled_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Hw_repeatable_enabledType Aws_700::hw_repeatable_enabled() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.hw_repeatable_enabled)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Hw_repeatable_enabledType >(hw_repeatable_enabled_);
}
inline void Aws_700::set_hw_repeatable_enabled(::Calmcar::drivers::TSR::Aws_700_Hw_repeatable_enabledType value) {
  
  hw_repeatable_enabled_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.hw_repeatable_enabled)
}

// .Calmcar.drivers.TSR.Aws_700.General_pedestrianType general_pedestrian = 14;
inline void Aws_700::clear_general_pedestrian() {
  general_pedestrian_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_General_pedestrianType Aws_700::general_pedestrian() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.general_pedestrian)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_General_pedestrianType >(general_pedestrian_);
}
inline void Aws_700::set_general_pedestrian(::Calmcar::drivers::TSR::Aws_700_General_pedestrianType value) {
  
  general_pedestrian_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.general_pedestrian)
}

// .Calmcar.drivers.TSR.Aws_700.Blinker_reminder_enabledType blinker_reminder_enabled = 15;
inline void Aws_700::clear_blinker_reminder_enabled() {
  blinker_reminder_enabled_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Blinker_reminder_enabledType Aws_700::blinker_reminder_enabled() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.blinker_reminder_enabled)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Blinker_reminder_enabledType >(blinker_reminder_enabled_);
}
inline void Aws_700::set_blinker_reminder_enabled(::Calmcar::drivers::TSR::Aws_700_Blinker_reminder_enabledType value) {
  
  blinker_reminder_enabled_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.blinker_reminder_enabled)
}

// .Calmcar.drivers.TSR.Aws_700.Blinker_reminderType blinker_reminder = 16;
inline void Aws_700::clear_blinker_reminder() {
  blinker_reminder_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Blinker_reminderType Aws_700::blinker_reminder() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.blinker_reminder)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Blinker_reminderType >(blinker_reminder_);
}
inline void Aws_700::set_blinker_reminder(::Calmcar::drivers::TSR::Aws_700_Blinker_reminderType value) {
  
  blinker_reminder_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.blinker_reminder)
}

// .Calmcar.drivers.TSR.Aws_700.Fcw_onType fcw_on = 17;
inline void Aws_700::clear_fcw_on() {
  fcw_on_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Fcw_onType Aws_700::fcw_on() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.fcw_on)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Fcw_onType >(fcw_on_);
}
inline void Aws_700::set_fcw_on(::Calmcar::drivers::TSR::Aws_700_Fcw_onType value) {
  
  fcw_on_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.fcw_on)
}

// .Calmcar.drivers.TSR.Aws_700.Rldw_onType rldw_on = 18;
inline void Aws_700::clear_rldw_on() {
  rldw_on_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Rldw_onType Aws_700::rldw_on() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.rldw_on)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Rldw_onType >(rldw_on_);
}
inline void Aws_700::set_rldw_on(::Calmcar::drivers::TSR::Aws_700_Rldw_onType value) {
  
  rldw_on_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.rldw_on)
}

// .Calmcar.drivers.TSR.Aws_700.Lldw_onType lldw_on = 19;
inline void Aws_700::clear_lldw_on() {
  lldw_on_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Lldw_onType Aws_700::lldw_on() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.lldw_on)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Lldw_onType >(lldw_on_);
}
inline void Aws_700::set_lldw_on(::Calmcar::drivers::TSR::Aws_700_Lldw_onType value) {
  
  lldw_on_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.lldw_on)
}

// .Calmcar.drivers.TSR.Aws_700.Ldw_offType ldw_off = 20;
inline void Aws_700::clear_ldw_off() {
  ldw_off_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Ldw_offType Aws_700::ldw_off() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.ldw_off)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Ldw_offType >(ldw_off_);
}
inline void Aws_700::set_ldw_off(::Calmcar::drivers::TSR::Aws_700_Ldw_offType value) {
  
  ldw_off_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.ldw_off)
}

// .Calmcar.drivers.TSR.Aws_700.MaintenanceType maintenance = 21;
inline void Aws_700::clear_maintenance() {
  maintenance_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_MaintenanceType Aws_700::maintenance() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.maintenance)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_MaintenanceType >(maintenance_);
}
inline void Aws_700::set_maintenance(::Calmcar::drivers::TSR::Aws_700_MaintenanceType value) {
  
  maintenance_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.maintenance)
}

// .Calmcar.drivers.TSR.Aws_700.Fail_safeType fail_safe = 22;
inline void Aws_700::clear_fail_safe() {
  fail_safe_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Fail_safeType Aws_700::fail_safe() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.fail_safe)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Fail_safeType >(fail_safe_);
}
inline void Aws_700::set_fail_safe(::Calmcar::drivers::TSR::Aws_700_Fail_safeType value) {
  
  fail_safe_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.fail_safe)
}

// int32 error_code = 23;
inline void Aws_700::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 Aws_700::error_code() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.error_code)
  return error_code_;
}
inline void Aws_700::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.error_code)
}

// .Calmcar.drivers.TSR.Aws_700.Error_activeType error_active = 24;
inline void Aws_700::clear_error_active() {
  error_active_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Error_activeType Aws_700::error_active() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.error_active)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Error_activeType >(error_active_);
}
inline void Aws_700::set_error_active(::Calmcar::drivers::TSR::Aws_700_Error_activeType value) {
  
  error_active_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.error_active)
}

// int32 headway_measurement = 25;
inline void Aws_700::clear_headway_measurement() {
  headway_measurement_ = 0;
}
inline ::google::protobuf::int32 Aws_700::headway_measurement() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.headway_measurement)
  return headway_measurement_;
}
inline void Aws_700::set_headway_measurement(::google::protobuf::int32 value) {
  
  headway_measurement_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.headway_measurement)
}

// .Calmcar.drivers.TSR.Aws_700.Headway_validType headway_valid = 26;
inline void Aws_700::clear_headway_valid() {
  headway_valid_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Headway_validType Aws_700::headway_valid() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.headway_valid)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Headway_validType >(headway_valid_);
}
inline void Aws_700::set_headway_valid(::Calmcar::drivers::TSR::Aws_700_Headway_validType value) {
  
  headway_valid_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.headway_valid)
}

// .Calmcar.drivers.TSR.Aws_700.Fla_armedType fla_armed = 27;
inline void Aws_700::clear_fla_armed() {
  fla_armed_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Fla_armedType Aws_700::fla_armed() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.fla_armed)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Fla_armedType >(fla_armed_);
}
inline void Aws_700::set_fla_armed(::Calmcar::drivers::TSR::Aws_700_Fla_armedType value) {
  
  fla_armed_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.fla_armed)
}

// .Calmcar.drivers.TSR.Aws_700.Hi_low_beamcontrolType hi_low_beamcontrol = 28;
inline void Aws_700::clear_hi_low_beamcontrol() {
  hi_low_beamcontrol_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Hi_low_beamcontrolType Aws_700::hi_low_beamcontrol() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.hi_low_beamcontrol)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Hi_low_beamcontrolType >(hi_low_beamcontrol_);
}
inline void Aws_700::set_hi_low_beamcontrol(::Calmcar::drivers::TSR::Aws_700_Hi_low_beamcontrolType value) {
  
  hi_low_beamcontrol_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.hi_low_beamcontrol)
}

// .Calmcar.drivers.TSR.Aws_700.Zero_speedType zero_speed = 29;
inline void Aws_700::clear_zero_speed() {
  zero_speed_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Zero_speedType Aws_700::zero_speed() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.zero_speed)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Zero_speedType >(zero_speed_);
}
inline void Aws_700::set_zero_speed(::Calmcar::drivers::TSR::Aws_700_Zero_speedType value) {
  
  zero_speed_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.zero_speed)
}

// .Calmcar.drivers.TSR.Aws_700.Time_indicatorType time_indicator = 30;
inline void Aws_700::clear_time_indicator() {
  time_indicator_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Time_indicatorType Aws_700::time_indicator() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.time_indicator)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Time_indicatorType >(time_indicator_);
}
inline void Aws_700::set_time_indicator(::Calmcar::drivers::TSR::Aws_700_Time_indicatorType value) {
  
  time_indicator_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.time_indicator)
}

// .Calmcar.drivers.TSR.Aws_700.Sound_typeType sound_type = 31;
inline void Aws_700::clear_sound_type() {
  sound_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Aws_700_Sound_typeType Aws_700::sound_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Aws_700.sound_type)
  return static_cast< ::Calmcar::drivers::TSR::Aws_700_Sound_typeType >(sound_type_);
}
inline void Aws_700::set_sound_type(::Calmcar::drivers::TSR::Aws_700_Sound_typeType value) {
  
  sound_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Aws_700.sound_type)
}

// -------------------------------------------------------------------

// Tsr_detail_7_726

// .Calmcar.drivers.TSR.Tsr_detail_7_726.Vision_only_sign_typeType vision_only_sign_type = 1;
inline void Tsr_detail_7_726::clear_vision_only_sign_type() {
  vision_only_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_7_726_Vision_only_sign_typeType Tsr_detail_7_726::vision_only_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_7_726.vision_only_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_7_726_Vision_only_sign_typeType >(vision_only_sign_type_);
}
inline void Tsr_detail_7_726::set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_7_726_Vision_only_sign_typeType value) {
  
  vision_only_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_7_726.vision_only_sign_type)
}

// .Calmcar.drivers.TSR.Tsr_detail_7_726.Supplementary_sign_typeType supplementary_sign_type = 2;
inline void Tsr_detail_7_726::clear_supplementary_sign_type() {
  supplementary_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_7_726_Supplementary_sign_typeType Tsr_detail_7_726::supplementary_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_7_726.supplementary_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_7_726_Supplementary_sign_typeType >(supplementary_sign_type_);
}
inline void Tsr_detail_7_726::set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_7_726_Supplementary_sign_typeType value) {
  
  supplementary_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_7_726.supplementary_sign_type)
}

// double sign_pos_z = 3;
inline void Tsr_detail_7_726::clear_sign_pos_z() {
  sign_pos_z_ = 0;
}
inline double Tsr_detail_7_726::sign_pos_z() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_7_726.sign_pos_z)
  return sign_pos_z_;
}
inline void Tsr_detail_7_726::set_sign_pos_z(double value) {
  
  sign_pos_z_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_7_726.sign_pos_z)
}

// double sign_pos_y = 4;
inline void Tsr_detail_7_726::clear_sign_pos_y() {
  sign_pos_y_ = 0;
}
inline double Tsr_detail_7_726::sign_pos_y() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_7_726.sign_pos_y)
  return sign_pos_y_;
}
inline void Tsr_detail_7_726::set_sign_pos_y(double value) {
  
  sign_pos_y_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_7_726.sign_pos_y)
}

// double sign_pos_x = 5;
inline void Tsr_detail_7_726::clear_sign_pos_x() {
  sign_pos_x_ = 0;
}
inline double Tsr_detail_7_726::sign_pos_x() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_7_726.sign_pos_x)
  return sign_pos_x_;
}
inline void Tsr_detail_7_726::set_sign_pos_x(double value) {
  
  sign_pos_x_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_7_726.sign_pos_x)
}

// .Calmcar.drivers.TSR.Tsr_detail_7_726.Filter_typeType filter_type = 6;
inline void Tsr_detail_7_726::clear_filter_type() {
  filter_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_7_726_Filter_typeType Tsr_detail_7_726::filter_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_7_726.filter_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_7_726_Filter_typeType >(filter_type_);
}
inline void Tsr_detail_7_726::set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_7_726_Filter_typeType value) {
  
  filter_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_7_726.filter_type)
}

// -------------------------------------------------------------------

// Vision_only_tsr_727

// .Calmcar.drivers.TSR.Vision_only_tsr_727.Sign_type_4Type sign_type_4 = 1;
inline void Vision_only_tsr_727::clear_sign_type_4() {
  sign_type_4_ = 0;
}
inline ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_4Type Vision_only_tsr_727::sign_type_4() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Vision_only_tsr_727.sign_type_4)
  return static_cast< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_4Type >(sign_type_4_);
}
inline void Vision_only_tsr_727::set_sign_type_4(::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_4Type value) {
  
  sign_type_4_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Vision_only_tsr_727.sign_type_4)
}

// .Calmcar.drivers.TSR.Vision_only_tsr_727.Sign_type_3Type sign_type_3 = 2;
inline void Vision_only_tsr_727::clear_sign_type_3() {
  sign_type_3_ = 0;
}
inline ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_3Type Vision_only_tsr_727::sign_type_3() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Vision_only_tsr_727.sign_type_3)
  return static_cast< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_3Type >(sign_type_3_);
}
inline void Vision_only_tsr_727::set_sign_type_3(::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_3Type value) {
  
  sign_type_3_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Vision_only_tsr_727.sign_type_3)
}

// .Calmcar.drivers.TSR.Vision_only_tsr_727.Sign_type_2Type sign_type_2 = 3;
inline void Vision_only_tsr_727::clear_sign_type_2() {
  sign_type_2_ = 0;
}
inline ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_2Type Vision_only_tsr_727::sign_type_2() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Vision_only_tsr_727.sign_type_2)
  return static_cast< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_2Type >(sign_type_2_);
}
inline void Vision_only_tsr_727::set_sign_type_2(::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_2Type value) {
  
  sign_type_2_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Vision_only_tsr_727.sign_type_2)
}

// .Calmcar.drivers.TSR.Vision_only_tsr_727.Sign_type_1Type sign_type_1 = 4;
inline void Vision_only_tsr_727::clear_sign_type_1() {
  sign_type_1_ = 0;
}
inline ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_1Type Vision_only_tsr_727::sign_type_1() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Vision_only_tsr_727.sign_type_1)
  return static_cast< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_1Type >(sign_type_1_);
}
inline void Vision_only_tsr_727::set_sign_type_1(::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_1Type value) {
  
  sign_type_1_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Vision_only_tsr_727.sign_type_1)
}

// .Calmcar.drivers.TSR.Vision_only_tsr_727.Supplementary_sign_type_4Type supplementary_sign_type_4 = 5;
inline void Vision_only_tsr_727::clear_supplementary_sign_type_4() {
  supplementary_sign_type_4_ = 0;
}
inline ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_4Type Vision_only_tsr_727::supplementary_sign_type_4() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Vision_only_tsr_727.supplementary_sign_type_4)
  return static_cast< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_4Type >(supplementary_sign_type_4_);
}
inline void Vision_only_tsr_727::set_supplementary_sign_type_4(::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_4Type value) {
  
  supplementary_sign_type_4_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Vision_only_tsr_727.supplementary_sign_type_4)
}

// .Calmcar.drivers.TSR.Vision_only_tsr_727.Supplementary_sign_type_3Type supplementary_sign_type_3 = 6;
inline void Vision_only_tsr_727::clear_supplementary_sign_type_3() {
  supplementary_sign_type_3_ = 0;
}
inline ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_3Type Vision_only_tsr_727::supplementary_sign_type_3() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Vision_only_tsr_727.supplementary_sign_type_3)
  return static_cast< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_3Type >(supplementary_sign_type_3_);
}
inline void Vision_only_tsr_727::set_supplementary_sign_type_3(::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_3Type value) {
  
  supplementary_sign_type_3_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Vision_only_tsr_727.supplementary_sign_type_3)
}

// .Calmcar.drivers.TSR.Vision_only_tsr_727.Supplementary_sign_type_2Type supplementary_sign_type_2 = 7;
inline void Vision_only_tsr_727::clear_supplementary_sign_type_2() {
  supplementary_sign_type_2_ = 0;
}
inline ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_2Type Vision_only_tsr_727::supplementary_sign_type_2() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Vision_only_tsr_727.supplementary_sign_type_2)
  return static_cast< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_2Type >(supplementary_sign_type_2_);
}
inline void Vision_only_tsr_727::set_supplementary_sign_type_2(::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_2Type value) {
  
  supplementary_sign_type_2_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Vision_only_tsr_727.supplementary_sign_type_2)
}

// .Calmcar.drivers.TSR.Vision_only_tsr_727.Supplementary_sign_type_1Type supplementary_sign_type_1 = 8;
inline void Vision_only_tsr_727::clear_supplementary_sign_type_1() {
  supplementary_sign_type_1_ = 0;
}
inline ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_1Type Vision_only_tsr_727::supplementary_sign_type_1() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Vision_only_tsr_727.supplementary_sign_type_1)
  return static_cast< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_1Type >(supplementary_sign_type_1_);
}
inline void Vision_only_tsr_727::set_supplementary_sign_type_1(::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_1Type value) {
  
  supplementary_sign_type_1_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Vision_only_tsr_727.supplementary_sign_type_1)
}

// -------------------------------------------------------------------

// Tsr_detail_5_724

// .Calmcar.drivers.TSR.Tsr_detail_5_724.Vision_only_sign_typeType vision_only_sign_type = 1;
inline void Tsr_detail_5_724::clear_vision_only_sign_type() {
  vision_only_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_5_724_Vision_only_sign_typeType Tsr_detail_5_724::vision_only_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_5_724.vision_only_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_5_724_Vision_only_sign_typeType >(vision_only_sign_type_);
}
inline void Tsr_detail_5_724::set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_5_724_Vision_only_sign_typeType value) {
  
  vision_only_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_5_724.vision_only_sign_type)
}

// .Calmcar.drivers.TSR.Tsr_detail_5_724.Supplementary_sign_typeType supplementary_sign_type = 2;
inline void Tsr_detail_5_724::clear_supplementary_sign_type() {
  supplementary_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_5_724_Supplementary_sign_typeType Tsr_detail_5_724::supplementary_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_5_724.supplementary_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_5_724_Supplementary_sign_typeType >(supplementary_sign_type_);
}
inline void Tsr_detail_5_724::set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_5_724_Supplementary_sign_typeType value) {
  
  supplementary_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_5_724.supplementary_sign_type)
}

// double sign_pos_z = 3;
inline void Tsr_detail_5_724::clear_sign_pos_z() {
  sign_pos_z_ = 0;
}
inline double Tsr_detail_5_724::sign_pos_z() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_5_724.sign_pos_z)
  return sign_pos_z_;
}
inline void Tsr_detail_5_724::set_sign_pos_z(double value) {
  
  sign_pos_z_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_5_724.sign_pos_z)
}

// double sign_pos_y = 4;
inline void Tsr_detail_5_724::clear_sign_pos_y() {
  sign_pos_y_ = 0;
}
inline double Tsr_detail_5_724::sign_pos_y() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_5_724.sign_pos_y)
  return sign_pos_y_;
}
inline void Tsr_detail_5_724::set_sign_pos_y(double value) {
  
  sign_pos_y_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_5_724.sign_pos_y)
}

// double sign_pos_x = 5;
inline void Tsr_detail_5_724::clear_sign_pos_x() {
  sign_pos_x_ = 0;
}
inline double Tsr_detail_5_724::sign_pos_x() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_5_724.sign_pos_x)
  return sign_pos_x_;
}
inline void Tsr_detail_5_724::set_sign_pos_x(double value) {
  
  sign_pos_x_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_5_724.sign_pos_x)
}

// .Calmcar.drivers.TSR.Tsr_detail_5_724.Filter_typeType filter_type = 6;
inline void Tsr_detail_5_724::clear_filter_type() {
  filter_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_5_724_Filter_typeType Tsr_detail_5_724::filter_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_5_724.filter_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_5_724_Filter_typeType >(filter_type_);
}
inline void Tsr_detail_5_724::set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_5_724_Filter_typeType value) {
  
  filter_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_5_724.filter_type)
}

// -------------------------------------------------------------------

// Tsr_detail_6_725

// .Calmcar.drivers.TSR.Tsr_detail_6_725.Vision_only_sign_typeType vision_only_sign_type = 1;
inline void Tsr_detail_6_725::clear_vision_only_sign_type() {
  vision_only_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_6_725_Vision_only_sign_typeType Tsr_detail_6_725::vision_only_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_6_725.vision_only_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_6_725_Vision_only_sign_typeType >(vision_only_sign_type_);
}
inline void Tsr_detail_6_725::set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_6_725_Vision_only_sign_typeType value) {
  
  vision_only_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_6_725.vision_only_sign_type)
}

// .Calmcar.drivers.TSR.Tsr_detail_6_725.Supplementary_sign_typeType supplementary_sign_type = 2;
inline void Tsr_detail_6_725::clear_supplementary_sign_type() {
  supplementary_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_6_725_Supplementary_sign_typeType Tsr_detail_6_725::supplementary_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_6_725.supplementary_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_6_725_Supplementary_sign_typeType >(supplementary_sign_type_);
}
inline void Tsr_detail_6_725::set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_6_725_Supplementary_sign_typeType value) {
  
  supplementary_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_6_725.supplementary_sign_type)
}

// double sign_pos_z = 3;
inline void Tsr_detail_6_725::clear_sign_pos_z() {
  sign_pos_z_ = 0;
}
inline double Tsr_detail_6_725::sign_pos_z() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_6_725.sign_pos_z)
  return sign_pos_z_;
}
inline void Tsr_detail_6_725::set_sign_pos_z(double value) {
  
  sign_pos_z_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_6_725.sign_pos_z)
}

// double sign_pos_y = 4;
inline void Tsr_detail_6_725::clear_sign_pos_y() {
  sign_pos_y_ = 0;
}
inline double Tsr_detail_6_725::sign_pos_y() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_6_725.sign_pos_y)
  return sign_pos_y_;
}
inline void Tsr_detail_6_725::set_sign_pos_y(double value) {
  
  sign_pos_y_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_6_725.sign_pos_y)
}

// double sign_pos_x = 5;
inline void Tsr_detail_6_725::clear_sign_pos_x() {
  sign_pos_x_ = 0;
}
inline double Tsr_detail_6_725::sign_pos_x() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_6_725.sign_pos_x)
  return sign_pos_x_;
}
inline void Tsr_detail_6_725::set_sign_pos_x(double value) {
  
  sign_pos_x_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_6_725.sign_pos_x)
}

// .Calmcar.drivers.TSR.Tsr_detail_6_725.Filter_typeType filter_type = 6;
inline void Tsr_detail_6_725::clear_filter_type() {
  filter_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_6_725_Filter_typeType Tsr_detail_6_725::filter_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_6_725.filter_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_6_725_Filter_typeType >(filter_type_);
}
inline void Tsr_detail_6_725::set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_6_725_Filter_typeType value) {
  
  filter_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_6_725.filter_type)
}

// -------------------------------------------------------------------

// Tsr_detail_3_722

// .Calmcar.drivers.TSR.Tsr_detail_3_722.Vision_only_sign_typeType vision_only_sign_type = 1;
inline void Tsr_detail_3_722::clear_vision_only_sign_type() {
  vision_only_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_3_722_Vision_only_sign_typeType Tsr_detail_3_722::vision_only_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_3_722.vision_only_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_3_722_Vision_only_sign_typeType >(vision_only_sign_type_);
}
inline void Tsr_detail_3_722::set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_3_722_Vision_only_sign_typeType value) {
  
  vision_only_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_3_722.vision_only_sign_type)
}

// .Calmcar.drivers.TSR.Tsr_detail_3_722.Supplementary_sign_typeType supplementary_sign_type = 2;
inline void Tsr_detail_3_722::clear_supplementary_sign_type() {
  supplementary_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_3_722_Supplementary_sign_typeType Tsr_detail_3_722::supplementary_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_3_722.supplementary_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_3_722_Supplementary_sign_typeType >(supplementary_sign_type_);
}
inline void Tsr_detail_3_722::set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_3_722_Supplementary_sign_typeType value) {
  
  supplementary_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_3_722.supplementary_sign_type)
}

// double sign_pos_z = 3;
inline void Tsr_detail_3_722::clear_sign_pos_z() {
  sign_pos_z_ = 0;
}
inline double Tsr_detail_3_722::sign_pos_z() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_3_722.sign_pos_z)
  return sign_pos_z_;
}
inline void Tsr_detail_3_722::set_sign_pos_z(double value) {
  
  sign_pos_z_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_3_722.sign_pos_z)
}

// double sign_pos_y = 4;
inline void Tsr_detail_3_722::clear_sign_pos_y() {
  sign_pos_y_ = 0;
}
inline double Tsr_detail_3_722::sign_pos_y() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_3_722.sign_pos_y)
  return sign_pos_y_;
}
inline void Tsr_detail_3_722::set_sign_pos_y(double value) {
  
  sign_pos_y_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_3_722.sign_pos_y)
}

// double sign_pos_x = 5;
inline void Tsr_detail_3_722::clear_sign_pos_x() {
  sign_pos_x_ = 0;
}
inline double Tsr_detail_3_722::sign_pos_x() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_3_722.sign_pos_x)
  return sign_pos_x_;
}
inline void Tsr_detail_3_722::set_sign_pos_x(double value) {
  
  sign_pos_x_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_3_722.sign_pos_x)
}

// .Calmcar.drivers.TSR.Tsr_detail_3_722.Filter_typeType filter_type = 6;
inline void Tsr_detail_3_722::clear_filter_type() {
  filter_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_3_722_Filter_typeType Tsr_detail_3_722::filter_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_3_722.filter_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_3_722_Filter_typeType >(filter_type_);
}
inline void Tsr_detail_3_722::set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_3_722_Filter_typeType value) {
  
  filter_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_3_722.filter_type)
}

// -------------------------------------------------------------------

// Tsr_detail_4_723

// .Calmcar.drivers.TSR.Tsr_detail_4_723.Vision_only_sign_typeType vision_only_sign_type = 1;
inline void Tsr_detail_4_723::clear_vision_only_sign_type() {
  vision_only_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_4_723_Vision_only_sign_typeType Tsr_detail_4_723::vision_only_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_4_723.vision_only_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_4_723_Vision_only_sign_typeType >(vision_only_sign_type_);
}
inline void Tsr_detail_4_723::set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_4_723_Vision_only_sign_typeType value) {
  
  vision_only_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_4_723.vision_only_sign_type)
}

// .Calmcar.drivers.TSR.Tsr_detail_4_723.Supplementary_sign_typeType supplementary_sign_type = 2;
inline void Tsr_detail_4_723::clear_supplementary_sign_type() {
  supplementary_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_4_723_Supplementary_sign_typeType Tsr_detail_4_723::supplementary_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_4_723.supplementary_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_4_723_Supplementary_sign_typeType >(supplementary_sign_type_);
}
inline void Tsr_detail_4_723::set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_4_723_Supplementary_sign_typeType value) {
  
  supplementary_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_4_723.supplementary_sign_type)
}

// double sign_pos_z = 3;
inline void Tsr_detail_4_723::clear_sign_pos_z() {
  sign_pos_z_ = 0;
}
inline double Tsr_detail_4_723::sign_pos_z() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_4_723.sign_pos_z)
  return sign_pos_z_;
}
inline void Tsr_detail_4_723::set_sign_pos_z(double value) {
  
  sign_pos_z_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_4_723.sign_pos_z)
}

// double sign_pos_y = 4;
inline void Tsr_detail_4_723::clear_sign_pos_y() {
  sign_pos_y_ = 0;
}
inline double Tsr_detail_4_723::sign_pos_y() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_4_723.sign_pos_y)
  return sign_pos_y_;
}
inline void Tsr_detail_4_723::set_sign_pos_y(double value) {
  
  sign_pos_y_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_4_723.sign_pos_y)
}

// double sign_pos_x = 5;
inline void Tsr_detail_4_723::clear_sign_pos_x() {
  sign_pos_x_ = 0;
}
inline double Tsr_detail_4_723::sign_pos_x() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_4_723.sign_pos_x)
  return sign_pos_x_;
}
inline void Tsr_detail_4_723::set_sign_pos_x(double value) {
  
  sign_pos_x_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_4_723.sign_pos_x)
}

// .Calmcar.drivers.TSR.Tsr_detail_4_723.Filter_typeType filter_type = 6;
inline void Tsr_detail_4_723::clear_filter_type() {
  filter_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_4_723_Filter_typeType Tsr_detail_4_723::filter_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_4_723.filter_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_4_723_Filter_typeType >(filter_type_);
}
inline void Tsr_detail_4_723::set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_4_723_Filter_typeType value) {
  
  filter_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_4_723.filter_type)
}

// -------------------------------------------------------------------

// Tsr_detail_1_720

// .Calmcar.drivers.TSR.Tsr_detail_1_720.Vision_only_sign_typeType vision_only_sign_type = 1;
inline void Tsr_detail_1_720::clear_vision_only_sign_type() {
  vision_only_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_1_720_Vision_only_sign_typeType Tsr_detail_1_720::vision_only_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_1_720.vision_only_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_1_720_Vision_only_sign_typeType >(vision_only_sign_type_);
}
inline void Tsr_detail_1_720::set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_1_720_Vision_only_sign_typeType value) {
  
  vision_only_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_1_720.vision_only_sign_type)
}

// .Calmcar.drivers.TSR.Tsr_detail_1_720.Supplementary_sign_typeType supplementary_sign_type = 2;
inline void Tsr_detail_1_720::clear_supplementary_sign_type() {
  supplementary_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_1_720_Supplementary_sign_typeType Tsr_detail_1_720::supplementary_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_1_720.supplementary_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_1_720_Supplementary_sign_typeType >(supplementary_sign_type_);
}
inline void Tsr_detail_1_720::set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_1_720_Supplementary_sign_typeType value) {
  
  supplementary_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_1_720.supplementary_sign_type)
}

// double sign_pos_z = 3;
inline void Tsr_detail_1_720::clear_sign_pos_z() {
  sign_pos_z_ = 0;
}
inline double Tsr_detail_1_720::sign_pos_z() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_1_720.sign_pos_z)
  return sign_pos_z_;
}
inline void Tsr_detail_1_720::set_sign_pos_z(double value) {
  
  sign_pos_z_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_1_720.sign_pos_z)
}

// double sign_pos_y = 4;
inline void Tsr_detail_1_720::clear_sign_pos_y() {
  sign_pos_y_ = 0;
}
inline double Tsr_detail_1_720::sign_pos_y() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_1_720.sign_pos_y)
  return sign_pos_y_;
}
inline void Tsr_detail_1_720::set_sign_pos_y(double value) {
  
  sign_pos_y_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_1_720.sign_pos_y)
}

// double sign_pos_x = 5;
inline void Tsr_detail_1_720::clear_sign_pos_x() {
  sign_pos_x_ = 0;
}
inline double Tsr_detail_1_720::sign_pos_x() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_1_720.sign_pos_x)
  return sign_pos_x_;
}
inline void Tsr_detail_1_720::set_sign_pos_x(double value) {
  
  sign_pos_x_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_1_720.sign_pos_x)
}

// .Calmcar.drivers.TSR.Tsr_detail_1_720.Filter_typeType filter_type = 6;
inline void Tsr_detail_1_720::clear_filter_type() {
  filter_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_1_720_Filter_typeType Tsr_detail_1_720::filter_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_1_720.filter_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_1_720_Filter_typeType >(filter_type_);
}
inline void Tsr_detail_1_720::set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_1_720_Filter_typeType value) {
  
  filter_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_1_720.filter_type)
}

// -------------------------------------------------------------------

// Tsr_detail_2_721

// .Calmcar.drivers.TSR.Tsr_detail_2_721.Vision_only_sign_typeType vision_only_sign_type = 1;
inline void Tsr_detail_2_721::clear_vision_only_sign_type() {
  vision_only_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_2_721_Vision_only_sign_typeType Tsr_detail_2_721::vision_only_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_2_721.vision_only_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_2_721_Vision_only_sign_typeType >(vision_only_sign_type_);
}
inline void Tsr_detail_2_721::set_vision_only_sign_type(::Calmcar::drivers::TSR::Tsr_detail_2_721_Vision_only_sign_typeType value) {
  
  vision_only_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_2_721.vision_only_sign_type)
}

// .Calmcar.drivers.TSR.Tsr_detail_2_721.Supplementary_sign_typeType supplementary_sign_type = 2;
inline void Tsr_detail_2_721::clear_supplementary_sign_type() {
  supplementary_sign_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_2_721_Supplementary_sign_typeType Tsr_detail_2_721::supplementary_sign_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_2_721.supplementary_sign_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_2_721_Supplementary_sign_typeType >(supplementary_sign_type_);
}
inline void Tsr_detail_2_721::set_supplementary_sign_type(::Calmcar::drivers::TSR::Tsr_detail_2_721_Supplementary_sign_typeType value) {
  
  supplementary_sign_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_2_721.supplementary_sign_type)
}

// double sign_pos_z = 3;
inline void Tsr_detail_2_721::clear_sign_pos_z() {
  sign_pos_z_ = 0;
}
inline double Tsr_detail_2_721::sign_pos_z() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_2_721.sign_pos_z)
  return sign_pos_z_;
}
inline void Tsr_detail_2_721::set_sign_pos_z(double value) {
  
  sign_pos_z_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_2_721.sign_pos_z)
}

// double sign_pos_y = 4;
inline void Tsr_detail_2_721::clear_sign_pos_y() {
  sign_pos_y_ = 0;
}
inline double Tsr_detail_2_721::sign_pos_y() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_2_721.sign_pos_y)
  return sign_pos_y_;
}
inline void Tsr_detail_2_721::set_sign_pos_y(double value) {
  
  sign_pos_y_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_2_721.sign_pos_y)
}

// double sign_pos_x = 5;
inline void Tsr_detail_2_721::clear_sign_pos_x() {
  sign_pos_x_ = 0;
}
inline double Tsr_detail_2_721::sign_pos_x() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_2_721.sign_pos_x)
  return sign_pos_x_;
}
inline void Tsr_detail_2_721::set_sign_pos_x(double value) {
  
  sign_pos_x_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_2_721.sign_pos_x)
}

// .Calmcar.drivers.TSR.Tsr_detail_2_721.Filter_typeType filter_type = 6;
inline void Tsr_detail_2_721::clear_filter_type() {
  filter_type_ = 0;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_2_721_Filter_typeType Tsr_detail_2_721::filter_type() const {
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr_detail_2_721.filter_type)
  return static_cast< ::Calmcar::drivers::TSR::Tsr_detail_2_721_Filter_typeType >(filter_type_);
}
inline void Tsr_detail_2_721::set_filter_type(::Calmcar::drivers::TSR::Tsr_detail_2_721_Filter_typeType value) {
  
  filter_type_ = value;
  // @@protoc_insertion_point(field_set:Calmcar.drivers.TSR.Tsr_detail_2_721.filter_type)
}

// -------------------------------------------------------------------

// Tsr

// .Calmcar.common.Header header = 1;
inline bool Tsr::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::Calmcar::common::Header& Tsr::_internal_header() const {
  return *header_;
}
inline const ::Calmcar::common::Header& Tsr::header() const {
  const ::Calmcar::common::Header* p = header_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.header)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::common::Header*>(
      &::Calmcar::common::_Header_default_instance_);
}
inline ::Calmcar::common::Header* Tsr::release_header() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.header)
  
  ::Calmcar::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::Calmcar::common::Header* Tsr::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::common::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.header)
  return header_;
}
inline void Tsr::set_allocated_header(::Calmcar::common::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.header)
}

// .Calmcar.drivers.TSR.Aftermarket_ext_669 aftermarket_ext_669 = 2;
inline bool Tsr::has_aftermarket_ext_669() const {
  return this != internal_default_instance() && aftermarket_ext_669_ != NULL;
}
inline void Tsr::clear_aftermarket_ext_669() {
  if (GetArenaNoVirtual() == NULL && aftermarket_ext_669_ != NULL) {
    delete aftermarket_ext_669_;
  }
  aftermarket_ext_669_ = NULL;
}
inline const ::Calmcar::drivers::TSR::Aftermarket_ext_669& Tsr::_internal_aftermarket_ext_669() const {
  return *aftermarket_ext_669_;
}
inline const ::Calmcar::drivers::TSR::Aftermarket_ext_669& Tsr::aftermarket_ext_669() const {
  const ::Calmcar::drivers::TSR::Aftermarket_ext_669* p = aftermarket_ext_669_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.aftermarket_ext_669)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::TSR::Aftermarket_ext_669*>(
      &::Calmcar::drivers::TSR::_Aftermarket_ext_669_default_instance_);
}
inline ::Calmcar::drivers::TSR::Aftermarket_ext_669* Tsr::release_aftermarket_ext_669() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.aftermarket_ext_669)
  
  ::Calmcar::drivers::TSR::Aftermarket_ext_669* temp = aftermarket_ext_669_;
  aftermarket_ext_669_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::TSR::Aftermarket_ext_669* Tsr::mutable_aftermarket_ext_669() {
  
  if (aftermarket_ext_669_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::TSR::Aftermarket_ext_669>(GetArenaNoVirtual());
    aftermarket_ext_669_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.aftermarket_ext_669)
  return aftermarket_ext_669_;
}
inline void Tsr::set_allocated_aftermarket_ext_669(::Calmcar::drivers::TSR::Aftermarket_ext_669* aftermarket_ext_669) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete aftermarket_ext_669_;
  }
  if (aftermarket_ext_669) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      aftermarket_ext_669 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aftermarket_ext_669, submessage_arena);
    }
    
  } else {
    
  }
  aftermarket_ext_669_ = aftermarket_ext_669;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.aftermarket_ext_669)
}

// .Calmcar.drivers.TSR.Signal_car_760 signal_car_760 = 3;
inline bool Tsr::has_signal_car_760() const {
  return this != internal_default_instance() && signal_car_760_ != NULL;
}
inline void Tsr::clear_signal_car_760() {
  if (GetArenaNoVirtual() == NULL && signal_car_760_ != NULL) {
    delete signal_car_760_;
  }
  signal_car_760_ = NULL;
}
inline const ::Calmcar::drivers::TSR::Signal_car_760& Tsr::_internal_signal_car_760() const {
  return *signal_car_760_;
}
inline const ::Calmcar::drivers::TSR::Signal_car_760& Tsr::signal_car_760() const {
  const ::Calmcar::drivers::TSR::Signal_car_760* p = signal_car_760_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.signal_car_760)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::TSR::Signal_car_760*>(
      &::Calmcar::drivers::TSR::_Signal_car_760_default_instance_);
}
inline ::Calmcar::drivers::TSR::Signal_car_760* Tsr::release_signal_car_760() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.signal_car_760)
  
  ::Calmcar::drivers::TSR::Signal_car_760* temp = signal_car_760_;
  signal_car_760_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::TSR::Signal_car_760* Tsr::mutable_signal_car_760() {
  
  if (signal_car_760_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::TSR::Signal_car_760>(GetArenaNoVirtual());
    signal_car_760_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.signal_car_760)
  return signal_car_760_;
}
inline void Tsr::set_allocated_signal_car_760(::Calmcar::drivers::TSR::Signal_car_760* signal_car_760) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete signal_car_760_;
  }
  if (signal_car_760) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      signal_car_760 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, signal_car_760, submessage_arena);
    }
    
  } else {
    
  }
  signal_car_760_ = signal_car_760;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.signal_car_760)
}

// .Calmcar.drivers.TSR.Aws_700 aws_700 = 4;
inline bool Tsr::has_aws_700() const {
  return this != internal_default_instance() && aws_700_ != NULL;
}
inline void Tsr::clear_aws_700() {
  if (GetArenaNoVirtual() == NULL && aws_700_ != NULL) {
    delete aws_700_;
  }
  aws_700_ = NULL;
}
inline const ::Calmcar::drivers::TSR::Aws_700& Tsr::_internal_aws_700() const {
  return *aws_700_;
}
inline const ::Calmcar::drivers::TSR::Aws_700& Tsr::aws_700() const {
  const ::Calmcar::drivers::TSR::Aws_700* p = aws_700_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.aws_700)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::TSR::Aws_700*>(
      &::Calmcar::drivers::TSR::_Aws_700_default_instance_);
}
inline ::Calmcar::drivers::TSR::Aws_700* Tsr::release_aws_700() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.aws_700)
  
  ::Calmcar::drivers::TSR::Aws_700* temp = aws_700_;
  aws_700_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::TSR::Aws_700* Tsr::mutable_aws_700() {
  
  if (aws_700_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::TSR::Aws_700>(GetArenaNoVirtual());
    aws_700_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.aws_700)
  return aws_700_;
}
inline void Tsr::set_allocated_aws_700(::Calmcar::drivers::TSR::Aws_700* aws_700) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete aws_700_;
  }
  if (aws_700) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      aws_700 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aws_700, submessage_arena);
    }
    
  } else {
    
  }
  aws_700_ = aws_700;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.aws_700)
}

// .Calmcar.drivers.TSR.Tsr_detail_7_726 tsr_detail_7_726 = 5;
inline bool Tsr::has_tsr_detail_7_726() const {
  return this != internal_default_instance() && tsr_detail_7_726_ != NULL;
}
inline void Tsr::clear_tsr_detail_7_726() {
  if (GetArenaNoVirtual() == NULL && tsr_detail_7_726_ != NULL) {
    delete tsr_detail_7_726_;
  }
  tsr_detail_7_726_ = NULL;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_7_726& Tsr::_internal_tsr_detail_7_726() const {
  return *tsr_detail_7_726_;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_7_726& Tsr::tsr_detail_7_726() const {
  const ::Calmcar::drivers::TSR::Tsr_detail_7_726* p = tsr_detail_7_726_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.tsr_detail_7_726)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::TSR::Tsr_detail_7_726*>(
      &::Calmcar::drivers::TSR::_Tsr_detail_7_726_default_instance_);
}
inline ::Calmcar::drivers::TSR::Tsr_detail_7_726* Tsr::release_tsr_detail_7_726() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.tsr_detail_7_726)
  
  ::Calmcar::drivers::TSR::Tsr_detail_7_726* temp = tsr_detail_7_726_;
  tsr_detail_7_726_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_7_726* Tsr::mutable_tsr_detail_7_726() {
  
  if (tsr_detail_7_726_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_7_726>(GetArenaNoVirtual());
    tsr_detail_7_726_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.tsr_detail_7_726)
  return tsr_detail_7_726_;
}
inline void Tsr::set_allocated_tsr_detail_7_726(::Calmcar::drivers::TSR::Tsr_detail_7_726* tsr_detail_7_726) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tsr_detail_7_726_;
  }
  if (tsr_detail_7_726) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tsr_detail_7_726 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tsr_detail_7_726, submessage_arena);
    }
    
  } else {
    
  }
  tsr_detail_7_726_ = tsr_detail_7_726;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.tsr_detail_7_726)
}

// .Calmcar.drivers.TSR.Vision_only_tsr_727 vision_only_tsr_727 = 6;
inline bool Tsr::has_vision_only_tsr_727() const {
  return this != internal_default_instance() && vision_only_tsr_727_ != NULL;
}
inline void Tsr::clear_vision_only_tsr_727() {
  if (GetArenaNoVirtual() == NULL && vision_only_tsr_727_ != NULL) {
    delete vision_only_tsr_727_;
  }
  vision_only_tsr_727_ = NULL;
}
inline const ::Calmcar::drivers::TSR::Vision_only_tsr_727& Tsr::_internal_vision_only_tsr_727() const {
  return *vision_only_tsr_727_;
}
inline const ::Calmcar::drivers::TSR::Vision_only_tsr_727& Tsr::vision_only_tsr_727() const {
  const ::Calmcar::drivers::TSR::Vision_only_tsr_727* p = vision_only_tsr_727_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.vision_only_tsr_727)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::TSR::Vision_only_tsr_727*>(
      &::Calmcar::drivers::TSR::_Vision_only_tsr_727_default_instance_);
}
inline ::Calmcar::drivers::TSR::Vision_only_tsr_727* Tsr::release_vision_only_tsr_727() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.vision_only_tsr_727)
  
  ::Calmcar::drivers::TSR::Vision_only_tsr_727* temp = vision_only_tsr_727_;
  vision_only_tsr_727_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::TSR::Vision_only_tsr_727* Tsr::mutable_vision_only_tsr_727() {
  
  if (vision_only_tsr_727_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::TSR::Vision_only_tsr_727>(GetArenaNoVirtual());
    vision_only_tsr_727_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.vision_only_tsr_727)
  return vision_only_tsr_727_;
}
inline void Tsr::set_allocated_vision_only_tsr_727(::Calmcar::drivers::TSR::Vision_only_tsr_727* vision_only_tsr_727) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vision_only_tsr_727_;
  }
  if (vision_only_tsr_727) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vision_only_tsr_727 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vision_only_tsr_727, submessage_arena);
    }
    
  } else {
    
  }
  vision_only_tsr_727_ = vision_only_tsr_727;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.vision_only_tsr_727)
}

// .Calmcar.drivers.TSR.Tsr_detail_5_724 tsr_detail_5_724 = 7;
inline bool Tsr::has_tsr_detail_5_724() const {
  return this != internal_default_instance() && tsr_detail_5_724_ != NULL;
}
inline void Tsr::clear_tsr_detail_5_724() {
  if (GetArenaNoVirtual() == NULL && tsr_detail_5_724_ != NULL) {
    delete tsr_detail_5_724_;
  }
  tsr_detail_5_724_ = NULL;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_5_724& Tsr::_internal_tsr_detail_5_724() const {
  return *tsr_detail_5_724_;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_5_724& Tsr::tsr_detail_5_724() const {
  const ::Calmcar::drivers::TSR::Tsr_detail_5_724* p = tsr_detail_5_724_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.tsr_detail_5_724)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::TSR::Tsr_detail_5_724*>(
      &::Calmcar::drivers::TSR::_Tsr_detail_5_724_default_instance_);
}
inline ::Calmcar::drivers::TSR::Tsr_detail_5_724* Tsr::release_tsr_detail_5_724() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.tsr_detail_5_724)
  
  ::Calmcar::drivers::TSR::Tsr_detail_5_724* temp = tsr_detail_5_724_;
  tsr_detail_5_724_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_5_724* Tsr::mutable_tsr_detail_5_724() {
  
  if (tsr_detail_5_724_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_5_724>(GetArenaNoVirtual());
    tsr_detail_5_724_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.tsr_detail_5_724)
  return tsr_detail_5_724_;
}
inline void Tsr::set_allocated_tsr_detail_5_724(::Calmcar::drivers::TSR::Tsr_detail_5_724* tsr_detail_5_724) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tsr_detail_5_724_;
  }
  if (tsr_detail_5_724) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tsr_detail_5_724 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tsr_detail_5_724, submessage_arena);
    }
    
  } else {
    
  }
  tsr_detail_5_724_ = tsr_detail_5_724;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.tsr_detail_5_724)
}

// .Calmcar.drivers.TSR.Tsr_detail_6_725 tsr_detail_6_725 = 8;
inline bool Tsr::has_tsr_detail_6_725() const {
  return this != internal_default_instance() && tsr_detail_6_725_ != NULL;
}
inline void Tsr::clear_tsr_detail_6_725() {
  if (GetArenaNoVirtual() == NULL && tsr_detail_6_725_ != NULL) {
    delete tsr_detail_6_725_;
  }
  tsr_detail_6_725_ = NULL;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_6_725& Tsr::_internal_tsr_detail_6_725() const {
  return *tsr_detail_6_725_;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_6_725& Tsr::tsr_detail_6_725() const {
  const ::Calmcar::drivers::TSR::Tsr_detail_6_725* p = tsr_detail_6_725_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.tsr_detail_6_725)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::TSR::Tsr_detail_6_725*>(
      &::Calmcar::drivers::TSR::_Tsr_detail_6_725_default_instance_);
}
inline ::Calmcar::drivers::TSR::Tsr_detail_6_725* Tsr::release_tsr_detail_6_725() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.tsr_detail_6_725)
  
  ::Calmcar::drivers::TSR::Tsr_detail_6_725* temp = tsr_detail_6_725_;
  tsr_detail_6_725_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_6_725* Tsr::mutable_tsr_detail_6_725() {
  
  if (tsr_detail_6_725_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_6_725>(GetArenaNoVirtual());
    tsr_detail_6_725_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.tsr_detail_6_725)
  return tsr_detail_6_725_;
}
inline void Tsr::set_allocated_tsr_detail_6_725(::Calmcar::drivers::TSR::Tsr_detail_6_725* tsr_detail_6_725) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tsr_detail_6_725_;
  }
  if (tsr_detail_6_725) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tsr_detail_6_725 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tsr_detail_6_725, submessage_arena);
    }
    
  } else {
    
  }
  tsr_detail_6_725_ = tsr_detail_6_725;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.tsr_detail_6_725)
}

// .Calmcar.drivers.TSR.Tsr_detail_3_722 tsr_detail_3_722 = 9;
inline bool Tsr::has_tsr_detail_3_722() const {
  return this != internal_default_instance() && tsr_detail_3_722_ != NULL;
}
inline void Tsr::clear_tsr_detail_3_722() {
  if (GetArenaNoVirtual() == NULL && tsr_detail_3_722_ != NULL) {
    delete tsr_detail_3_722_;
  }
  tsr_detail_3_722_ = NULL;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_3_722& Tsr::_internal_tsr_detail_3_722() const {
  return *tsr_detail_3_722_;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_3_722& Tsr::tsr_detail_3_722() const {
  const ::Calmcar::drivers::TSR::Tsr_detail_3_722* p = tsr_detail_3_722_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.tsr_detail_3_722)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::TSR::Tsr_detail_3_722*>(
      &::Calmcar::drivers::TSR::_Tsr_detail_3_722_default_instance_);
}
inline ::Calmcar::drivers::TSR::Tsr_detail_3_722* Tsr::release_tsr_detail_3_722() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.tsr_detail_3_722)
  
  ::Calmcar::drivers::TSR::Tsr_detail_3_722* temp = tsr_detail_3_722_;
  tsr_detail_3_722_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_3_722* Tsr::mutable_tsr_detail_3_722() {
  
  if (tsr_detail_3_722_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_3_722>(GetArenaNoVirtual());
    tsr_detail_3_722_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.tsr_detail_3_722)
  return tsr_detail_3_722_;
}
inline void Tsr::set_allocated_tsr_detail_3_722(::Calmcar::drivers::TSR::Tsr_detail_3_722* tsr_detail_3_722) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tsr_detail_3_722_;
  }
  if (tsr_detail_3_722) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tsr_detail_3_722 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tsr_detail_3_722, submessage_arena);
    }
    
  } else {
    
  }
  tsr_detail_3_722_ = tsr_detail_3_722;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.tsr_detail_3_722)
}

// .Calmcar.drivers.TSR.Tsr_detail_4_723 tsr_detail_4_723 = 10;
inline bool Tsr::has_tsr_detail_4_723() const {
  return this != internal_default_instance() && tsr_detail_4_723_ != NULL;
}
inline void Tsr::clear_tsr_detail_4_723() {
  if (GetArenaNoVirtual() == NULL && tsr_detail_4_723_ != NULL) {
    delete tsr_detail_4_723_;
  }
  tsr_detail_4_723_ = NULL;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_4_723& Tsr::_internal_tsr_detail_4_723() const {
  return *tsr_detail_4_723_;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_4_723& Tsr::tsr_detail_4_723() const {
  const ::Calmcar::drivers::TSR::Tsr_detail_4_723* p = tsr_detail_4_723_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.tsr_detail_4_723)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::TSR::Tsr_detail_4_723*>(
      &::Calmcar::drivers::TSR::_Tsr_detail_4_723_default_instance_);
}
inline ::Calmcar::drivers::TSR::Tsr_detail_4_723* Tsr::release_tsr_detail_4_723() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.tsr_detail_4_723)
  
  ::Calmcar::drivers::TSR::Tsr_detail_4_723* temp = tsr_detail_4_723_;
  tsr_detail_4_723_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_4_723* Tsr::mutable_tsr_detail_4_723() {
  
  if (tsr_detail_4_723_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_4_723>(GetArenaNoVirtual());
    tsr_detail_4_723_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.tsr_detail_4_723)
  return tsr_detail_4_723_;
}
inline void Tsr::set_allocated_tsr_detail_4_723(::Calmcar::drivers::TSR::Tsr_detail_4_723* tsr_detail_4_723) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tsr_detail_4_723_;
  }
  if (tsr_detail_4_723) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tsr_detail_4_723 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tsr_detail_4_723, submessage_arena);
    }
    
  } else {
    
  }
  tsr_detail_4_723_ = tsr_detail_4_723;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.tsr_detail_4_723)
}

// .Calmcar.drivers.TSR.Tsr_detail_1_720 tsr_detail_1_720 = 11;
inline bool Tsr::has_tsr_detail_1_720() const {
  return this != internal_default_instance() && tsr_detail_1_720_ != NULL;
}
inline void Tsr::clear_tsr_detail_1_720() {
  if (GetArenaNoVirtual() == NULL && tsr_detail_1_720_ != NULL) {
    delete tsr_detail_1_720_;
  }
  tsr_detail_1_720_ = NULL;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_1_720& Tsr::_internal_tsr_detail_1_720() const {
  return *tsr_detail_1_720_;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_1_720& Tsr::tsr_detail_1_720() const {
  const ::Calmcar::drivers::TSR::Tsr_detail_1_720* p = tsr_detail_1_720_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.tsr_detail_1_720)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::TSR::Tsr_detail_1_720*>(
      &::Calmcar::drivers::TSR::_Tsr_detail_1_720_default_instance_);
}
inline ::Calmcar::drivers::TSR::Tsr_detail_1_720* Tsr::release_tsr_detail_1_720() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.tsr_detail_1_720)
  
  ::Calmcar::drivers::TSR::Tsr_detail_1_720* temp = tsr_detail_1_720_;
  tsr_detail_1_720_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_1_720* Tsr::mutable_tsr_detail_1_720() {
  
  if (tsr_detail_1_720_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_1_720>(GetArenaNoVirtual());
    tsr_detail_1_720_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.tsr_detail_1_720)
  return tsr_detail_1_720_;
}
inline void Tsr::set_allocated_tsr_detail_1_720(::Calmcar::drivers::TSR::Tsr_detail_1_720* tsr_detail_1_720) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tsr_detail_1_720_;
  }
  if (tsr_detail_1_720) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tsr_detail_1_720 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tsr_detail_1_720, submessage_arena);
    }
    
  } else {
    
  }
  tsr_detail_1_720_ = tsr_detail_1_720;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.tsr_detail_1_720)
}

// .Calmcar.drivers.TSR.Tsr_detail_2_721 tsr_detail_2_721 = 12;
inline bool Tsr::has_tsr_detail_2_721() const {
  return this != internal_default_instance() && tsr_detail_2_721_ != NULL;
}
inline void Tsr::clear_tsr_detail_2_721() {
  if (GetArenaNoVirtual() == NULL && tsr_detail_2_721_ != NULL) {
    delete tsr_detail_2_721_;
  }
  tsr_detail_2_721_ = NULL;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_2_721& Tsr::_internal_tsr_detail_2_721() const {
  return *tsr_detail_2_721_;
}
inline const ::Calmcar::drivers::TSR::Tsr_detail_2_721& Tsr::tsr_detail_2_721() const {
  const ::Calmcar::drivers::TSR::Tsr_detail_2_721* p = tsr_detail_2_721_;
  // @@protoc_insertion_point(field_get:Calmcar.drivers.TSR.Tsr.tsr_detail_2_721)
  return p != NULL ? *p : *reinterpret_cast<const ::Calmcar::drivers::TSR::Tsr_detail_2_721*>(
      &::Calmcar::drivers::TSR::_Tsr_detail_2_721_default_instance_);
}
inline ::Calmcar::drivers::TSR::Tsr_detail_2_721* Tsr::release_tsr_detail_2_721() {
  // @@protoc_insertion_point(field_release:Calmcar.drivers.TSR.Tsr.tsr_detail_2_721)
  
  ::Calmcar::drivers::TSR::Tsr_detail_2_721* temp = tsr_detail_2_721_;
  tsr_detail_2_721_ = NULL;
  return temp;
}
inline ::Calmcar::drivers::TSR::Tsr_detail_2_721* Tsr::mutable_tsr_detail_2_721() {
  
  if (tsr_detail_2_721_ == NULL) {
    auto* p = CreateMaybeMessage<::Calmcar::drivers::TSR::Tsr_detail_2_721>(GetArenaNoVirtual());
    tsr_detail_2_721_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Calmcar.drivers.TSR.Tsr.tsr_detail_2_721)
  return tsr_detail_2_721_;
}
inline void Tsr::set_allocated_tsr_detail_2_721(::Calmcar::drivers::TSR::Tsr_detail_2_721* tsr_detail_2_721) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tsr_detail_2_721_;
  }
  if (tsr_detail_2_721) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tsr_detail_2_721 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tsr_detail_2_721, submessage_arena);
    }
    
  } else {
    
  }
  tsr_detail_2_721_ = tsr_detail_2_721;
  // @@protoc_insertion_point(field_set_allocated:Calmcar.drivers.TSR.Tsr.tsr_detail_2_721)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TSR
}  // namespace drivers
}  // namespace Calmcar

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_rightType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Ldw_availability_leftType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_rightType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_type_leftType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_rightType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aftermarket_ext_669_Lane_conf_leftType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Signal_car_760_Wipers_availabledType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Signal_car_760_Highbeam_availabledType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Signal_car_760_Lowbeam_availabledType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Signal_car_760_BrakesType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Signal_car_760_Left_blinkType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Signal_car_760_Right_blinkType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Signal_car_760_WippersType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Signal_car_760_LowbeamType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Signal_car_760_HighbeamType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Tsr_warning_levelType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Tsr_enabbledType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Rainy_hw_enabledType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Rain_hwType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Pcw_peddzType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Hw_warning_levelType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Hw_repeatable_enabledType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_General_pedestrianType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Blinker_reminder_enabledType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Blinker_reminderType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Fcw_onType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Rldw_onType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Lldw_onType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Ldw_offType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_MaintenanceType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Fail_safeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Error_activeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Headway_validType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Fla_armedType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Hi_low_beamcontrolType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Zero_speedType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Time_indicatorType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Aws_700_Sound_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_7_726_Vision_only_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_7_726_Supplementary_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_7_726_Filter_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_4Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_3Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_2Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Sign_type_1Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_4Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_3Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_2Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Vision_only_tsr_727_Supplementary_sign_type_1Type> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_5_724_Vision_only_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_5_724_Supplementary_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_5_724_Filter_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_6_725_Vision_only_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_6_725_Supplementary_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_6_725_Filter_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_3_722_Vision_only_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_3_722_Supplementary_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_3_722_Filter_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_4_723_Vision_only_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_4_723_Supplementary_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_4_723_Filter_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_1_720_Vision_only_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_1_720_Supplementary_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_1_720_Filter_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_2_721_Vision_only_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_2_721_Supplementary_sign_typeType> : ::std::true_type {};
template <> struct is_proto_enum< ::Calmcar::drivers::TSR::Tsr_detail_2_721_Filter_typeType> : ::std::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tsr_2eproto
